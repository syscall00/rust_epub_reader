[2m2022-10-09T15:40:44.165777Z[0m [34mDEBUG[0m [2mdruid::localization[0m[2m:[0m available locales [], current en-US
[2m2022-10-09T15:40:44.165996Z[0m [34mDEBUG[0m [2mdruid::localization[0m[2m:[0m resolved: [en-US]
[2m2022-10-09T15:40:48.893554Z[0m [32m INFO[0m [2mdruid_shell::backend::gtk::application[0m[2m:[0m gtk: Activated application
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n  " 335..338) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 339..341), span: StrSpan("<h1" 338..341) }
token: ElementEnd { end: Open, span: StrSpan(">" 341..342) }
token: Text { text: StrSpan("Informazioni" 342..354) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 356..358)), span: StrSpan("</h1>" 354..359) }
token: Text { text: StrSpan("\n\n  " 359..363) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 364..365), span: StrSpan("<p" 363..365) }
token: ElementEnd { end: Open, span: StrSpan(">" 365..366) }
token: Text { text: StrSpan("Questo e-book √® stato realizzato anche grazie al sostegno di:" 366..428) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 430..431)), span: StrSpan("</p>" 428..432) }
token: Text { text: StrSpan("\n\n  " 432..436) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("div" 437..440), span: StrSpan("<div" 436..440) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 441..446), value: StrSpan("box_sponsor" 448..459), span: StrSpan("class=\"box_sponsor\"" 441..460) }
token: ElementEnd { end: Open, span: StrSpan(">" 460..461) }
token: Text { text: StrSpan("\n    " 461..466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 467..468), span: StrSpan("<p" 466..468) }
token: ElementEnd { end: Open, span: StrSpan(">" 468..469) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 470..471), span: StrSpan("<a" 469..471) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 472..476), value: StrSpan("https://www.e-text.it/" 478..500), span: StrSpan("href=\"https://www.e-text.it/\"" 472..501) }
token: ElementEnd { end: Open, span: StrSpan(">" 501..502) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("img" 503..506), span: StrSpan("<img" 502..506) }
start: StrSpan("img" 503..506)
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("alt" 507..510), value: StrSpan("E-text" 512..518), span: StrSpan("alt=\"E-text\"" 507..519) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("src" 520..523), value: StrSpan("../Images/e-text.png" 525..545), span: StrSpan("src=\"../Images/e-text.png\"" 520..546) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 546..548) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 550..551)), span: StrSpan("</a>" 548..552) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 553..555), span: StrSpan("<br" 552..555) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 555..557) }
token: Text { text: StrSpan(" " 557..558) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("strong" 559..565), span: StrSpan("<strong" 558..565) }
token: ElementEnd { end: Open, span: StrSpan(">" 565..566) }
token: Text { text: StrSpan("E-text" 566..572) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("strong" 574..580)), span: StrSpan("</strong>" 572..581) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 582..584), span: StrSpan("<br" 581..584) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 584..586) }
token: Text { text: StrSpan(" Editoria, Web design, Multimedia" 586..619) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 621..622)), span: StrSpan("</p>" 619..623) }
token: Text { text: StrSpan("\n\n    " 623..629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 630..631), span: StrSpan("<p" 629..631) }
token: ElementEnd { end: Open, span: StrSpan(">" 631..632) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 633..634), span: StrSpan("<a" 632..634) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 635..639), value: StrSpan("https://www.e-text.it/" 641..663), span: StrSpan("href=\"https://www.e-text.it/\"" 635..664) }
token: ElementEnd { end: Open, span: StrSpan(">" 664..665) }
token: Text { text: StrSpan("Pubblica il tuo libro, o crea il tuo sito con E-text!" 665..718) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 720..721)), span: StrSpan("</a>" 718..722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 724..725)), span: StrSpan("</p>" 722..726) }
token: Text { text: StrSpan("\n  " 726..729) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("div" 731..734)), span: StrSpan("</div>" 729..735) }
token: Text { text: StrSpan("\n\n  " 735..739) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 740..741), span: StrSpan("<p" 739..741) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 742..747), value: StrSpan("LLinfo" 749..755), span: StrSpan("class=\"LLinfo\"" 742..756) }
token: ElementEnd { end: Open, span: StrSpan(">" 756..757) }
token: Text { text: StrSpan("QUESTO E-BOOK:" 757..771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 773..774)), span: StrSpan("</p>" 771..775) }
token: Text { text: StrSpan("\n\n  " 775..779) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 780..781), span: StrSpan("<p" 779..781) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 782..787), value: StrSpan("LLinfo" 789..795), span: StrSpan("class=\"LLinfo\"" 782..796) }
token: ElementEnd { end: Open, span: StrSpan(">" 796..797) }
token: Text { text: StrSpan("TITOLO: Dialoghi con Leuc√≤" 797..824) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 825..827), span: StrSpan("<br" 824..827) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 827..829) }
token: Text { text: StrSpan(" AUTORE: Pavese, Cesare" 829..852) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 853..855), span: StrSpan("<br" 852..855) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 855..857) }
token: Text { text: StrSpan(" TRADUTTORE: " 857..870) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 871..873), span: StrSpan("<br" 870..873) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 873..875) }
token: Text { text: StrSpan(" CURATORE: " 875..886) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 887..889), span: StrSpan("<br" 886..889) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 889..891) }
token: Text { text: StrSpan(" NOTE: " 891..898) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 900..901)), span: StrSpan("</p>" 898..902) }
token: Text { text: StrSpan("\n\n  " 902..906) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 907..908), span: StrSpan("<p" 906..908) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 909..914), value: StrSpan("LLinfo" 916..922), span: StrSpan("class=\"LLinfo\"" 909..923) }
token: ElementEnd { end: Open, span: StrSpan(">" 923..924) }
token: Text { text: StrSpan("CODICE ISBN E-BOOK: 9788828102854" 924..957) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 959..960)), span: StrSpan("</p>" 957..961) }
token: Text { text: StrSpan("\n\n  " 961..965) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 966..967), span: StrSpan("<p" 965..967) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 968..973), value: StrSpan("LLinfo" 975..981), span: StrSpan("class=\"LLinfo\"" 968..982) }
token: ElementEnd { end: Open, span: StrSpan(">" 982..983) }
token: Text { text: StrSpan("DIRITTI D'AUTORE: no" 983..1003) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1005..1006)), span: StrSpan("</p>" 1003..1007) }
token: Text { text: StrSpan("\n\n  " 1007..1011) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1012..1013), span: StrSpan("<p" 1011..1013) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1014..1019), value: StrSpan("LLinfo" 1021..1027), span: StrSpan("class=\"LLinfo\"" 1014..1028) }
token: ElementEnd { end: Open, span: StrSpan(">" 1028..1029) }
token: Text { text: StrSpan("LICENZA: questo testo √® distribuito con la licenza specificata al seguente indirizzo Internet:&nbsp;" 1029..1130) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1131..1132), span: StrSpan("<a" 1130..1132) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1133..1137), value: StrSpan("https://www.liberliber.it/online/opere/libri/licenze/" 1139..1192), span: StrSpan("href=\"https://www.liberliber.it/online/opere/libri/licenze/\"" 1133..1193) }
token: ElementEnd { end: Open, span: StrSpan(">" 1193..1194) }
token: Text { text: StrSpan("https://www.liberliber.it/online/opere/libri/licenze/" 1194..1247) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1249..1250)), span: StrSpan("</a>" 1247..1251) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1253..1254)), span: StrSpan("</p>" 1251..1255) }
token: Text { text: StrSpan("\n\n  " 1255..1259) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1260..1261), span: StrSpan("<p" 1259..1261) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1262..1267), value: StrSpan("LLinfo" 1269..1275), span: StrSpan("class=\"LLinfo\"" 1262..1276) }
token: ElementEnd { end: Open, span: StrSpan(">" 1276..1277) }
token: Text { text: StrSpan("COPERTINA: [elaborazione da] \"Waiting for an Answer (1889, oil on canvas)\" di John William Godward (1861‚Äì1922) ‚Äì Private Collection - https://commons.wikimedia.org/wiki/File:Waiting_for_an_answer,_by_John_William_Godward.jpg - Pubblico dominio." 1277..1525) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1527..1528)), span: StrSpan("</p>" 1525..1529) }
token: Text { text: StrSpan("\n\n  " 1529..1533) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1534..1535), span: StrSpan("<p" 1533..1535) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1536..1541), value: StrSpan("LLinfo" 1543..1549), span: StrSpan("class=\"LLinfo\"" 1536..1550) }
token: ElementEnd { end: Open, span: StrSpan(">" 1550..1551) }
token: Text { text: StrSpan("TRATTO DA: Dialoghi con Leuc√≤ / Cesare Pavese - 3. ed. - Torino : G. Einaudi, 1960. - 213 p. ; 22 cm." 1551..1653) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1655..1656)), span: StrSpan("</p>" 1653..1657) }
token: Text { text: StrSpan("\n\n  " 1657..1661) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1662..1663), span: StrSpan("<p" 1661..1663) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1664..1669), value: StrSpan("LLinfo" 1671..1677), span: StrSpan("class=\"LLinfo\"" 1664..1678) }
token: ElementEnd { end: Open, span: StrSpan(">" 1678..1679) }
token: Text { text: StrSpan("CODICE ISBN FONTE: n. d." 1679..1703) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1705..1706)), span: StrSpan("</p>" 1703..1707) }
token: Text { text: StrSpan("\n\n  " 1707..1711) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1712..1713), span: StrSpan("<p" 1711..1713) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1714..1719), value: StrSpan("LLinfo" 1721..1727), span: StrSpan("class=\"LLinfo\"" 1714..1728) }
token: ElementEnd { end: Open, span: StrSpan(">" 1728..1729) }
token: Text { text: StrSpan("1a EDIZIONE ELETTRONICA DEL: 21 aprile 2021" 1729..1772) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1774..1775)), span: StrSpan("</p>" 1772..1776) }
token: Text { text: StrSpan("\n\n  " 1776..1780) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1781..1782), span: StrSpan("<p" 1780..1782) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1783..1788), value: StrSpan("LLinfo" 1790..1796), span: StrSpan("class=\"LLinfo\"" 1783..1797) }
token: ElementEnd { end: Open, span: StrSpan(">" 1797..1798) }
token: Text { text: StrSpan("INDICE DI AFFIDABILIT√Ä: 2" 1798..1824) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 1825..1827), span: StrSpan("<br" 1824..1827) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 1827..1829) }
token: Text { text: StrSpan(" 0: affidabilit√† bassa" 1829..1852) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 1853..1855), span: StrSpan("<br" 1852..1855) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 1855..1857) }
token: Text { text: StrSpan(" 1: affidabilit√† standard" 1857..1883) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 1884..1886), span: StrSpan("<br" 1883..1886) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 1886..1888) }
token: Text { text: StrSpan(" 2: affidabilit√† buona" 1888..1911) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 1912..1914), span: StrSpan("<br" 1911..1914) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 1914..1916) }
token: Text { text: StrSpan(" 3: affidabilit√† ottima" 1916..1940) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1942..1943)), span: StrSpan("</p>" 1940..1944) }
token: Text { text: StrSpan("\n\n  " 1944..1948) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1949..1950), span: StrSpan("<p" 1948..1950) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1951..1956), value: StrSpan("LLinfo" 1958..1964), span: StrSpan("class=\"LLinfo\"" 1951..1965) }
token: ElementEnd { end: Open, span: StrSpan(">" 1965..1966) }
token: Text { text: StrSpan("SOGGETTO:" 1966..1975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 1976..1978), span: StrSpan("<br" 1975..1978) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 1978..1980) }
token: Text { text: StrSpan(" FIC004000       FICTION / Classici" 1980..2015) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2017..2018)), span: StrSpan("</p>" 2015..2019) }
token: Text { text: StrSpan("\n\n  " 2019..2023) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2024..2025), span: StrSpan("<p" 2023..2025) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2026..2031), value: StrSpan("LLinfo" 2033..2039), span: StrSpan("class=\"LLinfo\"" 2026..2040) }
token: ElementEnd { end: Open, span: StrSpan(">" 2040..2041) }
token: Text { text: StrSpan("DIGITALIZZAZIONE:" 2041..2058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2059..2061), span: StrSpan("<br" 2058..2061) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2061..2063) }
token: Text { text: StrSpan(" Cristina Rosanda" 2063..2080) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2082..2083)), span: StrSpan("</p>" 2080..2084) }
token: Text { text: StrSpan("\n\n  " 2084..2088) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2089..2090), span: StrSpan("<p" 2088..2090) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2091..2096), value: StrSpan("LLinfo" 2098..2104), span: StrSpan("class=\"LLinfo\"" 2091..2105) }
token: ElementEnd { end: Open, span: StrSpan(">" 2105..2106) }
token: Text { text: StrSpan("REVISIONE:" 2106..2116) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2117..2119), span: StrSpan("<br" 2116..2119) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2119..2121) }
token: Text { text: StrSpan(" Gabriella Dodero" 2121..2138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2139..2141), span: StrSpan("<br" 2138..2141) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2141..2143) }
token: Text { text: StrSpan("Ugo Santamaria" 2143..2157) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2159..2160)), span: StrSpan("</p>" 2157..2161) }
token: Text { text: StrSpan("\n\n  " 2161..2165) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2166..2167), span: StrSpan("<p" 2165..2167) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2168..2173), value: StrSpan("LLinfo" 2175..2181), span: StrSpan("class=\"LLinfo\"" 2168..2182) }
token: ElementEnd { end: Open, span: StrSpan(">" 2182..2183) }
token: Text { text: StrSpan("IMPAGINAZIONE:" 2183..2197) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2198..2200), span: StrSpan("<br" 2197..2200) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2200..2202) }
token: Text { text: StrSpan(" Gabriella Dodero (ODT)" 2202..2225) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2226..2228), span: StrSpan("<br" 2225..2228) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2228..2230) }
token: Text { text: StrSpan("\nCarlo F. Traverso (ePub)" 2230..2255) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2256..2258), span: StrSpan("<br" 2255..2258) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2258..2260) }
token: Text { text: StrSpan("\nMarco Totolo (revisione ePub)" 2260..2290) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2292..2293)), span: StrSpan("</p>" 2290..2294) }
token: Text { text: StrSpan("\n\n  " 2294..2298) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2299..2300), span: StrSpan("<p" 2298..2300) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2301..2306), value: StrSpan("LLinfo" 2308..2314), span: StrSpan("class=\"LLinfo\"" 2301..2315) }
token: ElementEnd { end: Open, span: StrSpan(">" 2315..2316) }
token: Text { text: StrSpan("PUBBLICAZIONE:" 2316..2330) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2331..2333), span: StrSpan("<br" 2330..2333) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2333..2335) }
token: Text { text: StrSpan(" Catia Righi, catia_righi@tin.it" 2335..2367) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2368..2370), span: StrSpan("<br" 2367..2370) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2370..2372) }
token: Text { text: StrSpan("Ugo Santamaria" 2372..2386) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("br" 2387..2389), span: StrSpan("<br" 2386..2389) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 2389..2391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2393..2394)), span: StrSpan("</p>" 2391..2395) }
token: Text { text: StrSpan("\n" 2395..2396) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 2398..2402)), span: StrSpan("</body>" 2396..2403) }
token: Text { text: StrSpan("\n" 2403..2404) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 2406..2410)), span: StrSpan("</html>" 2404..2411) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n  " 335..338) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 339..341), span: StrSpan("<h1" 338..341) }
token: ElementEnd { end: Open, span: StrSpan(">" 341..342) }
token: Text { text: StrSpan("Liber Liber" 342..353) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 355..357)), span: StrSpan("</h1>" 353..358) }
token: Text { text: StrSpan("\n\n  " 358..362) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 363..364), span: StrSpan("<p" 362..364) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 365..370), value: StrSpan("testo_centrato" 372..386), span: StrSpan("class=\"testo_centrato\"" 365..387) }
token: ElementEnd { end: Open, span: StrSpan(">" 387..388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 389..390), span: StrSpan("<a" 388..390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 391..395), value: StrSpan("https://www.liberliber.it/online/aiuta/" 397..436), span: StrSpan("href=\"https://www.liberliber.it/online/aiuta/\"" 391..437) }
token: ElementEnd { end: Open, span: StrSpan(">" 437..438) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("img" 439..442), span: StrSpan("<img" 438..442) }
start: StrSpan("img" 439..442)
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("alt" 443..446), value: StrSpan("Fai una donazione" 448..465), span: StrSpan("alt=\"Fai una donazione\"" 443..466) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("src" 467..470), value: StrSpan("../Images/2_euro.png" 472..492), span: StrSpan("src=\"../Images/2_euro.png\"" 467..493) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 493..495) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 497..498)), span: StrSpan("</a>" 495..499) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 501..502)), span: StrSpan("</p>" 499..503) }
token: Text { text: StrSpan("\n\n  " 503..507) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 508..509), span: StrSpan("<p" 507..509) }
token: ElementEnd { end: Open, span: StrSpan(">" 509..510) }
token: Text { text: StrSpan("Se questo libro ti √® piaciuto, aiutaci a realizzarne altri. Fai una donazione: " 510..590) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 591..592), span: StrSpan("<a" 590..592) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 593..597), value: StrSpan("https://www.liberliber.it/online/aiuta/" 599..638), span: StrSpan("href=\"https://www.liberliber.it/online/aiuta/\"" 593..639) }
token: ElementEnd { end: Open, span: StrSpan(">" 639..640) }
token: Text { text: StrSpan("https://www.liberliber.it/online/aiuta/" 640..679) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 681..682)), span: StrSpan("</a>" 679..683) }
token: Text { text: StrSpan("." 683..684) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 686..687)), span: StrSpan("</p>" 684..688) }
token: Text { text: StrSpan("\n\n  " 688..692) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 693..694), span: StrSpan("<p" 692..694) }
token: ElementEnd { end: Open, span: StrSpan(">" 694..695) }
token: Text { text: StrSpan("Scopri sul sito Internet di Liber Liber ci√≤ che stiamo realizzando: migliaia di ebook gratuiti in edizione integrale, audiolibri, brani musicali con licenza libera, video e tanto altro: " 695..882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 883..884), span: StrSpan("<a" 882..884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 885..889), value: StrSpan("https://www.liberliber.it/" 891..917), span: StrSpan("href=\"https://www.liberliber.it/\"" 885..918) }
token: ElementEnd { end: Open, span: StrSpan(">" 918..919) }
token: Text { text: StrSpan("https://www.liberliber.it/" 919..945) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 947..948)), span: StrSpan("</a>" 945..949) }
token: Text { text: StrSpan("." 949..950) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 952..953)), span: StrSpan("</p>" 950..954) }
token: Text { text: StrSpan("\n" 954..955) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 957..961)), span: StrSpan("</body>" 955..962) }
token: Text { text: StrSpan("\n" 962..963) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 965..969)), span: StrSpan("</html>" 963..970) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Indice" 340..346) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 348..350)), span: StrSpan("</h1>" 346..351) }
token: Text { text: StrSpan("\n\n" 351..353) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("ul" 354..356), span: StrSpan("<ul" 353..356) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 357..362), value: StrSpan("testo_indice" 364..376), span: StrSpan("class=\"testo_indice\"" 357..377) }
token: ElementEnd { end: Open, span: StrSpan(">" 377..378) }
token: Text { text: StrSpan("\n" 378..379) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 380..382), span: StrSpan("<li" 379..382) }
token: ElementEnd { end: Open, span: StrSpan(">" 382..383) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 384..385), span: StrSpan("<a" 383..385) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 386..390), value: StrSpan("../Text/Section0001.xhtml" 392..417), span: StrSpan("href=\"../Text/Section0001.xhtml\"" 386..418) }
token: ElementEnd { end: Open, span: StrSpan(">" 418..419) }
token: Text { text: StrSpan("Copertina" 419..428) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 430..431)), span: StrSpan("</a>" 428..432) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 434..436)), span: StrSpan("</li>" 432..437) }
token: Text { text: StrSpan("\n" 437..438) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 439..441), span: StrSpan("<li" 438..441) }
token: ElementEnd { end: Open, span: StrSpan(">" 441..442) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 443..444), span: StrSpan("<a" 442..444) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 445..449), value: StrSpan("../Text/Section0002.xhtml" 451..476), span: StrSpan("href=\"../Text/Section0002.xhtml\"" 445..477) }
token: ElementEnd { end: Open, span: StrSpan(">" 477..478) }
token: Text { text: StrSpan("Colophon" 478..486) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 488..489)), span: StrSpan("</a>" 486..490) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 492..494)), span: StrSpan("</li>" 490..495) }
token: Text { text: StrSpan("\n" 495..496) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 497..499), span: StrSpan("<li" 496..499) }
token: ElementEnd { end: Open, span: StrSpan(">" 499..500) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 501..502), span: StrSpan("<a" 500..502) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 503..507), value: StrSpan("../Text/Section0003.xhtml" 509..534), span: StrSpan("href=\"../Text/Section0003.xhtml\"" 503..535) }
token: ElementEnd { end: Open, span: StrSpan(">" 535..536) }
token: Text { text: StrSpan("Liber Liber" 536..547) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 549..550)), span: StrSpan("</a>" 547..551) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 553..555)), span: StrSpan("</li>" 551..556) }
token: Text { text: StrSpan("\n" 556..557) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 558..560), span: StrSpan("<li" 557..560) }
token: ElementEnd { end: Open, span: StrSpan(">" 560..561) }
token: Text { text: StrSpan("Indice (questa pagina)" 561..583) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 585..587)), span: StrSpan("</li>" 583..588) }
token: Text { text: StrSpan("\n" 588..589) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 590..592), span: StrSpan("<li" 589..592) }
token: ElementEnd { end: Open, span: StrSpan(">" 592..593) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 594..595), span: StrSpan("<a" 593..595) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 596..600), value: StrSpan("../Text/Section0007.xhtml" 602..627), span: StrSpan("href=\"../Text/Section0007.xhtml\"" 596..628) }
token: ElementEnd { end: Open, span: StrSpan(">" 628..629) }
token: Text { text: StrSpan("La nube" 629..636) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 638..639)), span: StrSpan("</a>" 636..640) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 642..644)), span: StrSpan("</li>" 640..645) }
token: Text { text: StrSpan("\n" 645..646) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 647..649), span: StrSpan("<li" 646..649) }
token: ElementEnd { end: Open, span: StrSpan(">" 649..650) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 651..652), span: StrSpan("<a" 650..652) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 653..657), value: StrSpan("../Text/Section0008.xhtml" 659..684), span: StrSpan("href=\"../Text/Section0008.xhtml\"" 653..685) }
token: ElementEnd { end: Open, span: StrSpan(">" 685..686) }
token: Text { text: StrSpan("La Chimera" 686..696) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 698..699)), span: StrSpan("</a>" 696..700) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 702..704)), span: StrSpan("</li>" 700..705) }
token: Text { text: StrSpan("\n" 705..706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 707..709), span: StrSpan("<li" 706..709) }
token: ElementEnd { end: Open, span: StrSpan(">" 709..710) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 711..712), span: StrSpan("<a" 710..712) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 713..717), value: StrSpan("../Text/Section0009.xhtml" 719..744), span: StrSpan("href=\"../Text/Section0009.xhtml\"" 713..745) }
token: ElementEnd { end: Open, span: StrSpan(">" 745..746) }
token: Text { text: StrSpan("I ciechi" 746..754) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 756..757)), span: StrSpan("</a>" 754..758) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 760..762)), span: StrSpan("</li>" 758..763) }
token: Text { text: StrSpan("\n" 763..764) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 765..767), span: StrSpan("<li" 764..767) }
token: ElementEnd { end: Open, span: StrSpan(">" 767..768) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 769..770), span: StrSpan("<a" 768..770) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 771..775), value: StrSpan("../Text/Section0010.xhtml" 777..802), span: StrSpan("href=\"../Text/Section0010.xhtml\"" 771..803) }
token: ElementEnd { end: Open, span: StrSpan(">" 803..804) }
token: Text { text: StrSpan("Le cavalle" 804..814) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 816..817)), span: StrSpan("</a>" 814..818) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 820..822)), span: StrSpan("</li>" 818..823) }
token: Text { text: StrSpan("\n" 823..824) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 825..827), span: StrSpan("<li" 824..827) }
token: ElementEnd { end: Open, span: StrSpan(">" 827..828) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 829..830), span: StrSpan("<a" 828..830) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 831..835), value: StrSpan("../Text/Section0011.xhtml" 837..862), span: StrSpan("href=\"../Text/Section0011.xhtml\"" 831..863) }
token: ElementEnd { end: Open, span: StrSpan(">" 863..864) }
token: Text { text: StrSpan("Il fiore" 864..872) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 874..875)), span: StrSpan("</a>" 872..876) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 878..880)), span: StrSpan("</li>" 876..881) }
token: Text { text: StrSpan("\n" 881..882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 883..885), span: StrSpan("<li" 882..885) }
token: ElementEnd { end: Open, span: StrSpan(">" 885..886) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 887..888), span: StrSpan("<a" 886..888) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 889..893), value: StrSpan("../Text/Section0012.xhtml" 895..920), span: StrSpan("href=\"../Text/Section0012.xhtml\"" 889..921) }
token: ElementEnd { end: Open, span: StrSpan(">" 921..922) }
token: Text { text: StrSpan("La belva" 922..930) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 932..933)), span: StrSpan("</a>" 930..934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 936..938)), span: StrSpan("</li>" 934..939) }
token: Text { text: StrSpan("\n" 939..940) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 941..943), span: StrSpan("<li" 940..943) }
token: ElementEnd { end: Open, span: StrSpan(">" 943..944) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 945..946), span: StrSpan("<a" 944..946) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 947..951), value: StrSpan("../Text/Section0013.xhtml" 953..978), span: StrSpan("href=\"../Text/Section0013.xhtml\"" 947..979) }
token: ElementEnd { end: Open, span: StrSpan(">" 979..980) }
token: Text { text: StrSpan("Schiuma d‚Äôonda" 980..996) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 998..999)), span: StrSpan("</a>" 996..1000) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1002..1004)), span: StrSpan("</li>" 1000..1005) }
token: Text { text: StrSpan("\n" 1005..1006) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1007..1009), span: StrSpan("<li" 1006..1009) }
token: ElementEnd { end: Open, span: StrSpan(">" 1009..1010) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1011..1012), span: StrSpan("<a" 1010..1012) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1013..1017), value: StrSpan("../Text/Section0014.xhtml" 1019..1044), span: StrSpan("href=\"../Text/Section0014.xhtml\"" 1013..1045) }
token: ElementEnd { end: Open, span: StrSpan(">" 1045..1046) }
token: Text { text: StrSpan("La madre" 1046..1054) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1056..1057)), span: StrSpan("</a>" 1054..1058) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1060..1062)), span: StrSpan("</li>" 1058..1063) }
token: Text { text: StrSpan("\n" 1063..1064) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1065..1067), span: StrSpan("<li" 1064..1067) }
token: ElementEnd { end: Open, span: StrSpan(">" 1067..1068) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1069..1070), span: StrSpan("<a" 1068..1070) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1071..1075), value: StrSpan("../Text/Section0015.xhtml" 1077..1102), span: StrSpan("href=\"../Text/Section0015.xhtml\"" 1071..1103) }
token: ElementEnd { end: Open, span: StrSpan(">" 1103..1104) }
token: Text { text: StrSpan("I due" 1104..1109) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1111..1112)), span: StrSpan("</a>" 1109..1113) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1115..1117)), span: StrSpan("</li>" 1113..1118) }
token: Text { text: StrSpan("\n" 1118..1119) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1120..1122), span: StrSpan("<li" 1119..1122) }
token: ElementEnd { end: Open, span: StrSpan(">" 1122..1123) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1124..1125), span: StrSpan("<a" 1123..1125) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1126..1130), value: StrSpan("../Text/Section0016.xhtml" 1132..1157), span: StrSpan("href=\"../Text/Section0016.xhtml\"" 1126..1158) }
token: ElementEnd { end: Open, span: StrSpan(">" 1158..1159) }
token: Text { text: StrSpan("La strada" 1159..1168) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1170..1171)), span: StrSpan("</a>" 1168..1172) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1174..1176)), span: StrSpan("</li>" 1172..1177) }
token: Text { text: StrSpan("\n" 1177..1178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1179..1181), span: StrSpan("<li" 1178..1181) }
token: ElementEnd { end: Open, span: StrSpan(">" 1181..1182) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1183..1184), span: StrSpan("<a" 1182..1184) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1185..1189), value: StrSpan("../Text/Section0017.xhtml" 1191..1216), span: StrSpan("href=\"../Text/Section0017.xhtml\"" 1185..1217) }
token: ElementEnd { end: Open, span: StrSpan(">" 1217..1218) }
token: Text { text: StrSpan("La rupe" 1218..1225) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1227..1228)), span: StrSpan("</a>" 1225..1229) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1231..1233)), span: StrSpan("</li>" 1229..1234) }
token: Text { text: StrSpan("\n" 1234..1235) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1236..1238), span: StrSpan("<li" 1235..1238) }
token: ElementEnd { end: Open, span: StrSpan(">" 1238..1239) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1240..1241), span: StrSpan("<a" 1239..1241) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1242..1246), value: StrSpan("../Text/Section0018.xhtml" 1248..1273), span: StrSpan("href=\"../Text/Section0018.xhtml\"" 1242..1274) }
token: ElementEnd { end: Open, span: StrSpan(">" 1274..1275) }
token: Text { text: StrSpan("L‚Äôinconsolabile" 1275..1292) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1294..1295)), span: StrSpan("</a>" 1292..1296) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1298..1300)), span: StrSpan("</li>" 1296..1301) }
token: Text { text: StrSpan("\n" 1301..1302) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1303..1305), span: StrSpan("<li" 1302..1305) }
token: ElementEnd { end: Open, span: StrSpan(">" 1305..1306) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1307..1308), span: StrSpan("<a" 1306..1308) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1309..1313), value: StrSpan("../Text/Section0019.xhtml" 1315..1340), span: StrSpan("href=\"../Text/Section0019.xhtml\"" 1309..1341) }
token: ElementEnd { end: Open, span: StrSpan(">" 1341..1342) }
token: Text { text: StrSpan("L‚Äôuomo-lupo" 1342..1355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1357..1358)), span: StrSpan("</a>" 1355..1359) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1361..1363)), span: StrSpan("</li>" 1359..1364) }
token: Text { text: StrSpan("\n" 1364..1365) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1366..1368), span: StrSpan("<li" 1365..1368) }
token: ElementEnd { end: Open, span: StrSpan(">" 1368..1369) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1370..1371), span: StrSpan("<a" 1369..1371) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1372..1376), value: StrSpan("../Text/Section0020.xhtml" 1378..1403), span: StrSpan("href=\"../Text/Section0020.xhtml\"" 1372..1404) }
token: ElementEnd { end: Open, span: StrSpan(">" 1404..1405) }
token: Text { text: StrSpan("L‚Äôospite" 1405..1415) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1417..1418)), span: StrSpan("</a>" 1415..1419) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1421..1423)), span: StrSpan("</li>" 1419..1424) }
token: Text { text: StrSpan("\n" 1424..1425) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1426..1428), span: StrSpan("<li" 1425..1428) }
token: ElementEnd { end: Open, span: StrSpan(">" 1428..1429) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1430..1431), span: StrSpan("<a" 1429..1431) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1432..1436), value: StrSpan("../Text/Section0021.xhtml" 1438..1463), span: StrSpan("href=\"../Text/Section0021.xhtml\"" 1432..1464) }
token: ElementEnd { end: Open, span: StrSpan(">" 1464..1465) }
token: Text { text: StrSpan("I fuochi" 1465..1473) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1475..1476)), span: StrSpan("</a>" 1473..1477) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1479..1481)), span: StrSpan("</li>" 1477..1482) }
token: Text { text: StrSpan("\n" 1482..1483) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1484..1486), span: StrSpan("<li" 1483..1486) }
token: ElementEnd { end: Open, span: StrSpan(">" 1486..1487) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1488..1489), span: StrSpan("<a" 1487..1489) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1490..1494), value: StrSpan("../Text/Section0022.xhtml" 1496..1521), span: StrSpan("href=\"../Text/Section0022.xhtml\"" 1490..1522) }
token: ElementEnd { end: Open, span: StrSpan(">" 1522..1523) }
token: Text { text: StrSpan("L‚Äôisola" 1523..1532) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1534..1535)), span: StrSpan("</a>" 1532..1536) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1538..1540)), span: StrSpan("</li>" 1536..1541) }
token: Text { text: StrSpan("\n" 1541..1542) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1543..1545), span: StrSpan("<li" 1542..1545) }
token: ElementEnd { end: Open, span: StrSpan(">" 1545..1546) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1547..1548), span: StrSpan("<a" 1546..1548) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1549..1553), value: StrSpan("../Text/Section0023.xhtml" 1555..1580), span: StrSpan("href=\"../Text/Section0023.xhtml\"" 1549..1581) }
token: ElementEnd { end: Open, span: StrSpan(">" 1581..1582) }
token: Text { text: StrSpan("Il lago" 1582..1589) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1591..1592)), span: StrSpan("</a>" 1589..1593) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1595..1597)), span: StrSpan("</li>" 1593..1598) }
token: Text { text: StrSpan("\n" 1598..1599) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1600..1602), span: StrSpan("<li" 1599..1602) }
token: ElementEnd { end: Open, span: StrSpan(">" 1602..1603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1604..1605), span: StrSpan("<a" 1603..1605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1606..1610), value: StrSpan("../Text/Section0024.xhtml" 1612..1637), span: StrSpan("href=\"../Text/Section0024.xhtml\"" 1606..1638) }
token: ElementEnd { end: Open, span: StrSpan(">" 1638..1639) }
token: Text { text: StrSpan("Le streghe" 1639..1649) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1651..1652)), span: StrSpan("</a>" 1649..1653) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1655..1657)), span: StrSpan("</li>" 1653..1658) }
token: Text { text: StrSpan("\n" 1658..1659) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1660..1662), span: StrSpan("<li" 1659..1662) }
token: ElementEnd { end: Open, span: StrSpan(">" 1662..1663) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1664..1665), span: StrSpan("<a" 1663..1665) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1666..1670), value: StrSpan("../Text/Section0025.xhtml" 1672..1697), span: StrSpan("href=\"../Text/Section0025.xhtml\"" 1666..1698) }
token: ElementEnd { end: Open, span: StrSpan(">" 1698..1699) }
token: Text { text: StrSpan("Il toro" 1699..1706) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1708..1709)), span: StrSpan("</a>" 1706..1710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1712..1714)), span: StrSpan("</li>" 1710..1715) }
token: Text { text: StrSpan("\n" 1715..1716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1717..1719), span: StrSpan("<li" 1716..1719) }
token: ElementEnd { end: Open, span: StrSpan(">" 1719..1720) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1721..1722), span: StrSpan("<a" 1720..1722) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1723..1727), value: StrSpan("../Text/Section0026.xhtml" 1729..1754), span: StrSpan("href=\"../Text/Section0026.xhtml\"" 1723..1755) }
token: ElementEnd { end: Open, span: StrSpan(">" 1755..1756) }
token: Text { text: StrSpan("In famiglia" 1756..1767) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1769..1770)), span: StrSpan("</a>" 1767..1771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1773..1775)), span: StrSpan("</li>" 1771..1776) }
token: Text { text: StrSpan("\n" 1776..1777) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1778..1780), span: StrSpan("<li" 1777..1780) }
token: ElementEnd { end: Open, span: StrSpan(">" 1780..1781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1782..1783), span: StrSpan("<a" 1781..1783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1784..1788), value: StrSpan("../Text/Section0027.xhtml" 1790..1815), span: StrSpan("href=\"../Text/Section0027.xhtml\"" 1784..1816) }
token: ElementEnd { end: Open, span: StrSpan(">" 1816..1817) }
token: Text { text: StrSpan("Gli Argonauti" 1817..1830) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1832..1833)), span: StrSpan("</a>" 1830..1834) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1836..1838)), span: StrSpan("</li>" 1834..1839) }
token: Text { text: StrSpan("\n" 1839..1840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1841..1843), span: StrSpan("<li" 1840..1843) }
token: ElementEnd { end: Open, span: StrSpan(">" 1843..1844) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1845..1846), span: StrSpan("<a" 1844..1846) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1847..1851), value: StrSpan("../Text/Section0028.xhtml" 1853..1878), span: StrSpan("href=\"../Text/Section0028.xhtml\"" 1847..1879) }
token: ElementEnd { end: Open, span: StrSpan(">" 1879..1880) }
token: Text { text: StrSpan("La vigna" 1880..1888) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1890..1891)), span: StrSpan("</a>" 1888..1892) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1894..1896)), span: StrSpan("</li>" 1892..1897) }
token: Text { text: StrSpan("\n" 1897..1898) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1899..1901), span: StrSpan("<li" 1898..1901) }
token: ElementEnd { end: Open, span: StrSpan(">" 1901..1902) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1903..1904), span: StrSpan("<a" 1902..1904) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1905..1909), value: StrSpan("../Text/Section0029.xhtml" 1911..1936), span: StrSpan("href=\"../Text/Section0029.xhtml\"" 1905..1937) }
token: ElementEnd { end: Open, span: StrSpan(">" 1937..1938) }
token: Text { text: StrSpan("Gli uomini" 1938..1948) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 1950..1951)), span: StrSpan("</a>" 1948..1952) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 1954..1956)), span: StrSpan("</li>" 1952..1957) }
token: Text { text: StrSpan("\n" 1957..1958) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 1959..1961), span: StrSpan("<li" 1958..1961) }
token: ElementEnd { end: Open, span: StrSpan(">" 1961..1962) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 1963..1964), span: StrSpan("<a" 1962..1964) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 1965..1969), value: StrSpan("../Text/Section0030.xhtml" 1971..1996), span: StrSpan("href=\"../Text/Section0030.xhtml\"" 1965..1997) }
token: ElementEnd { end: Open, span: StrSpan(">" 1997..1998) }
token: Text { text: StrSpan("Il mistero" 1998..2008) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 2010..2011)), span: StrSpan("</a>" 2008..2012) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 2014..2016)), span: StrSpan("</li>" 2012..2017) }
token: Text { text: StrSpan("\n" 2017..2018) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 2019..2021), span: StrSpan("<li" 2018..2021) }
token: ElementEnd { end: Open, span: StrSpan(">" 2021..2022) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 2023..2024), span: StrSpan("<a" 2022..2024) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 2025..2029), value: StrSpan("../Text/Section0031.xhtml" 2031..2056), span: StrSpan("href=\"../Text/Section0031.xhtml\"" 2025..2057) }
token: ElementEnd { end: Open, span: StrSpan(">" 2057..2058) }
token: Text { text: StrSpan("Il diluvio" 2058..2068) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 2070..2071)), span: StrSpan("</a>" 2068..2072) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 2074..2076)), span: StrSpan("</li>" 2072..2077) }
token: Text { text: StrSpan("\n" 2077..2078) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 2079..2081), span: StrSpan("<li" 2078..2081) }
token: ElementEnd { end: Open, span: StrSpan(">" 2081..2082) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 2083..2084), span: StrSpan("<a" 2082..2084) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 2085..2089), value: StrSpan("../Text/Section0032.xhtml" 2091..2116), span: StrSpan("href=\"../Text/Section0032.xhtml\"" 2085..2117) }
token: ElementEnd { end: Open, span: StrSpan(">" 2117..2118) }
token: Text { text: StrSpan("Le muse" 2118..2125) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 2127..2128)), span: StrSpan("</a>" 2125..2129) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 2131..2133)), span: StrSpan("</li>" 2129..2134) }
token: Text { text: StrSpan("\n" 2134..2135) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("li" 2136..2138), span: StrSpan("<li" 2135..2138) }
token: ElementEnd { end: Open, span: StrSpan(">" 2138..2139) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("a" 2140..2141), span: StrSpan("<a" 2139..2141) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 2142..2146), value: StrSpan("../Text/Section0033.xhtml" 2148..2173), span: StrSpan("href=\"../Text/Section0033.xhtml\"" 2142..2174) }
token: ElementEnd { end: Open, span: StrSpan(">" 2174..2175) }
token: Text { text: StrSpan("Gli d√®i" 2175..2183) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("a" 2185..2186)), span: StrSpan("</a>" 2183..2187) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("li" 2189..2191)), span: StrSpan("</li>" 2187..2192) }
token: Text { text: StrSpan("\n" 2192..2193) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("ul" 2195..2197)), span: StrSpan("</ul>" 2193..2198) }
token: Text { text: StrSpan("\n" 2198..2199) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 2201..2205)), span: StrSpan("</body>" 2199..2206) }
token: Text { text: StrSpan("\n" 2206..2207) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 2209..2213)), span: StrSpan("</html>" 2207..2214) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n  " 335..338) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 339..340), span: StrSpan("<p" 338..340) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 341..346), value: StrSpan("testo_frontespizio_titolo" 348..373), span: StrSpan("class=\"testo_frontespizio_titolo\"" 341..374) }
token: ElementEnd { end: Open, span: StrSpan(">" 374..375) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤" 375..394) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 396..397)), span: StrSpan("</p>" 394..398) }
token: Text { text: StrSpan("\n\n  " 398..402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 403..404), span: StrSpan("<p" 402..404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 405..410), value: StrSpan("testo_frontespizio_autore" 412..437), span: StrSpan("class=\"testo_frontespizio_autore\"" 405..438) }
token: ElementEnd { end: Open, span: StrSpan(">" 438..439) }
token: Text { text: StrSpan("Cesare Pavese" 439..452) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 454..455)), span: StrSpan("</p>" 452..456) }
token: Text { text: StrSpan("\n" 456..457) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 459..463)), span: StrSpan("</body>" 457..464) }
token: Text { text: StrSpan("\n" 464..465) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 467..471)), span: StrSpan("</html>" 465..472) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 337..338), span: StrSpan("<p" 336..338) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 339..344), value: StrSpan("testo_corsivo" 346..359), span: StrSpan("class=\"testo_corsivo\"" 339..360) }
token: ElementEnd { end: Open, span: StrSpan(">" 360..361) }
token: Text { text: StrSpan("Potendo si sarebbe volentieri fatto a meno di tanta mitologia. Ma siamo convinti che il mito √® un linguaggio, un mezzo espressivo ‚Äì cio√® non qualcosa di arbitrario ma un vivaio di simboli cui appartiene, come a tutti i linguaggi, una particolare sostanza di significati che null‚Äôaltro potrebbe rendere. Quando ripetiamo un nome proprio, un gesto, un prodigio mitico, esprimiamo in mezza riga, in poche sillabe, un fatto sintetico e comprensivo, un midollo di realt√† che vivifica e nutre tutto un organismo di passione, di stato umano, tutto un complesso concettuale. Se poi questo nome, questo gesto ci √® familiare fin dall‚Äôinfanzia, dalla scuola ‚Äì tanto meglio. L‚Äôinquietudine √® pi√∫ vera e tagliente quando sommuove una materia consueta. Qui ci siamo accontentati di servirci di miti ellenici data la perdonabile voga popolare di questi miti, la loro immediata e tradizionale accettabilit√†. Abbiamo orrore di tutto ci√≤ che √® incomposto, eteroclito, accidentale e cerchiamo ‚Äì anche materialmente ‚Äì di limitarci, di darci una cornice, d‚Äôinsistere su una conclusa presenza. Siamo convinti che una grande rivelazione pu√≤ uscire soltanto dalla testarda insistenza su una stessa difficolt√†. Non abbiamo nulla in comune coi viaggiatori, gli sperimentatori, gli avventurieri. Sappiamo che il pi√∫ sicuro ‚Äì e pi√∫ rapido ‚Äì modo di stupirci √® di fissare imperterriti sempre lo stesso oggetto. Un bel momento quest‚Äôoggetto ci sembrer√† ‚Äì miracoloso ‚Äì di non averlo visto mai." 361..1864) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1866..1867)), span: StrSpan("</p>" 1864..1868) }
token: Text { text: StrSpan("\n" 1868..1869) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 1871..1875)), span: StrSpan("</body>" 1869..1876) }
token: Text { text: StrSpan("\n" 1876..1877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 1879..1883)), span: StrSpan("</html>" 1877..1884) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La nube" 340..347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 349..351)), span: StrSpan("</h1>" 347..352) }
token: Text { text: StrSpan("\n\n" 352..354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 355..356), span: StrSpan("<p" 354..356) }
token: ElementEnd { end: Open, span: StrSpan(">" 356..357) }
token: Text { text: StrSpan("Che Issione finisse nel Tartaro per la sua audacia, √® probabile. Falso invece che generasse i Centauri dalle nuvole. Costoro eran gi√† un popolo al tempo delle nozze di suo figlio. Lapiti e Centauri escono da quel mondo titanico, in cui era consentito alle nature pi√∫ diverse di mischiarsi, e spesseggiavano quei mostri contro i quali l‚ÄôOlimpo sar√† poi implacabile." 357..727) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 729..730)), span: StrSpan("</p>" 727..731) }
token: Text { text: StrSpan("\n\n" 731..733) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 734..735), span: StrSpan("<p" 733..735) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 736..741), value: StrSpan("testo_indicazioni_scena" 743..766), span: StrSpan("class=\"testo_indicazioni_scena\"" 736..767) }
token: ElementEnd { end: Open, span: StrSpan(">" 767..768) }
token: Text { text: StrSpan("(parlano la Nube e Issione)" 768..795) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 797..798)), span: StrSpan("</p>" 795..799) }
token: Text { text: StrSpan("\n\n" 799..801) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 802..803), span: StrSpan("<p" 801..803) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 804..809), value: StrSpan("testo_personaggio testo_maiuscoletto" 811..847), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 804..848) }
token: ElementEnd { end: Open, span: StrSpan(">" 848..849) }
token: Text { text: StrSpan("La Nube." 849..857) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 859..860)), span: StrSpan("</p>" 857..861) }
token: Text { text: StrSpan("\n" 861..862) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 863..864), span: StrSpan("<p" 862..864) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 865..870), value: StrSpan("testo_dialogo" 872..885), span: StrSpan("class=\"testo_dialogo\"" 865..886) }
token: ElementEnd { end: Open, span: StrSpan(">" 886..887) }
token: Text { text: StrSpan("C‚Äô√® una legge, Issione, cui bisogna ubbidire." 887..935) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 937..938)), span: StrSpan("</p>" 935..939) }
token: Text { text: StrSpan("\n\n" 939..941) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 942..943), span: StrSpan("<p" 941..943) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 944..949), value: StrSpan("testo_personaggio testo_maiuscoletto" 951..987), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 944..988) }
token: ElementEnd { end: Open, span: StrSpan(">" 988..989) }
token: Text { text: StrSpan("Issione." 989..997) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 999..1000)), span: StrSpan("</p>" 997..1001) }
token: Text { text: StrSpan("\n" 1001..1002) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1003..1004), span: StrSpan("<p" 1002..1004) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1005..1010), value: StrSpan("testo_dialogo" 1012..1025), span: StrSpan("class=\"testo_dialogo\"" 1005..1026) }
token: ElementEnd { end: Open, span: StrSpan(">" 1026..1027) }
token: Text { text: StrSpan("Quass√∫ la legge non arriva, Nefele. Qui la legge √® il nevaio, la bufera, la tenebra. E quando viene il giorno chiaro e tu ti accosti leggera alla rupe, √® troppo bello per pensarci ancora." 1027..1217) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1219..1220)), span: StrSpan("</p>" 1217..1221) }
token: Text { text: StrSpan("\n\n" 1221..1223) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1224..1225), span: StrSpan("<p" 1223..1225) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1226..1231), value: StrSpan("testo_personaggio testo_maiuscoletto" 1233..1269), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1226..1270) }
token: ElementEnd { end: Open, span: StrSpan(">" 1270..1271) }
token: Text { text: StrSpan("La Nube." 1271..1279) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1281..1282)), span: StrSpan("</p>" 1279..1283) }
token: Text { text: StrSpan("\n" 1283..1284) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1285..1286), span: StrSpan("<p" 1284..1286) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1287..1292), value: StrSpan("testo_dialogo" 1294..1307), span: StrSpan("class=\"testo_dialogo\"" 1287..1308) }
token: ElementEnd { end: Open, span: StrSpan(">" 1308..1309) }
token: Text { text: StrSpan("C‚Äô√® una legge, Issione, che prima non c‚Äôera. Le nubi le aduna una mano pi√∫ forte." 1309..1396) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1398..1399)), span: StrSpan("</p>" 1396..1400) }
token: Text { text: StrSpan("\n\n" 1400..1402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1403..1404), span: StrSpan("<p" 1402..1404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1405..1410), value: StrSpan("testo_personaggio testo_maiuscoletto" 1412..1448), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1405..1449) }
token: ElementEnd { end: Open, span: StrSpan(">" 1449..1450) }
token: Text { text: StrSpan("Issione." 1450..1458) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1460..1461)), span: StrSpan("</p>" 1458..1462) }
token: Text { text: StrSpan("\n" 1462..1463) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1464..1465), span: StrSpan("<p" 1463..1465) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1466..1471), value: StrSpan("testo_dialogo" 1473..1486), span: StrSpan("class=\"testo_dialogo\"" 1466..1487) }
token: ElementEnd { end: Open, span: StrSpan(">" 1487..1488) }
token: Text { text: StrSpan("Qui non arriva questa mano. Tu stessa, adesso che √® sereno, ridi. E quando il cielo s‚Äôoscura e urla il vento, che importa la mano che ci sbatte come g√≤cciole? Accadeva gi√† ai tempi che non c‚Äôera padrone. Nulla √® mutato sopra i monti. Noi siamo avvezzi a tutto questo." 1488..1763) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1765..1766)), span: StrSpan("</p>" 1763..1767) }
token: Text { text: StrSpan("\n\n" 1767..1769) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1770..1771), span: StrSpan("<p" 1769..1771) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1772..1777), value: StrSpan("testo_personaggio testo_maiuscoletto" 1779..1815), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1772..1816) }
token: ElementEnd { end: Open, span: StrSpan(">" 1816..1817) }
token: Text { text: StrSpan("La Nube." 1817..1825) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1827..1828)), span: StrSpan("</p>" 1825..1829) }
token: Text { text: StrSpan("\n" 1829..1830) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1831..1832), span: StrSpan("<p" 1830..1832) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1833..1838), value: StrSpan("testo_dialogo" 1840..1853), span: StrSpan("class=\"testo_dialogo\"" 1833..1854) }
token: ElementEnd { end: Open, span: StrSpan(">" 1854..1855) }
token: Text { text: StrSpan("Molte cose son mutate sui monti. Lo sa il Pelio, lo sa l‚ÄôOssa e l‚ÄôOlimpo. Lo sanno monti pi√∫ selvaggi ancora." 1855..1969) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1971..1972)), span: StrSpan("</p>" 1969..1973) }
token: Text { text: StrSpan("\n\n" 1973..1975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1976..1977), span: StrSpan("<p" 1975..1977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1978..1983), value: StrSpan("testo_personaggio testo_maiuscoletto" 1985..2021), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1978..2022) }
token: ElementEnd { end: Open, span: StrSpan(">" 2022..2023) }
token: Text { text: StrSpan("Issione." 2023..2031) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2033..2034)), span: StrSpan("</p>" 2031..2035) }
token: Text { text: StrSpan("\n" 2035..2036) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2037..2038), span: StrSpan("<p" 2036..2038) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2039..2044), value: StrSpan("testo_dialogo" 2046..2059), span: StrSpan("class=\"testo_dialogo\"" 2039..2060) }
token: ElementEnd { end: Open, span: StrSpan(">" 2060..2061) }
token: Text { text: StrSpan("E che cosa √® mutato, Nefele, sui monti?" 2061..2101) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2103..2104)), span: StrSpan("</p>" 2101..2105) }
token: Text { text: StrSpan("\n\n" 2105..2107) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2108..2109), span: StrSpan("<p" 2107..2109) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2110..2115), value: StrSpan("testo_personaggio testo_maiuscoletto" 2117..2153), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2110..2154) }
token: ElementEnd { end: Open, span: StrSpan(">" 2154..2155) }
token: Text { text: StrSpan("La Nube." 2155..2163) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2165..2166)), span: StrSpan("</p>" 2163..2167) }
token: Text { text: StrSpan("\n" 2167..2168) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2169..2170), span: StrSpan("<p" 2168..2170) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2171..2176), value: StrSpan("testo_dialogo" 2178..2191), span: StrSpan("class=\"testo_dialogo\"" 2171..2192) }
token: ElementEnd { end: Open, span: StrSpan(">" 2192..2193) }
token: Text { text: StrSpan("N√© il sole n√© l‚Äôacqua, Issione. La sorte dell‚Äôuomo, √® mutata. Ci sono dei mostri. Un limite √® posto a voi uomini. L‚Äôacqua, il vento, la rupe e la nuvola non son pi√∫ cosa vostra, non potete pi√∫ stringerli a voi generando e vivendo. Altre mani ormai tengono il mondo. C‚Äô√® una legge, Issione." 2193..2497) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2499..2500)), span: StrSpan("</p>" 2497..2501) }
token: Text { text: StrSpan("\n\n" 2501..2503) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2504..2505), span: StrSpan("<p" 2503..2505) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2506..2511), value: StrSpan("testo_personaggio testo_maiuscoletto" 2513..2549), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2506..2550) }
token: ElementEnd { end: Open, span: StrSpan(">" 2550..2551) }
token: Text { text: StrSpan("Issione." 2551..2559) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2561..2562)), span: StrSpan("</p>" 2559..2563) }
token: Text { text: StrSpan("\n" 2563..2564) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2565..2566), span: StrSpan("<p" 2564..2566) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2567..2572), value: StrSpan("testo_dialogo" 2574..2587), span: StrSpan("class=\"testo_dialogo\"" 2567..2588) }
token: ElementEnd { end: Open, span: StrSpan(">" 2588..2589) }
token: Text { text: StrSpan("Quale legge?" 2589..2601) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2603..2604)), span: StrSpan("</p>" 2601..2605) }
token: Text { text: StrSpan("\n\n" 2605..2607) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2608..2609), span: StrSpan("<p" 2607..2609) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2610..2615), value: StrSpan("testo_personaggio testo_maiuscoletto" 2617..2653), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2610..2654) }
token: ElementEnd { end: Open, span: StrSpan(">" 2654..2655) }
token: Text { text: StrSpan("La Nube." 2655..2663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2665..2666)), span: StrSpan("</p>" 2663..2667) }
token: Text { text: StrSpan("\n" 2667..2668) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2669..2670), span: StrSpan("<p" 2668..2670) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2671..2676), value: StrSpan("testo_dialogo" 2678..2691), span: StrSpan("class=\"testo_dialogo\"" 2671..2692) }
token: ElementEnd { end: Open, span: StrSpan(">" 2692..2693) }
token: Text { text: StrSpan("Gi√† lo sai. La tua sorte, il limite‚Ä¶" 2693..2732) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2734..2735)), span: StrSpan("</p>" 2732..2736) }
token: Text { text: StrSpan("\n\n" 2736..2738) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2739..2740), span: StrSpan("<p" 2738..2740) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2741..2746), value: StrSpan("testo_personaggio testo_maiuscoletto" 2748..2784), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2741..2785) }
token: ElementEnd { end: Open, span: StrSpan(">" 2785..2786) }
token: Text { text: StrSpan("Issione." 2786..2794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2796..2797)), span: StrSpan("</p>" 2794..2798) }
token: Text { text: StrSpan("\n" 2798..2799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2800..2801), span: StrSpan("<p" 2799..2801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2802..2807), value: StrSpan("testo_dialogo" 2809..2822), span: StrSpan("class=\"testo_dialogo\"" 2802..2823) }
token: ElementEnd { end: Open, span: StrSpan(">" 2823..2824) }
token: Text { text: StrSpan("La mia sorte l‚Äôho in pugno, Nefele. Che cosa √® mutato? Questi nuovi padroni posson forse impedirmi di scagliare un macigno per gioco? o di scendere nella pianura e spezzare la schiena a un nemico? Saranno loro pi√∫ terribili della stanchezza e della morte?" 2824..3083) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3085..3086)), span: StrSpan("</p>" 3083..3087) }
token: Text { text: StrSpan("\n\n" 3087..3089) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3090..3091), span: StrSpan("<p" 3089..3091) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3092..3097), value: StrSpan("testo_personaggio testo_maiuscoletto" 3099..3135), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3092..3136) }
token: ElementEnd { end: Open, span: StrSpan(">" 3136..3137) }
token: Text { text: StrSpan("La Nube." 3137..3145) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3147..3148)), span: StrSpan("</p>" 3145..3149) }
token: Text { text: StrSpan("\n" 3149..3150) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3151..3152), span: StrSpan("<p" 3150..3152) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3153..3158), value: StrSpan("testo_dialogo" 3160..3173), span: StrSpan("class=\"testo_dialogo\"" 3153..3174) }
token: ElementEnd { end: Open, span: StrSpan(">" 3174..3175) }
token: Text { text: StrSpan("Non √® questo, Issione. Tutto ci√≤ lo puoi fare e altro ancora. Ma non puoi pi√∫ mischiarti a noialtre, le ninfe delle polle e dei monti, alle figlie del vento, alle dee della terra. √à mutato il destino." 3175..3379) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3381..3382)), span: StrSpan("</p>" 3379..3383) }
token: Text { text: StrSpan("\n\n" 3383..3385) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3386..3387), span: StrSpan("<p" 3385..3387) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3388..3393), value: StrSpan("testo_personaggio testo_maiuscoletto" 3395..3431), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3388..3432) }
token: ElementEnd { end: Open, span: StrSpan(">" 3432..3433) }
token: Text { text: StrSpan("Issione." 3433..3441) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3443..3444)), span: StrSpan("</p>" 3441..3445) }
token: Text { text: StrSpan("\n" 3445..3446) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3447..3448), span: StrSpan("<p" 3446..3448) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3449..3454), value: StrSpan("testo_dialogo" 3456..3469), span: StrSpan("class=\"testo_dialogo\"" 3449..3470) }
token: ElementEnd { end: Open, span: StrSpan(">" 3470..3471) }
token: Text { text: StrSpan("Non puoi pi√∫‚Ä¶ Che vuol dire, Nefele?" 3471..3510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3512..3513)), span: StrSpan("</p>" 3510..3514) }
token: Text { text: StrSpan("\n\n" 3514..3516) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3517..3518), span: StrSpan("<p" 3516..3518) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3519..3524), value: StrSpan("testo_personaggio testo_maiuscoletto" 3526..3562), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3519..3563) }
token: ElementEnd { end: Open, span: StrSpan(">" 3563..3564) }
token: Text { text: StrSpan("La Nube." 3564..3572) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3574..3575)), span: StrSpan("</p>" 3572..3576) }
token: Text { text: StrSpan("\n" 3576..3577) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3578..3579), span: StrSpan("<p" 3577..3579) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3580..3585), value: StrSpan("testo_dialogo" 3587..3600), span: StrSpan("class=\"testo_dialogo\"" 3580..3601) }
token: ElementEnd { end: Open, span: StrSpan(">" 3601..3602) }
token: Text { text: StrSpan("Vuol dire che, volendo far questo, faresti invece delle cose terribili. Come chi, per carezzare un compagno, lo strozzasse o ne venisse strozzato." 3602..3748) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3750..3751)), span: StrSpan("</p>" 3748..3752) }
token: Text { text: StrSpan("\n\n" 3752..3754) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3755..3756), span: StrSpan("<p" 3754..3756) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3757..3762), value: StrSpan("testo_personaggio testo_maiuscoletto" 3764..3800), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3757..3801) }
token: ElementEnd { end: Open, span: StrSpan(">" 3801..3802) }
token: Text { text: StrSpan("Issione." 3802..3810) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3812..3813)), span: StrSpan("</p>" 3810..3814) }
token: Text { text: StrSpan("\n" 3814..3815) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3816..3817), span: StrSpan("<p" 3815..3817) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3818..3823), value: StrSpan("testo_dialogo" 3825..3838), span: StrSpan("class=\"testo_dialogo\"" 3818..3839) }
token: ElementEnd { end: Open, span: StrSpan(">" 3839..3840) }
token: Text { text: StrSpan("Non capisco. Non verrai pi√∫ sulla montagna? Hai paura di me?" 3840..3901) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3903..3904)), span: StrSpan("</p>" 3901..3905) }
token: Text { text: StrSpan("\n\n" 3905..3907) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3908..3909), span: StrSpan("<p" 3907..3909) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3910..3915), value: StrSpan("testo_personaggio testo_maiuscoletto" 3917..3953), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3910..3954) }
token: ElementEnd { end: Open, span: StrSpan(">" 3954..3955) }
token: Text { text: StrSpan("La Nube." 3955..3963) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3965..3966)), span: StrSpan("</p>" 3963..3967) }
token: Text { text: StrSpan("\n" 3967..3968) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3969..3970), span: StrSpan("<p" 3968..3970) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3971..3976), value: StrSpan("testo_dialogo" 3978..3991), span: StrSpan("class=\"testo_dialogo\"" 3971..3992) }
token: ElementEnd { end: Open, span: StrSpan(">" 3992..3993) }
token: Text { text: StrSpan("Verr√≤ sulla montagna e dovunque. Tu non puoi farmi nulla, Issione. Non puoi far nulla contro l‚Äôacqua e contro il vento. Ma devi chinare la testa. Solamente cos√≠ salverai la tua sorte." 3993..4180) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4182..4183)), span: StrSpan("</p>" 4180..4184) }
token: Text { text: StrSpan("\n\n" 4184..4186) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4187..4188), span: StrSpan("<p" 4186..4188) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4189..4194), value: StrSpan("testo_personaggio testo_maiuscoletto" 4196..4232), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4189..4233) }
token: ElementEnd { end: Open, span: StrSpan(">" 4233..4234) }
token: Text { text: StrSpan("Issione." 4234..4242) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4244..4245)), span: StrSpan("</p>" 4242..4246) }
token: Text { text: StrSpan("\n" 4246..4247) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4248..4249), span: StrSpan("<p" 4247..4249) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4250..4255), value: StrSpan("testo_dialogo" 4257..4270), span: StrSpan("class=\"testo_dialogo\"" 4250..4271) }
token: ElementEnd { end: Open, span: StrSpan(">" 4271..4272) }
token: Text { text: StrSpan("Tu hai paura, Nefele." 4272..4293) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4295..4296)), span: StrSpan("</p>" 4293..4297) }
token: Text { text: StrSpan("\n\n" 4297..4299) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4300..4301), span: StrSpan("<p" 4299..4301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4302..4307), value: StrSpan("testo_personaggio testo_maiuscoletto" 4309..4345), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4302..4346) }
token: ElementEnd { end: Open, span: StrSpan(">" 4346..4347) }
token: Text { text: StrSpan("La Nube." 4347..4355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4357..4358)), span: StrSpan("</p>" 4355..4359) }
token: Text { text: StrSpan("\n" 4359..4360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4361..4362), span: StrSpan("<p" 4360..4362) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4363..4368), value: StrSpan("testo_dialogo" 4370..4383), span: StrSpan("class=\"testo_dialogo\"" 4363..4384) }
token: ElementEnd { end: Open, span: StrSpan(">" 4384..4385) }
token: Text { text: StrSpan("Ho paura. Ho veduto le cime dei monti. Ma non per me, Issione. Io non posso patire. Ho paura per voi che non siete che uomini. Questi monti che un tempo correvate da padroni, queste creature nostre e tue generate in libert√†, ora tremano a un cenno. Siamo tutti asserviti a una mano pi√∫ forte. I figli dell‚Äôacqua e del vento, i centauri, si nascondono in fondo alle forre. Sanno di essere mostri." 4385..4784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4786..4787)), span: StrSpan("</p>" 4784..4788) }
token: Text { text: StrSpan("\n\n" 4788..4790) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4791..4792), span: StrSpan("<p" 4790..4792) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4793..4798), value: StrSpan("testo_personaggio testo_maiuscoletto" 4800..4836), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4793..4837) }
token: ElementEnd { end: Open, span: StrSpan(">" 4837..4838) }
token: Text { text: StrSpan("Issione." 4838..4846) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4848..4849)), span: StrSpan("</p>" 4846..4850) }
token: Text { text: StrSpan("\n" 4850..4851) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4852..4853), span: StrSpan("<p" 4851..4853) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4854..4859), value: StrSpan("testo_dialogo" 4861..4874), span: StrSpan("class=\"testo_dialogo\"" 4854..4875) }
token: ElementEnd { end: Open, span: StrSpan(">" 4875..4876) }
token: Text { text: StrSpan("Chi lo dice?" 4876..4888) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4890..4891)), span: StrSpan("</p>" 4888..4892) }
token: Text { text: StrSpan("\n\n" 4892..4894) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4895..4896), span: StrSpan("<p" 4894..4896) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4897..4902), value: StrSpan("testo_personaggio testo_maiuscoletto" 4904..4940), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4897..4941) }
token: ElementEnd { end: Open, span: StrSpan(">" 4941..4942) }
token: Text { text: StrSpan("La Nube." 4942..4950) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4952..4953)), span: StrSpan("</p>" 4950..4954) }
token: Text { text: StrSpan("\n" 4954..4955) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4956..4957), span: StrSpan("<p" 4955..4957) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4958..4963), value: StrSpan("testo_dialogo" 4965..4978), span: StrSpan("class=\"testo_dialogo\"" 4958..4979) }
token: ElementEnd { end: Open, span: StrSpan(">" 4979..4980) }
token: Text { text: StrSpan("Non sfidare la mano, Issione. √à la sorte. Ne ho veduti di audaci pi√∫ di loro e di te precipitare dalla rupe e non morire. Capiscimi, Issione. La morte, ch‚Äôera il vostro coraggio, pu√≤ esservi tolta come un bene. Lo sai questo?" 4980..5210) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5212..5213)), span: StrSpan("</p>" 5210..5214) }
token: Text { text: StrSpan("\n\n" 5214..5216) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5217..5218), span: StrSpan("<p" 5216..5218) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5219..5224), value: StrSpan("testo_personaggio testo_maiuscoletto" 5226..5262), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5219..5263) }
token: ElementEnd { end: Open, span: StrSpan(">" 5263..5264) }
token: Text { text: StrSpan("Issione." 5264..5272) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5274..5275)), span: StrSpan("</p>" 5272..5276) }
token: Text { text: StrSpan("\n" 5276..5277) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5278..5279), span: StrSpan("<p" 5277..5279) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5280..5285), value: StrSpan("testo_dialogo" 5287..5300), span: StrSpan("class=\"testo_dialogo\"" 5280..5301) }
token: ElementEnd { end: Open, span: StrSpan(">" 5301..5302) }
token: Text { text: StrSpan("Me l‚Äôhai detto altre volte. Che importa? Vivremo di pi√∫." 5302..5361) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5363..5364)), span: StrSpan("</p>" 5361..5365) }
token: Text { text: StrSpan("\n\n" 5365..5367) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5368..5369), span: StrSpan("<p" 5367..5369) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5370..5375), value: StrSpan("testo_personaggio testo_maiuscoletto" 5377..5413), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5370..5414) }
token: ElementEnd { end: Open, span: StrSpan(">" 5414..5415) }
token: Text { text: StrSpan("La Nube." 5415..5423) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5425..5426)), span: StrSpan("</p>" 5423..5427) }
token: Text { text: StrSpan("\n" 5427..5428) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5429..5430), span: StrSpan("<p" 5428..5430) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5431..5436), value: StrSpan("testo_dialogo" 5438..5451), span: StrSpan("class=\"testo_dialogo\"" 5431..5452) }
token: ElementEnd { end: Open, span: StrSpan(">" 5452..5453) }
token: Text { text: StrSpan("Tu giochi e non conosci gli immortali." 5453..5491) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5493..5494)), span: StrSpan("</p>" 5491..5495) }
token: Text { text: StrSpan("\n\n" 5495..5497) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5498..5499), span: StrSpan("<p" 5497..5499) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5500..5505), value: StrSpan("testo_personaggio testo_maiuscoletto" 5507..5543), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5500..5544) }
token: ElementEnd { end: Open, span: StrSpan(">" 5544..5545) }
token: Text { text: StrSpan("Issione." 5545..5553) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5555..5556)), span: StrSpan("</p>" 5553..5557) }
token: Text { text: StrSpan("\n" 5557..5558) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5559..5560), span: StrSpan("<p" 5558..5560) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5561..5566), value: StrSpan("testo_dialogo" 5568..5581), span: StrSpan("class=\"testo_dialogo\"" 5561..5582) }
token: ElementEnd { end: Open, span: StrSpan(">" 5582..5583) }
token: Text { text: StrSpan("Vorrei conoscerli, Nefele." 5583..5609) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5611..5612)), span: StrSpan("</p>" 5609..5613) }
token: Text { text: StrSpan("\n\n" 5613..5615) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5616..5617), span: StrSpan("<p" 5615..5617) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5618..5623), value: StrSpan("testo_personaggio testo_maiuscoletto" 5625..5661), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5618..5662) }
token: ElementEnd { end: Open, span: StrSpan(">" 5662..5663) }
token: Text { text: StrSpan("La Nube." 5663..5671) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5673..5674)), span: StrSpan("</p>" 5671..5675) }
token: Text { text: StrSpan("\n" 5675..5676) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5677..5678), span: StrSpan("<p" 5676..5678) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5679..5684), value: StrSpan("testo_dialogo" 5686..5699), span: StrSpan("class=\"testo_dialogo\"" 5679..5700) }
token: ElementEnd { end: Open, span: StrSpan(">" 5700..5701) }
token: Text { text: StrSpan("Issione, tu credi che sian presenze come noi, come la Notte, la Terra o il vecchio Pan. Tu sei giovane, Issione, ma sei nato sotto il vecchio destino. Per te non esistono mostri ma soltanto compagni. Per te la morte √® una cosa che accade, come il giorno e la notte. Tu sei uno di noi, Issione. Tu sei tutto nel gesto che fai. Ma per loro, gli immortali, i tuoi gesti hanno un senso che si prolunga. Essi tastano tutto da lontano con gli occhi, le narici, le labbra. Sono immortali e non san vivere da soli. Quello che tu compi o non compi, quel che dici, che cerchi ‚Äì tutto a loro contenta o dispiace. E se tu li disgusti ‚Äì se per errore li disturbi nel loro Olimpo ‚Äì ti piombano addosso, e ti d√†nno la morte ‚Äì quella morte che loro conoscono, ch‚Äô√® un amaro sapore che dura e si sente." 5701..6499) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6501..6502)), span: StrSpan("</p>" 6499..6503) }
token: Text { text: StrSpan("\n\n" 6503..6505) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6506..6507), span: StrSpan("<p" 6505..6507) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6508..6513), value: StrSpan("testo_personaggio testo_maiuscoletto" 6515..6551), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6508..6552) }
token: ElementEnd { end: Open, span: StrSpan(">" 6552..6553) }
token: Text { text: StrSpan("Issione." 6553..6561) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6563..6564)), span: StrSpan("</p>" 6561..6565) }
token: Text { text: StrSpan("\n" 6565..6566) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6567..6568), span: StrSpan("<p" 6566..6568) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6569..6574), value: StrSpan("testo_dialogo" 6576..6589), span: StrSpan("class=\"testo_dialogo\"" 6569..6590) }
token: ElementEnd { end: Open, span: StrSpan(">" 6590..6591) }
token: Text { text: StrSpan("Dunque si pu√≤ ancora morire." 6591..6620) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6622..6623)), span: StrSpan("</p>" 6620..6624) }
token: Text { text: StrSpan("\n\n" 6624..6626) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6627..6628), span: StrSpan("<p" 6626..6628) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6629..6634), value: StrSpan("testo_personaggio testo_maiuscoletto" 6636..6672), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6629..6673) }
token: ElementEnd { end: Open, span: StrSpan(">" 6673..6674) }
token: Text { text: StrSpan("La Nube." 6674..6682) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6684..6685)), span: StrSpan("</p>" 6682..6686) }
token: Text { text: StrSpan("\n" 6686..6687) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6688..6689), span: StrSpan("<p" 6687..6689) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6690..6695), value: StrSpan("testo_dialogo" 6697..6710), span: StrSpan("class=\"testo_dialogo\"" 6690..6711) }
token: ElementEnd { end: Open, span: StrSpan(">" 6711..6712) }
token: Text { text: StrSpan("No, Issione. Faranno di te come un‚Äôombra, ma un‚Äôombra che rivuole la vita e non muore mai pi√∫." 6712..6811) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6813..6814)), span: StrSpan("</p>" 6811..6815) }
token: Text { text: StrSpan("\n\n" 6815..6817) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6818..6819), span: StrSpan("<p" 6817..6819) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6820..6825), value: StrSpan("testo_personaggio testo_maiuscoletto" 6827..6863), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6820..6864) }
token: ElementEnd { end: Open, span: StrSpan(">" 6864..6865) }
token: Text { text: StrSpan("Issione." 6865..6873) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6875..6876)), span: StrSpan("</p>" 6873..6877) }
token: Text { text: StrSpan("\n" 6877..6878) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6879..6880), span: StrSpan("<p" 6878..6880) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6881..6886), value: StrSpan("testo_dialogo" 6888..6901), span: StrSpan("class=\"testo_dialogo\"" 6881..6902) }
token: ElementEnd { end: Open, span: StrSpan(">" 6902..6903) }
token: Text { text: StrSpan("Tu li hai veduti questi d√®i?" 6903..6932) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6934..6935)), span: StrSpan("</p>" 6932..6936) }
token: Text { text: StrSpan("\n\n" 6936..6938) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6939..6940), span: StrSpan("<p" 6938..6940) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6941..6946), value: StrSpan("testo_personaggio testo_maiuscoletto" 6948..6984), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6941..6985) }
token: ElementEnd { end: Open, span: StrSpan(">" 6985..6986) }
token: Text { text: StrSpan("La Nube." 6986..6994) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6996..6997)), span: StrSpan("</p>" 6994..6998) }
token: Text { text: StrSpan("\n" 6998..6999) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7000..7001), span: StrSpan("<p" 6999..7001) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7002..7007), value: StrSpan("testo_dialogo" 7009..7022), span: StrSpan("class=\"testo_dialogo\"" 7002..7023) }
token: ElementEnd { end: Open, span: StrSpan(">" 7023..7024) }
token: Text { text: StrSpan("Li ho veduti‚Ä¶ O Issione, non sai quel che chiedi." 7024..7075) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7077..7078)), span: StrSpan("</p>" 7075..7079) }
token: Text { text: StrSpan("\n\n" 7079..7081) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7082..7083), span: StrSpan("<p" 7081..7083) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7084..7089), value: StrSpan("testo_personaggio testo_maiuscoletto" 7091..7127), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7084..7128) }
token: ElementEnd { end: Open, span: StrSpan(">" 7128..7129) }
token: Text { text: StrSpan("Issione." 7129..7137) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7139..7140)), span: StrSpan("</p>" 7137..7141) }
token: Text { text: StrSpan("\n" 7141..7142) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7143..7144), span: StrSpan("<p" 7142..7144) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7145..7150), value: StrSpan("testo_dialogo" 7152..7165), span: StrSpan("class=\"testo_dialogo\"" 7145..7166) }
token: ElementEnd { end: Open, span: StrSpan(">" 7166..7167) }
token: Text { text: StrSpan("Anch‚Äôio ne ho veduti, Nefele. Non sono terribili." 7167..7218) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7220..7221)), span: StrSpan("</p>" 7218..7222) }
token: Text { text: StrSpan("\n\n" 7222..7224) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7225..7226), span: StrSpan("<p" 7224..7226) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7227..7232), value: StrSpan("testo_personaggio testo_maiuscoletto" 7234..7270), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7227..7271) }
token: ElementEnd { end: Open, span: StrSpan(">" 7271..7272) }
token: Text { text: StrSpan("La Nube." 7272..7280) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7282..7283)), span: StrSpan("</p>" 7280..7284) }
token: Text { text: StrSpan("\n" 7284..7285) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7286..7287), span: StrSpan("<p" 7285..7287) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7288..7293), value: StrSpan("testo_dialogo" 7295..7308), span: StrSpan("class=\"testo_dialogo\"" 7288..7309) }
token: ElementEnd { end: Open, span: StrSpan(">" 7309..7310) }
token: Text { text: StrSpan("Lo sapevo. La tua sorte √® segnata. Chi hai visto?" 7310..7360) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7362..7363)), span: StrSpan("</p>" 7360..7364) }
token: Text { text: StrSpan("\n\n" 7364..7366) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7367..7368), span: StrSpan("<p" 7366..7368) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7369..7374), value: StrSpan("testo_personaggio testo_maiuscoletto" 7376..7412), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7369..7413) }
token: ElementEnd { end: Open, span: StrSpan(">" 7413..7414) }
token: Text { text: StrSpan("Issione." 7414..7422) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7424..7425)), span: StrSpan("</p>" 7422..7426) }
token: Text { text: StrSpan("\n" 7426..7427) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7428..7429), span: StrSpan("<p" 7427..7429) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7430..7435), value: StrSpan("testo_dialogo" 7437..7450), span: StrSpan("class=\"testo_dialogo\"" 7430..7451) }
token: ElementEnd { end: Open, span: StrSpan(">" 7451..7452) }
token: Text { text: StrSpan("Come posso saperlo? Era un giovane, che traversava la foresta a piedi nudi. Mi pass√≤ accanto e non mi disse una parola. Poi davanti a una rupe scomparve. Lo cercai a lungo per chiedergli chi era ‚Äì lo stupore mi aveva inchiodato. Sembrava fatto della stessa carne tua." 7452..7722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7724..7725)), span: StrSpan("</p>" 7722..7726) }
token: Text { text: StrSpan("\n\n" 7726..7728) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7729..7730), span: StrSpan("<p" 7728..7730) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7731..7736), value: StrSpan("testo_personaggio testo_maiuscoletto" 7738..7774), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7731..7775) }
token: ElementEnd { end: Open, span: StrSpan(">" 7775..7776) }
token: Text { text: StrSpan("La Nube." 7776..7784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7786..7787)), span: StrSpan("</p>" 7784..7788) }
token: Text { text: StrSpan("\n" 7788..7789) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7790..7791), span: StrSpan("<p" 7789..7791) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7792..7797), value: StrSpan("testo_dialogo" 7799..7812), span: StrSpan("class=\"testo_dialogo\"" 7792..7813) }
token: ElementEnd { end: Open, span: StrSpan(">" 7813..7814) }
token: Text { text: StrSpan("Hai veduto lui solo?" 7814..7834) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7836..7837)), span: StrSpan("</p>" 7834..7838) }
token: Text { text: StrSpan("\n\n" 7838..7840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7841..7842), span: StrSpan("<p" 7840..7842) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7843..7848), value: StrSpan("testo_personaggio testo_maiuscoletto" 7850..7886), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7843..7887) }
token: ElementEnd { end: Open, span: StrSpan(">" 7887..7888) }
token: Text { text: StrSpan("Issione." 7888..7896) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7898..7899)), span: StrSpan("</p>" 7896..7900) }
token: Text { text: StrSpan("\n" 7900..7901) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7902..7903), span: StrSpan("<p" 7901..7903) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7904..7909), value: StrSpan("testo_dialogo" 7911..7924), span: StrSpan("class=\"testo_dialogo\"" 7904..7925) }
token: ElementEnd { end: Open, span: StrSpan(">" 7925..7926) }
token: Text { text: StrSpan("Poi in sogno l‚Äôho rivisto con le dee. E mi parve di stare con loro, di parlare e di ridere con loro. E mi dicevano le cose che tu dici, ma senza paura, senza tremare come te. Parlammo insieme del destino e della morte. Parlammo dell‚ÄôOlimpo, ridemmo dei ridicoli mostri‚Ä¶" 7926..8201) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8203..8204)), span: StrSpan("</p>" 8201..8205) }
token: Text { text: StrSpan("\n\n" 8205..8207) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8208..8209), span: StrSpan("<p" 8207..8209) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8210..8215), value: StrSpan("testo_personaggio testo_maiuscoletto" 8217..8253), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8210..8254) }
token: ElementEnd { end: Open, span: StrSpan(">" 8254..8255) }
token: Text { text: StrSpan("La Nube." 8255..8263) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8265..8266)), span: StrSpan("</p>" 8263..8267) }
token: Text { text: StrSpan("\n" 8267..8268) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8269..8270), span: StrSpan("<p" 8268..8270) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8271..8276), value: StrSpan("testo_dialogo" 8278..8291), span: StrSpan("class=\"testo_dialogo\"" 8271..8292) }
token: ElementEnd { end: Open, span: StrSpan(">" 8292..8293) }
token: Text { text: StrSpan("O Issione, Issione, la tua sorte √® segnata. Adesso sai cos‚Äô√® mutato sopra i monti. E anche tu sei mutato. E credi di essere qualcosa pi√∫ di un uomo." 8293..8446) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8448..8449)), span: StrSpan("</p>" 8446..8450) }
token: Text { text: StrSpan("\n \n" 8450..8453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8454..8455), span: StrSpan("<p" 8453..8455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8456..8461), value: StrSpan("testo_personaggio testo_maiuscoletto" 8463..8499), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8456..8500) }
token: ElementEnd { end: Open, span: StrSpan(">" 8500..8501) }
token: Text { text: StrSpan("Issione." 8501..8509) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8511..8512)), span: StrSpan("</p>" 8509..8513) }
token: Text { text: StrSpan("\n" 8513..8514) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8515..8516), span: StrSpan("<p" 8514..8516) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8517..8522), value: StrSpan("testo_dialogo" 8524..8537), span: StrSpan("class=\"testo_dialogo\"" 8517..8538) }
token: ElementEnd { end: Open, span: StrSpan(">" 8538..8539) }
token: Text { text: StrSpan("Ti dico, Nefele, che tu sei come loro. Perch√©, almeno in sogno, non dovrebbero piacermi?" 8539..8628) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8630..8631)), span: StrSpan("</p>" 8628..8632) }
token: Text { text: StrSpan("\n\n" 8632..8634) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8635..8636), span: StrSpan("<p" 8634..8636) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8637..8642), value: StrSpan("testo_personaggio testo_maiuscoletto" 8644..8680), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8637..8681) }
token: ElementEnd { end: Open, span: StrSpan(">" 8681..8682) }
token: Text { text: StrSpan("La Nube." 8682..8690) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8692..8693)), span: StrSpan("</p>" 8690..8694) }
token: Text { text: StrSpan("\n" 8694..8695) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8696..8697), span: StrSpan("<p" 8695..8697) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8698..8703), value: StrSpan("testo_dialogo" 8705..8718), span: StrSpan("class=\"testo_dialogo\"" 8698..8719) }
token: ElementEnd { end: Open, span: StrSpan(">" 8719..8720) }
token: Text { text: StrSpan("Folle, non puoi fermarti ai sogni. Salirai fino a loro. Farai qualcosa di terribile. Poi verr√† quella morte." 8720..8829) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8831..8832)), span: StrSpan("</p>" 8829..8833) }
token: Text { text: StrSpan("\n\n" 8833..8835) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8836..8837), span: StrSpan("<p" 8835..8837) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8838..8843), value: StrSpan("testo_personaggio testo_maiuscoletto" 8845..8881), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8838..8882) }
token: ElementEnd { end: Open, span: StrSpan(">" 8882..8883) }
token: Text { text: StrSpan("Issione." 8883..8891) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8893..8894)), span: StrSpan("</p>" 8891..8895) }
token: Text { text: StrSpan("\n" 8895..8896) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8897..8898), span: StrSpan("<p" 8896..8898) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8899..8904), value: StrSpan("testo_dialogo" 8906..8919), span: StrSpan("class=\"testo_dialogo\"" 8899..8920) }
token: ElementEnd { end: Open, span: StrSpan(">" 8920..8921) }
token: Text { text: StrSpan("Dimmi i nomi di tutte le dee." 8921..8950) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8952..8953)), span: StrSpan("</p>" 8950..8954) }
token: Text { text: StrSpan("\n\n" 8954..8956) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8957..8958), span: StrSpan("<p" 8956..8958) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8959..8964), value: StrSpan("testo_personaggio testo_maiuscoletto" 8966..9002), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8959..9003) }
token: ElementEnd { end: Open, span: StrSpan(">" 9003..9004) }
token: Text { text: StrSpan("La Nube." 9004..9012) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9014..9015)), span: StrSpan("</p>" 9012..9016) }
token: Text { text: StrSpan("\n" 9016..9017) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9018..9019), span: StrSpan("<p" 9017..9019) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9020..9025), value: StrSpan("testo_dialogo" 9027..9040), span: StrSpan("class=\"testo_dialogo\"" 9020..9041) }
token: ElementEnd { end: Open, span: StrSpan(">" 9041..9042) }
token: Text { text: StrSpan("Lo vedi che il sogno non ti basta gi√† pi√∫? E che credi al tuo sogno come fosse reale? Io ti supplico, Issione, non salire alla vetta. Pensa ai mostri e ai castighi. Altro da loro non pu√≤ uscire." 9042..9239) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9241..9242)), span: StrSpan("</p>" 9239..9243) }
token: Text { text: StrSpan("\n\n" 9243..9245) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9246..9247), span: StrSpan("<p" 9245..9247) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9248..9253), value: StrSpan("testo_personaggio testo_maiuscoletto" 9255..9291), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9248..9292) }
token: ElementEnd { end: Open, span: StrSpan(">" 9292..9293) }
token: Text { text: StrSpan("Issione." 9293..9301) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9303..9304)), span: StrSpan("</p>" 9301..9305) }
token: Text { text: StrSpan("\n" 9305..9306) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9307..9308), span: StrSpan("<p" 9306..9308) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9309..9314), value: StrSpan("testo_dialogo" 9316..9329), span: StrSpan("class=\"testo_dialogo\"" 9309..9330) }
token: ElementEnd { end: Open, span: StrSpan(">" 9330..9331) }
token: Text { text: StrSpan("Ho fatto ancora un altro sogno questa notte. C‚Äôeri anche tu, Nefele. Combattevamo coi Centauri. Avevo un figlio ch‚Äôera il figlio di una dea, non so quale. E mi pareva quel giovane che travers√≤ la foresta. Era pi√∫ forte anche di me, Nefele. I centauri fuggirono, e la montagna fu nostra. Tu ridevi, Nefele. Vedi che anche nel sogno, la mia sorte √® accettabile." 9331..9697) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9699..9700)), span: StrSpan("</p>" 9697..9701) }
token: Text { text: StrSpan("\n\n" 9701..9703) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9704..9705), span: StrSpan("<p" 9703..9705) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9706..9711), value: StrSpan("testo_personaggio testo_maiuscoletto" 9713..9749), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9706..9750) }
token: ElementEnd { end: Open, span: StrSpan(">" 9750..9751) }
token: Text { text: StrSpan("La Nube." 9751..9759) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9761..9762)), span: StrSpan("</p>" 9759..9763) }
token: Text { text: StrSpan("\n" 9763..9764) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9765..9766), span: StrSpan("<p" 9764..9766) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9767..9772), value: StrSpan("testo_dialogo" 9774..9787), span: StrSpan("class=\"testo_dialogo\"" 9767..9788) }
token: ElementEnd { end: Open, span: StrSpan(">" 9788..9789) }
token: Text { text: StrSpan("La tua sorte √® segnata. Non si sollevano impunemente gli occhi a una dea." 9789..9863) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9865..9866)), span: StrSpan("</p>" 9863..9867) }
token: Text { text: StrSpan("\n\n" 9867..9869) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9870..9871), span: StrSpan("<p" 9869..9871) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9872..9877), value: StrSpan("testo_personaggio testo_maiuscoletto" 9879..9915), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9872..9916) }
token: ElementEnd { end: Open, span: StrSpan(">" 9916..9917) }
token: Text { text: StrSpan("Issione." 9917..9925) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9927..9928)), span: StrSpan("</p>" 9925..9929) }
token: Text { text: StrSpan("\n" 9929..9930) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9931..9932), span: StrSpan("<p" 9930..9932) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9933..9938), value: StrSpan("testo_dialogo" 9940..9953), span: StrSpan("class=\"testo_dialogo\"" 9933..9954) }
token: ElementEnd { end: Open, span: StrSpan(">" 9954..9955) }
token: Text { text: StrSpan("Nemmeno a quella della quercia, la signora delle cime?" 9955..10009) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10011..10012)), span: StrSpan("</p>" 10009..10013) }
token: Text { text: StrSpan("\n\n" 10013..10015) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10016..10017), span: StrSpan("<p" 10015..10017) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10018..10023), value: StrSpan("testo_personaggio testo_maiuscoletto" 10025..10061), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10018..10062) }
token: ElementEnd { end: Open, span: StrSpan(">" 10062..10063) }
token: Text { text: StrSpan("La Nube." 10063..10071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10073..10074)), span: StrSpan("</p>" 10071..10075) }
token: Text { text: StrSpan("\n" 10075..10076) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10077..10078), span: StrSpan("<p" 10076..10078) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10079..10084), value: StrSpan("testo_dialogo" 10086..10099), span: StrSpan("class=\"testo_dialogo\"" 10079..10100) }
token: ElementEnd { end: Open, span: StrSpan(">" 10100..10101) }
token: Text { text: StrSpan("L‚Äôuna o l‚Äôaltra, Issione, non importa. Ma non temere. Star√≤ con te fino alla fine." 10101..10188) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10190..10191)), span: StrSpan("</p>" 10188..10192) }
token: Text { text: StrSpan("\n" 10192..10193) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 10195..10199)), span: StrSpan("</body>" 10193..10200) }
token: Text { text: StrSpan("\n" 10200..10201) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 10203..10207)), span: StrSpan("</html>" 10201..10208) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La Chimera" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Volentieri i giovani greci andavano a illustrarsi e morire in Oriente. Qui la loro virtuosa baldanza navigava in un mare di favolose atrocit√† cui non tutti seppero tener testa. Inutile far nomi. Del resto le Crociate furono molte pi√∫ di sette. Della tristezza che consunse nei tardi anni l‚Äôuccisore della Chimera, e del nipote Sarpedonte che mor√≠ giovane sotto Troia, ci parla nientemeno che Omero nel sesto dell‚Äô" 360..780) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("span" 781..785), span: StrSpan("<span" 780..785) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 786..791), value: StrSpan("testo_corsivo" 793..806), span: StrSpan("class=\"testo_corsivo\"" 786..807) }
token: ElementEnd { end: Open, span: StrSpan(">" 807..808) }
token: Text { text: StrSpan("Iliade" 808..814) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("span" 816..820)), span: StrSpan("</span>" 814..821) }
token: Text { text: StrSpan("." 821..822) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 824..825)), span: StrSpan("</p>" 822..826) }
token: Text { text: StrSpan("\n\n" 826..828) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 829..830), span: StrSpan("<p" 828..830) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 831..836), value: StrSpan("testo_indicazioni_scena" 838..861), span: StrSpan("class=\"testo_indicazioni_scena\"" 831..862) }
token: ElementEnd { end: Open, span: StrSpan(">" 862..863) }
token: Text { text: StrSpan("(parlano Ipp√≤loco e Sarpedonte)" 863..895) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 897..898)), span: StrSpan("</p>" 895..899) }
token: Text { text: StrSpan("\n\n" 899..901) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 902..903), span: StrSpan("<p" 901..903) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 904..909), value: StrSpan("testo_personaggio testo_maiuscoletto" 911..947), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 904..948) }
token: ElementEnd { end: Open, span: StrSpan(">" 948..949) }
token: Text { text: StrSpan("Ipp√≤loco." 949..959) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 961..962)), span: StrSpan("</p>" 959..963) }
token: Text { text: StrSpan("\n" 963..964) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 965..966), span: StrSpan("<p" 964..966) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 967..972), value: StrSpan("testo_dialogo" 974..987), span: StrSpan("class=\"testo_dialogo\"" 967..988) }
token: ElementEnd { end: Open, span: StrSpan(">" 988..989) }
token: Text { text: StrSpan("Eccoti, ragazzo." 989..1005) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1007..1008)), span: StrSpan("</p>" 1005..1009) }
token: Text { text: StrSpan("\n\n" 1009..1011) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1012..1013), span: StrSpan("<p" 1011..1013) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1014..1019), value: StrSpan("testo_personaggio testo_maiuscoletto" 1021..1057), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1014..1058) }
token: ElementEnd { end: Open, span: StrSpan(">" 1058..1059) }
token: Text { text: StrSpan("Sarpedonte." 1059..1070) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1072..1073)), span: StrSpan("</p>" 1070..1074) }
token: Text { text: StrSpan("\n" 1074..1075) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1076..1077), span: StrSpan("<p" 1075..1077) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1078..1083), value: StrSpan("testo_dialogo" 1085..1098), span: StrSpan("class=\"testo_dialogo\"" 1078..1099) }
token: ElementEnd { end: Open, span: StrSpan(">" 1099..1100) }
token: Text { text: StrSpan("Ho veduto tuo padre, Ipp√≤loco. Non vuol saperne di tornare. Passeggia brutto e testardo le campagne, e non cura le intemperie, n√© si lava. √à vecchio e pezzente, Ipp√≤loco." 1100..1274) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1276..1277)), span: StrSpan("</p>" 1274..1278) }
token: Text { text: StrSpan("\n\n" 1278..1280) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1281..1282), span: StrSpan("<p" 1280..1282) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1283..1288), value: StrSpan("testo_personaggio testo_maiuscoletto" 1290..1326), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1283..1327) }
token: ElementEnd { end: Open, span: StrSpan(">" 1327..1328) }
token: Text { text: StrSpan("Ipp√≤loco." 1328..1338) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1340..1341)), span: StrSpan("</p>" 1338..1342) }
token: Text { text: StrSpan("\n" 1342..1343) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1344..1345), span: StrSpan("<p" 1343..1345) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1346..1351), value: StrSpan("testo_dialogo" 1353..1366), span: StrSpan("class=\"testo_dialogo\"" 1346..1367) }
token: ElementEnd { end: Open, span: StrSpan(">" 1367..1368) }
token: Text { text: StrSpan("Di lui che dicono i villani?" 1368..1396) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1398..1399)), span: StrSpan("</p>" 1396..1400) }
token: Text { text: StrSpan("\n\n" 1400..1402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1403..1404), span: StrSpan("<p" 1402..1404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1405..1410), value: StrSpan("testo_personaggio testo_maiuscoletto" 1412..1448), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1405..1449) }
token: ElementEnd { end: Open, span: StrSpan(">" 1449..1450) }
token: Text { text: StrSpan("Sarpedonte." 1450..1461) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1463..1464)), span: StrSpan("</p>" 1461..1465) }
token: Text { text: StrSpan("\n" 1465..1466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1467..1468), span: StrSpan("<p" 1466..1468) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1469..1474), value: StrSpan("testo_dialogo" 1476..1489), span: StrSpan("class=\"testo_dialogo\"" 1469..1490) }
token: ElementEnd { end: Open, span: StrSpan(">" 1490..1491) }
token: Text { text: StrSpan("Il campo Aleio √® desolato, zio. Non ci sono che canne e paludi. Sul Xanto dove ho chiesto di lui, non l‚Äôavevano visto da giorni." 1491..1622) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1624..1625)), span: StrSpan("</p>" 1622..1626) }
token: Text { text: StrSpan("\n\n" 1626..1628) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1629..1630), span: StrSpan("<p" 1628..1630) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1631..1636), value: StrSpan("testo_personaggio testo_maiuscoletto" 1638..1674), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1631..1675) }
token: ElementEnd { end: Open, span: StrSpan(">" 1675..1676) }
token: Text { text: StrSpan("Ipp√≤loco." 1676..1686) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1688..1689)), span: StrSpan("</p>" 1686..1690) }
token: Text { text: StrSpan("\n" 1690..1691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1692..1693), span: StrSpan("<p" 1691..1693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1694..1699), value: StrSpan("testo_dialogo" 1701..1714), span: StrSpan("class=\"testo_dialogo\"" 1694..1715) }
token: ElementEnd { end: Open, span: StrSpan(">" 1715..1716) }
token: Text { text: StrSpan("E lui che dice?" 1716..1731) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1733..1734)), span: StrSpan("</p>" 1731..1735) }
token: Text { text: StrSpan("\n\n" 1735..1737) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1738..1739), span: StrSpan("<p" 1737..1739) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1740..1745), value: StrSpan("testo_personaggio testo_maiuscoletto" 1747..1783), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1740..1784) }
token: ElementEnd { end: Open, span: StrSpan(">" 1784..1785) }
token: Text { text: StrSpan("Sarpedonte." 1785..1796) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1798..1799)), span: StrSpan("</p>" 1796..1800) }
token: Text { text: StrSpan("\n" 1800..1801) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1802..1803), span: StrSpan("<p" 1801..1803) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1804..1809), value: StrSpan("testo_dialogo" 1811..1824), span: StrSpan("class=\"testo_dialogo\"" 1804..1825) }
token: ElementEnd { end: Open, span: StrSpan(">" 1825..1826) }
token: Text { text: StrSpan("Non ricorda n√© noi n√© le case. Quando incontra qualcuno, gli parla dei S√≤limi, e di Glauco, di S√≠sifo, della Chimera. Vedendomi ha detto: ¬´" 1826..1970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1971..1972), span: StrSpan("<q" 1970..1972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1973..1978), value: StrSpan("testo_no_virgolette" 1980..1999), span: StrSpan("class=\"testo_no_virgolette\"" 1973..2000) }
token: ElementEnd { end: Open, span: StrSpan(">" 2000..2001) }
token: Text { text: StrSpan("Ragazzo, s‚Äôio avessi i tuoi anni, mi sarei gi√† buttato a mare" 2001..2065) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2067..2068)), span: StrSpan("</q>" 2065..2069) }
token: Text { text: StrSpan("¬ª. Ma non minaccia anima viva. ¬´" 2069..2103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 2104..2105), span: StrSpan("<q" 2103..2105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2106..2111), value: StrSpan("testo_no_virgolette" 2113..2132), span: StrSpan("class=\"testo_no_virgolette\"" 2106..2133) }
token: ElementEnd { end: Open, span: StrSpan(">" 2133..2134) }
token: Text { text: StrSpan("Ragazzo" 2134..2141) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2143..2144)), span: StrSpan("</q>" 2141..2145) }
token: Text { text: StrSpan("¬ª mi ha detto, ¬´" 2145..2163) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 2164..2165), span: StrSpan("<q" 2163..2165) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2166..2171), value: StrSpan("testo_no_virgolette" 2173..2192), span: StrSpan("class=\"testo_no_virgolette\"" 2166..2193) }
token: ElementEnd { end: Open, span: StrSpan(">" 2193..2194) }
token: Text { text: StrSpan("tu sei giusto e pietoso. Siamo uomini giusti e pietosi. Se vuoi vivere giusto e pietoso, smetti di vivere" 2194..2299) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2301..2302)), span: StrSpan("</q>" 2299..2303) }
token: Text { text: StrSpan("¬ª." 2303..2306) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2308..2309)), span: StrSpan("</p>" 2306..2310) }
token: Text { text: StrSpan("\n\n" 2310..2312) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2313..2314), span: StrSpan("<p" 2312..2314) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2315..2320), value: StrSpan("testo_personaggio testo_maiuscoletto" 2322..2358), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2315..2359) }
token: ElementEnd { end: Open, span: StrSpan(">" 2359..2360) }
token: Text { text: StrSpan("Ipp√≤loco." 2360..2370) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2372..2373)), span: StrSpan("</p>" 2370..2374) }
token: Text { text: StrSpan("\n" 2374..2375) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2376..2377), span: StrSpan("<p" 2375..2377) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2378..2383), value: StrSpan("testo_dialogo" 2385..2398), span: StrSpan("class=\"testo_dialogo\"" 2378..2399) }
token: ElementEnd { end: Open, span: StrSpan(">" 2399..2400) }
token: Text { text: StrSpan("Davvero brontola e rimpiange a questo modo?" 2400..2443) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2445..2446)), span: StrSpan("</p>" 2443..2447) }
token: Text { text: StrSpan("\n\n" 2447..2449) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2450..2451), span: StrSpan("<p" 2449..2451) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2452..2457), value: StrSpan("testo_personaggio testo_maiuscoletto" 2459..2495), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2452..2496) }
token: ElementEnd { end: Open, span: StrSpan(">" 2496..2497) }
token: Text { text: StrSpan("Sarpedonte." 2497..2508) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2510..2511)), span: StrSpan("</p>" 2508..2512) }
token: Text { text: StrSpan("\n" 2512..2513) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2514..2515), span: StrSpan("<p" 2513..2515) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2516..2521), value: StrSpan("testo_dialogo" 2523..2536), span: StrSpan("class=\"testo_dialogo\"" 2516..2537) }
token: ElementEnd { end: Open, span: StrSpan(">" 2537..2538) }
token: Text { text: StrSpan("Dice cose minacciose e terribili. Chiama gli d√®i a misurarsi con lui. Giorno e notte, cammina. Ma non ingiuria n√© compiange che i morti ‚Äì o gli d√®i." 2538..2691) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2693..2694)), span: StrSpan("</p>" 2691..2695) }
token: Text { text: StrSpan("\n\n" 2695..2697) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2698..2699), span: StrSpan("<p" 2697..2699) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2700..2705), value: StrSpan("testo_personaggio testo_maiuscoletto" 2707..2743), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2700..2744) }
token: ElementEnd { end: Open, span: StrSpan(">" 2744..2745) }
token: Text { text: StrSpan("Ipp√≤loco." 2745..2755) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2757..2758)), span: StrSpan("</p>" 2755..2759) }
token: Text { text: StrSpan("\n" 2759..2760) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2761..2762), span: StrSpan("<p" 2760..2762) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2763..2768), value: StrSpan("testo_dialogo" 2770..2783), span: StrSpan("class=\"testo_dialogo\"" 2763..2784) }
token: ElementEnd { end: Open, span: StrSpan(">" 2784..2785) }
token: Text { text: StrSpan("Glauco e S√≠sifo, hai detto?" 2785..2813) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2815..2816)), span: StrSpan("</p>" 2813..2817) }
token: Text { text: StrSpan("\n\n" 2817..2819) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2820..2821), span: StrSpan("<p" 2819..2821) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2822..2827), value: StrSpan("testo_personaggio testo_maiuscoletto" 2829..2865), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2822..2866) }
token: ElementEnd { end: Open, span: StrSpan(">" 2866..2867) }
token: Text { text: StrSpan("Sarpedonte." 2867..2878) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2880..2881)), span: StrSpan("</p>" 2878..2882) }
token: Text { text: StrSpan("\n" 2882..2883) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2884..2885), span: StrSpan("<p" 2883..2885) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2886..2891), value: StrSpan("testo_dialogo" 2893..2906), span: StrSpan("class=\"testo_dialogo\"" 2886..2907) }
token: ElementEnd { end: Open, span: StrSpan(">" 2907..2908) }
token: Text { text: StrSpan("Dice che furono puniti a tradimento. Perch√© aspettare che invecchiassero, per sorprenderli tristi e caduchi? ¬´" 2908..3020) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3021..3022), span: StrSpan("<q" 3020..3022) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3023..3028), value: StrSpan("testo_no_virgolette" 3030..3049), span: StrSpan("class=\"testo_no_virgolette\"" 3023..3050) }
token: ElementEnd { end: Open, span: StrSpan(">" 3050..3051) }
token: Text { text: StrSpan("Bellerofonte" 3051..3063) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3065..3066)), span: StrSpan("</q>" 3063..3067) }
token: Text { text: StrSpan("¬ª dice, ¬´" 3067..3078) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3079..3080), span: StrSpan("<q" 3078..3080) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3081..3086), value: StrSpan("testo_no_virgolette" 3088..3107), span: StrSpan("class=\"testo_no_virgolette\"" 3081..3108) }
token: ElementEnd { end: Open, span: StrSpan(">" 3108..3109) }
token: Text { text: StrSpan("fu giusto e pietoso fin che il sangue gli corse nei muscoli. E adesso che √® vecchio e che √® solo, proprio adesso gli d√®i l‚Äôabbandonano?" 3109..3249) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3251..3252)), span: StrSpan("</q>" 3249..3253) }
token: Text { text: StrSpan("¬ª" 3253..3255) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3257..3258)), span: StrSpan("</p>" 3255..3259) }
token: Text { text: StrSpan("\n\n" 3259..3261) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3262..3263), span: StrSpan("<p" 3261..3263) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3264..3269), value: StrSpan("testo_personaggio testo_maiuscoletto" 3271..3307), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3264..3308) }
token: ElementEnd { end: Open, span: StrSpan(">" 3308..3309) }
token: Text { text: StrSpan("Ipp√≤loco." 3309..3319) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3321..3322)), span: StrSpan("</p>" 3319..3323) }
token: Text { text: StrSpan("\n" 3323..3324) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3325..3326), span: StrSpan("<p" 3324..3326) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3327..3332), value: StrSpan("testo_dialogo" 3334..3347), span: StrSpan("class=\"testo_dialogo\"" 3327..3348) }
token: ElementEnd { end: Open, span: StrSpan(">" 3348..3349) }
token: Text { text: StrSpan("Strana cosa, stupirsi di questo. E accusare gli d√®i di ci√≤ che tocca a tutti i vivi. Ma lui che cosa ha di comune con quei morti ‚Äì lui che fu sempre giusto?" 3349..3509) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3511..3512)), span: StrSpan("</p>" 3509..3513) }
token: Text { text: StrSpan("\n\n" 3513..3515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3516..3517), span: StrSpan("<p" 3515..3517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3518..3523), value: StrSpan("testo_personaggio testo_maiuscoletto" 3525..3561), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3518..3562) }
token: ElementEnd { end: Open, span: StrSpan(">" 3562..3563) }
token: Text { text: StrSpan("Sarpedonte." 3563..3574) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3576..3577)), span: StrSpan("</p>" 3574..3578) }
token: Text { text: StrSpan("\n" 3578..3579) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3580..3581), span: StrSpan("<p" 3579..3581) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3582..3587), value: StrSpan("testo_dialogo" 3589..3602), span: StrSpan("class=\"testo_dialogo\"" 3582..3603) }
token: ElementEnd { end: Open, span: StrSpan(">" 3603..3604) }
token: Text { text: StrSpan("Ascolta, Ipp√≤loco‚Ä¶ Anch‚Äôio mi son chiesto, vedendo quell‚Äôocchio smarrito, se parlavo con l‚Äôuomo che un tempo fu Bellerofonte. A tuo padre √® accaduto qualcosa. Non √® vecchio soltanto. Non √® soltanto triste e solo. Tuo padre sconta la Chimera." 3604..3857) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3859..3860)), span: StrSpan("</p>" 3857..3861) }
token: Text { text: StrSpan("\n\n" 3861..3863) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3864..3865), span: StrSpan("<p" 3863..3865) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3866..3871), value: StrSpan("testo_personaggio testo_maiuscoletto" 3873..3909), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3866..3910) }
token: ElementEnd { end: Open, span: StrSpan(">" 3910..3911) }
token: Text { text: StrSpan("Ipp√≤loco." 3911..3921) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3923..3924)), span: StrSpan("</p>" 3921..3925) }
token: Text { text: StrSpan("\n" 3925..3926) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3927..3928), span: StrSpan("<p" 3926..3928) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3929..3934), value: StrSpan("testo_dialogo" 3936..3949), span: StrSpan("class=\"testo_dialogo\"" 3929..3950) }
token: ElementEnd { end: Open, span: StrSpan(">" 3950..3951) }
token: Text { text: StrSpan("Sarpedonte, sei folle?" 3951..3973) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3975..3976)), span: StrSpan("</p>" 3973..3977) }
token: Text { text: StrSpan("\n\n" 3977..3979) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3980..3981), span: StrSpan("<p" 3979..3981) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3982..3987), value: StrSpan("testo_personaggio testo_maiuscoletto" 3989..4025), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3982..4026) }
token: ElementEnd { end: Open, span: StrSpan(">" 4026..4027) }
token: Text { text: StrSpan("Sarpedonte." 4027..4038) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4040..4041)), span: StrSpan("</p>" 4038..4042) }
token: Text { text: StrSpan("\n" 4042..4043) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4044..4045), span: StrSpan("<p" 4043..4045) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4046..4051), value: StrSpan("testo_dialogo" 4053..4066), span: StrSpan("class=\"testo_dialogo\"" 4046..4067) }
token: ElementEnd { end: Open, span: StrSpan(">" 4067..4068) }
token: Text { text: StrSpan("Tuo padre accusa l‚Äôingiustizia degli d√®i che hanno voluto che uccidesse la Chimera. ¬´" 4068..4157) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 4158..4159), span: StrSpan("<q" 4157..4159) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4160..4165), value: StrSpan("testo_no_virgolette" 4167..4186), span: StrSpan("class=\"testo_no_virgolette\"" 4160..4187) }
token: ElementEnd { end: Open, span: StrSpan(">" 4187..4188) }
token: Text { text: StrSpan("Da quel giorno" 4188..4202) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 4204..4205)), span: StrSpan("</q>" 4202..4206) }
token: Text { text: StrSpan("¬ª ripete, ¬´" 4206..4219) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 4220..4221), span: StrSpan("<q" 4219..4221) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4222..4227), value: StrSpan("testo_no_virgolette" 4229..4248), span: StrSpan("class=\"testo_no_virgolette\"" 4222..4249) }
token: ElementEnd { end: Open, span: StrSpan(">" 4249..4250) }
token: Text { text: StrSpan("che mi sono arrossato del sangue del mostro, non ho pi√∫ avuto vita vera. Ho cercato nemici, domato le Amazzoni, fatto strage dei S√≤limi, ho regnato sui Lici e piantato un giardino ‚Äì ma cos‚Äô√® tutto questo? Dov‚Äô√® un‚Äôaltra Chimera? Dov‚Äô√® la forza delle braccia che l‚Äôuccisero? Anche S√≠sifo e Glauco mio padre furon giovani e giusti ‚Äì poi entrambi invecchiando, gli d√®i li tradirono, li lasciarono imbestiarsi e morire. Chi una volta affront√≤ la Chimera, come pu√≤ rassegnarsi a morire?" 4250..4754) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 4756..4757)), span: StrSpan("</q>" 4754..4758) }
token: Text { text: StrSpan("¬ª Questo dice tuo padre, che fu un giorno Bellerofonte." 4758..4814) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4816..4817)), span: StrSpan("</p>" 4814..4818) }
token: Text { text: StrSpan("\n\n" 4818..4820) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4821..4822), span: StrSpan("<p" 4820..4822) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4823..4828), value: StrSpan("testo_personaggio testo_maiuscoletto" 4830..4866), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4823..4867) }
token: ElementEnd { end: Open, span: StrSpan(">" 4867..4868) }
token: Text { text: StrSpan("Ipp√≤loco." 4868..4878) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4880..4881)), span: StrSpan("</p>" 4878..4882) }
token: Text { text: StrSpan("\n" 4882..4883) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4884..4885), span: StrSpan("<p" 4883..4885) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4886..4891), value: StrSpan("testo_dialogo" 4893..4906), span: StrSpan("class=\"testo_dialogo\"" 4886..4907) }
token: ElementEnd { end: Open, span: StrSpan(">" 4907..4908) }
token: Text { text: StrSpan("Da S√≠sifo, che incaten√≤ il fanciullo T√†natos, a Glauco che nutriva i cavalli con uomini vivi, la nostra stirpe ne ha violati di confini. Ma questi son uomini antichi e di un tempo mostruoso. La Chimera fu l‚Äôultimo mostro che videro. La nostra terra ora √® giusta e pietosa." 4908..5186) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5188..5189)), span: StrSpan("</p>" 5186..5190) }
token: Text { text: StrSpan("\n\n" 5190..5192) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5193..5194), span: StrSpan("<p" 5192..5194) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5195..5200), value: StrSpan("testo_personaggio testo_maiuscoletto" 5202..5238), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5195..5239) }
token: ElementEnd { end: Open, span: StrSpan(">" 5239..5240) }
token: Text { text: StrSpan("Sarpedonte." 5240..5251) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5253..5254)), span: StrSpan("</p>" 5251..5255) }
token: Text { text: StrSpan("\n" 5255..5256) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5257..5258), span: StrSpan("<p" 5256..5258) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5259..5264), value: StrSpan("testo_dialogo" 5266..5279), span: StrSpan("class=\"testo_dialogo\"" 5259..5280) }
token: ElementEnd { end: Open, span: StrSpan(">" 5280..5281) }
token: Text { text: StrSpan("Tu credi, Ipp√≤loco? Credi che basti averla uccisa? Nostro padre ‚Äì lo posso chiamare cos√≠ ‚Äì dovrebbe saperlo. Eppure √® triste come un dio ‚Äì come un dio derelitto e canuto, e attraversa campagne e paludi parlando a quei morti." 5281..5514) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5516..5517)), span: StrSpan("</p>" 5514..5518) }
token: Text { text: StrSpan("\n\n" 5518..5520) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5521..5522), span: StrSpan("<p" 5520..5522) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5523..5528), value: StrSpan("testo_personaggio testo_maiuscoletto" 5530..5566), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5523..5567) }
token: ElementEnd { end: Open, span: StrSpan(">" 5567..5568) }
token: Text { text: StrSpan("Ipp√≤loco." 5568..5578) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5580..5581)), span: StrSpan("</p>" 5578..5582) }
token: Text { text: StrSpan("\n" 5582..5583) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5584..5585), span: StrSpan("<p" 5583..5585) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5586..5591), value: StrSpan("testo_dialogo" 5593..5606), span: StrSpan("class=\"testo_dialogo\"" 5586..5607) }
token: ElementEnd { end: Open, span: StrSpan(">" 5607..5608) }
token: Text { text: StrSpan("Ma che cosa gli manca, che cosa?" 5608..5640) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5642..5643)), span: StrSpan("</p>" 5640..5644) }
token: Text { text: StrSpan("\n\n" 5644..5646) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5647..5648), span: StrSpan("<p" 5646..5648) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5649..5654), value: StrSpan("testo_personaggio testo_maiuscoletto" 5656..5692), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5649..5693) }
token: ElementEnd { end: Open, span: StrSpan(">" 5693..5694) }
token: Text { text: StrSpan("Sarpedonte." 5694..5705) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5707..5708)), span: StrSpan("</p>" 5705..5709) }
token: Text { text: StrSpan("\n" 5709..5710) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5711..5712), span: StrSpan("<p" 5710..5712) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5713..5718), value: StrSpan("testo_dialogo" 5720..5733), span: StrSpan("class=\"testo_dialogo\"" 5713..5734) }
token: ElementEnd { end: Open, span: StrSpan(">" 5734..5735) }
token: Text { text: StrSpan("Gli manca il braccio che l‚Äôha uccisa. Gli manca l‚Äôorgoglio di Glauco e di S√≠sifo, proprio adesso che come i suoi padri √® giunto al limite, alla fine. La loro audacia lo travaglia. Sa che mai pi√∫ un‚Äôaltra Chimera lo aspetter√† in mezzo alle rupi. E chiama alla sfida gli d√®i." 5735..6019) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6021..6022)), span: StrSpan("</p>" 6019..6023) }
token: Text { text: StrSpan("\n\n" 6023..6025) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6026..6027), span: StrSpan("<p" 6025..6027) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6028..6033), value: StrSpan("testo_personaggio testo_maiuscoletto" 6035..6071), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6028..6072) }
token: ElementEnd { end: Open, span: StrSpan(">" 6072..6073) }
token: Text { text: StrSpan("Ipp√≤loco." 6073..6083) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6085..6086)), span: StrSpan("</p>" 6083..6087) }
token: Text { text: StrSpan("\n" 6087..6088) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6089..6090), span: StrSpan("<p" 6088..6090) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6091..6096), value: StrSpan("testo_dialogo" 6098..6111), span: StrSpan("class=\"testo_dialogo\"" 6091..6112) }
token: ElementEnd { end: Open, span: StrSpan(">" 6112..6113) }
token: Text { text: StrSpan("Sono suo figlio, Sarpedonte, ma non capisco queste cose. Sulla terra ormai fatta pietosa si dovrebbe invecchiare tranquilli. In un giovane, quasi un ragazzo, come te Sarpedonte, capisco il tumulto del sangue. Ma solo in un giovane. Ma per cause onorate. E non mettersi contro gli d√®i." 6113..6398) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6400..6401)), span: StrSpan("</p>" 6398..6402) }
token: Text { text: StrSpan("\n\n" 6402..6404) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6405..6406), span: StrSpan("<p" 6404..6406) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6407..6412), value: StrSpan("testo_personaggio testo_maiuscoletto" 6414..6450), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6407..6451) }
token: ElementEnd { end: Open, span: StrSpan(">" 6451..6452) }
token: Text { text: StrSpan("Sarpedonte." 6452..6463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6465..6466)), span: StrSpan("</p>" 6463..6467) }
token: Text { text: StrSpan("\n" 6467..6468) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6469..6470), span: StrSpan("<p" 6468..6470) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6471..6476), value: StrSpan("testo_dialogo" 6478..6491), span: StrSpan("class=\"testo_dialogo\"" 6471..6492) }
token: ElementEnd { end: Open, span: StrSpan(">" 6492..6493) }
token: Text { text: StrSpan("Ma lui sa cos‚Äô√® un giovane e un vecchio. Ha veduto altri giorni. Ha veduto gli d√®i, come noi ci vediamo. Narra cose terribili." 6493..6623) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6625..6626)), span: StrSpan("</p>" 6623..6627) }
token: Text { text: StrSpan("\n\n" 6627..6629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6630..6631), span: StrSpan("<p" 6629..6631) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6632..6637), value: StrSpan("testo_personaggio testo_maiuscoletto" 6639..6675), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6632..6676) }
token: ElementEnd { end: Open, span: StrSpan(">" 6676..6677) }
token: Text { text: StrSpan("Ipp√≤loco." 6677..6687) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6689..6690)), span: StrSpan("</p>" 6687..6691) }
token: Text { text: StrSpan("\n" 6691..6692) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6693..6694), span: StrSpan("<p" 6692..6694) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6695..6700), value: StrSpan("testo_dialogo" 6702..6715), span: StrSpan("class=\"testo_dialogo\"" 6695..6716) }
token: ElementEnd { end: Open, span: StrSpan(">" 6716..6717) }
token: Text { text: StrSpan("Hai potuto ascoltarlo?" 6717..6739) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6741..6742)), span: StrSpan("</p>" 6739..6743) }
token: Text { text: StrSpan("\n\n" 6743..6745) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6746..6747), span: StrSpan("<p" 6745..6747) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6748..6753), value: StrSpan("testo_personaggio testo_maiuscoletto" 6755..6791), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6748..6792) }
token: ElementEnd { end: Open, span: StrSpan(">" 6792..6793) }
token: Text { text: StrSpan("Sarpedonte." 6793..6804) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6806..6807)), span: StrSpan("</p>" 6804..6808) }
token: Text { text: StrSpan("\n" 6808..6809) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6810..6811), span: StrSpan("<p" 6809..6811) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6812..6817), value: StrSpan("testo_dialogo" 6819..6832), span: StrSpan("class=\"testo_dialogo\"" 6812..6833) }
token: ElementEnd { end: Open, span: StrSpan(">" 6833..6834) }
token: Text { text: StrSpan("O Ipp√≤loco, e chi non vorrebbe ascoltarlo? Bellerofonte ha visto cose che non accadono sovente." 6834..6930) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6932..6933)), span: StrSpan("</p>" 6930..6934) }
token: Text { text: StrSpan("\n\n" 6934..6936) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6937..6938), span: StrSpan("<p" 6936..6938) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6939..6944), value: StrSpan("testo_personaggio testo_maiuscoletto" 6946..6982), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6939..6983) }
token: ElementEnd { end: Open, span: StrSpan(">" 6983..6984) }
token: Text { text: StrSpan("Ipp√≤loco." 6984..6994) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6996..6997)), span: StrSpan("</p>" 6994..6998) }
token: Text { text: StrSpan("\n" 6998..6999) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7000..7001), span: StrSpan("<p" 6999..7001) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7002..7007), value: StrSpan("testo_dialogo" 7009..7022), span: StrSpan("class=\"testo_dialogo\"" 7002..7023) }
token: ElementEnd { end: Open, span: StrSpan(">" 7023..7024) }
token: Text { text: StrSpan("Lo so, Sarpedonte, lo so, ma quel mondo √® passato. Quand‚Äôero bambino, le narrava anche a me." 7024..7119) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7121..7122)), span: StrSpan("</p>" 7119..7123) }
token: Text { text: StrSpan("\n\n" 7123..7125) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7126..7127), span: StrSpan("<p" 7125..7127) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7128..7133), value: StrSpan("testo_personaggio testo_maiuscoletto" 7135..7171), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7128..7172) }
token: ElementEnd { end: Open, span: StrSpan(">" 7172..7173) }
token: Text { text: StrSpan("Sarpedonte." 7173..7184) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7186..7187)), span: StrSpan("</p>" 7184..7188) }
token: Text { text: StrSpan("\n" 7188..7189) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7190..7191), span: StrSpan("<p" 7189..7191) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7192..7197), value: StrSpan("testo_dialogo" 7199..7212), span: StrSpan("class=\"testo_dialogo\"" 7192..7213) }
token: ElementEnd { end: Open, span: StrSpan(">" 7213..7214) }
token: Text { text: StrSpan("Solamente che allora non parlava coi morti. A quel tempo eran favole. Oggi invece i destini che tocca diventano il suo." 7214..7333) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7335..7336)), span: StrSpan("</p>" 7333..7337) }
token: Text { text: StrSpan("\n\n" 7337..7339) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7340..7341), span: StrSpan("<p" 7339..7341) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7342..7347), value: StrSpan("testo_personaggio testo_maiuscoletto" 7349..7385), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7342..7386) }
token: ElementEnd { end: Open, span: StrSpan(">" 7386..7387) }
token: Text { text: StrSpan("Ipp√≤loco." 7387..7397) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7399..7400)), span: StrSpan("</p>" 7397..7401) }
token: Text { text: StrSpan("\n" 7401..7402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7403..7404), span: StrSpan("<p" 7402..7404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7405..7410), value: StrSpan("testo_dialogo" 7412..7425), span: StrSpan("class=\"testo_dialogo\"" 7405..7426) }
token: ElementEnd { end: Open, span: StrSpan(">" 7426..7427) }
token: Text { text: StrSpan("E che cosa racconta?" 7427..7447) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7449..7450)), span: StrSpan("</p>" 7447..7451) }
token: Text { text: StrSpan("\n\n" 7451..7453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7454..7455), span: StrSpan("<p" 7453..7455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7456..7461), value: StrSpan("testo_personaggio testo_maiuscoletto" 7463..7499), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7456..7500) }
token: ElementEnd { end: Open, span: StrSpan(">" 7500..7501) }
token: Text { text: StrSpan("Sarpedonte." 7501..7512) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7514..7515)), span: StrSpan("</p>" 7512..7516) }
token: Text { text: StrSpan("\n" 7516..7517) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7518..7519), span: StrSpan("<p" 7517..7519) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7520..7525), value: StrSpan("testo_dialogo" 7527..7540), span: StrSpan("class=\"testo_dialogo\"" 7520..7541) }
token: ElementEnd { end: Open, span: StrSpan(">" 7541..7542) }
token: Text { text: StrSpan("Sono fatti che sai. Ma non sai la freddezza, lo sguardo smarrito, come di chi non √® pi√∫ nulla e sa ogni cosa. Sono storie di Lidia e di Frigia, storie vecchie, senza giustizia n√© piet√†. Conosci quella del Sileno che un dio provoc√≤ alla sconfitta sul monte Celene, e poi uccise macellandolo, come il beccaio ammazza un capro? Dalla grotta ora sgorga un torrente come fosse il suo sangue. La storia della madre impietrata, fatta rupe che piange, perch√© piacque a una dea di ucciderle i figli a uno a uno, a frecciate? E la storia di Aracne, che per l‚Äôodio di Atena inorrid√≠ e divenne ragno? Sono cose che accaddero. Gli d√®i le hanno fatte." 7542..8189) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8191..8192)), span: StrSpan("</p>" 8189..8193) }
token: Text { text: StrSpan("\n\n" 8193..8195) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8196..8197), span: StrSpan("<p" 8195..8197) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8198..8203), value: StrSpan("testo_personaggio testo_maiuscoletto" 8205..8241), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8198..8242) }
token: ElementEnd { end: Open, span: StrSpan(">" 8242..8243) }
token: Text { text: StrSpan("Ipp√≤loco." 8243..8253) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8255..8256)), span: StrSpan("</p>" 8253..8257) }
token: Text { text: StrSpan("\n" 8257..8258) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8259..8260), span: StrSpan("<p" 8258..8260) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8261..8266), value: StrSpan("testo_dialogo" 8268..8281), span: StrSpan("class=\"testo_dialogo\"" 8261..8282) }
token: ElementEnd { end: Open, span: StrSpan(">" 8282..8283) }
token: Text { text: StrSpan("E sta bene. Che importa? Non serve pensarci. Di quei destini non rimane nulla." 8283..8361) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8363..8364)), span: StrSpan("</p>" 8361..8365) }
token: Text { text: StrSpan("\n\n" 8365..8367) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8368..8369), span: StrSpan("<p" 8367..8369) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8370..8375), value: StrSpan("testo_personaggio testo_maiuscoletto" 8377..8413), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8370..8414) }
token: ElementEnd { end: Open, span: StrSpan(">" 8414..8415) }
token: Text { text: StrSpan("Sarpedonte." 8415..8426) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8428..8429)), span: StrSpan("</p>" 8426..8430) }
token: Text { text: StrSpan("\n" 8430..8431) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8432..8433), span: StrSpan("<p" 8431..8433) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8434..8439), value: StrSpan("testo_dialogo" 8441..8454), span: StrSpan("class=\"testo_dialogo\"" 8434..8455) }
token: ElementEnd { end: Open, span: StrSpan(">" 8455..8456) }
token: Text { text: StrSpan("Rimane il torrente, la rupe, l‚Äôorrore. Rimangono i sogni. Bellerofonte non pu√≤ fare un passo senza urtare un cadavere, un odio, una pozza di sangue, dei tempi che tutto accadeva e non erano sogni. Il suo braccio a quel tempo pesava nel mondo e uccideva." 8456..8712) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8714..8715)), span: StrSpan("</p>" 8712..8716) }
token: Text { text: StrSpan("\n\n" 8716..8718) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8719..8720), span: StrSpan("<p" 8718..8720) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8721..8726), value: StrSpan("testo_personaggio testo_maiuscoletto" 8728..8764), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8721..8765) }
token: ElementEnd { end: Open, span: StrSpan(">" 8765..8766) }
token: Text { text: StrSpan("Ipp√≤loco." 8766..8776) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8778..8779)), span: StrSpan("</p>" 8776..8780) }
token: Text { text: StrSpan("\n" 8780..8781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8782..8783), span: StrSpan("<p" 8781..8783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8784..8789), value: StrSpan("testo_dialogo" 8791..8804), span: StrSpan("class=\"testo_dialogo\"" 8784..8805) }
token: ElementEnd { end: Open, span: StrSpan(">" 8805..8806) }
token: Text { text: StrSpan("Anche lui fu crudele, dunque." 8806..8835) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8837..8838)), span: StrSpan("</p>" 8835..8839) }
token: Text { text: StrSpan("\n\n" 8839..8841) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8842..8843), span: StrSpan("<p" 8841..8843) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8844..8849), value: StrSpan("testo_personaggio testo_maiuscoletto" 8851..8887), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8844..8888) }
token: ElementEnd { end: Open, span: StrSpan(">" 8888..8889) }
token: Text { text: StrSpan("Sarpedonte." 8889..8900) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8902..8903)), span: StrSpan("</p>" 8900..8904) }
token: Text { text: StrSpan("\n" 8904..8905) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8906..8907), span: StrSpan("<p" 8905..8907) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8908..8913), value: StrSpan("testo_dialogo" 8915..8928), span: StrSpan("class=\"testo_dialogo\"" 8908..8929) }
token: ElementEnd { end: Open, span: StrSpan(">" 8929..8930) }
token: Text { text: StrSpan("Era giusto e pietoso. Uccideva Chimere. E adesso che √® vecchio e che √® stanco, gli d√®i l‚Äôabbandonano." 8930..9036) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9038..9039)), span: StrSpan("</p>" 9036..9040) }
token: Text { text: StrSpan("\n\n" 9040..9042) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9043..9044), span: StrSpan("<p" 9042..9044) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9045..9050), value: StrSpan("testo_personaggio testo_maiuscoletto" 9052..9088), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9045..9089) }
token: ElementEnd { end: Open, span: StrSpan(">" 9089..9090) }
token: Text { text: StrSpan("Ipp√≤loco." 9090..9100) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9102..9103)), span: StrSpan("</p>" 9100..9104) }
token: Text { text: StrSpan("\n" 9104..9105) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9106..9107), span: StrSpan("<p" 9105..9107) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9108..9113), value: StrSpan("testo_dialogo" 9115..9128), span: StrSpan("class=\"testo_dialogo\"" 9108..9129) }
token: ElementEnd { end: Open, span: StrSpan(">" 9129..9130) }
token: Text { text: StrSpan("Per questo corre le campagne?" 9130..9159) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9161..9162)), span: StrSpan("</p>" 9159..9163) }
token: Text { text: StrSpan("\n\n" 9163..9165) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9166..9167), span: StrSpan("<p" 9165..9167) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9168..9173), value: StrSpan("testo_personaggio testo_maiuscoletto" 9175..9211), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9168..9212) }
token: ElementEnd { end: Open, span: StrSpan(">" 9212..9213) }
token: Text { text: StrSpan("Sarpedonte." 9213..9224) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9226..9227)), span: StrSpan("</p>" 9224..9228) }
token: Text { text: StrSpan("\n" 9228..9229) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9230..9231), span: StrSpan("<p" 9229..9231) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9232..9237), value: StrSpan("testo_dialogo" 9239..9252), span: StrSpan("class=\"testo_dialogo\"" 9232..9253) }
token: ElementEnd { end: Open, span: StrSpan(">" 9253..9254) }
token: Text { text: StrSpan("√à figliolo di Glauco e di S√≠sifo. Teme il capriccio e la ferocia degli d√®i. Si sente imbestiare e non vuole morire. ¬´" 9254..9375) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 9376..9377), span: StrSpan("<q" 9375..9377) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9378..9383), value: StrSpan("testo_no_virgolette" 9385..9404), span: StrSpan("class=\"testo_no_virgolette\"" 9378..9405) }
token: ElementEnd { end: Open, span: StrSpan(">" 9405..9406) }
token: Text { text: StrSpan("Ragazzo" 9406..9413) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 9415..9416)), span: StrSpan("</q>" 9413..9417) }
token: Text { text: StrSpan("¬ª mi dice, ¬´" 9417..9431) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 9432..9433), span: StrSpan("<q" 9431..9433) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9434..9439), value: StrSpan("testo_no_virgolette" 9441..9460), span: StrSpan("class=\"testo_no_virgolette\"" 9434..9461) }
token: ElementEnd { end: Open, span: StrSpan(">" 9461..9462) }
token: Text { text: StrSpan("quest‚Äô√® la beffa e il tradimento: prima ti tolgono ogni forza e poi si sdegnano se tu sarai meno che uomo. Se vuoi vivere, smetti di vivere‚Ä¶" 9462..9607) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 9609..9610)), span: StrSpan("</q>" 9607..9611) }
token: Text { text: StrSpan("¬ª" 9611..9613) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9615..9616)), span: StrSpan("</p>" 9613..9617) }
token: Text { text: StrSpan("\n\n" 9617..9619) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9620..9621), span: StrSpan("<p" 9619..9621) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9622..9627), value: StrSpan("testo_personaggio testo_maiuscoletto" 9629..9665), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9622..9666) }
token: ElementEnd { end: Open, span: StrSpan(">" 9666..9667) }
token: Text { text: StrSpan("Ipp√≤loco." 9667..9677) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9679..9680)), span: StrSpan("</p>" 9677..9681) }
token: Text { text: StrSpan("\n" 9681..9682) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9683..9684), span: StrSpan("<p" 9682..9684) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9685..9690), value: StrSpan("testo_dialogo" 9692..9705), span: StrSpan("class=\"testo_dialogo\"" 9685..9706) }
token: ElementEnd { end: Open, span: StrSpan(">" 9706..9707) }
token: Text { text: StrSpan("E perch√© non si uccide, lui che sa queste cose?" 9707..9755) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9757..9758)), span: StrSpan("</p>" 9755..9759) }
token: Text { text: StrSpan("\n\n" 9759..9761) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9762..9763), span: StrSpan("<p" 9761..9763) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9764..9769), value: StrSpan("testo_personaggio testo_maiuscoletto" 9771..9807), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9764..9808) }
token: ElementEnd { end: Open, span: StrSpan(">" 9808..9809) }
token: Text { text: StrSpan("Sarpedonte." 9809..9820) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9822..9823)), span: StrSpan("</p>" 9820..9824) }
token: Text { text: StrSpan("\n" 9824..9825) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9826..9827), span: StrSpan("<p" 9825..9827) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9828..9833), value: StrSpan("testo_dialogo" 9835..9848), span: StrSpan("class=\"testo_dialogo\"" 9828..9849) }
token: ElementEnd { end: Open, span: StrSpan(">" 9849..9850) }
token: Text { text: StrSpan("Nessuno si uccide. La morte √® destino. Non si pu√≤ che augurarsela, Ipp√≤loco." 9850..9929) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9931..9932)), span: StrSpan("</p>" 9929..9933) }
token: Text { text: StrSpan("\n" 9933..9934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 9936..9940)), span: StrSpan("</body>" 9934..9941) }
token: Text { text: StrSpan("\n" 9941..9942) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 9944..9948)), span: StrSpan("</html>" 9942..9949) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("I ciechi" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("Non c‚Äô√® vicenda di Tebe in cui manchi il cieco indovino Tiresia. Poco dopo questo colloquio cominciarono le sventure di Edipo ‚Äì vale a dire, gli si aprirono gli occhi, e lui stesso se li crep√≤ dall‚Äôorrore." 358..571) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 573..574)), span: StrSpan("</p>" 571..575) }
token: Text { text: StrSpan("\n\n" 575..577) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 578..579), span: StrSpan("<p" 577..579) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 580..585), value: StrSpan("testo_indicazioni_scena" 587..610), span: StrSpan("class=\"testo_indicazioni_scena\"" 580..611) }
token: ElementEnd { end: Open, span: StrSpan(">" 611..612) }
token: Text { text: StrSpan("(parlano Edipo e Tiresia)" 612..637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 639..640)), span: StrSpan("</p>" 637..641) }
token: Text { text: StrSpan("\n\n" 641..643) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 644..645), span: StrSpan("<p" 643..645) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 646..651), value: StrSpan("testo_personaggio testo_maiuscoletto" 653..689), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 646..690) }
token: ElementEnd { end: Open, span: StrSpan(">" 690..691) }
token: Text { text: StrSpan("Edipo." 691..697) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 699..700)), span: StrSpan("</p>" 697..701) }
token: Text { text: StrSpan("\n" 701..702) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 703..704), span: StrSpan("<p" 702..704) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 705..710), value: StrSpan("testo_dialogo" 712..725), span: StrSpan("class=\"testo_dialogo\"" 705..726) }
token: ElementEnd { end: Open, span: StrSpan(">" 726..727) }
token: Text { text: StrSpan("Vecchio Tiresia, devo credere a quel che si dice qui in Tebe, che ti hanno accecato gli d√®i per loro invidia?" 727..837) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 839..840)), span: StrSpan("</p>" 837..841) }
token: Text { text: StrSpan("\n\n" 841..843) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 844..845), span: StrSpan("<p" 843..845) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 846..851), value: StrSpan("testo_personaggio testo_maiuscoletto" 853..889), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 846..890) }
token: ElementEnd { end: Open, span: StrSpan(">" 890..891) }
token: Text { text: StrSpan("Tiresia." 891..899) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 901..902)), span: StrSpan("</p>" 899..903) }
token: Text { text: StrSpan("\n" 903..904) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 905..906), span: StrSpan("<p" 904..906) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 907..912), value: StrSpan("testo_dialogo" 914..927), span: StrSpan("class=\"testo_dialogo\"" 907..928) }
token: ElementEnd { end: Open, span: StrSpan(">" 928..929) }
token: Text { text: StrSpan("Se √® vero che tutto ci viene da loro, devi crederci." 929..982) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 984..985)), span: StrSpan("</p>" 982..986) }
token: Text { text: StrSpan("\n\n" 986..988) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 989..990), span: StrSpan("<p" 988..990) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 991..996), value: StrSpan("testo_personaggio testo_maiuscoletto" 998..1034), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 991..1035) }
token: ElementEnd { end: Open, span: StrSpan(">" 1035..1036) }
token: Text { text: StrSpan("Edipo." 1036..1042) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1044..1045)), span: StrSpan("</p>" 1042..1046) }
token: Text { text: StrSpan("\n" 1046..1047) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1048..1049), span: StrSpan("<p" 1047..1049) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1050..1055), value: StrSpan("testo_dialogo" 1057..1070), span: StrSpan("class=\"testo_dialogo\"" 1050..1071) }
token: ElementEnd { end: Open, span: StrSpan(">" 1071..1072) }
token: Text { text: StrSpan("Tu che dici?" 1072..1084) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1086..1087)), span: StrSpan("</p>" 1084..1088) }
token: Text { text: StrSpan("\n\n" 1088..1090) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1091..1092), span: StrSpan("<p" 1090..1092) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1093..1098), value: StrSpan("testo_personaggio testo_maiuscoletto" 1100..1136), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1093..1137) }
token: ElementEnd { end: Open, span: StrSpan(">" 1137..1138) }
token: Text { text: StrSpan("Tiresia." 1138..1146) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1148..1149)), span: StrSpan("</p>" 1146..1150) }
token: Text { text: StrSpan("\n" 1150..1151) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1152..1153), span: StrSpan("<p" 1151..1153) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1154..1159), value: StrSpan("testo_dialogo" 1161..1174), span: StrSpan("class=\"testo_dialogo\"" 1154..1175) }
token: ElementEnd { end: Open, span: StrSpan(">" 1175..1176) }
token: Text { text: StrSpan("Che degli d√®i si parla troppo. Esser cieco non √® una disgrazia diversa da esser vivo. Ho sempre visto le sventure toccare a suo tempo dove dovevano toccare." 1176..1334) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1336..1337)), span: StrSpan("</p>" 1334..1338) }
token: Text { text: StrSpan("\n\n" 1338..1340) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1341..1342), span: StrSpan("<p" 1340..1342) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1343..1348), value: StrSpan("testo_personaggio testo_maiuscoletto" 1350..1386), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1343..1387) }
token: ElementEnd { end: Open, span: StrSpan(">" 1387..1388) }
token: Text { text: StrSpan("Edipo." 1388..1394) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1396..1397)), span: StrSpan("</p>" 1394..1398) }
token: Text { text: StrSpan("\n" 1398..1399) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1400..1401), span: StrSpan("<p" 1399..1401) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1402..1407), value: StrSpan("testo_dialogo" 1409..1422), span: StrSpan("class=\"testo_dialogo\"" 1402..1423) }
token: ElementEnd { end: Open, span: StrSpan(">" 1423..1424) }
token: Text { text: StrSpan("Ma allora gli d√®i che ci fanno?" 1424..1456) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1458..1459)), span: StrSpan("</p>" 1456..1460) }
token: Text { text: StrSpan("\n\n" 1460..1462) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1463..1464), span: StrSpan("<p" 1462..1464) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1465..1470), value: StrSpan("testo_personaggio testo_maiuscoletto" 1472..1508), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1465..1509) }
token: ElementEnd { end: Open, span: StrSpan(">" 1509..1510) }
token: Text { text: StrSpan("Tiresia." 1510..1518) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1520..1521)), span: StrSpan("</p>" 1518..1522) }
token: Text { text: StrSpan("\n" 1522..1523) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1524..1525), span: StrSpan("<p" 1523..1525) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1526..1531), value: StrSpan("testo_dialogo" 1533..1546), span: StrSpan("class=\"testo_dialogo\"" 1526..1547) }
token: ElementEnd { end: Open, span: StrSpan(">" 1547..1548) }
token: Text { text: StrSpan("Il mondo √® pi√∫ vecchio di loro. Gi√† riempiva lo spazio e sanguinava, godeva, era l‚Äôunico dio ‚Äì quando il tempo non era ancor nato. Le cose stesse, regnavano allora. Accadevano cose ‚Äì adesso attraverso gli d√®i tutto √® fatto parole, illusione, minaccia. Ma gli d√®i posson dare fastidio, accostare o scostare le cose. Non toccarle, non mutarle. Sono venuti troppo tardi." 1548..1927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1929..1930)), span: StrSpan("</p>" 1927..1931) }
token: Text { text: StrSpan("\n\n" 1931..1933) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1934..1935), span: StrSpan("<p" 1933..1935) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1936..1941), value: StrSpan("testo_personaggio testo_maiuscoletto" 1943..1979), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1936..1980) }
token: ElementEnd { end: Open, span: StrSpan(">" 1980..1981) }
token: Text { text: StrSpan("Edipo." 1981..1987) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1989..1990)), span: StrSpan("</p>" 1987..1991) }
token: Text { text: StrSpan("\n" 1991..1992) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1993..1994), span: StrSpan("<p" 1992..1994) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1995..2000), value: StrSpan("testo_dialogo" 2002..2015), span: StrSpan("class=\"testo_dialogo\"" 1995..2016) }
token: ElementEnd { end: Open, span: StrSpan(">" 2016..2017) }
token: Text { text: StrSpan("Proprio tu, sacerdote, dici questo?" 2017..2052) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2054..2055)), span: StrSpan("</p>" 2052..2056) }
token: Text { text: StrSpan("\n\n" 2056..2058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2059..2060), span: StrSpan("<p" 2058..2060) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2061..2066), value: StrSpan("testo_personaggio testo_maiuscoletto" 2068..2104), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2061..2105) }
token: ElementEnd { end: Open, span: StrSpan(">" 2105..2106) }
token: Text { text: StrSpan("Tiresia." 2106..2114) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2116..2117)), span: StrSpan("</p>" 2114..2118) }
token: Text { text: StrSpan("\n" 2118..2119) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2120..2121), span: StrSpan("<p" 2119..2121) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2122..2127), value: StrSpan("testo_dialogo" 2129..2142), span: StrSpan("class=\"testo_dialogo\"" 2122..2143) }
token: ElementEnd { end: Open, span: StrSpan(">" 2143..2144) }
token: Text { text: StrSpan("Se non sapessi almeno questo, non sarei sacerdote. Prendi un ragazzo che si bagna nell‚ÄôAsopo. √à un mattino d‚Äôestate. Il ragazzo esce dall‚Äôacqua, ci ritorna felice, si tuffa e rituffa. Gli prende male e annega. Che cosa c‚Äôentrano gli d√®i? Dovr√† attribuire agli d√®i la sua fine, oppure il piacere goduto? N√© l‚Äôuno n√© l‚Äôaltro. √à accaduto qualcosa ‚Äì che non √® bene n√© male, qualcosa che non ha nome ‚Äì gli daranno poi un nome gli d√®i." 2144..2599) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2601..2602)), span: StrSpan("</p>" 2599..2603) }
token: Text { text: StrSpan("\n\n" 2603..2605) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2606..2607), span: StrSpan("<p" 2605..2607) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2608..2613), value: StrSpan("testo_personaggio testo_maiuscoletto" 2615..2651), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2608..2652) }
token: ElementEnd { end: Open, span: StrSpan(">" 2652..2653) }
token: Text { text: StrSpan("Edipo." 2653..2659) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2661..2662)), span: StrSpan("</p>" 2659..2663) }
token: Text { text: StrSpan("\n" 2663..2664) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2665..2666), span: StrSpan("<p" 2664..2666) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2667..2672), value: StrSpan("testo_dialogo" 2674..2687), span: StrSpan("class=\"testo_dialogo\"" 2667..2688) }
token: ElementEnd { end: Open, span: StrSpan(">" 2688..2689) }
token: Text { text: StrSpan("E dar il nome, spiegare le cose, ti par poco, Tiresia?" 2689..2743) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2745..2746)), span: StrSpan("</p>" 2743..2747) }
token: Text { text: StrSpan("\n\n" 2747..2749) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2750..2751), span: StrSpan("<p" 2749..2751) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2752..2757), value: StrSpan("testo_personaggio testo_maiuscoletto" 2759..2795), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2752..2796) }
token: ElementEnd { end: Open, span: StrSpan(">" 2796..2797) }
token: Text { text: StrSpan("Tiresia." 2797..2805) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2807..2808)), span: StrSpan("</p>" 2805..2809) }
token: Text { text: StrSpan("\n" 2809..2810) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2811..2812), span: StrSpan("<p" 2810..2812) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2813..2818), value: StrSpan("testo_dialogo" 2820..2833), span: StrSpan("class=\"testo_dialogo\"" 2813..2834) }
token: ElementEnd { end: Open, span: StrSpan(">" 2834..2835) }
token: Text { text: StrSpan("Tu sei giovane, Edipo, e come gli d√®i che sono giovani rischiari tu stesso le cose e le chiami. Non sai ancora che sotto la terra c‚Äô√® roccia e che il cielo pi√∫ azzurro √® il pi√∫ vuoto. Per chi come me non ci vede, tutte le cose sono un urto, non altro." 2835..3093) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3095..3096)), span: StrSpan("</p>" 3093..3097) }
token: Text { text: StrSpan("\n\n" 3097..3099) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3100..3101), span: StrSpan("<p" 3099..3101) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3102..3107), value: StrSpan("testo_personaggio testo_maiuscoletto" 3109..3145), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3102..3146) }
token: ElementEnd { end: Open, span: StrSpan(">" 3146..3147) }
token: Text { text: StrSpan("Edipo." 3147..3153) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3155..3156)), span: StrSpan("</p>" 3153..3157) }
token: Text { text: StrSpan("\n" 3157..3158) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3159..3160), span: StrSpan("<p" 3158..3160) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3161..3166), value: StrSpan("testo_dialogo" 3168..3181), span: StrSpan("class=\"testo_dialogo\"" 3161..3182) }
token: ElementEnd { end: Open, span: StrSpan(">" 3182..3183) }
token: Text { text: StrSpan("Ma sei pure vissuto praticando gli d√®i. Le stagioni, i piaceri, le miserie umane ti hanno a lungo occupato. Si racconta di te pi√∫ di una favola, come di un dio. E qualcuna cos√≠ strana, cos√≠ insolita, che dovr√† pure avere un senso ‚Äì magari quello delle nuvole nel cielo." 3183..3459) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3461..3462)), span: StrSpan("</p>" 3459..3463) }
token: Text { text: StrSpan("\n\n" 3463..3465) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3466..3467), span: StrSpan("<p" 3465..3467) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3468..3473), value: StrSpan("testo_personaggio testo_maiuscoletto" 3475..3511), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3468..3512) }
token: ElementEnd { end: Open, span: StrSpan(">" 3512..3513) }
token: Text { text: StrSpan("Tiresia." 3513..3521) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3523..3524)), span: StrSpan("</p>" 3521..3525) }
token: Text { text: StrSpan("\n" 3525..3526) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3527..3528), span: StrSpan("<p" 3526..3528) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3529..3534), value: StrSpan("testo_dialogo" 3536..3549), span: StrSpan("class=\"testo_dialogo\"" 3529..3550) }
token: ElementEnd { end: Open, span: StrSpan(">" 3550..3551) }
token: Text { text: StrSpan("Sono molto vissuto. Sono vissuto tanto che ogni storia che ascolto mi pare la mia. Che senso dici delle nuvole nel cielo?" 3551..3672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3674..3675)), span: StrSpan("</p>" 3672..3676) }
token: Text { text: StrSpan("\n\n" 3676..3678) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3679..3680), span: StrSpan("<p" 3678..3680) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3681..3686), value: StrSpan("testo_personaggio testo_maiuscoletto" 3688..3724), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3681..3725) }
token: ElementEnd { end: Open, span: StrSpan(">" 3725..3726) }
token: Text { text: StrSpan("Edipo." 3726..3732) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3734..3735)), span: StrSpan("</p>" 3732..3736) }
token: Text { text: StrSpan("\n" 3736..3737) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3738..3739), span: StrSpan("<p" 3737..3739) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3740..3745), value: StrSpan("testo_dialogo" 3747..3760), span: StrSpan("class=\"testo_dialogo\"" 3740..3761) }
token: ElementEnd { end: Open, span: StrSpan(">" 3761..3762) }
token: Text { text: StrSpan("Una presenza dentro il vuoto‚Ä¶" 3762..3793) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3795..3796)), span: StrSpan("</p>" 3793..3797) }
token: Text { text: StrSpan("\n\n" 3797..3799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3800..3801), span: StrSpan("<p" 3799..3801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3802..3807), value: StrSpan("testo_personaggio testo_maiuscoletto" 3809..3845), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3802..3846) }
token: ElementEnd { end: Open, span: StrSpan(">" 3846..3847) }
token: Text { text: StrSpan("Tiresia." 3847..3855) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3857..3858)), span: StrSpan("</p>" 3855..3859) }
token: Text { text: StrSpan("\n" 3859..3860) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3861..3862), span: StrSpan("<p" 3860..3862) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3863..3868), value: StrSpan("testo_dialogo" 3870..3883), span: StrSpan("class=\"testo_dialogo\"" 3863..3884) }
token: ElementEnd { end: Open, span: StrSpan(">" 3884..3885) }
token: Text { text: StrSpan("Ma qual‚Äô√® questa favola che tu credi abbia un senso?" 3885..3940) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3942..3943)), span: StrSpan("</p>" 3940..3944) }
token: Text { text: StrSpan("\n\n" 3944..3946) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3947..3948), span: StrSpan("<p" 3946..3948) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3949..3954), value: StrSpan("testo_personaggio testo_maiuscoletto" 3956..3992), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3949..3993) }
token: ElementEnd { end: Open, span: StrSpan(">" 3993..3994) }
token: Text { text: StrSpan("Edipo." 3994..4000) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4002..4003)), span: StrSpan("</p>" 4000..4004) }
token: Text { text: StrSpan("\n" 4004..4005) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4006..4007), span: StrSpan("<p" 4005..4007) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4008..4013), value: StrSpan("testo_dialogo" 4015..4028), span: StrSpan("class=\"testo_dialogo\"" 4008..4029) }
token: ElementEnd { end: Open, span: StrSpan(">" 4029..4030) }
token: Text { text: StrSpan("Sei sempre stato quel che sei, vecchio Tiresia?" 4030..4077) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4079..4080)), span: StrSpan("</p>" 4077..4081) }
token: Text { text: StrSpan("\n\n" 4081..4083) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4084..4085), span: StrSpan("<p" 4083..4085) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4086..4091), value: StrSpan("testo_personaggio testo_maiuscoletto" 4093..4129), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4086..4130) }
token: ElementEnd { end: Open, span: StrSpan(">" 4130..4131) }
token: Text { text: StrSpan("Tiresia." 4131..4139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4141..4142)), span: StrSpan("</p>" 4139..4143) }
token: Text { text: StrSpan("\n" 4143..4144) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4145..4146), span: StrSpan("<p" 4144..4146) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4147..4152), value: StrSpan("testo_dialogo" 4154..4167), span: StrSpan("class=\"testo_dialogo\"" 4147..4168) }
token: ElementEnd { end: Open, span: StrSpan(">" 4168..4169) }
token: Text { text: StrSpan("Ah ti afferro. La storia dei serpi. Quando fui donna per sette anni. Ebbene, che ci trovi in questa storia?" 4169..4276) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4278..4279)), span: StrSpan("</p>" 4276..4280) }
token: Text { text: StrSpan("\n\n" 4280..4282) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4283..4284), span: StrSpan("<p" 4282..4284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4285..4290), value: StrSpan("testo_personaggio testo_maiuscoletto" 4292..4328), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4285..4329) }
token: ElementEnd { end: Open, span: StrSpan(">" 4329..4330) }
token: Text { text: StrSpan("Edipo." 4330..4336) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4338..4339)), span: StrSpan("</p>" 4336..4340) }
token: Text { text: StrSpan("\n" 4340..4341) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4342..4343), span: StrSpan("<p" 4341..4343) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4344..4349), value: StrSpan("testo_dialogo" 4351..4364), span: StrSpan("class=\"testo_dialogo\"" 4344..4365) }
token: ElementEnd { end: Open, span: StrSpan(">" 4365..4366) }
token: Text { text: StrSpan("A te √® accaduto e tu lo sai. Ma senza un dio queste cose non accadono." 4366..4437) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4439..4440)), span: StrSpan("</p>" 4437..4441) }
token: Text { text: StrSpan("\n\n" 4441..4443) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4444..4445), span: StrSpan("<p" 4443..4445) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4446..4451), value: StrSpan("testo_personaggio testo_maiuscoletto" 4453..4489), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4446..4490) }
token: ElementEnd { end: Open, span: StrSpan(">" 4490..4491) }
token: Text { text: StrSpan("Tiresia." 4491..4499) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4501..4502)), span: StrSpan("</p>" 4499..4503) }
token: Text { text: StrSpan("\n" 4503..4504) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4505..4506), span: StrSpan("<p" 4504..4506) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4507..4512), value: StrSpan("testo_dialogo" 4514..4527), span: StrSpan("class=\"testo_dialogo\"" 4507..4528) }
token: ElementEnd { end: Open, span: StrSpan(">" 4528..4529) }
token: Text { text: StrSpan("Tu credi? Tutto pu√≤ accadere sulla terra. Non c‚Äô√® nulla d‚Äôinsolito. A quel tempo provavo disgusto delle cose del sesso ‚Äì mi pareva che lo spirito, la santit√†, il mio carattere, ne fossero avviliti. Quando vidi i due serpi godersi e mordersi sul muschio, non potei trattenere il mio dispetto: li toccai col bastone. Poco dopo, ero donna ‚Äì e per anni il mio orgoglio fu costretto a subire. Le cose del mondo sono roccia, Edipo." 4529..4965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4967..4968)), span: StrSpan("</p>" 4965..4969) }
token: Text { text: StrSpan("\n\n" 4969..4971) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4972..4973), span: StrSpan("<p" 4971..4973) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4974..4979), value: StrSpan("testo_personaggio testo_maiuscoletto" 4981..5017), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4974..5018) }
token: ElementEnd { end: Open, span: StrSpan(">" 5018..5019) }
token: Text { text: StrSpan("Edipo." 5019..5025) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5027..5028)), span: StrSpan("</p>" 5025..5029) }
token: Text { text: StrSpan("\n" 5029..5030) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5031..5032), span: StrSpan("<p" 5030..5032) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5033..5038), value: StrSpan("testo_dialogo" 5040..5053), span: StrSpan("class=\"testo_dialogo\"" 5033..5054) }
token: ElementEnd { end: Open, span: StrSpan(">" 5054..5055) }
token: Text { text: StrSpan("Ma √® davvero cos√≠ vile il sesso della donna?" 5055..5101) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5103..5104)), span: StrSpan("</p>" 5101..5105) }
token: Text { text: StrSpan("\n\n" 5105..5107) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5108..5109), span: StrSpan("<p" 5107..5109) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5110..5115), value: StrSpan("testo_personaggio testo_maiuscoletto" 5117..5153), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5110..5154) }
token: ElementEnd { end: Open, span: StrSpan(">" 5154..5155) }
token: Text { text: StrSpan("Tiresia." 5155..5163) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5165..5166)), span: StrSpan("</p>" 5163..5167) }
token: Text { text: StrSpan("\n" 5167..5168) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5169..5170), span: StrSpan("<p" 5168..5170) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5171..5176), value: StrSpan("testo_dialogo" 5178..5191), span: StrSpan("class=\"testo_dialogo\"" 5171..5192) }
token: ElementEnd { end: Open, span: StrSpan(">" 5192..5193) }
token: Text { text: StrSpan("Nient‚Äôaffatto. Non ci sono cose vili se non per gli d√®i. Ci sono fastidi, disgusti e illusioni che, toccando la roccia, dileguano. Qui la roccia fu la forza del sesso, la sua ubiquit√† e onnipresenza sotto tutte le forme e i mutamenti. Da uomo a donna, e viceversa (sett‚Äôanni dopo rividi i due serpi), quel che non volli consentire con lo spirito mi venne fatto per violenza o per libidine, e io, uomo sdegnoso o donna avvilita, mi scatenai come una donna e fui abbietto come un uomo, e seppi ogni cosa del sesso: giunsi al punto che uomo cercavo gli uomini e donna le donne." 5193..5773) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5775..5776)), span: StrSpan("</p>" 5773..5777) }
token: Text { text: StrSpan("\n\n" 5777..5779) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5780..5781), span: StrSpan("<p" 5779..5781) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5782..5787), value: StrSpan("testo_personaggio testo_maiuscoletto" 5789..5825), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5782..5826) }
token: ElementEnd { end: Open, span: StrSpan(">" 5826..5827) }
token: Text { text: StrSpan("Edipo." 5827..5833) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5835..5836)), span: StrSpan("</p>" 5833..5837) }
token: Text { text: StrSpan("\n" 5837..5838) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5839..5840), span: StrSpan("<p" 5838..5840) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5841..5846), value: StrSpan("testo_dialogo" 5848..5861), span: StrSpan("class=\"testo_dialogo\"" 5841..5862) }
token: ElementEnd { end: Open, span: StrSpan(">" 5862..5863) }
token: Text { text: StrSpan("Vedi dunque che un dio ti ha insegnato qualcosa." 5863..5911) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5913..5914)), span: StrSpan("</p>" 5911..5915) }
token: Text { text: StrSpan("\n\n" 5915..5917) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5918..5919), span: StrSpan("<p" 5917..5919) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5920..5925), value: StrSpan("testo_personaggio testo_maiuscoletto" 5927..5963), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5920..5964) }
token: ElementEnd { end: Open, span: StrSpan(">" 5964..5965) }
token: Text { text: StrSpan("Tiresia." 5965..5973) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5975..5976)), span: StrSpan("</p>" 5973..5977) }
token: Text { text: StrSpan("\n" 5977..5978) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5979..5980), span: StrSpan("<p" 5978..5980) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5981..5986), value: StrSpan("testo_dialogo" 5988..6001), span: StrSpan("class=\"testo_dialogo\"" 5981..6002) }
token: ElementEnd { end: Open, span: StrSpan(">" 6002..6003) }
token: Text { text: StrSpan("Non c‚Äô√® dio sopra il sesso. √à la roccia, ti dico. Molti d√®i sono belve, ma il serpe √® il pi√∫ antico di tutti gli d√®i. Quando si appiatta nella terra, ecco hai l‚Äôimmagine del sesso. C‚Äô√® in esso la vita e la morte. Quale dio pu√≤ incarnare e comprendere tanto?" 6003..6274) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6276..6277)), span: StrSpan("</p>" 6274..6278) }
token: Text { text: StrSpan("\n\n" 6278..6280) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6281..6282), span: StrSpan("<p" 6280..6282) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6283..6288), value: StrSpan("testo_personaggio testo_maiuscoletto" 6290..6326), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6283..6327) }
token: ElementEnd { end: Open, span: StrSpan(">" 6327..6328) }
token: Text { text: StrSpan("Edipo." 6328..6334) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6336..6337)), span: StrSpan("</p>" 6334..6338) }
token: Text { text: StrSpan("\n" 6338..6339) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6340..6341), span: StrSpan("<p" 6339..6341) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6342..6347), value: StrSpan("testo_dialogo" 6349..6362), span: StrSpan("class=\"testo_dialogo\"" 6342..6363) }
token: ElementEnd { end: Open, span: StrSpan(">" 6363..6364) }
token: Text { text: StrSpan("Ma tu stesso. L‚Äôhai detto." 6364..6392) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6394..6395)), span: StrSpan("</p>" 6392..6396) }
token: Text { text: StrSpan("\n\n" 6396..6398) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6399..6400), span: StrSpan("<p" 6398..6400) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6401..6406), value: StrSpan("testo_personaggio testo_maiuscoletto" 6408..6444), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6401..6445) }
token: ElementEnd { end: Open, span: StrSpan(">" 6445..6446) }
token: Text { text: StrSpan("Tiresia." 6446..6454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6456..6457)), span: StrSpan("</p>" 6454..6458) }
token: Text { text: StrSpan("\n" 6458..6459) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6460..6461), span: StrSpan("<p" 6459..6461) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6462..6467), value: StrSpan("testo_dialogo" 6469..6482), span: StrSpan("class=\"testo_dialogo\"" 6462..6483) }
token: ElementEnd { end: Open, span: StrSpan(">" 6483..6484) }
token: Text { text: StrSpan("Tiresia √® vecchio e non √® un dio. Quand‚Äôera giovane, ignorava. Il sesso √® ambiguo e sempre equivoco. √à una met√† che appare un tutto. L‚Äôuomo arriva a incarnarselo, a viverci dentro come il buon nuotatore nell‚Äôacqua, ma intanto √® invecchiato, ha toccato la roccia. Alla fine un‚Äôidea, un‚Äôillusione gli resta: che l‚Äôaltro sesso ne esca sazio. Ebbene, non crederci: io so che per tutti √® una vana fatica." 6484..6902) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6904..6905)), span: StrSpan("</p>" 6902..6906) }
token: Text { text: StrSpan("\n\n" 6906..6908) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6909..6910), span: StrSpan("<p" 6908..6910) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6911..6916), value: StrSpan("testo_personaggio testo_maiuscoletto" 6918..6954), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6911..6955) }
token: ElementEnd { end: Open, span: StrSpan(">" 6955..6956) }
token: Text { text: StrSpan("Edipo." 6956..6962) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6964..6965)), span: StrSpan("</p>" 6962..6966) }
token: Text { text: StrSpan("\n" 6966..6967) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6968..6969), span: StrSpan("<p" 6967..6969) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6970..6975), value: StrSpan("testo_dialogo" 6977..6990), span: StrSpan("class=\"testo_dialogo\"" 6970..6991) }
token: ElementEnd { end: Open, span: StrSpan(">" 6991..6992) }
token: Text { text: StrSpan("Ribattere a quanto tu dici non √® facile. Non per nulla la tua storia comincia coi serpi. Ma comincia pure col disgusto, col fastidio del sesso. E che diresti a un uomo valido che ti giurasse d‚Äôignorare il disgusto?" 6992..7209) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7211..7212)), span: StrSpan("</p>" 7209..7213) }
token: Text { text: StrSpan("\n\n" 7213..7215) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7216..7217), span: StrSpan("<p" 7215..7217) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7218..7223), value: StrSpan("testo_personaggio testo_maiuscoletto" 7225..7261), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7218..7262) }
token: ElementEnd { end: Open, span: StrSpan(">" 7262..7263) }
token: Text { text: StrSpan("Tiresia." 7263..7271) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7273..7274)), span: StrSpan("</p>" 7271..7275) }
token: Text { text: StrSpan("\n" 7275..7276) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7277..7278), span: StrSpan("<p" 7276..7278) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7279..7284), value: StrSpan("testo_dialogo" 7286..7299), span: StrSpan("class=\"testo_dialogo\"" 7279..7300) }
token: ElementEnd { end: Open, span: StrSpan(">" 7300..7301) }
token: Text { text: StrSpan("Che non √® un uomo valido ‚Äì √® ancora un bambino." 7301..7352) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7354..7355)), span: StrSpan("</p>" 7352..7356) }
token: Text { text: StrSpan("\n\n" 7356..7358) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7359..7360), span: StrSpan("<p" 7358..7360) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7361..7366), value: StrSpan("testo_personaggio testo_maiuscoletto" 7368..7404), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7361..7405) }
token: ElementEnd { end: Open, span: StrSpan(">" 7405..7406) }
token: Text { text: StrSpan("Edipo." 7406..7412) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7414..7415)), span: StrSpan("</p>" 7412..7416) }
token: Text { text: StrSpan("\n" 7416..7417) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7418..7419), span: StrSpan("<p" 7417..7419) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7420..7425), value: StrSpan("testo_dialogo" 7427..7440), span: StrSpan("class=\"testo_dialogo\"" 7420..7441) }
token: ElementEnd { end: Open, span: StrSpan(">" 7441..7442) }
token: Text { text: StrSpan("Anch‚Äôio, Tiresia, ho fatto incontri sulla strada di Tebe. E in uno di questi si √® parlato dell‚Äôuomo ‚Äì dall‚Äôinfanzia alla morte ‚Äì si √® toccata la roccia anche noi. Da quel giorno fui marito e fui padre, e re di Tebe. Non c‚Äô√® nulla d‚Äôambiguo o di vano, per me, nei miei giorni." 7442..7734) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7736..7737)), span: StrSpan("</p>" 7734..7738) }
token: Text { text: StrSpan("\n\n" 7738..7740) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7741..7742), span: StrSpan("<p" 7740..7742) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7743..7748), value: StrSpan("testo_personaggio testo_maiuscoletto" 7750..7786), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7743..7787) }
token: ElementEnd { end: Open, span: StrSpan(">" 7787..7788) }
token: Text { text: StrSpan("Tiresia." 7788..7796) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7798..7799)), span: StrSpan("</p>" 7796..7800) }
token: Text { text: StrSpan("\n" 7800..7801) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7802..7803), span: StrSpan("<p" 7801..7803) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7804..7809), value: StrSpan("testo_dialogo" 7811..7824), span: StrSpan("class=\"testo_dialogo\"" 7804..7825) }
token: ElementEnd { end: Open, span: StrSpan(">" 7825..7826) }
token: Text { text: StrSpan("Non sei il solo, Edipo, a creder questo. Ma la roccia non si tocca a parole. Che gli d√®i ti proteggano. Anch‚Äôio ti parlo e sono vecchio. Soltanto il cieco sa la tenebra. Mi pare di vivere fuori del tempo, di esser sempre vissuto, e non credo pi√∫ ai giorni. Anche in me c‚Äô√® qualcosa che gode e che sanguina." 7826..8139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8141..8142)), span: StrSpan("</p>" 8139..8143) }
token: Text { text: StrSpan("\n\n" 8143..8145) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8146..8147), span: StrSpan("<p" 8145..8147) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8148..8153), value: StrSpan("testo_personaggio testo_maiuscoletto" 8155..8191), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8148..8192) }
token: ElementEnd { end: Open, span: StrSpan(">" 8192..8193) }
token: Text { text: StrSpan("Edipo." 8193..8199) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8201..8202)), span: StrSpan("</p>" 8199..8203) }
token: Text { text: StrSpan("\n" 8203..8204) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8205..8206), span: StrSpan("<p" 8204..8206) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8207..8212), value: StrSpan("testo_dialogo" 8214..8227), span: StrSpan("class=\"testo_dialogo\"" 8207..8228) }
token: ElementEnd { end: Open, span: StrSpan(">" 8228..8229) }
token: Text { text: StrSpan("Dicevi che questo qualcosa era un dio. Perch√©, buon Tiresia, non provi a pregarlo?" 8229..8312) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8314..8315)), span: StrSpan("</p>" 8312..8316) }
token: Text { text: StrSpan("\n\n" 8316..8318) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8319..8320), span: StrSpan("<p" 8318..8320) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8321..8326), value: StrSpan("testo_personaggio testo_maiuscoletto" 8328..8364), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8321..8365) }
token: ElementEnd { end: Open, span: StrSpan(">" 8365..8366) }
token: Text { text: StrSpan("Tiresia." 8366..8374) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8376..8377)), span: StrSpan("</p>" 8374..8378) }
token: Text { text: StrSpan("\n" 8378..8379) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8380..8381), span: StrSpan("<p" 8379..8381) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8382..8387), value: StrSpan("testo_dialogo" 8389..8402), span: StrSpan("class=\"testo_dialogo\"" 8382..8403) }
token: ElementEnd { end: Open, span: StrSpan(">" 8403..8404) }
token: Text { text: StrSpan("Tutti preghiamo qualche dio, ma quel che accade non ha nome. Il ragazzo annegato un mattino d‚Äôestate, cosa sa degli d√®i? Che gli giova pregare? C‚Äô√® un grosso serpe in ogni giorno della vita, e si appiatta e ci guarda. Ti sei mai chiesto, Edipo, perch√© gli infelici invecchiandosi accecano?" 8404..8700) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8702..8703)), span: StrSpan("</p>" 8700..8704) }
token: Text { text: StrSpan("\n\n" 8704..8706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8707..8708), span: StrSpan("<p" 8706..8708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8709..8714), value: StrSpan("testo_personaggio testo_maiuscoletto" 8716..8752), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8709..8753) }
token: ElementEnd { end: Open, span: StrSpan(">" 8753..8754) }
token: Text { text: StrSpan("Edipo." 8754..8760) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8762..8763)), span: StrSpan("</p>" 8760..8764) }
token: Text { text: StrSpan("\n" 8764..8765) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8766..8767), span: StrSpan("<p" 8765..8767) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8768..8773), value: StrSpan("testo_dialogo" 8775..8788), span: StrSpan("class=\"testo_dialogo\"" 8768..8789) }
token: ElementEnd { end: Open, span: StrSpan(">" 8789..8790) }
token: Text { text: StrSpan("Prego gli d√®i che non mi accada." 8790..8823) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8825..8826)), span: StrSpan("</p>" 8823..8827) }
token: Text { text: StrSpan("\n" 8827..8828) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8830..8834)), span: StrSpan("</body>" 8828..8835) }
token: Text { text: StrSpan("\n" 8835..8836) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8838..8842)), span: StrSpan("</html>" 8836..8843) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Le cavalle" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Di Ermete, dio ambiguo tra la vita e la morte, tra il sesso e lo spirito, fra i Titani e gli d√®i dell‚ÄôOlimpo, non √® il caso di parlare. Ma che cosa significhi che il buon medico Asclepio esca da un mondo di divine metamorfosi bestiali, vale invece la pena di dirlo." 360..629) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 631..632)), span: StrSpan("</p>" 629..633) }
token: Text { text: StrSpan("\n\n" 633..635) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 636..637), span: StrSpan("<p" 635..637) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 638..643), value: StrSpan("testo_indicazioni_scena" 645..668), span: StrSpan("class=\"testo_indicazioni_scena\"" 638..669) }
token: ElementEnd { end: Open, span: StrSpan(">" 669..670) }
token: Text { text: StrSpan("(parlano Ermete ctonio e il centauro Chirone)" 670..715) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 717..718)), span: StrSpan("</p>" 715..719) }
token: Text { text: StrSpan("\n\n" 719..721) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 722..723), span: StrSpan("<p" 721..723) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 724..729), value: StrSpan("testo_personaggio testo_maiuscoletto" 731..767), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 724..768) }
token: ElementEnd { end: Open, span: StrSpan(">" 768..769) }
token: Text { text: StrSpan("Ermete." 769..776) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 778..779)), span: StrSpan("</p>" 776..780) }
token: Text { text: StrSpan("\n" 780..781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 782..783), span: StrSpan("<p" 781..783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 784..789), value: StrSpan("testo_dialogo" 791..804), span: StrSpan("class=\"testo_dialogo\"" 784..805) }
token: ElementEnd { end: Open, span: StrSpan(">" 805..806) }
token: Text { text: StrSpan("Il Dio ti chiede di allevare questo figlio, Chirone. Gi√† sai della morte della bella Cor√≤nide. L‚Äôha strappato il Dio dalle fiamme e dal grembo di lei con le mani immortali. Io fui chiamato presso il triste corpo umano che gi√† ardeva ‚Äì i capelli avvampavano come paglia di grano. Ma l‚Äôombra nemmeno mi attese. Con un salto, dal rogo scomparve nell‚ÄôAde." 806..1168) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1170..1171)), span: StrSpan("</p>" 1168..1172) }
token: Text { text: StrSpan("\n\n" 1172..1174) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1175..1176), span: StrSpan("<p" 1174..1176) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1177..1182), value: StrSpan("testo_personaggio testo_maiuscoletto" 1184..1220), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1177..1221) }
token: ElementEnd { end: Open, span: StrSpan(">" 1221..1222) }
token: Text { text: StrSpan("Chirone." 1222..1230) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1232..1233)), span: StrSpan("</p>" 1230..1234) }
token: Text { text: StrSpan("\n" 1234..1235) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1236..1237), span: StrSpan("<p" 1235..1237) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1238..1243), value: StrSpan("testo_dialogo" 1245..1258), span: StrSpan("class=\"testo_dialogo\"" 1238..1259) }
token: ElementEnd { end: Open, span: StrSpan(">" 1259..1260) }
token: Text { text: StrSpan("Torn√≤ puledra nel trapasso?" 1260..1288) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1290..1291)), span: StrSpan("</p>" 1288..1292) }
token: Text { text: StrSpan("\n\n" 1292..1294) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1295..1296), span: StrSpan("<p" 1294..1296) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1297..1302), value: StrSpan("testo_personaggio testo_maiuscoletto" 1304..1340), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1297..1341) }
token: ElementEnd { end: Open, span: StrSpan(">" 1341..1342) }
token: Text { text: StrSpan("Ermete." 1342..1349) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1351..1352)), span: StrSpan("</p>" 1349..1353) }
token: Text { text: StrSpan("\n" 1353..1354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1355..1356), span: StrSpan("<p" 1354..1356) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1357..1362), value: StrSpan("testo_dialogo" 1364..1377), span: StrSpan("class=\"testo_dialogo\"" 1357..1378) }
token: ElementEnd { end: Open, span: StrSpan(">" 1378..1379) }
token: Text { text: StrSpan("Cos√≠ credo. Ma le fiamme e le vostre criniere si somigliano troppo. Non feci in tempo a sincerarmene. Dovetti afferrare il bambino per portarlo quass√∫." 1379..1532) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1534..1535)), span: StrSpan("</p>" 1532..1536) }
token: Text { text: StrSpan("\n\n" 1536..1538) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1539..1540), span: StrSpan("<p" 1538..1540) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1541..1546), value: StrSpan("testo_personaggio testo_maiuscoletto" 1548..1584), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1541..1585) }
token: ElementEnd { end: Open, span: StrSpan(">" 1585..1586) }
token: Text { text: StrSpan("Chirone." 1586..1594) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1596..1597)), span: StrSpan("</p>" 1594..1598) }
token: Text { text: StrSpan("\n" 1598..1599) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1600..1601), span: StrSpan("<p" 1599..1601) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1602..1607), value: StrSpan("testo_dialogo" 1609..1622), span: StrSpan("class=\"testo_dialogo\"" 1602..1623) }
token: ElementEnd { end: Open, span: StrSpan(">" 1623..1624) }
token: Text { text: StrSpan("Bimbetto, era meglio se restavi nel fuoco. Tu non hai nulla di tua madre se non la triste forma umana. Tu sei figliolo di una luce abbacinante ma crudele, e dovrai vivere in un mondo di ombra esangue e angosciosa, di carne corrotta, di sospiri e di febbri ‚Äì tutto ti viene dal Radioso. La stessa luce che ti ha fatto frugher√† il mondo, implacabile, e dappertutto ti mostrer√† la tristezza, la piaga, la vilt√† delle cose. Su di te veglieranno i serpenti." 1624..2081) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2083..2084)), span: StrSpan("</p>" 2081..2085) }
token: Text { text: StrSpan("\n\n" 2085..2087) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2088..2089), span: StrSpan("<p" 2087..2089) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2090..2095), value: StrSpan("testo_personaggio testo_maiuscoletto" 2097..2133), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2090..2134) }
token: ElementEnd { end: Open, span: StrSpan(">" 2134..2135) }
token: Text { text: StrSpan("Ermete." 2135..2142) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2144..2145)), span: StrSpan("</p>" 2142..2146) }
token: Text { text: StrSpan("\n" 2146..2147) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2148..2149), span: StrSpan("<p" 2147..2149) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2150..2155), value: StrSpan("testo_dialogo" 2157..2170), span: StrSpan("class=\"testo_dialogo\"" 2150..2171) }
token: ElementEnd { end: Open, span: StrSpan(">" 2171..2172) }
token: Text { text: StrSpan("Certo il mondo di ieri √® scaduto se anche i serpenti son passati alla Luce. Ma, dimmi, tu sai perch√© √® morta?" 2172..2284) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2286..2287)), span: StrSpan("</p>" 2284..2288) }
token: Text { text: StrSpan("\n\n" 2288..2290) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2291..2292), span: StrSpan("<p" 2290..2292) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2293..2298), value: StrSpan("testo_personaggio testo_maiuscoletto" 2300..2336), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2293..2337) }
token: ElementEnd { end: Open, span: StrSpan(">" 2337..2338) }
token: Text { text: StrSpan("Chirone." 2338..2346) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2348..2349)), span: StrSpan("</p>" 2346..2350) }
token: Text { text: StrSpan("\n" 2350..2351) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2352..2353), span: StrSpan("<p" 2351..2353) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2354..2359), value: StrSpan("testo_dialogo" 2361..2374), span: StrSpan("class=\"testo_dialogo\"" 2354..2375) }
token: ElementEnd { end: Open, span: StrSpan(">" 2375..2376) }
token: Text { text: StrSpan("Enodio, mai pi√∫ la vedremo balzare felice dal D√≠dimo al Pelio fra i canneti e le rupi. Tanto ci basti. Le parole sono sangue." 2376..2503) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2505..2506)), span: StrSpan("</p>" 2503..2507) }
token: Text { text: StrSpan("\n\n" 2507..2509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2510..2511), span: StrSpan("<p" 2509..2511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2512..2517), value: StrSpan("testo_personaggio testo_maiuscoletto" 2519..2555), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2512..2556) }
token: ElementEnd { end: Open, span: StrSpan(">" 2556..2557) }
token: Text { text: StrSpan("Ermete." 2557..2564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2566..2567)), span: StrSpan("</p>" 2564..2568) }
token: Text { text: StrSpan("\n" 2568..2569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2570..2571), span: StrSpan("<p" 2569..2571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2572..2577), value: StrSpan("testo_dialogo" 2579..2592), span: StrSpan("class=\"testo_dialogo\"" 2572..2593) }
token: ElementEnd { end: Open, span: StrSpan(">" 2593..2594) }
token: Text { text: StrSpan("Chirone, puoi credermi quando ti dico che la piango come voi la piangete. Ma, ti giuro, non so perch√© il Dio l‚Äôabbia uccisa. Nella mia L√†rissa si parla d‚Äôincontri bestiali nelle grotte e nei boschi‚Ä¶" 2594..2800) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2802..2803)), span: StrSpan("</p>" 2800..2804) }
token: Text { text: StrSpan("\n\n" 2804..2806) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2807..2808), span: StrSpan("<p" 2806..2808) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2809..2814), value: StrSpan("testo_personaggio testo_maiuscoletto" 2816..2852), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2809..2853) }
token: ElementEnd { end: Open, span: StrSpan(">" 2853..2854) }
token: Text { text: StrSpan("Chirone." 2854..2862) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2864..2865)), span: StrSpan("</p>" 2862..2866) }
token: Text { text: StrSpan("\n" 2866..2867) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2868..2869), span: StrSpan("<p" 2867..2869) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2870..2875), value: StrSpan("testo_dialogo" 2877..2890), span: StrSpan("class=\"testo_dialogo\"" 2870..2891) }
token: ElementEnd { end: Open, span: StrSpan(">" 2891..2892) }
token: Text { text: StrSpan("Che vuol dire? Lo siamo bestiali. E proprio tu, Enodio, che a L√†rissa eri coglia di toro, e all‚Äôinizio dei tempi ti sei congiunto nel fango della palude con tutto quanto di sanguigno e ancora informe c‚Äôera al mondo, proprio tu ti stupisci?" 2892..3136) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3138..3139)), span: StrSpan("</p>" 3136..3140) }
token: Text { text: StrSpan("\n\n" 3140..3142) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3143..3144), span: StrSpan("<p" 3142..3144) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3145..3150), value: StrSpan("testo_personaggio testo_maiuscoletto" 3152..3188), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3145..3189) }
token: ElementEnd { end: Open, span: StrSpan(">" 3189..3190) }
token: Text { text: StrSpan("Ermete." 3190..3197) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3199..3200)), span: StrSpan("</p>" 3197..3201) }
token: Text { text: StrSpan("\n" 3201..3202) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3203..3204), span: StrSpan("<p" 3202..3204) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3205..3210), value: StrSpan("testo_dialogo" 3212..3225), span: StrSpan("class=\"testo_dialogo\"" 3205..3226) }
token: ElementEnd { end: Open, span: StrSpan(">" 3226..3227) }
token: Text { text: StrSpan("√à lontano quel tempo. Chirone, e adesso vivo sottoterra o sui crocicchi. Vi vedo a volte venir gi√π dalla montagna come macigni e saltare le pozze e le forre, e inseguirvi, chiamarvi, giocare. Capisco gli zoccoli, la vostra natura, ma non sempre voi siete cos√≠. Le tue braccia e il tuo petto di uomo, a dirne una, e il vostro grosso riso umano, e lei l‚Äôuccisa, e gli amori col Dio, le compagne che adesso la piangono ‚Äì siete cose diverse. Anche tua madre, se non sbaglio, piacque a un dio." 3227..3722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3724..3725)), span: StrSpan("</p>" 3722..3726) }
token: Text { text: StrSpan("\n\n" 3726..3728) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3729..3730), span: StrSpan("<p" 3728..3730) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3731..3736), value: StrSpan("testo_personaggio testo_maiuscoletto" 3738..3774), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3731..3775) }
token: ElementEnd { end: Open, span: StrSpan(">" 3775..3776) }
token: Text { text: StrSpan("Chirone." 3776..3784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3786..3787)), span: StrSpan("</p>" 3784..3788) }
token: Text { text: StrSpan("\n" 3788..3789) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3790..3791), span: StrSpan("<p" 3789..3791) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3792..3797), value: StrSpan("testo_dialogo" 3799..3812), span: StrSpan("class=\"testo_dialogo\"" 3792..3813) }
token: ElementEnd { end: Open, span: StrSpan(">" 3813..3814) }
token: Text { text: StrSpan("Altri tempi davvero. Il vecchio dio per amarla si fece stallone. Sulla vetta del monte." 3814..3901) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3903..3904)), span: StrSpan("</p>" 3901..3905) }
token: Text { text: StrSpan("\n\n" 3905..3907) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3908..3909), span: StrSpan("<p" 3907..3909) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3910..3915), value: StrSpan("testo_personaggio testo_maiuscoletto" 3917..3953), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3910..3954) }
token: ElementEnd { end: Open, span: StrSpan(">" 3954..3955) }
token: Text { text: StrSpan("Ermete." 3955..3962) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3964..3965)), span: StrSpan("</p>" 3962..3966) }
token: Text { text: StrSpan("\n" 3966..3967) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3968..3969), span: StrSpan("<p" 3967..3969) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3970..3975), value: StrSpan("testo_dialogo" 3977..3990), span: StrSpan("class=\"testo_dialogo\"" 3970..3991) }
token: ElementEnd { end: Open, span: StrSpan(">" 3991..3992) }
token: Text { text: StrSpan("Dunque, dimmi perch√© Cor√≤nide bella fu invece una donna e passeggiava nei vigneti e tanto gioc√≤ col Radioso che lui la uccise e bruci√≤ il corpo?" 3992..4140) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4142..4143)), span: StrSpan("</p>" 4140..4144) }
token: Text { text: StrSpan("\n\n" 4144..4146) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4147..4148), span: StrSpan("<p" 4146..4148) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4149..4154), value: StrSpan("testo_personaggio testo_maiuscoletto" 4156..4192), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4149..4193) }
token: ElementEnd { end: Open, span: StrSpan(">" 4193..4194) }
token: Text { text: StrSpan("Chirone." 4194..4202) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4204..4205)), span: StrSpan("</p>" 4202..4206) }
token: Text { text: StrSpan("\n" 4206..4207) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4208..4209), span: StrSpan("<p" 4207..4209) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4210..4215), value: StrSpan("testo_dialogo" 4217..4230), span: StrSpan("class=\"testo_dialogo\"" 4210..4231) }
token: ElementEnd { end: Open, span: StrSpan(">" 4231..4232) }
token: Text { text: StrSpan("Enodio, dalla tua L√†rissa quante volte hai veduto dopo una notte di vento la montagna dell‚ÄôOlimpo stagliare nel cielo?" 4232..4353) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4355..4356)), span: StrSpan("</p>" 4353..4357) }
token: Text { text: StrSpan("\n\n" 4357..4359) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4360..4361), span: StrSpan("<p" 4359..4361) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4362..4367), value: StrSpan("testo_personaggio testo_maiuscoletto" 4369..4405), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4362..4406) }
token: ElementEnd { end: Open, span: StrSpan(">" 4406..4407) }
token: Text { text: StrSpan("Ermete." 4407..4414) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4416..4417)), span: StrSpan("</p>" 4414..4418) }
token: Text { text: StrSpan("\n" 4418..4419) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4420..4421), span: StrSpan("<p" 4419..4421) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4422..4427), value: StrSpan("testo_dialogo" 4429..4442), span: StrSpan("class=\"testo_dialogo\"" 4422..4443) }
token: ElementEnd { end: Open, span: StrSpan(">" 4443..4444) }
token: Text { text: StrSpan("Non solo la vedo, ma a volte ci salgo." 4444..4482) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4484..4485)), span: StrSpan("</p>" 4482..4486) }
token: Text { text: StrSpan("\n\n" 4486..4488) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4489..4490), span: StrSpan("<p" 4488..4490) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4491..4496), value: StrSpan("testo_personaggio testo_maiuscoletto" 4498..4534), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4491..4535) }
token: ElementEnd { end: Open, span: StrSpan(">" 4535..4536) }
token: Text { text: StrSpan("Chirone." 4536..4544) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4546..4547)), span: StrSpan("</p>" 4544..4548) }
token: Text { text: StrSpan("\n" 4548..4549) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4550..4551), span: StrSpan("<p" 4549..4551) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4552..4557), value: StrSpan("testo_dialogo" 4559..4572), span: StrSpan("class=\"testo_dialogo\"" 4552..4573) }
token: ElementEnd { end: Open, span: StrSpan(">" 4573..4574) }
token: Text { text: StrSpan("Un tempo, anche noi si galoppava fin lass√∫ di costa in costa." 4574..4636) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4638..4639)), span: StrSpan("</p>" 4636..4640) }
token: Text { text: StrSpan("\n\n" 4640..4642) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4643..4644), span: StrSpan("<p" 4642..4644) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4645..4650), value: StrSpan("testo_personaggio testo_maiuscoletto" 4652..4688), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4645..4689) }
token: ElementEnd { end: Open, span: StrSpan(">" 4689..4690) }
token: Text { text: StrSpan("Ermete." 4690..4697) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4699..4700)), span: StrSpan("</p>" 4697..4701) }
token: Text { text: StrSpan("\n" 4701..4702) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4703..4704), span: StrSpan("<p" 4702..4704) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4705..4710), value: StrSpan("testo_dialogo" 4712..4725), span: StrSpan("class=\"testo_dialogo\"" 4705..4726) }
token: ElementEnd { end: Open, span: StrSpan(">" 4726..4727) }
token: Text { text: StrSpan("Ebbene, dovreste tornarci." 4727..4753) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4755..4756)), span: StrSpan("</p>" 4753..4757) }
token: Text { text: StrSpan("\n\n" 4757..4759) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4760..4761), span: StrSpan("<p" 4759..4761) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4762..4767), value: StrSpan("testo_personaggio testo_maiuscoletto" 4769..4805), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4762..4806) }
token: ElementEnd { end: Open, span: StrSpan(">" 4806..4807) }
token: Text { text: StrSpan("Chirone." 4807..4815) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4817..4818)), span: StrSpan("</p>" 4815..4819) }
token: Text { text: StrSpan("\n" 4819..4820) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4821..4822), span: StrSpan("<p" 4820..4822) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4823..4828), value: StrSpan("testo_dialogo" 4830..4843), span: StrSpan("class=\"testo_dialogo\"" 4823..4844) }
token: ElementEnd { end: Open, span: StrSpan(">" 4844..4845) }
token: Text { text: StrSpan("Amico, Cor√≤nide c‚Äô√® tornata." 4845..4877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4879..4880)), span: StrSpan("</p>" 4877..4881) }
token: Text { text: StrSpan("\n\n" 4881..4883) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4884..4885), span: StrSpan("<p" 4883..4885) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4886..4891), value: StrSpan("testo_personaggio testo_maiuscoletto" 4893..4929), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4886..4930) }
token: ElementEnd { end: Open, span: StrSpan(">" 4930..4931) }
token: Text { text: StrSpan("Ermete." 4931..4938) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4940..4941)), span: StrSpan("</p>" 4938..4942) }
token: Text { text: StrSpan("\n" 4942..4943) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4944..4945), span: StrSpan("<p" 4943..4945) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4946..4951), value: StrSpan("testo_dialogo" 4953..4966), span: StrSpan("class=\"testo_dialogo\"" 4946..4967) }
token: ElementEnd { end: Open, span: StrSpan(">" 4967..4968) }
token: Text { text: StrSpan("Che vuoi dire con questo?" 4968..4993) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4995..4996)), span: StrSpan("</p>" 4993..4997) }
token: Text { text: StrSpan("\n\n" 4997..4999) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5000..5001), span: StrSpan("<p" 4999..5001) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5002..5007), value: StrSpan("testo_personaggio testo_maiuscoletto" 5009..5045), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5002..5046) }
token: ElementEnd { end: Open, span: StrSpan(">" 5046..5047) }
token: Text { text: StrSpan("Chirone." 5047..5055) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5057..5058)), span: StrSpan("</p>" 5055..5059) }
token: Text { text: StrSpan("\n" 5059..5060) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5061..5062), span: StrSpan("<p" 5060..5062) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5063..5068), value: StrSpan("testo_dialogo" 5070..5083), span: StrSpan("class=\"testo_dialogo\"" 5063..5084) }
token: ElementEnd { end: Open, span: StrSpan(">" 5084..5085) }
token: Text { text: StrSpan("Voglio dire che quella √® la morte. L√† ci sono i padroni. Non pi√∫ padroni come Crono il vecchio, o l‚Äôantico suo padre, o noi stessi nei giorni che ci accadeva di pensarci e la nostra allegria non sapeva pi√∫ confini e balzavamo tra le cose come cose ch‚Äôeravamo. A quel tempo la bestia e il pantano eran terra d‚Äôincontro di uomini e d√®i. La montagna il cavallo la pianta la nube il torrente ‚Äì tutto eravamo sotto il sole. Chi poteva morire a quel tempo? Che cos‚Äôera bestiale se la bestia era in noi come il dio?" 5085..5608) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5610..5611)), span: StrSpan("</p>" 5608..5612) }
token: Text { text: StrSpan("\n\n" 5612..5614) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5615..5616), span: StrSpan("<p" 5614..5616) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5617..5622), value: StrSpan("testo_personaggio testo_maiuscoletto" 5624..5660), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5617..5661) }
token: ElementEnd { end: Open, span: StrSpan(">" 5661..5662) }
token: Text { text: StrSpan("Ermete." 5662..5669) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5671..5672)), span: StrSpan("</p>" 5669..5673) }
token: Text { text: StrSpan("\n" 5673..5674) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5675..5676), span: StrSpan("<p" 5674..5676) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5677..5682), value: StrSpan("testo_dialogo" 5684..5697), span: StrSpan("class=\"testo_dialogo\"" 5677..5698) }
token: ElementEnd { end: Open, span: StrSpan(">" 5698..5699) }
token: Text { text: StrSpan("Tu hai figliole, Chirone, e sono donne e son puledre a volont√†. Perch√© ti lamenti? Qui avete il monte, avete il piano, e le stagioni. Non vi mancano neppure, per compiacervi, le dimore umane, capanne e villaggi, agli sbocchi delle vallate, e le stalle, i focolari, dove i tristi mortali favoleggiano di voi, pronti sempre a ospitarvi. Non ti pare che il mondo sia meglio tenuto dai nuovi padroni?" 5699..6097) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6099..6100)), span: StrSpan("</p>" 6097..6101) }
token: Text { text: StrSpan("\n\n" 6101..6103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6104..6105), span: StrSpan("<p" 6103..6105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6106..6111), value: StrSpan("testo_personaggio testo_maiuscoletto" 6113..6149), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6106..6150) }
token: ElementEnd { end: Open, span: StrSpan(">" 6150..6151) }
token: Text { text: StrSpan("Chirone." 6151..6159) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6161..6162)), span: StrSpan("</p>" 6159..6163) }
token: Text { text: StrSpan("\n" 6163..6164) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6165..6166), span: StrSpan("<p" 6164..6166) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6167..6172), value: StrSpan("testo_dialogo" 6174..6187), span: StrSpan("class=\"testo_dialogo\"" 6167..6188) }
token: ElementEnd { end: Open, span: StrSpan(">" 6188..6189) }
token: Text { text: StrSpan("Tu sei dei loro e li difendi. Tu che un giorno eri coglia e furore, ora conduci le ombre esangui sottoterra. Cosa sono i mortali se non ombre anzitempo? Ma godo a pensare che la madre di questo bimbetto c‚Äô√® saltata da sola: se non altro ha trovato se stessa morendo." 6189..6458) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6460..6461)), span: StrSpan("</p>" 6458..6462) }
token: Text { text: StrSpan("\n\n" 6462..6464) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6465..6466), span: StrSpan("<p" 6464..6466) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6467..6472), value: StrSpan("testo_personaggio testo_maiuscoletto" 6474..6510), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6467..6511) }
token: ElementEnd { end: Open, span: StrSpan(">" 6511..6512) }
token: Text { text: StrSpan("Ermete." 6512..6519) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6521..6522)), span: StrSpan("</p>" 6519..6523) }
token: Text { text: StrSpan("\n" 6523..6524) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6525..6526), span: StrSpan("<p" 6524..6526) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6527..6532), value: StrSpan("testo_dialogo" 6534..6547), span: StrSpan("class=\"testo_dialogo\"" 6527..6548) }
token: ElementEnd { end: Open, span: StrSpan(">" 6548..6549) }
token: Text { text: StrSpan("Ora so perch√© √® morta, lei che se ne and√≤ alle pendici del monte e fu donna e am√≤ il Dio col suo amore tanto che ne ebbe questo figlio. Tu dici che il Dio fu spietato. Ma puoi dire che lei, Cor√≤nide, abbia lasciato dietro a s√© nel pantano la voglia bestiale, l‚Äôinforme furore sanguigno che l‚Äôaveva generata?" 6549..6866) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6868..6869)), span: StrSpan("</p>" 6866..6870) }
token: Text { text: StrSpan("\n\n" 6870..6872) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6873..6874), span: StrSpan("<p" 6872..6874) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6875..6880), value: StrSpan("testo_personaggio testo_maiuscoletto" 6882..6918), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6875..6919) }
token: ElementEnd { end: Open, span: StrSpan(">" 6919..6920) }
token: Text { text: StrSpan("Chirone." 6920..6928) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6930..6931)), span: StrSpan("</p>" 6928..6932) }
token: Text { text: StrSpan("\n" 6932..6933) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6934..6935), span: StrSpan("<p" 6933..6935) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6936..6941), value: StrSpan("testo_dialogo" 6943..6956), span: StrSpan("class=\"testo_dialogo\"" 6936..6957) }
token: ElementEnd { end: Open, span: StrSpan(">" 6957..6958) }
token: Text { text: StrSpan("Certo che no. E con questo?" 6958..6985) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6987..6988)), span: StrSpan("</p>" 6985..6989) }
token: Text { text: StrSpan("\n\n" 6989..6991) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6992..6993), span: StrSpan("<p" 6991..6993) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6994..6999), value: StrSpan("testo_personaggio testo_maiuscoletto" 7001..7037), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6994..7038) }
token: ElementEnd { end: Open, span: StrSpan(">" 7038..7039) }
token: Text { text: StrSpan("Ermete." 7039..7046) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7048..7049)), span: StrSpan("</p>" 7046..7050) }
token: Text { text: StrSpan("\n" 7050..7051) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7052..7053), span: StrSpan("<p" 7051..7053) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7054..7059), value: StrSpan("testo_dialogo" 7061..7074), span: StrSpan("class=\"testo_dialogo\"" 7054..7075) }
token: ElementEnd { end: Open, span: StrSpan(">" 7075..7076) }
token: Text { text: StrSpan("Gli d√®i nuovi di Tessaglia che molto sorridono, soltanto di una cosa non possono ridere: credi a me che ho veduto il destino. Ogni volta che il caos trabocca alla luce, alla loro luce, devon trafiggere e distruggere e rifare. Per questo Cor√≤nide √® morta." 7076..7333) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7335..7336)), span: StrSpan("</p>" 7333..7337) }
token: Text { text: StrSpan("\n\n" 7337..7339) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7340..7341), span: StrSpan("<p" 7339..7341) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7342..7347), value: StrSpan("testo_personaggio testo_maiuscoletto" 7349..7385), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7342..7386) }
token: ElementEnd { end: Open, span: StrSpan(">" 7386..7387) }
token: Text { text: StrSpan("Chirone." 7387..7395) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7397..7398)), span: StrSpan("</p>" 7395..7399) }
token: Text { text: StrSpan("\n" 7399..7400) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7401..7402), span: StrSpan("<p" 7400..7402) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7403..7408), value: StrSpan("testo_dialogo" 7410..7423), span: StrSpan("class=\"testo_dialogo\"" 7403..7424) }
token: ElementEnd { end: Open, span: StrSpan(">" 7424..7425) }
token: Text { text: StrSpan("Ma non potranno pi√∫ rifarla. Dunque avevo ragione che l‚ÄôOlimpo √® la morte." 7425..7503) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7505..7506)), span: StrSpan("</p>" 7503..7507) }
token: Text { text: StrSpan("\n\n" 7507..7509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7510..7511), span: StrSpan("<p" 7509..7511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7512..7517), value: StrSpan("testo_personaggio testo_maiuscoletto" 7519..7555), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7512..7556) }
token: ElementEnd { end: Open, span: StrSpan(">" 7556..7557) }
token: Text { text: StrSpan("Ermete." 7557..7564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7566..7567)), span: StrSpan("</p>" 7564..7568) }
token: Text { text: StrSpan("\n" 7568..7569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7570..7571), span: StrSpan("<p" 7569..7571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7572..7577), value: StrSpan("testo_dialogo" 7579..7592), span: StrSpan("class=\"testo_dialogo\"" 7572..7593) }
token: ElementEnd { end: Open, span: StrSpan(">" 7593..7594) }
token: Text { text: StrSpan("Eppure, il Radioso l‚Äôamava. L‚Äôavrebbe pianta se non fosse stato un dio. Le ha strappato il bimbetto. Te l‚Äôaffido con gioia. Sa che tu solo potrai farne un uomo vero." 7594..7765) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7767..7768)), span: StrSpan("</p>" 7765..7769) }
token: Text { text: StrSpan("\n\n" 7769..7771) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7772..7773), span: StrSpan("<p" 7771..7773) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7774..7779), value: StrSpan("testo_personaggio testo_maiuscoletto" 7781..7817), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7774..7818) }
token: ElementEnd { end: Open, span: StrSpan(">" 7818..7819) }
token: Text { text: StrSpan("Chirone." 7819..7827) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7829..7830)), span: StrSpan("</p>" 7827..7831) }
token: Text { text: StrSpan("\n" 7831..7832) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7833..7834), span: StrSpan("<p" 7832..7834) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7835..7840), value: StrSpan("testo_dialogo" 7842..7855), span: StrSpan("class=\"testo_dialogo\"" 7835..7856) }
token: ElementEnd { end: Open, span: StrSpan(">" 7856..7857) }
token: Text { text: StrSpan("Ti ho gi√† detto la sorte che attende costui nelle case mortali. Sar√† Asclepio, il signore dei corpi, un uomo-dio. Vivr√† tra la carne corrotta e i sospiri. A lui guarderanno gli uomini per sfuggire il destino, per ritardare di una notte, di un istante, l‚Äôagonia. Passer√†, questo bimbetto, tra la vita e la morte, come tu ch‚Äôeri coglia di toro e non sei pi√∫ che il guidatore delle ombre. Questa la sorte che gli Olimpici faranno ai vivi, sulla terra." 7857..8314) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8316..8317)), span: StrSpan("</p>" 8314..8318) }
token: Text { text: StrSpan("\n\n" 8318..8320) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8321..8322), span: StrSpan("<p" 8320..8322) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8323..8328), value: StrSpan("testo_personaggio testo_maiuscoletto" 8330..8366), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8323..8367) }
token: ElementEnd { end: Open, span: StrSpan(">" 8367..8368) }
token: Text { text: StrSpan("Ermete." 8368..8375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8377..8378)), span: StrSpan("</p>" 8375..8379) }
token: Text { text: StrSpan("\n" 8379..8380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8381..8382), span: StrSpan("<p" 8380..8382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8383..8388), value: StrSpan("testo_dialogo" 8390..8403), span: StrSpan("class=\"testo_dialogo\"" 8383..8404) }
token: ElementEnd { end: Open, span: StrSpan(">" 8404..8405) }
token: Text { text: StrSpan("E non sar√† meglio, ai mortali, finire cos√≠, che non l‚Äôantica dannazione d‚Äôincappare nella bestia o nell‚Äôalbero, e diventare bue che mugge, serpente che striscia, sasso eterno, fontana che piange?" 8405..8608) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8610..8611)), span: StrSpan("</p>" 8608..8612) }
token: Text { text: StrSpan("\n\n" 8612..8614) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8615..8616), span: StrSpan("<p" 8614..8616) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8617..8622), value: StrSpan("testo_personaggio testo_maiuscoletto" 8624..8660), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8617..8661) }
token: ElementEnd { end: Open, span: StrSpan(">" 8661..8662) }
token: Text { text: StrSpan("Chirone." 8662..8670) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8672..8673)), span: StrSpan("</p>" 8670..8674) }
token: Text { text: StrSpan("\n" 8674..8675) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8676..8677), span: StrSpan("<p" 8675..8677) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8678..8683), value: StrSpan("testo_dialogo" 8685..8698), span: StrSpan("class=\"testo_dialogo\"" 8678..8699) }
token: ElementEnd { end: Open, span: StrSpan(">" 8699..8700) }
token: Text { text: StrSpan("Fin che l‚ÄôOlimpo sar√† il cielo, certo. Ma queste cose passeranno." 8700..8768) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8770..8771)), span: StrSpan("</p>" 8768..8772) }
token: Text { text: StrSpan("\n" 8772..8773) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8775..8779)), span: StrSpan("</body>" 8773..8780) }
token: Text { text: StrSpan("\n" 8780..8781) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8783..8787)), span: StrSpan("</html>" 8781..8788) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Il fiore" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("Che a questo fatto dolce-atroce, il quale non riesce a disgustarci di un dio primaverile come Apolline il Chiaro, assistessero i leopardiani Eros e T√†natos, √® di solare evidenza." 358..538) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 540..541)), span: StrSpan("</p>" 538..542) }
token: Text { text: StrSpan("\n\n" 542..544) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 545..546), span: StrSpan("<p" 544..546) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 547..552), value: StrSpan("testo_indicazioni_scena" 554..577), span: StrSpan("class=\"testo_indicazioni_scena\"" 547..578) }
token: ElementEnd { end: Open, span: StrSpan(">" 578..579) }
token: Text { text: StrSpan("(parlano Eros e T√†natos)" 579..604) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 606..607)), span: StrSpan("</p>" 604..608) }
token: Text { text: StrSpan("\n\n" 608..610) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 611..612), span: StrSpan("<p" 610..612) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 613..618), value: StrSpan("testo_personaggio testo_maiuscoletto" 620..656), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 613..657) }
token: ElementEnd { end: Open, span: StrSpan(">" 657..658) }
token: Text { text: StrSpan("Eros." 658..663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 665..666)), span: StrSpan("</p>" 663..667) }
token: Text { text: StrSpan("\n" 667..668) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 669..670), span: StrSpan("<p" 668..670) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 671..676), value: StrSpan("testo_dialogo" 678..691), span: StrSpan("class=\"testo_dialogo\"" 671..692) }
token: ElementEnd { end: Open, span: StrSpan(">" 692..693) }
token: Text { text: StrSpan("Te l‚Äôaspettavi questo fatto, T√†natos?" 693..733) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 735..736)), span: StrSpan("</p>" 733..737) }
token: Text { text: StrSpan("\n\n" 737..739) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 740..741), span: StrSpan("<p" 739..741) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 742..747), value: StrSpan("testo_personaggio testo_maiuscoletto" 749..785), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 742..786) }
token: ElementEnd { end: Open, span: StrSpan(">" 786..787) }
token: Text { text: StrSpan("T√†natos." 787..796) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 798..799)), span: StrSpan("</p>" 796..800) }
token: Text { text: StrSpan("\n" 800..801) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 802..803), span: StrSpan("<p" 801..803) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 804..809), value: StrSpan("testo_dialogo" 811..824), span: StrSpan("class=\"testo_dialogo\"" 804..825) }
token: ElementEnd { end: Open, span: StrSpan(">" 825..826) }
token: Text { text: StrSpan("Tutto mi aspetto, da un Olimpico. Ma che finisse in questo modo, no." 826..894) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 896..897)), span: StrSpan("</p>" 894..898) }
token: Text { text: StrSpan("\n\n" 898..900) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 901..902), span: StrSpan("<p" 900..902) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 903..908), value: StrSpan("testo_personaggio testo_maiuscoletto" 910..946), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 903..947) }
token: ElementEnd { end: Open, span: StrSpan(">" 947..948) }
token: Text { text: StrSpan("Eros." 948..953) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 955..956)), span: StrSpan("</p>" 953..957) }
token: Text { text: StrSpan("\n" 957..958) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 959..960), span: StrSpan("<p" 958..960) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 961..966), value: StrSpan("testo_dialogo" 968..981), span: StrSpan("class=\"testo_dialogo\"" 961..982) }
token: ElementEnd { end: Open, span: StrSpan(">" 982..983) }
token: Text { text: StrSpan("Per fortuna, i mortali la chiameranno una disgrazia." 983..1035) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1037..1038)), span: StrSpan("</p>" 1035..1039) }
token: Text { text: StrSpan("\n\n" 1039..1041) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1042..1043), span: StrSpan("<p" 1041..1043) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1044..1049), value: StrSpan("testo_personaggio testo_maiuscoletto" 1051..1087), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1044..1088) }
token: ElementEnd { end: Open, span: StrSpan(">" 1088..1089) }
token: Text { text: StrSpan("T√†natos." 1089..1098) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1100..1101)), span: StrSpan("</p>" 1098..1102) }
token: Text { text: StrSpan("\n" 1102..1103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1104..1105), span: StrSpan("<p" 1103..1105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1106..1111), value: StrSpan("testo_dialogo" 1113..1126), span: StrSpan("class=\"testo_dialogo\"" 1106..1127) }
token: ElementEnd { end: Open, span: StrSpan(">" 1127..1128) }
token: Text { text: StrSpan("Non √® la prima, e non sar√† l‚Äôultima volta." 1128..1174) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1176..1177)), span: StrSpan("</p>" 1174..1178) }
token: Text { text: StrSpan("\n\n" 1178..1180) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1181..1182), span: StrSpan("<p" 1180..1182) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1183..1188), value: StrSpan("testo_personaggio testo_maiuscoletto" 1190..1226), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1183..1227) }
token: ElementEnd { end: Open, span: StrSpan(">" 1227..1228) }
token: Text { text: StrSpan("Eros." 1228..1233) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1235..1236)), span: StrSpan("</p>" 1233..1237) }
token: Text { text: StrSpan("\n" 1237..1238) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1239..1240), span: StrSpan("<p" 1238..1240) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1241..1246), value: StrSpan("testo_dialogo" 1248..1261), span: StrSpan("class=\"testo_dialogo\"" 1241..1262) }
token: ElementEnd { end: Open, span: StrSpan(">" 1262..1263) }
token: Text { text: StrSpan("E intanto Iacinto √® morto. Le sorelle gi√† lo piangono. L‚Äôinutile fiore spruzzato del suo sangue, costella ormai tutte le valli dell‚ÄôEurota. √à primavera, T√†natos, e il ragazzo non la vedr√†." 1263..1460) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1462..1463)), span: StrSpan("</p>" 1460..1464) }
token: Text { text: StrSpan("\n\n" 1464..1466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1467..1468), span: StrSpan("<p" 1466..1468) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1469..1474), value: StrSpan("testo_personaggio testo_maiuscoletto" 1476..1512), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1469..1513) }
token: ElementEnd { end: Open, span: StrSpan(">" 1513..1514) }
token: Text { text: StrSpan("T√†natos." 1514..1523) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1525..1526)), span: StrSpan("</p>" 1523..1527) }
token: Text { text: StrSpan("\n" 1527..1528) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1529..1530), span: StrSpan("<p" 1528..1530) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1531..1536), value: StrSpan("testo_dialogo" 1538..1551), span: StrSpan("class=\"testo_dialogo\"" 1531..1552) }
token: ElementEnd { end: Open, span: StrSpan(">" 1552..1553) }
token: Text { text: StrSpan("Dov‚Äô√® passato un immortale, sempre spuntano di questi fiori. Ma le altre volte, almeno, c‚Äôera una fuga, un pretesto, un‚Äôoffesa. Riluttavano al dio, o commettevano empiet√†. Cos√≠ accadde di Dafne, di Elino, di Atteone. Iacinto invece non fu che un ragazzo. Visse i suoi giorni venerando il suo signore. Gioc√≤ con lui come gioca il fanciullo. Era scosso e stupito. Tu, Eros, lo sai." 1553..1942) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1944..1945)), span: StrSpan("</p>" 1942..1946) }
token: Text { text: StrSpan("\n\n" 1946..1948) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1949..1950), span: StrSpan("<p" 1948..1950) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1951..1956), value: StrSpan("testo_personaggio testo_maiuscoletto" 1958..1994), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1951..1995) }
token: ElementEnd { end: Open, span: StrSpan(">" 1995..1996) }
token: Text { text: StrSpan("Eros." 1996..2001) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2003..2004)), span: StrSpan("</p>" 2001..2005) }
token: Text { text: StrSpan("\n" 2005..2006) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2007..2008), span: StrSpan("<p" 2006..2008) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2009..2014), value: StrSpan("testo_dialogo" 2016..2029), span: StrSpan("class=\"testo_dialogo\"" 2009..2030) }
token: ElementEnd { end: Open, span: StrSpan(">" 2030..2031) }
token: Text { text: StrSpan("Gi√† i mortali si dicono che fu una disgrazia. Nessuno pensa che il Radioso non √® uso fallire i suoi colpi." 2031..2139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2141..2142)), span: StrSpan("</p>" 2139..2143) }
token: Text { text: StrSpan("\n\n" 2143..2145) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2146..2147), span: StrSpan("<p" 2145..2147) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2148..2153), value: StrSpan("testo_personaggio testo_maiuscoletto" 2155..2191), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2148..2192) }
token: ElementEnd { end: Open, span: StrSpan(">" 2192..2193) }
token: Text { text: StrSpan("T√†natos." 2193..2202) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2204..2205)), span: StrSpan("</p>" 2202..2206) }
token: Text { text: StrSpan("\n" 2206..2207) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2208..2209), span: StrSpan("<p" 2207..2209) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2210..2215), value: StrSpan("testo_dialogo" 2217..2230), span: StrSpan("class=\"testo_dialogo\"" 2210..2231) }
token: ElementEnd { end: Open, span: StrSpan(">" 2231..2232) }
token: Text { text: StrSpan("Ho assistito soltanto al sorriso aggrottato con cui segu√¨ il volo del disco e lo vide cadere. Lo lanci√≤ in alto nel senso del sole, e Iacinto lev√≤ gli occhi e le mani, e l‚Äôattese abbagliato. Gli piomb√≤ sulla fronte. Perch√© questo, Eros? Tu certo lo sai." 2232..2492) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2494..2495)), span: StrSpan("</p>" 2492..2496) }
token: Text { text: StrSpan("\n\n" 2496..2498) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2499..2500), span: StrSpan("<p" 2498..2500) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2501..2506), value: StrSpan("testo_personaggio testo_maiuscoletto" 2508..2544), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2501..2545) }
token: ElementEnd { end: Open, span: StrSpan(">" 2545..2546) }
token: Text { text: StrSpan("Eros." 2546..2551) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2553..2554)), span: StrSpan("</p>" 2551..2555) }
token: Text { text: StrSpan("\n" 2555..2556) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2557..2558), span: StrSpan("<p" 2556..2558) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2559..2564), value: StrSpan("testo_dialogo" 2566..2579), span: StrSpan("class=\"testo_dialogo\"" 2559..2580) }
token: ElementEnd { end: Open, span: StrSpan(">" 2580..2581) }
token: Text { text: StrSpan("Che devo dirti, T√†natos? Io non posso intenerirmi su un capriccio. E lo sai anche tu ‚Äì quando un dio avvicina un mortale, segue sempre una cosa crudele. Tu stesso hai parlato di Dafne e Atteone." 2581..2778) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2780..2781)), span: StrSpan("</p>" 2778..2782) }
token: Text { text: StrSpan("\n\n" 2782..2784) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2785..2786), span: StrSpan("<p" 2784..2786) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2787..2792), value: StrSpan("testo_personaggio testo_maiuscoletto" 2794..2830), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2787..2831) }
token: ElementEnd { end: Open, span: StrSpan(">" 2831..2832) }
token: Text { text: StrSpan("T√†natos." 2832..2841) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2843..2844)), span: StrSpan("</p>" 2841..2845) }
token: Text { text: StrSpan("\n" 2845..2846) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2847..2848), span: StrSpan("<p" 2846..2848) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2849..2854), value: StrSpan("testo_dialogo" 2856..2869), span: StrSpan("class=\"testo_dialogo\"" 2849..2870) }
token: ElementEnd { end: Open, span: StrSpan(">" 2870..2871) }
token: Text { text: StrSpan("Che fu dunque, stavolta?" 2871..2895) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2897..2898)), span: StrSpan("</p>" 2895..2899) }
token: Text { text: StrSpan("\n\n" 2899..2901) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2902..2903), span: StrSpan("<p" 2901..2903) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2904..2909), value: StrSpan("testo_personaggio testo_maiuscoletto" 2911..2947), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2904..2948) }
token: ElementEnd { end: Open, span: StrSpan(">" 2948..2949) }
token: Text { text: StrSpan("Eros." 2949..2954) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2956..2957)), span: StrSpan("</p>" 2954..2958) }
token: Text { text: StrSpan("\n" 2958..2959) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2960..2961), span: StrSpan("<p" 2959..2961) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2962..2967), value: StrSpan("testo_dialogo" 2969..2982), span: StrSpan("class=\"testo_dialogo\"" 2962..2983) }
token: ElementEnd { end: Open, span: StrSpan(">" 2983..2984) }
token: Text { text: StrSpan("Te l‚Äôho detto, un capriccio. Il Radioso ha voluto giocare. √à disceso tra gli uomini e ha visto Iacinto. Per sei giorni √® vissuto in Amicle, sei giorni che a Iacinto cambiarono il cuore e rinnovarono la terra. Poi quando al signore venne voglia di andarsene, Iacinto lo guardava smarrito. Allora il disco gli piomb√≤ tra gli occhi‚Ä¶" 2984..3320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3322..3323)), span: StrSpan("</p>" 3320..3324) }
token: Text { text: StrSpan("\n\n" 3324..3326) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3327..3328), span: StrSpan("<p" 3326..3328) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3329..3334), value: StrSpan("testo_personaggio testo_maiuscoletto" 3336..3372), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3329..3373) }
token: ElementEnd { end: Open, span: StrSpan(">" 3373..3374) }
token: Text { text: StrSpan("T√†natos." 3374..3383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3385..3386)), span: StrSpan("</p>" 3383..3387) }
token: Text { text: StrSpan("\n" 3387..3388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3389..3390), span: StrSpan("<p" 3388..3390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3391..3396), value: StrSpan("testo_dialogo" 3398..3411), span: StrSpan("class=\"testo_dialogo\"" 3391..3412) }
token: ElementEnd { end: Open, span: StrSpan(">" 3412..3413) }
token: Text { text: StrSpan("Chi sa‚Ä¶ il Radioso non voleva che piangesse." 3413..3459) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3461..3462)), span: StrSpan("</p>" 3459..3463) }
token: Text { text: StrSpan("\n\n" 3463..3465) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3466..3467), span: StrSpan("<p" 3465..3467) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3468..3473), value: StrSpan("testo_personaggio testo_maiuscoletto" 3475..3511), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3468..3512) }
token: ElementEnd { end: Open, span: StrSpan(">" 3512..3513) }
token: Text { text: StrSpan("Eros." 3513..3518) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3520..3521)), span: StrSpan("</p>" 3518..3522) }
token: Text { text: StrSpan("\n" 3522..3523) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3524..3525), span: StrSpan("<p" 3523..3525) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3526..3531), value: StrSpan("testo_dialogo" 3533..3546), span: StrSpan("class=\"testo_dialogo\"" 3526..3547) }
token: ElementEnd { end: Open, span: StrSpan(">" 3547..3548) }
token: Text { text: StrSpan("No. Che cosa sia piangere il Radioso non sa. Lo sappiamo noialtri, d√®i e demoni bambini, ch‚Äôeravamo gi√† in vita quando l‚ÄôOlimpo era soltanto un monte brullo. Abbiamo visto molte cose, abbiamo visto piangere anche gli alberi e le pietre. Il signore √® diverso. Per lui sei giorni o un‚Äôesistenza non fa nulla. Nessuno seppe tutto ci√≤ come Iacinto." 3548..3902) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3904..3905)), span: StrSpan("</p>" 3902..3906) }
token: Text { text: StrSpan("\n\n" 3906..3908) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3909..3910), span: StrSpan("<p" 3908..3910) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3911..3916), value: StrSpan("testo_personaggio testo_maiuscoletto" 3918..3954), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3911..3955) }
token: ElementEnd { end: Open, span: StrSpan(">" 3955..3956) }
token: Text { text: StrSpan("T√†natos." 3956..3965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3967..3968)), span: StrSpan("</p>" 3965..3969) }
token: Text { text: StrSpan("\n" 3969..3970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3971..3972), span: StrSpan("<p" 3970..3972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3973..3978), value: StrSpan("testo_dialogo" 3980..3993), span: StrSpan("class=\"testo_dialogo\"" 3973..3994) }
token: ElementEnd { end: Open, span: StrSpan(">" 3994..3995) }
token: Text { text: StrSpan("Credi davvero che Iacinto abbia capito queste cose? Che il signore sia stato per lui altro che un modello, un compagno maggiore, un fratello fidato e venerato? Io l‚Äôho veduto solamente quando tese le mani alla gara ‚Äì non aveva sulla fronte che fiducia e stupore. Iacinto ignorava chi fosse il Radioso." 3995..4300) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4302..4303)), span: StrSpan("</p>" 4300..4304) }
token: Text { text: StrSpan("\n\n" 4304..4306) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4307..4308), span: StrSpan("<p" 4306..4308) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4309..4314), value: StrSpan("testo_personaggio testo_maiuscoletto" 4316..4352), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4309..4353) }
token: ElementEnd { end: Open, span: StrSpan(">" 4353..4354) }
token: Text { text: StrSpan("Eros." 4354..4359) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4361..4362)), span: StrSpan("</p>" 4359..4363) }
token: Text { text: StrSpan("\n" 4363..4364) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4365..4366), span: StrSpan("<p" 4364..4366) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4367..4372), value: StrSpan("testo_dialogo" 4374..4387), span: StrSpan("class=\"testo_dialogo\"" 4367..4388) }
token: ElementEnd { end: Open, span: StrSpan(">" 4388..4389) }
token: Text { text: StrSpan("Tutto pu√≤ darsi, T√†natos. Pu√≤ anche darsi che il ragazzo non sapesse di Elino e di Dafne. Dove finisca lo sgomento e incominci la fede, √® difficile dire. Ma certo trascorse sei giorni di ansiosa passione." 4389..4597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4599..4600)), span: StrSpan("</p>" 4597..4601) }
token: Text { text: StrSpan("\n\n" 4601..4603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4604..4605), span: StrSpan("<p" 4603..4605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4606..4611), value: StrSpan("testo_personaggio testo_maiuscoletto" 4613..4649), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4606..4650) }
token: ElementEnd { end: Open, span: StrSpan(">" 4650..4651) }
token: Text { text: StrSpan("T√†natos." 4651..4660) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4662..4663)), span: StrSpan("</p>" 4660..4664) }
token: Text { text: StrSpan("\n" 4664..4665) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4666..4667), span: StrSpan("<p" 4665..4667) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4668..4673), value: StrSpan("testo_dialogo" 4675..4688), span: StrSpan("class=\"testo_dialogo\"" 4668..4689) }
token: ElementEnd { end: Open, span: StrSpan(">" 4689..4690) }
token: Text { text: StrSpan("Secondo te, che cosa accadde nel suo cuore?" 4690..4733) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4735..4736)), span: StrSpan("</p>" 4733..4737) }
token: Text { text: StrSpan("\n\n" 4737..4739) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4740..4741), span: StrSpan("<p" 4739..4741) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4742..4747), value: StrSpan("testo_personaggio testo_maiuscoletto" 4749..4785), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4742..4786) }
token: ElementEnd { end: Open, span: StrSpan(">" 4786..4787) }
token: Text { text: StrSpan("Eros." 4787..4792) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4794..4795)), span: StrSpan("</p>" 4792..4796) }
token: Text { text: StrSpan("\n" 4796..4797) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4798..4799), span: StrSpan("<p" 4797..4799) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4800..4805), value: StrSpan("testo_dialogo" 4807..4820), span: StrSpan("class=\"testo_dialogo\"" 4800..4821) }
token: ElementEnd { end: Open, span: StrSpan(">" 4821..4822) }
token: Text { text: StrSpan("Quel che accade a ogni giovane. Ma stavolta l‚Äôoggetto dei pensieri e degli atti per un ragazzo fu eccessivo. Nella palestra, nelle stanze, lungo le acque dell‚ÄôEurota, parlava con l‚Äôospite, s‚Äôaccompagnava a lui, lo ascoltava. Ascoltava le storie di Delo e di Delfi, il Tifone, la Tessaglia, il paese degli Iperborei. Il dio parlava sorridendo tranquillo, come fa il viandante che credevano morto e ritorna pi√∫ esperto. Quel che √® certo, il signore non disse mai del suo Olimpo, dei compagni immortali, delle cose divine. Parl√≤ di s√©, della sorella, delle C√†riti, come si parla di una vita familiare ‚Äì meravigliosa e familiare. Qualche volta ascoltarono insieme un poeta girovago, ospitato per la notte." 4822..5538) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5540..5541)), span: StrSpan("</p>" 5538..5542) }
token: Text { text: StrSpan("\n\n" 5542..5544) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5545..5546), span: StrSpan("<p" 5544..5546) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5547..5552), value: StrSpan("testo_personaggio testo_maiuscoletto" 5554..5590), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5547..5591) }
token: ElementEnd { end: Open, span: StrSpan(">" 5591..5592) }
token: Text { text: StrSpan("T√†natos." 5592..5601) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5603..5604)), span: StrSpan("</p>" 5601..5605) }
token: Text { text: StrSpan("\n" 5605..5606) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5607..5608), span: StrSpan("<p" 5606..5608) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5609..5614), value: StrSpan("testo_dialogo" 5616..5629), span: StrSpan("class=\"testo_dialogo\"" 5609..5630) }
token: ElementEnd { end: Open, span: StrSpan(">" 5630..5631) }
token: Text { text: StrSpan("Nulla di brutto in tutto questo." 5631..5663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5665..5666)), span: StrSpan("</p>" 5663..5667) }
token: Text { text: StrSpan("\n\n" 5667..5669) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5670..5671), span: StrSpan("<p" 5669..5671) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5672..5677), value: StrSpan("testo_personaggio testo_maiuscoletto" 5679..5715), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5672..5716) }
token: ElementEnd { end: Open, span: StrSpan(">" 5716..5717) }
token: Text { text: StrSpan("Eros." 5717..5722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5724..5725)), span: StrSpan("</p>" 5722..5726) }
token: Text { text: StrSpan("\n" 5726..5727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5728..5729), span: StrSpan("<p" 5727..5729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5730..5735), value: StrSpan("testo_dialogo" 5737..5750), span: StrSpan("class=\"testo_dialogo\"" 5730..5751) }
token: ElementEnd { end: Open, span: StrSpan(">" 5751..5752) }
token: Text { text: StrSpan("Nulla di brutto, e anzi parole di conforto. Iacinto impar√≤ che il signore di Delo con quegli occhi indicibili e quella pacata parola aveva visto e trattato molte cose nel mondo che potevano anche a lui toccare un giorno. L‚Äôospite discorreva anche di lui, della sua sorte. La vita spicciola di Amicle gli era chiara e familiare. Faceva progetti. Trattava Iacinto come un eguale e coetaneo, e i nomi di Aglaia, di Eurin√≤me, di Aux√≤ ‚Äì donne lontane e sorridenti, donne giovani, vissute con l‚Äôospite in misteriosa intimit√† ‚Äì venivano detti con noncuranza tranquilla, con un gusto indolente che a Iacinto faceva rabbrividire il cuore. Questo lo stato del ragazzo. Davanti al signore ogni cosa era agevole, chiara. A Iacinto pareva di potere ogni cosa." 5752..6510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6512..6513)), span: StrSpan("</p>" 6510..6514) }
token: Text { text: StrSpan("\n\n" 6514..6516) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6517..6518), span: StrSpan("<p" 6516..6518) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6519..6524), value: StrSpan("testo_personaggio testo_maiuscoletto" 6526..6562), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6519..6563) }
token: ElementEnd { end: Open, span: StrSpan(">" 6563..6564) }
token: Text { text: StrSpan("T√†natos." 6564..6573) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6575..6576)), span: StrSpan("</p>" 6573..6577) }
token: Text { text: StrSpan("\n" 6577..6578) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6579..6580), span: StrSpan("<p" 6578..6580) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6581..6586), value: StrSpan("testo_dialogo" 6588..6601), span: StrSpan("class=\"testo_dialogo\"" 6581..6602) }
token: ElementEnd { end: Open, span: StrSpan(">" 6602..6603) }
token: Text { text: StrSpan("Ho conosciuto altri mortali. E pi√∫ esperti, pi√∫ saggi, pi√∫ forti che Iacinto. Tutti distrusse questa smania di potere ogni cosa." 6603..6734) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6736..6737)), span: StrSpan("</p>" 6734..6738) }
token: Text { text: StrSpan("\n\n" 6738..6740) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6741..6742), span: StrSpan("<p" 6740..6742) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6743..6748), value: StrSpan("testo_personaggio testo_maiuscoletto" 6750..6786), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6743..6787) }
token: ElementEnd { end: Open, span: StrSpan(">" 6787..6788) }
token: Text { text: StrSpan("Eros." 6788..6793) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6795..6796)), span: StrSpan("</p>" 6793..6797) }
token: Text { text: StrSpan("\n" 6797..6798) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6799..6800), span: StrSpan("<p" 6798..6800) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6801..6806), value: StrSpan("testo_dialogo" 6808..6821), span: StrSpan("class=\"testo_dialogo\"" 6801..6822) }
token: ElementEnd { end: Open, span: StrSpan(">" 6822..6823) }
token: Text { text: StrSpan("Mio caro, in Iacinto non fu che speranza, una trepida speranza di somigliarsi all‚Äôospite. N√© il Radioso raccolse l‚Äôentusiasmo che leggeva in quegli occhi ‚Äì gli bast√≤ suscitarlo ‚Äì, lui scorgeva gi√† allora negli occhi e nei riccioli il bel fiore chiazzato ch‚Äôera la sorte di Iacinto. Non pens√≤ n√© a parole n√© a lacrime. Era venuto per vedere un fiore. Questo fiore doveva esser degno di lui ‚Äì meraviglioso e familiare, come il ricordo delle C√†riti. E con calma indolenza cre√≤ questo fiore." 6823..7330) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7332..7333)), span: StrSpan("</p>" 7330..7334) }
token: Text { text: StrSpan("\n\n" 7334..7336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7337..7338), span: StrSpan("<p" 7336..7338) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7339..7344), value: StrSpan("testo_personaggio testo_maiuscoletto" 7346..7382), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7339..7383) }
token: ElementEnd { end: Open, span: StrSpan(">" 7383..7384) }
token: Text { text: StrSpan("T√†natos." 7384..7393) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7395..7396)), span: StrSpan("</p>" 7393..7397) }
token: Text { text: StrSpan("\n" 7397..7398) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7399..7400), span: StrSpan("<p" 7398..7400) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7401..7406), value: StrSpan("testo_dialogo" 7408..7421), span: StrSpan("class=\"testo_dialogo\"" 7401..7422) }
token: ElementEnd { end: Open, span: StrSpan(">" 7422..7423) }
token: Text { text: StrSpan("Siamo cose feroci, noialtri immortali. Io mi chiedo fin dove gli Olimpici faranno il destino. Tutto osare pu√≤ darsi distrugga anche loro." 7423..7561) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7563..7564)), span: StrSpan("</p>" 7561..7565) }
token: Text { text: StrSpan("\n\n" 7565..7567) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7568..7569), span: StrSpan("<p" 7567..7569) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7570..7575), value: StrSpan("testo_personaggio testo_maiuscoletto" 7577..7613), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7570..7614) }
token: ElementEnd { end: Open, span: StrSpan(">" 7614..7615) }
token: Text { text: StrSpan("Eros." 7615..7620) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7622..7623)), span: StrSpan("</p>" 7620..7624) }
token: Text { text: StrSpan("\n" 7624..7625) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7626..7627), span: StrSpan("<p" 7625..7627) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7628..7633), value: StrSpan("testo_dialogo" 7635..7648), span: StrSpan("class=\"testo_dialogo\"" 7628..7649) }
token: ElementEnd { end: Open, span: StrSpan(">" 7649..7650) }
token: Text { text: StrSpan("Chi pu√≤ dirlo? Dai tempi del caos non si √® visto che sangue. Sangue d‚Äôuomini, di mostri e di d√®i. Si comincia e si muore nel sangue. Tu come credi di esser nato?" 7650..7816) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7818..7819)), span: StrSpan("</p>" 7816..7820) }
token: Text { text: StrSpan("\n\n" 7820..7822) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7823..7824), span: StrSpan("<p" 7822..7824) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7825..7830), value: StrSpan("testo_personaggio testo_maiuscoletto" 7832..7868), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7825..7869) }
token: ElementEnd { end: Open, span: StrSpan(">" 7869..7870) }
token: Text { text: StrSpan("T√†natos." 7870..7879) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7881..7882)), span: StrSpan("</p>" 7879..7883) }
token: Text { text: StrSpan("\n" 7883..7884) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7885..7886), span: StrSpan("<p" 7884..7886) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7887..7892), value: StrSpan("testo_dialogo" 7894..7907), span: StrSpan("class=\"testo_dialogo\"" 7887..7908) }
token: ElementEnd { end: Open, span: StrSpan(">" 7908..7909) }
token: Text { text: StrSpan("Che per nascere occorra morire, lo sanno anche gli uomini. Non lo sanno gli Olimpici. Se lo sono scordato. Loro durano in un mondo che passa. Non esistono: sono. Ogni loro capriccio √® una legge fatale. Per esprimere un fiore distruggono un uomo." 7909..8155) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8157..8158)), span: StrSpan("</p>" 8155..8159) }
token: Text { text: StrSpan("\n\n" 8159..8161) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8162..8163), span: StrSpan("<p" 8161..8163) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8164..8169), value: StrSpan("testo_personaggio testo_maiuscoletto" 8171..8207), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8164..8208) }
token: ElementEnd { end: Open, span: StrSpan(">" 8208..8209) }
token: Text { text: StrSpan("Eros." 8209..8214) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8216..8217)), span: StrSpan("</p>" 8214..8218) }
token: Text { text: StrSpan("\n" 8218..8219) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8220..8221), span: StrSpan("<p" 8219..8221) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8222..8227), value: StrSpan("testo_dialogo" 8229..8242), span: StrSpan("class=\"testo_dialogo\"" 8222..8243) }
token: ElementEnd { end: Open, span: StrSpan(">" 8243..8244) }
token: Text { text: StrSpan("S√≠, T√†natos. Ma non vogliamo tener conto dei ricchi pensieri che Iacinto incontr√≤? Quell‚Äôansiosa speranza che fu il suo morire fu pure il suo nascere. Era un giovane inconscio, un poco assorto, annebbiato d‚Äôinfanzia, il figliolo d‚ÄôAmicle, re modesto di terra modesta ‚Äì che cosa mai sarebbe stato senza l‚Äôospite di Delo?" 8244..8576) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8578..8579)), span: StrSpan("</p>" 8576..8580) }
token: Text { text: StrSpan("\n\n" 8580..8582) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8583..8584), span: StrSpan("<p" 8582..8584) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8585..8590), value: StrSpan("testo_personaggio testo_maiuscoletto" 8592..8628), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8585..8629) }
token: ElementEnd { end: Open, span: StrSpan(">" 8629..8630) }
token: Text { text: StrSpan("T√†natos." 8630..8639) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8641..8642)), span: StrSpan("</p>" 8639..8643) }
token: Text { text: StrSpan("\n" 8643..8644) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8645..8646), span: StrSpan("<p" 8644..8646) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8647..8652), value: StrSpan("testo_dialogo" 8654..8667), span: StrSpan("class=\"testo_dialogo\"" 8647..8668) }
token: ElementEnd { end: Open, span: StrSpan(">" 8668..8669) }
token: Text { text: StrSpan("Un uomo tra gli uomini, Eros." 8669..8698) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8700..8701)), span: StrSpan("</p>" 8698..8702) }
token: Text { text: StrSpan("\n\n" 8702..8704) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8705..8706), span: StrSpan("<p" 8704..8706) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8707..8712), value: StrSpan("testo_personaggio testo_maiuscoletto" 8714..8750), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8707..8751) }
token: ElementEnd { end: Open, span: StrSpan(">" 8751..8752) }
token: Text { text: StrSpan("Eros." 8752..8757) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8759..8760)), span: StrSpan("</p>" 8757..8761) }
token: Text { text: StrSpan("\n" 8761..8762) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8763..8764), span: StrSpan("<p" 8762..8764) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8765..8770), value: StrSpan("testo_dialogo" 8772..8785), span: StrSpan("class=\"testo_dialogo\"" 8765..8786) }
token: ElementEnd { end: Open, span: StrSpan(">" 8786..8787) }
token: Text { text: StrSpan("Lo so. E so pure che alla sorte non si sfugge. Ma non son uso intenerirmi su un capriccio. Iacinto ha vissuto sei giorni nell‚Äôombra di una luce. Non gli manc√≤, della gioia perfetta, nemmeno la fine rapida e amara. Quella che Olimpici e immortali non conoscono. Che altro vorresti, T√†natos, per lui?" 8787..9089) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9091..9092)), span: StrSpan("</p>" 9089..9093) }
token: Text { text: StrSpan("\n\n" 9093..9095) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9096..9097), span: StrSpan("<p" 9095..9097) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9098..9103), value: StrSpan("testo_personaggio testo_maiuscoletto" 9105..9141), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9098..9142) }
token: ElementEnd { end: Open, span: StrSpan(">" 9142..9143) }
token: Text { text: StrSpan("T√†natos." 9143..9152) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9154..9155)), span: StrSpan("</p>" 9152..9156) }
token: Text { text: StrSpan("\n" 9156..9157) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9158..9159), span: StrSpan("<p" 9157..9159) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9160..9165), value: StrSpan("testo_dialogo" 9167..9180), span: StrSpan("class=\"testo_dialogo\"" 9160..9181) }
token: ElementEnd { end: Open, span: StrSpan(">" 9181..9182) }
token: Text { text: StrSpan("Che il Radioso lo piangesse come noi." 9182..9219) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9221..9222)), span: StrSpan("</p>" 9219..9223) }
token: Text { text: StrSpan("\n\n" 9223..9225) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9226..9227), span: StrSpan("<p" 9225..9227) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9228..9233), value: StrSpan("testo_personaggio testo_maiuscoletto" 9235..9271), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9228..9272) }
token: ElementEnd { end: Open, span: StrSpan(">" 9272..9273) }
token: Text { text: StrSpan("Eros." 9273..9278) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9280..9281)), span: StrSpan("</p>" 9278..9282) }
token: Text { text: StrSpan("\n" 9282..9283) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9284..9285), span: StrSpan("<p" 9283..9285) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9286..9291), value: StrSpan("testo_dialogo" 9293..9306), span: StrSpan("class=\"testo_dialogo\"" 9286..9307) }
token: ElementEnd { end: Open, span: StrSpan(">" 9307..9308) }
token: Text { text: StrSpan("Tu chiedi troppo, T√†natos." 9308..9335) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9337..9338)), span: StrSpan("</p>" 9335..9339) }
token: Text { text: StrSpan("\n" 9339..9340) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 9342..9346)), span: StrSpan("</body>" 9340..9347) }
token: Text { text: StrSpan("\n" 9347..9348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 9350..9354)), span: StrSpan("</html>" 9348..9355) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La belva" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("Noi siamo convinti che gli amori di Artemide con Endimione non furono cosa carnale. Ci√≤ beninteso non esclude ‚Äì tutt‚Äôaltro ‚Äì che il meno energico dei due anelasse a sparger sangue. Il carattere non dolce della dea vergine ‚Äì signora delle belve, ed emersa nel mondo da una selva d‚Äôindescrivibili madri divine del mostruoso Mediterraneo ‚Äì √® noto. Altrettanto noto √® che uno quando non dorme vorrebbe dormire e passa alla storia come l‚Äôeterno sognatore." 358..825) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 827..828)), span: StrSpan("</p>" 825..829) }
token: Text { text: StrSpan("\n\n" 829..831) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 832..833), span: StrSpan("<p" 831..833) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 834..839), value: StrSpan("testo_indicazioni_scena" 841..864), span: StrSpan("class=\"testo_indicazioni_scena\"" 834..865) }
token: ElementEnd { end: Open, span: StrSpan(">" 865..866) }
token: Text { text: StrSpan("(parlano Endimione e uno straniero)" 866..901) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 903..904)), span: StrSpan("</p>" 901..905) }
token: Text { text: StrSpan("\n\n" 905..907) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 908..909), span: StrSpan("<p" 907..909) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 910..915), value: StrSpan("testo_personaggio testo_maiuscoletto" 917..953), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 910..954) }
token: ElementEnd { end: Open, span: StrSpan(">" 954..955) }
token: Text { text: StrSpan("Endimione." 955..965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 967..968)), span: StrSpan("</p>" 965..969) }
token: Text { text: StrSpan("\n" 969..970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 971..972), span: StrSpan("<p" 970..972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 973..978), value: StrSpan("testo_dialogo" 980..993), span: StrSpan("class=\"testo_dialogo\"" 973..994) }
token: ElementEnd { end: Open, span: StrSpan(">" 994..995) }
token: Text { text: StrSpan("Ascolta, passante. Come a straniero posso dirti queste cose. Non spaventarti dei miei occhi di folle. Gli stracci che ti avvolgono i piedi sono brutti come i miei occhi, ma tu sembri un uomo valido che quando vorr√† si fermer√† nel paese che ha scelto, e qui avr√† un riparo, un lavoro, una casa. Ma sono convinto che se adesso cammini √® perch√© non hai nulla se non la tua sorte. E tu vai per le strade a quest‚Äôora dell‚Äôalba ‚Äì dunque ti piace essere sveglio tra le cose quando escono appena dal buio e nessuno le ha ancora toccate. Vedi quel monte? √à il Latmo. Io l‚Äôho salito tante volte nella notte, quand‚Äôera pi√∫ nero, e ho atteso l‚Äôalba tra i suoi faggi. Eppure mi pare di non averlo toccato mai." 995..1710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1712..1713)), span: StrSpan("</p>" 1710..1714) }
token: Text { text: StrSpan("\n\n" 1714..1716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1717..1718), span: StrSpan("<p" 1716..1718) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1719..1724), value: StrSpan("testo_personaggio testo_maiuscoletto" 1726..1762), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1719..1763) }
token: ElementEnd { end: Open, span: StrSpan(">" 1763..1764) }
token: Text { text: StrSpan("Straniero." 1764..1774) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1776..1777)), span: StrSpan("</p>" 1774..1778) }
token: Text { text: StrSpan("\n" 1778..1779) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1780..1781), span: StrSpan("<p" 1779..1781) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1782..1787), value: StrSpan("testo_dialogo" 1789..1802), span: StrSpan("class=\"testo_dialogo\"" 1782..1803) }
token: ElementEnd { end: Open, span: StrSpan(">" 1803..1804) }
token: Text { text: StrSpan("Chi pu√≤ dire di aver mai toccato quello accanto a cui passa?" 1804..1865) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1867..1868)), span: StrSpan("</p>" 1865..1869) }
token: Text { text: StrSpan("\n\n" 1869..1871) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1872..1873), span: StrSpan("<p" 1871..1873) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1874..1879), value: StrSpan("testo_personaggio testo_maiuscoletto" 1881..1917), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1874..1918) }
token: ElementEnd { end: Open, span: StrSpan(">" 1918..1919) }
token: Text { text: StrSpan("Endimione." 1919..1929) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1931..1932)), span: StrSpan("</p>" 1929..1933) }
token: Text { text: StrSpan("\n" 1933..1934) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1935..1936), span: StrSpan("<p" 1934..1936) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1937..1942), value: StrSpan("testo_dialogo" 1944..1957), span: StrSpan("class=\"testo_dialogo\"" 1937..1958) }
token: ElementEnd { end: Open, span: StrSpan(">" 1958..1959) }
token: Text { text: StrSpan("Penso a volte che noi siamo come il vento che trascorre impalpabile. O come i sogni di chi dorme. Tu ami, straniero, dormire di giorno?" 1959..2094) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2096..2097)), span: StrSpan("</p>" 2094..2098) }
token: Text { text: StrSpan("\n\n" 2098..2100) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2101..2102), span: StrSpan("<p" 2100..2102) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2103..2108), value: StrSpan("testo_personaggio testo_maiuscoletto" 2110..2146), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2103..2147) }
token: ElementEnd { end: Open, span: StrSpan(">" 2147..2148) }
token: Text { text: StrSpan("Straniero." 2148..2158) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2160..2161)), span: StrSpan("</p>" 2158..2162) }
token: Text { text: StrSpan("\n" 2162..2163) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2164..2165), span: StrSpan("<p" 2163..2165) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2166..2171), value: StrSpan("testo_dialogo" 2173..2186), span: StrSpan("class=\"testo_dialogo\"" 2166..2187) }
token: ElementEnd { end: Open, span: StrSpan(">" 2187..2188) }
token: Text { text: StrSpan("Dormo comunque, quando ho sonno e casco." 2188..2228) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2230..2231)), span: StrSpan("</p>" 2228..2232) }
token: Text { text: StrSpan("\n\n" 2232..2234) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2235..2236), span: StrSpan("<p" 2234..2236) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2237..2242), value: StrSpan("testo_personaggio testo_maiuscoletto" 2244..2280), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2237..2281) }
token: ElementEnd { end: Open, span: StrSpan(">" 2281..2282) }
token: Text { text: StrSpan("Endimione." 2282..2292) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2294..2295)), span: StrSpan("</p>" 2292..2296) }
token: Text { text: StrSpan("\n" 2296..2297) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2298..2299), span: StrSpan("<p" 2297..2299) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2300..2305), value: StrSpan("testo_dialogo" 2307..2320), span: StrSpan("class=\"testo_dialogo\"" 2300..2321) }
token: ElementEnd { end: Open, span: StrSpan(">" 2321..2322) }
token: Text { text: StrSpan("E nel sonno ti accade ‚Äì tu che vai per le strade ‚Äì di ascoltar lo stormire del vento, e gli uccelli, gli stagni, il ronz√≠o, la voce dell‚Äôacqua? Non ti pare, dormendo, di non essere mai solo?" 2322..2519) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2521..2522)), span: StrSpan("</p>" 2519..2523) }
token: Text { text: StrSpan("\n\n" 2523..2525) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2526..2527), span: StrSpan("<p" 2525..2527) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2528..2533), value: StrSpan("testo_personaggio testo_maiuscoletto" 2535..2571), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2528..2572) }
token: ElementEnd { end: Open, span: StrSpan(">" 2572..2573) }
token: Text { text: StrSpan("Straniero." 2573..2583) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2585..2586)), span: StrSpan("</p>" 2583..2587) }
token: Text { text: StrSpan("\n" 2587..2588) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2589..2590), span: StrSpan("<p" 2588..2590) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2591..2596), value: StrSpan("testo_dialogo" 2598..2611), span: StrSpan("class=\"testo_dialogo\"" 2591..2612) }
token: ElementEnd { end: Open, span: StrSpan(">" 2612..2613) }
token: Text { text: StrSpan("Amico, non saprei. Sono vissuto sempre solo." 2613..2657) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2659..2660)), span: StrSpan("</p>" 2657..2661) }
token: Text { text: StrSpan("\n\n" 2661..2663) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2664..2665), span: StrSpan("<p" 2663..2665) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2666..2671), value: StrSpan("testo_personaggio testo_maiuscoletto" 2673..2709), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2666..2710) }
token: ElementEnd { end: Open, span: StrSpan(">" 2710..2711) }
token: Text { text: StrSpan("Endimione." 2711..2721) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2723..2724)), span: StrSpan("</p>" 2721..2725) }
token: Text { text: StrSpan("\n" 2725..2726) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2727..2728), span: StrSpan("<p" 2726..2728) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2729..2734), value: StrSpan("testo_dialogo" 2736..2749), span: StrSpan("class=\"testo_dialogo\"" 2729..2750) }
token: ElementEnd { end: Open, span: StrSpan(">" 2750..2751) }
token: Text { text: StrSpan("O straniero, io non trovo pi√∫ pace nel sonno. Credo di aver dormito sempre, eppure so che non √® vero." 2751..2854) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2856..2857)), span: StrSpan("</p>" 2854..2858) }
token: Text { text: StrSpan("\n\n" 2858..2860) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2861..2862), span: StrSpan("<p" 2860..2862) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2863..2868), value: StrSpan("testo_personaggio testo_maiuscoletto" 2870..2906), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2863..2907) }
token: ElementEnd { end: Open, span: StrSpan(">" 2907..2908) }
token: Text { text: StrSpan("Straniero." 2908..2918) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2920..2921)), span: StrSpan("</p>" 2918..2922) }
token: Text { text: StrSpan("\n" 2922..2923) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2924..2925), span: StrSpan("<p" 2923..2925) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2926..2931), value: StrSpan("testo_dialogo" 2933..2946), span: StrSpan("class=\"testo_dialogo\"" 2926..2947) }
token: ElementEnd { end: Open, span: StrSpan(">" 2947..2948) }
token: Text { text: StrSpan("Tu mi sembri uomo fatto, e robusto." 2948..2983) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2985..2986)), span: StrSpan("</p>" 2983..2987) }
token: Text { text: StrSpan("\n\n" 2987..2989) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2990..2991), span: StrSpan("<p" 2989..2991) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2992..2997), value: StrSpan("testo_personaggio testo_maiuscoletto" 2999..3035), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2992..3036) }
token: ElementEnd { end: Open, span: StrSpan(">" 3036..3037) }
token: Text { text: StrSpan("Endimione." 3037..3047) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3049..3050)), span: StrSpan("</p>" 3047..3051) }
token: Text { text: StrSpan("\n" 3051..3052) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3053..3054), span: StrSpan("<p" 3052..3054) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3055..3060), value: StrSpan("testo_dialogo" 3062..3075), span: StrSpan("class=\"testo_dialogo\"" 3055..3076) }
token: ElementEnd { end: Open, span: StrSpan(">" 3076..3077) }
token: Text { text: StrSpan("Lo sono, straniero, lo sono. E so il sonno del vino, e quello pesante che si dorme al fianco di una donna, ma tutto questo non mi giova. Dal mio letto oramai tendo l‚Äôudito, e sto pronto a balzare, e ho questi occhi, questi occhi, come di chi fissa nel buio. Mi pare di esser sempre vissuto cos√≠." 3077..3375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3377..3378)), span: StrSpan("</p>" 3375..3379) }
token: Text { text: StrSpan("\n\n" 3379..3381) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3382..3383), span: StrSpan("<p" 3381..3383) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3384..3389), value: StrSpan("testo_personaggio testo_maiuscoletto" 3391..3427), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3384..3428) }
token: ElementEnd { end: Open, span: StrSpan(">" 3428..3429) }
token: Text { text: StrSpan("Straniero." 3429..3439) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3441..3442)), span: StrSpan("</p>" 3439..3443) }
token: Text { text: StrSpan("\n" 3443..3444) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3445..3446), span: StrSpan("<p" 3444..3446) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3447..3452), value: StrSpan("testo_dialogo" 3454..3467), span: StrSpan("class=\"testo_dialogo\"" 3447..3468) }
token: ElementEnd { end: Open, span: StrSpan(">" 3468..3469) }
token: Text { text: StrSpan("Ti √® mancato qualcuno?" 3469..3492) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3494..3495)), span: StrSpan("</p>" 3492..3496) }
token: Text { text: StrSpan("\n\n" 3496..3498) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3499..3500), span: StrSpan("<p" 3498..3500) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3501..3506), value: StrSpan("testo_personaggio testo_maiuscoletto" 3508..3544), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3501..3545) }
token: ElementEnd { end: Open, span: StrSpan(">" 3545..3546) }
token: Text { text: StrSpan("Endimione." 3546..3556) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3558..3559)), span: StrSpan("</p>" 3556..3560) }
token: Text { text: StrSpan("\n" 3560..3561) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3562..3563), span: StrSpan("<p" 3561..3563) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3564..3569), value: StrSpan("testo_dialogo" 3571..3584), span: StrSpan("class=\"testo_dialogo\"" 3564..3585) }
token: ElementEnd { end: Open, span: StrSpan(">" 3585..3586) }
token: Text { text: StrSpan("Qualcuno? O straniero, tu lo credi che noi siamo mortali?" 3586..3643) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3645..3646)), span: StrSpan("</p>" 3643..3647) }
token: Text { text: StrSpan("\n\n" 3647..3649) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3650..3651), span: StrSpan("<p" 3649..3651) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3652..3657), value: StrSpan("testo_personaggio testo_maiuscoletto" 3659..3695), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3652..3696) }
token: ElementEnd { end: Open, span: StrSpan(">" 3696..3697) }
token: Text { text: StrSpan("Straniero." 3697..3707) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3709..3710)), span: StrSpan("</p>" 3707..3711) }
token: Text { text: StrSpan("\n" 3711..3712) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3713..3714), span: StrSpan("<p" 3712..3714) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3715..3720), value: StrSpan("testo_dialogo" 3722..3735), span: StrSpan("class=\"testo_dialogo\"" 3715..3736) }
token: ElementEnd { end: Open, span: StrSpan(">" 3736..3737) }
token: Text { text: StrSpan("Qualcuno ti √® morto?" 3737..3758) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3760..3761)), span: StrSpan("</p>" 3758..3762) }
token: Text { text: StrSpan("\n\n" 3762..3764) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3765..3766), span: StrSpan("<p" 3764..3766) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3767..3772), value: StrSpan("testo_personaggio testo_maiuscoletto" 3774..3810), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3767..3811) }
token: ElementEnd { end: Open, span: StrSpan(">" 3811..3812) }
token: Text { text: StrSpan("Endimione." 3812..3822) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3824..3825)), span: StrSpan("</p>" 3822..3826) }
token: Text { text: StrSpan("\n" 3826..3827) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3828..3829), span: StrSpan("<p" 3827..3829) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3830..3835), value: StrSpan("testo_dialogo" 3837..3850), span: StrSpan("class=\"testo_dialogo\"" 3830..3851) }
token: ElementEnd { end: Open, span: StrSpan(">" 3851..3852) }
token: Text { text: StrSpan("Non qualcuno. Straniero, quando salgo sul Latmo io non sono pi√∫ un mortale. Non guardare i miei occhi, non contano. So che non sogno, da tanto non dormo. Vedi le chiazze di quei faggi, sulla rupe? Questa notte ero l√† e l‚Äôho aspettata." 3852..4090) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4092..4093)), span: StrSpan("</p>" 4090..4094) }
token: Text { text: StrSpan("\n\n" 4094..4096) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4097..4098), span: StrSpan("<p" 4096..4098) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4099..4104), value: StrSpan("testo_personaggio testo_maiuscoletto" 4106..4142), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4099..4143) }
token: ElementEnd { end: Open, span: StrSpan(">" 4143..4144) }
token: Text { text: StrSpan("Straniero." 4144..4154) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4156..4157)), span: StrSpan("</p>" 4154..4158) }
token: Text { text: StrSpan("\n" 4158..4159) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4160..4161), span: StrSpan("<p" 4159..4161) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4162..4167), value: StrSpan("testo_dialogo" 4169..4182), span: StrSpan("class=\"testo_dialogo\"" 4162..4183) }
token: ElementEnd { end: Open, span: StrSpan(">" 4183..4184) }
token: Text { text: StrSpan("Chi doveva venire?" 4184..4202) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4204..4205)), span: StrSpan("</p>" 4202..4206) }
token: Text { text: StrSpan("\n\n" 4206..4208) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4209..4210), span: StrSpan("<p" 4208..4210) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4211..4216), value: StrSpan("testo_personaggio testo_maiuscoletto" 4218..4254), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4211..4255) }
token: ElementEnd { end: Open, span: StrSpan(">" 4255..4256) }
token: Text { text: StrSpan("Endimione." 4256..4266) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4268..4269)), span: StrSpan("</p>" 4266..4270) }
token: Text { text: StrSpan("\n" 4270..4271) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4272..4273), span: StrSpan("<p" 4271..4273) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4274..4279), value: StrSpan("testo_dialogo" 4281..4294), span: StrSpan("class=\"testo_dialogo\"" 4274..4295) }
token: ElementEnd { end: Open, span: StrSpan(">" 4295..4296) }
token: Text { text: StrSpan("Non diciamo il suo nome. Non diciamolo. Non ha nome. O ne ha molti, lo so. Compagno uomo, tu sai cos‚Äô√® l‚Äôorrore del bosco quando vi si apre una radura notturna? O no. Quando ripensi nottetempo alla radura che hai veduto e traversato di giorno, e l√† c‚Äô√® un fiore, una bacca che sai, che oscilla al vento, e questa bacca, questo fiore, √® una cosa selvaggia, intoccabile, mortale, fra tutte le cose selvagge? Capisci questo? Un fiore che √® come una belva? Compagno, hai mai guardato con spavento e con voglia la natura di una lupa, di una daina, di una serpe?" 4296..4863) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4865..4866)), span: StrSpan("</p>" 4863..4867) }
token: Text { text: StrSpan("\n\n" 4867..4869) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4870..4871), span: StrSpan("<p" 4869..4871) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4872..4877), value: StrSpan("testo_personaggio testo_maiuscoletto" 4879..4915), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4872..4916) }
token: ElementEnd { end: Open, span: StrSpan(">" 4916..4917) }
token: Text { text: StrSpan("Straniero." 4917..4927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4929..4930)), span: StrSpan("</p>" 4927..4931) }
token: Text { text: StrSpan("\n" 4931..4932) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4933..4934), span: StrSpan("<p" 4932..4934) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4935..4940), value: StrSpan("testo_dialogo" 4942..4955), span: StrSpan("class=\"testo_dialogo\"" 4935..4956) }
token: ElementEnd { end: Open, span: StrSpan(">" 4956..4957) }
token: Text { text: StrSpan("Intendi, il sesso della belva viva?" 4957..4992) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4994..4995)), span: StrSpan("</p>" 4992..4996) }
token: Text { text: StrSpan("\n\n" 4996..4998) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4999..5000), span: StrSpan("<p" 4998..5000) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5001..5006), value: StrSpan("testo_personaggio testo_maiuscoletto" 5008..5044), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5001..5045) }
token: ElementEnd { end: Open, span: StrSpan(">" 5045..5046) }
token: Text { text: StrSpan("Endimione." 5046..5056) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5058..5059)), span: StrSpan("</p>" 5056..5060) }
token: Text { text: StrSpan("\n" 5060..5061) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5062..5063), span: StrSpan("<p" 5061..5063) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5064..5069), value: StrSpan("testo_dialogo" 5071..5084), span: StrSpan("class=\"testo_dialogo\"" 5064..5085) }
token: ElementEnd { end: Open, span: StrSpan(">" 5085..5086) }
token: Text { text: StrSpan("S√≠ ma non basta. Hai mai conosciuto persona che fosse molte cose in una, le portasse con s√©, che ogni suo gesto, ogni pensiero che tu fai di lei racchiudesse infinite cose della tua terra e del tuo cielo, e parole, ricordi, giorni andati che non saprai mai, giorni futuri, certezze, e un‚Äôaltra terra e un altro cielo che non ti √® dato possedere?" 5086..5436) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5438..5439)), span: StrSpan("</p>" 5436..5440) }
token: Text { text: StrSpan("\n\n" 5440..5442) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5443..5444), span: StrSpan("<p" 5442..5444) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5445..5450), value: StrSpan("testo_personaggio testo_maiuscoletto" 5452..5488), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5445..5489) }
token: ElementEnd { end: Open, span: StrSpan(">" 5489..5490) }
token: Text { text: StrSpan("Straniero." 5490..5500) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5502..5503)), span: StrSpan("</p>" 5500..5504) }
token: Text { text: StrSpan("\n" 5504..5505) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5506..5507), span: StrSpan("<p" 5505..5507) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5508..5513), value: StrSpan("testo_dialogo" 5515..5528), span: StrSpan("class=\"testo_dialogo\"" 5508..5529) }
token: ElementEnd { end: Open, span: StrSpan(">" 5529..5530) }
token: Text { text: StrSpan("Ho sentito parlare di questo." 5530..5559) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5561..5562)), span: StrSpan("</p>" 5559..5563) }
token: Text { text: StrSpan("\n\n" 5563..5565) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5566..5567), span: StrSpan("<p" 5565..5567) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5568..5573), value: StrSpan("testo_personaggio testo_maiuscoletto" 5575..5611), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5568..5612) }
token: ElementEnd { end: Open, span: StrSpan(">" 5612..5613) }
token: Text { text: StrSpan("Endimione." 5613..5623) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5625..5626)), span: StrSpan("</p>" 5623..5627) }
token: Text { text: StrSpan("\n" 5627..5628) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5629..5630), span: StrSpan("<p" 5628..5630) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5631..5636), value: StrSpan("testo_dialogo" 5638..5651), span: StrSpan("class=\"testo_dialogo\"" 5631..5652) }
token: ElementEnd { end: Open, span: StrSpan(">" 5652..5653) }
token: Text { text: StrSpan("O straniero, e se questa persona √® la belva, la cosa selvaggia, la natura intoccabile, che non ha nome?" 5653..5757) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5759..5760)), span: StrSpan("</p>" 5757..5761) }
token: Text { text: StrSpan("\n\n" 5761..5763) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5764..5765), span: StrSpan("<p" 5763..5765) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5766..5771), value: StrSpan("testo_personaggio testo_maiuscoletto" 5773..5809), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5766..5810) }
token: ElementEnd { end: Open, span: StrSpan(">" 5810..5811) }
token: Text { text: StrSpan("Straniero." 5811..5821) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5823..5824)), span: StrSpan("</p>" 5821..5825) }
token: Text { text: StrSpan("\n" 5825..5826) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5827..5828), span: StrSpan("<p" 5826..5828) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5829..5834), value: StrSpan("testo_dialogo" 5836..5849), span: StrSpan("class=\"testo_dialogo\"" 5829..5850) }
token: ElementEnd { end: Open, span: StrSpan(">" 5850..5851) }
token: Text { text: StrSpan("Tu parli di cose terribili." 5851..5878) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5880..5881)), span: StrSpan("</p>" 5878..5882) }
token: Text { text: StrSpan("\n\n" 5882..5884) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5885..5886), span: StrSpan("<p" 5884..5886) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5887..5892), value: StrSpan("testo_personaggio testo_maiuscoletto" 5894..5930), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5887..5931) }
token: ElementEnd { end: Open, span: StrSpan(">" 5931..5932) }
token: Text { text: StrSpan("Endimione." 5932..5942) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5944..5945)), span: StrSpan("</p>" 5942..5946) }
token: Text { text: StrSpan("\n" 5946..5947) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5948..5949), span: StrSpan("<p" 5947..5949) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5950..5955), value: StrSpan("testo_dialogo" 5957..5970), span: StrSpan("class=\"testo_dialogo\"" 5950..5971) }
token: ElementEnd { end: Open, span: StrSpan(">" 5971..5972) }
token: Text { text: StrSpan("Ma non basta. Tu mi ascolti, com‚Äô√® giusto. E se vai per le strade, sai che la terra √® tutta piena di divino e di terribile. Se ti parlo √® perch√©, come viandanti e sconosciuti, anche noi siamo un poco divini." 5972..6185) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6187..6188)), span: StrSpan("</p>" 6185..6189) }
token: Text { text: StrSpan("\n\n" 6189..6191) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6192..6193), span: StrSpan("<p" 6191..6193) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6194..6199), value: StrSpan("testo_personaggio testo_maiuscoletto" 6201..6237), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6194..6238) }
token: ElementEnd { end: Open, span: StrSpan(">" 6238..6239) }
token: Text { text: StrSpan("Straniero." 6239..6249) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6251..6252)), span: StrSpan("</p>" 6249..6253) }
token: Text { text: StrSpan("\n" 6253..6254) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6255..6256), span: StrSpan("<p" 6254..6256) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6257..6262), value: StrSpan("testo_dialogo" 6264..6277), span: StrSpan("class=\"testo_dialogo\"" 6257..6278) }
token: ElementEnd { end: Open, span: StrSpan(">" 6278..6279) }
token: Text { text: StrSpan("Certo, ho veduto molte cose. E qualcuna terribile. Ma non occorre andar lontano. Se pu√≤ giovarti, ti dir√≤ che gli immortali sanno la strada della cappa del camino." 6279..6444) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6446..6447)), span: StrSpan("</p>" 6444..6448) }
token: Text { text: StrSpan("\n\n" 6448..6450) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6451..6452), span: StrSpan("<p" 6450..6452) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6453..6458), value: StrSpan("testo_personaggio testo_maiuscoletto" 6460..6496), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6453..6497) }
token: ElementEnd { end: Open, span: StrSpan(">" 6497..6498) }
token: Text { text: StrSpan("Endimione." 6498..6508) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6510..6511)), span: StrSpan("</p>" 6508..6512) }
token: Text { text: StrSpan("\n" 6512..6513) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6514..6515), span: StrSpan("<p" 6513..6515) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6516..6521), value: StrSpan("testo_dialogo" 6523..6536), span: StrSpan("class=\"testo_dialogo\"" 6516..6537) }
token: ElementEnd { end: Open, span: StrSpan(">" 6537..6538) }
token: Text { text: StrSpan("Dunque, lo sai, e mi puoi credere. Io dormivo una sera sul Latmo ‚Äì era notte ‚Äì mi ero attardato nel vagabondare, e seduto dormivo, contro un tronco. Mi risvegliai sotto la luna ‚Äì nel sogno ebbi un brivido al pensiero ch‚Äôero l√†, nella radura ‚Äì e la vidi. La vidi che mi guardava, con quegli occhi un poco obliqui, occhi fermi, trasparenti, grandi dentro. Io non lo seppi allora, non lo sapevo l‚Äôindomani, ma ero gi√† cosa sua, preso nel cerchio dei suoi occhi, dello spazio che occupava, della radura, del monte. Mi salut√≤ con un sorriso chiuso; io le dissi: ¬´" 6538..7112) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 7113..7114), span: StrSpan("<q" 7112..7114) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7115..7120), value: StrSpan("testo_no_virgolette" 7122..7141), span: StrSpan("class=\"testo_no_virgolette\"" 7115..7142) }
token: ElementEnd { end: Open, span: StrSpan(">" 7142..7143) }
token: Text { text: StrSpan("Signora" 7143..7150) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 7152..7153)), span: StrSpan("</q>" 7150..7154) }
token: Text { text: StrSpan("¬ª; e aggrottava le ciglia, come ragazza un po‚Äô selvatica, come avesse capito che mi stupivo, e quasi dentro sbigottivo, a chiamarla signora. Sempre rimase poi fra noi quello sgomento." 7154..7340) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7342..7343)), span: StrSpan("</p>" 7340..7344) }
token: Text { text: StrSpan("\n" 7344..7345) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7346..7347), span: StrSpan("<p" 7345..7347) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7348..7353), value: StrSpan("testo_dialogo" 7355..7368), span: StrSpan("class=\"testo_dialogo\"" 7348..7369) }
token: ElementEnd { end: Open, span: StrSpan(">" 7369..7370) }
token: Text { text: StrSpan("O straniero, lei mi disse il mio nome e mi venne vicino ‚Äì la tunica non le dava al ginocchio ‚Äì e stendendo la mano mi tocc√≤ sui capelli. Mi tocc√≤ quasi esitando, e le venne un sorriso, un sorriso incredibile, mortale. Io fui per cadere prosternato ‚Äì pensai tutti i suoi nomi ‚Äì ma lei mi trattenne come si trattiene un bimbo, la mano sotto il mento. Sono grande e robusto, mi vedi, lei era fiera e non aveva che quegli occhi ‚Äì una magra ragazza selvatica ‚Äì ma fui come un bimbo. ¬´" 7370..7864) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 7865..7866), span: StrSpan("<q" 7864..7866) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7867..7872), value: StrSpan("testo_no_virgolette" 7874..7893), span: StrSpan("class=\"testo_no_virgolette\"" 7867..7894) }
token: ElementEnd { end: Open, span: StrSpan(">" 7894..7895) }
token: Text { text: StrSpan("Tu non dovrai svegliarti mai" 7895..7923) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 7925..7926)), span: StrSpan("</q>" 7923..7927) }
token: Text { text: StrSpan("¬ª, mi disse. ¬´" 7927..7943) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 7944..7945), span: StrSpan("<q" 7943..7945) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7946..7951), value: StrSpan("testo_no_virgolette" 7953..7972), span: StrSpan("class=\"testo_no_virgolette\"" 7946..7973) }
token: ElementEnd { end: Open, span: StrSpan(">" 7973..7974) }
token: Text { text: StrSpan("Non dovrai fare un gesto. Verr√≤ ancora a trovarti" 7974..8024) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 8026..8027)), span: StrSpan("</q>" 8024..8028) }
token: Text { text: StrSpan("¬ª. E se ne and√≤ per la radura." 8028..8060) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8062..8063)), span: StrSpan("</p>" 8060..8064) }
token: Text { text: StrSpan("\n" 8064..8065) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8066..8067), span: StrSpan("<p" 8065..8067) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8068..8073), value: StrSpan("testo_dialogo" 8075..8088), span: StrSpan("class=\"testo_dialogo\"" 8068..8089) }
token: ElementEnd { end: Open, span: StrSpan(">" 8089..8090) }
token: Text { text: StrSpan("Percorsi il Latmo quella notte, fino all‚Äôalba. Seguii la luna in tutte le forre, nelle macchie, sulle vette. Tesi l‚Äôorecchio che ancora avevo pieno, come d‚Äôacqua marina, di quella voce un poco rauca, fredda, materna. Ogni brus√≠o e ogni ombra mi arrestava. Delle creature selvagge intravvidi soltanto le fughe. Quando venne la luce ‚Äì una luce un po‚Äô livida, coperta ‚Äì guardai dall‚Äôalto la pianura, questa strada che facciamo, straniero, e capii che mai pi√∫ sarei vissuto tra gli uomini. Non ero pi√∫ uno di loro. Attendevo la notte." 8090..8637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8639..8640)), span: StrSpan("</p>" 8637..8641) }
token: Text { text: StrSpan("\n\n" 8641..8643) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8644..8645), span: StrSpan("<p" 8643..8645) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8646..8651), value: StrSpan("testo_personaggio testo_maiuscoletto" 8653..8689), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8646..8690) }
token: ElementEnd { end: Open, span: StrSpan(">" 8690..8691) }
token: Text { text: StrSpan("Straniero." 8691..8701) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8703..8704)), span: StrSpan("</p>" 8701..8705) }
token: Text { text: StrSpan("\n" 8705..8706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8707..8708), span: StrSpan("<p" 8706..8708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8709..8714), value: StrSpan("testo_dialogo" 8716..8729), span: StrSpan("class=\"testo_dialogo\"" 8709..8730) }
token: ElementEnd { end: Open, span: StrSpan(">" 8730..8731) }
token: Text { text: StrSpan("Cose incredibili racconti, Endimione. Ma incredibili in questo che, poich√© senza dubbio sei tornato sul monte, tu viva e cammini tuttora, e la selvaggia, la signora dai nomi, non ti abbia ancora fatto suo." 8731..8937) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8939..8940)), span: StrSpan("</p>" 8937..8941) }
token: Text { text: StrSpan("\n\n" 8941..8943) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8944..8945), span: StrSpan("<p" 8943..8945) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8946..8951), value: StrSpan("testo_personaggio testo_maiuscoletto" 8953..8989), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8946..8990) }
token: ElementEnd { end: Open, span: StrSpan(">" 8990..8991) }
token: Text { text: StrSpan("Endimione." 8991..9001) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9003..9004)), span: StrSpan("</p>" 9001..9005) }
token: Text { text: StrSpan("\n" 9005..9006) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9007..9008), span: StrSpan("<p" 9006..9008) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9009..9014), value: StrSpan("testo_dialogo" 9016..9029), span: StrSpan("class=\"testo_dialogo\"" 9009..9030) }
token: ElementEnd { end: Open, span: StrSpan(">" 9030..9031) }
token: Text { text: StrSpan("Io sono suo, straniero." 9031..9054) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9056..9057)), span: StrSpan("</p>" 9054..9058) }
token: Text { text: StrSpan("\n\n" 9058..9060) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9061..9062), span: StrSpan("<p" 9060..9062) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9063..9068), value: StrSpan("testo_personaggio testo_maiuscoletto" 9070..9106), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9063..9107) }
token: ElementEnd { end: Open, span: StrSpan(">" 9107..9108) }
token: Text { text: StrSpan("Straniero." 9108..9118) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9120..9121)), span: StrSpan("</p>" 9118..9122) }
token: Text { text: StrSpan("\n" 9122..9123) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9124..9125), span: StrSpan("<p" 9123..9125) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9126..9131), value: StrSpan("testo_dialogo" 9133..9146), span: StrSpan("class=\"testo_dialogo\"" 9126..9147) }
token: ElementEnd { end: Open, span: StrSpan(">" 9147..9148) }
token: Text { text: StrSpan("Voglio dire‚Ä¶ Non conosci la storia del pastore lacerato dai cani, l‚Äôindiscreto, l‚Äôuomo-cervo‚Ä¶?" 9148..9250) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9252..9253)), span: StrSpan("</p>" 9250..9254) }
token: Text { text: StrSpan("\n\n" 9254..9256) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9257..9258), span: StrSpan("<p" 9256..9258) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9259..9264), value: StrSpan("testo_personaggio testo_maiuscoletto" 9266..9302), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9259..9303) }
token: ElementEnd { end: Open, span: StrSpan(">" 9303..9304) }
token: Text { text: StrSpan("Endimione." 9304..9314) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9316..9317)), span: StrSpan("</p>" 9314..9318) }
token: Text { text: StrSpan("\n" 9318..9319) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9320..9321), span: StrSpan("<p" 9319..9321) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9322..9327), value: StrSpan("testo_dialogo" 9329..9342), span: StrSpan("class=\"testo_dialogo\"" 9322..9343) }
token: ElementEnd { end: Open, span: StrSpan(">" 9343..9344) }
token: Text { text: StrSpan("O straniero, io so tutto di lei. Perch√© abbiamo parlato, parlato, e io fingevo di dormire, sempre, tutte le notti, e non toccavo la sua mano, come non si tocca la leonessa o l‚Äôacqua verde dello stagno, o la cosa che √® pi√∫ nostra e portiamo nel cuore. Ascolta. Mi sta innanzi ‚Äì una magra ragazza, non sorride, mi guarda. E gli occhi grandi, trasparenti, hanno visto altre cose. Le vedono ancora. Sono loro queste cose. In questi occhi c‚Äô√® la bacca e la belva, c‚Äô√® l‚Äôurlo, la morte, l‚Äôimpetramento crudele. So il sangue sparso, la carne dilaniata, la terra vorace, la solitudine. Per lei, la selvaggia, √® solitudine. Per lei la belva √® solitudine. La sua carezza √® la carezza che si fa al cane o al tronco d‚Äôalbero. Ma, straniero, lei mi guarda, mi guarda, e nella tunica breve √® una magra ragazza, come tu forse ne hai vedute al tuo paese." 9344..10205) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10207..10208)), span: StrSpan("</p>" 10205..10209) }
token: Text { text: StrSpan("\n\n" 10209..10211) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10212..10213), span: StrSpan("<p" 10211..10213) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10214..10219), value: StrSpan("testo_personaggio testo_maiuscoletto" 10221..10257), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10214..10258) }
token: ElementEnd { end: Open, span: StrSpan(">" 10258..10259) }
token: Text { text: StrSpan("Straniero." 10259..10269) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10271..10272)), span: StrSpan("</p>" 10269..10273) }
token: Text { text: StrSpan("\n" 10273..10274) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10275..10276), span: StrSpan("<p" 10274..10276) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10277..10282), value: StrSpan("testo_dialogo" 10284..10297), span: StrSpan("class=\"testo_dialogo\"" 10277..10298) }
token: ElementEnd { end: Open, span: StrSpan(">" 10298..10299) }
token: Text { text: StrSpan("Della tua vita d‚Äôuomo, Endimione, non avete parlato?" 10299..10353) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10355..10356)), span: StrSpan("</p>" 10353..10357) }
token: Text { text: StrSpan("\n\n" 10357..10359) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10360..10361), span: StrSpan("<p" 10359..10361) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10362..10367), value: StrSpan("testo_personaggio testo_maiuscoletto" 10369..10405), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10362..10406) }
token: ElementEnd { end: Open, span: StrSpan(">" 10406..10407) }
token: Text { text: StrSpan("Endimione." 10407..10417) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10419..10420)), span: StrSpan("</p>" 10417..10421) }
token: Text { text: StrSpan("\n" 10421..10422) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10423..10424), span: StrSpan("<p" 10422..10424) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10425..10430), value: StrSpan("testo_dialogo" 10432..10445), span: StrSpan("class=\"testo_dialogo\"" 10425..10446) }
token: ElementEnd { end: Open, span: StrSpan(">" 10446..10447) }
token: Text { text: StrSpan("Straniero, tu sai cose terribili, e non sai che il selvaggio e il divino cancellano l‚Äôuomo?" 10447..10540) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10542..10543)), span: StrSpan("</p>" 10540..10544) }
token: Text { text: StrSpan("\n\n" 10544..10546) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10547..10548), span: StrSpan("<p" 10546..10548) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10549..10554), value: StrSpan("testo_personaggio testo_maiuscoletto" 10556..10592), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10549..10593) }
token: ElementEnd { end: Open, span: StrSpan(">" 10593..10594) }
token: Text { text: StrSpan("Straniero." 10594..10604) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10606..10607)), span: StrSpan("</p>" 10604..10608) }
token: Text { text: StrSpan("\n" 10608..10609) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10610..10611), span: StrSpan("<p" 10609..10611) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10612..10617), value: StrSpan("testo_dialogo" 10619..10632), span: StrSpan("class=\"testo_dialogo\"" 10612..10633) }
token: ElementEnd { end: Open, span: StrSpan(">" 10633..10634) }
token: Text { text: StrSpan("Quando sali sul Latmo non sei pi√∫ mortale, lo so. Ma gli immortali sanno stare soli. E tu non vuoi la solitudine. Tu cerchi il sesso delle bestie. Tu con lei fingi il sonno. Che cos‚Äô√® dunque che le hai chiesto?" 10634..10848) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10850..10851)), span: StrSpan("</p>" 10848..10852) }
token: Text { text: StrSpan("\n\n" 10852..10854) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10855..10856), span: StrSpan("<p" 10854..10856) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10857..10862), value: StrSpan("testo_personaggio testo_maiuscoletto" 10864..10900), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10857..10901) }
token: ElementEnd { end: Open, span: StrSpan(">" 10901..10902) }
token: Text { text: StrSpan("Endimione." 10902..10912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10914..10915)), span: StrSpan("</p>" 10912..10916) }
token: Text { text: StrSpan("\n" 10916..10917) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10918..10919), span: StrSpan("<p" 10917..10919) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10920..10925), value: StrSpan("testo_dialogo" 10927..10940), span: StrSpan("class=\"testo_dialogo\"" 10920..10941) }
token: ElementEnd { end: Open, span: StrSpan(">" 10941..10942) }
token: Text { text: StrSpan("Che sorridesse un‚Äôaltra volta. E questa volta esserle sangue sparso innanzi, essere carne nella bocca del suo cane." 10942..11059) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11061..11062)), span: StrSpan("</p>" 11059..11063) }
token: Text { text: StrSpan("\n\n" 11063..11065) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11066..11067), span: StrSpan("<p" 11065..11067) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11068..11073), value: StrSpan("testo_personaggio testo_maiuscoletto" 11075..11111), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11068..11112) }
token: ElementEnd { end: Open, span: StrSpan(">" 11112..11113) }
token: Text { text: StrSpan("Straniero." 11113..11123) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11125..11126)), span: StrSpan("</p>" 11123..11127) }
token: Text { text: StrSpan("\n" 11127..11128) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11129..11130), span: StrSpan("<p" 11128..11130) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11131..11136), value: StrSpan("testo_dialogo" 11138..11151), span: StrSpan("class=\"testo_dialogo\"" 11131..11152) }
token: ElementEnd { end: Open, span: StrSpan(">" 11152..11153) }
token: Text { text: StrSpan("E che ti ha detto?" 11153..11171) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11173..11174)), span: StrSpan("</p>" 11171..11175) }
token: Text { text: StrSpan("\n\n" 11175..11177) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11178..11179), span: StrSpan("<p" 11177..11179) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11180..11185), value: StrSpan("testo_personaggio testo_maiuscoletto" 11187..11223), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11180..11224) }
token: ElementEnd { end: Open, span: StrSpan(">" 11224..11225) }
token: Text { text: StrSpan("Endimione." 11225..11235) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11237..11238)), span: StrSpan("</p>" 11235..11239) }
token: Text { text: StrSpan("\n" 11239..11240) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11241..11242), span: StrSpan("<p" 11240..11242) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11243..11248), value: StrSpan("testo_dialogo" 11250..11263), span: StrSpan("class=\"testo_dialogo\"" 11243..11264) }
token: ElementEnd { end: Open, span: StrSpan(">" 11264..11265) }
token: Text { text: StrSpan("Nulla dice. Mi guarda. Mi lascia solo, sotto l‚Äôalba. E la cerco tra i faggi. La luce del giorno mi ferisce gli occhi. ¬´" 11265..11387) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 11388..11389), span: StrSpan("<q" 11387..11389) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11390..11395), value: StrSpan("testo_no_virgolette" 11397..11416), span: StrSpan("class=\"testo_no_virgolette\"" 11390..11417) }
token: ElementEnd { end: Open, span: StrSpan(">" 11417..11418) }
token: Text { text: StrSpan("Tu non dovrai svegliarti mai" 11418..11446) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 11448..11449)), span: StrSpan("</q>" 11446..11450) }
token: Text { text: StrSpan("¬ª, mi ha detto." 11450..11466) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11468..11469)), span: StrSpan("</p>" 11466..11470) }
token: Text { text: StrSpan("\n\n" 11470..11472) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11473..11474), span: StrSpan("<p" 11472..11474) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11475..11480), value: StrSpan("testo_personaggio testo_maiuscoletto" 11482..11518), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11475..11519) }
token: ElementEnd { end: Open, span: StrSpan(">" 11519..11520) }
token: Text { text: StrSpan("Straniero." 11520..11530) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11532..11533)), span: StrSpan("</p>" 11530..11534) }
token: Text { text: StrSpan("\n" 11534..11535) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11536..11537), span: StrSpan("<p" 11535..11537) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11538..11543), value: StrSpan("testo_dialogo" 11545..11558), span: StrSpan("class=\"testo_dialogo\"" 11538..11559) }
token: ElementEnd { end: Open, span: StrSpan(">" 11559..11560) }
token: Text { text: StrSpan("O mortale, quel giorno che sarai sveglio veramente, saprai perch√© ti ha risparmiato il suo sorriso." 11560..11660) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11662..11663)), span: StrSpan("</p>" 11660..11664) }
token: Text { text: StrSpan("\n\n" 11664..11666) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11667..11668), span: StrSpan("<p" 11666..11668) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11669..11674), value: StrSpan("testo_personaggio testo_maiuscoletto" 11676..11712), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11669..11713) }
token: ElementEnd { end: Open, span: StrSpan(">" 11713..11714) }
token: Text { text: StrSpan("Endimione." 11714..11724) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11726..11727)), span: StrSpan("</p>" 11724..11728) }
token: Text { text: StrSpan("\n" 11728..11729) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11730..11731), span: StrSpan("<p" 11729..11731) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11732..11737), value: StrSpan("testo_dialogo" 11739..11752), span: StrSpan("class=\"testo_dialogo\"" 11732..11753) }
token: ElementEnd { end: Open, span: StrSpan(">" 11753..11754) }
token: Text { text: StrSpan("Lo so fin d‚Äôora, o straniero, o tu che parli come un dio." 11754..11813) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11815..11816)), span: StrSpan("</p>" 11813..11817) }
token: Text { text: StrSpan("\n\n" 11817..11819) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11820..11821), span: StrSpan("<p" 11819..11821) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11822..11827), value: StrSpan("testo_personaggio testo_maiuscoletto" 11829..11865), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11822..11866) }
token: ElementEnd { end: Open, span: StrSpan(">" 11866..11867) }
token: Text { text: StrSpan("Straniero." 11867..11877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11879..11880)), span: StrSpan("</p>" 11877..11881) }
token: Text { text: StrSpan("\n" 11881..11882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11883..11884), span: StrSpan("<p" 11882..11884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11885..11890), value: StrSpan("testo_dialogo" 11892..11905), span: StrSpan("class=\"testo_dialogo\"" 11885..11906) }
token: ElementEnd { end: Open, span: StrSpan(">" 11906..11907) }
token: Text { text: StrSpan("Il divino e il terribile corron la terra, e noi andiamo sulle strade. L‚Äôhai detto tu stesso." 11907..12001) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12003..12004)), span: StrSpan("</p>" 12001..12005) }
token: Text { text: StrSpan("\n\n" 12005..12007) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12008..12009), span: StrSpan("<p" 12007..12009) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12010..12015), value: StrSpan("testo_personaggio testo_maiuscoletto" 12017..12053), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12010..12054) }
token: ElementEnd { end: Open, span: StrSpan(">" 12054..12055) }
token: Text { text: StrSpan("Endimione." 12055..12065) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12067..12068)), span: StrSpan("</p>" 12065..12069) }
token: Text { text: StrSpan("\n" 12069..12070) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12071..12072), span: StrSpan("<p" 12070..12072) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12073..12078), value: StrSpan("testo_dialogo" 12080..12093), span: StrSpan("class=\"testo_dialogo\"" 12073..12094) }
token: ElementEnd { end: Open, span: StrSpan(">" 12094..12095) }
token: Text { text: StrSpan("O dio viandante, la sua dolcezza √® come l‚Äôalba, √® terra e cielo rivelati. Ed √® divina. Ma per altri, per le cose e le belve, lei la selvaggia ha un riso breve, un comando che annienta. E nessuno le ha mai toccato il ginocchio." 12095..12326) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12328..12329)), span: StrSpan("</p>" 12326..12330) }
token: Text { text: StrSpan("\n\n" 12330..12332) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12333..12334), span: StrSpan("<p" 12332..12334) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12335..12340), value: StrSpan("testo_personaggio testo_maiuscoletto" 12342..12378), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12335..12379) }
token: ElementEnd { end: Open, span: StrSpan(">" 12379..12380) }
token: Text { text: StrSpan("Straniero." 12380..12390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12392..12393)), span: StrSpan("</p>" 12390..12394) }
token: Text { text: StrSpan("\n" 12394..12395) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12396..12397), span: StrSpan("<p" 12395..12397) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12398..12403), value: StrSpan("testo_dialogo" 12405..12418), span: StrSpan("class=\"testo_dialogo\"" 12398..12419) }
token: ElementEnd { end: Open, span: StrSpan(">" 12419..12420) }
token: Text { text: StrSpan("Endimione, rass√©gnati nel tuo cuore mortale. N√© dio n√© uomo l‚Äôha toccata. La sua voce ch‚Äô√® rauca e materna √® tutto quanto la selvaggia ti pu√≤ dare." 12420..12577) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12579..12580)), span: StrSpan("</p>" 12577..12581) }
token: Text { text: StrSpan("\n\n" 12581..12583) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12584..12585), span: StrSpan("<p" 12583..12585) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12586..12591), value: StrSpan("testo_personaggio testo_maiuscoletto" 12593..12629), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12586..12630) }
token: ElementEnd { end: Open, span: StrSpan(">" 12630..12631) }
token: Text { text: StrSpan("Endimione." 12631..12641) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12643..12644)), span: StrSpan("</p>" 12641..12645) }
token: Text { text: StrSpan("\n" 12645..12646) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12647..12648), span: StrSpan("<p" 12646..12648) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12649..12654), value: StrSpan("testo_dialogo" 12656..12669), span: StrSpan("class=\"testo_dialogo\"" 12649..12670) }
token: ElementEnd { end: Open, span: StrSpan(">" 12670..12671) }
token: Text { text: StrSpan("Eppure." 12671..12678) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12680..12681)), span: StrSpan("</p>" 12678..12682) }
token: Text { text: StrSpan("\n\n" 12682..12684) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12685..12686), span: StrSpan("<p" 12684..12686) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12687..12692), value: StrSpan("testo_personaggio testo_maiuscoletto" 12694..12730), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12687..12731) }
token: ElementEnd { end: Open, span: StrSpan(">" 12731..12732) }
token: Text { text: StrSpan("Straniero." 12732..12742) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12744..12745)), span: StrSpan("</p>" 12742..12746) }
token: Text { text: StrSpan("\n" 12746..12747) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12748..12749), span: StrSpan("<p" 12747..12749) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12750..12755), value: StrSpan("testo_dialogo" 12757..12770), span: StrSpan("class=\"testo_dialogo\"" 12750..12771) }
token: ElementEnd { end: Open, span: StrSpan(">" 12771..12772) }
token: Text { text: StrSpan("Eppure?" 12772..12779) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12781..12782)), span: StrSpan("</p>" 12779..12783) }
token: Text { text: StrSpan("\n\n" 12783..12785) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12786..12787), span: StrSpan("<p" 12785..12787) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12788..12793), value: StrSpan("testo_personaggio testo_maiuscoletto" 12795..12831), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12788..12832) }
token: ElementEnd { end: Open, span: StrSpan(">" 12832..12833) }
token: Text { text: StrSpan("Endimione." 12833..12843) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12845..12846)), span: StrSpan("</p>" 12843..12847) }
token: Text { text: StrSpan("\n" 12847..12848) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12849..12850), span: StrSpan("<p" 12848..12850) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12851..12856), value: StrSpan("testo_dialogo" 12858..12871), span: StrSpan("class=\"testo_dialogo\"" 12851..12872) }
token: ElementEnd { end: Open, span: StrSpan(">" 12872..12873) }
token: Text { text: StrSpan("Fin che quel monte esister√† non avr√≤ pi√∫ pace nel sonno." 12873..12932) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12934..12935)), span: StrSpan("</p>" 12932..12936) }
token: Text { text: StrSpan("\n\n" 12936..12938) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12939..12940), span: StrSpan("<p" 12938..12940) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12941..12946), value: StrSpan("testo_personaggio testo_maiuscoletto" 12948..12984), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12941..12985) }
token: ElementEnd { end: Open, span: StrSpan(">" 12985..12986) }
token: Text { text: StrSpan("Straniero." 12986..12996) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12998..12999)), span: StrSpan("</p>" 12996..13000) }
token: Text { text: StrSpan("\n" 13000..13001) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 13002..13003), span: StrSpan("<p" 13001..13003) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 13004..13009), value: StrSpan("testo_dialogo" 13011..13024), span: StrSpan("class=\"testo_dialogo\"" 13004..13025) }
token: ElementEnd { end: Open, span: StrSpan(">" 13025..13026) }
token: Text { text: StrSpan("Ciascuno ha il sonno che gli tocca, Endimione. E il tuo sonno √® infinito di voci e di grida, e di terra, di cielo, di giorni. Dormilo con coraggio, non avete altro bene. La solitudine selvaggia √® tua. Amala come lei l‚Äôama. E adesso, Endimione, io ti lascio. La vedrai questa notte." 13026..13311) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 13313..13314)), span: StrSpan("</p>" 13311..13315) }
token: Text { text: StrSpan("\n\n" 13315..13317) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 13318..13319), span: StrSpan("<p" 13317..13319) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 13320..13325), value: StrSpan("testo_personaggio testo_maiuscoletto" 13327..13363), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 13320..13364) }
token: ElementEnd { end: Open, span: StrSpan(">" 13364..13365) }
token: Text { text: StrSpan("Endimione." 13365..13375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 13377..13378)), span: StrSpan("</p>" 13375..13379) }
token: Text { text: StrSpan("\n" 13379..13380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 13381..13382), span: StrSpan("<p" 13380..13382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 13383..13388), value: StrSpan("testo_dialogo" 13390..13403), span: StrSpan("class=\"testo_dialogo\"" 13383..13404) }
token: ElementEnd { end: Open, span: StrSpan(">" 13404..13405) }
token: Text { text: StrSpan("O dio viandante, ti ringrazio." 13405..13435) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 13437..13438)), span: StrSpan("</p>" 13435..13439) }
token: Text { text: StrSpan("\n\n" 13439..13441) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 13442..13443), span: StrSpan("<p" 13441..13443) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 13444..13449), value: StrSpan("testo_personaggio testo_maiuscoletto" 13451..13487), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 13444..13488) }
token: ElementEnd { end: Open, span: StrSpan(">" 13488..13489) }
token: Text { text: StrSpan("Straniero." 13489..13499) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 13501..13502)), span: StrSpan("</p>" 13499..13503) }
token: Text { text: StrSpan("\n" 13503..13504) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 13505..13506), span: StrSpan("<p" 13504..13506) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 13507..13512), value: StrSpan("testo_dialogo" 13514..13527), span: StrSpan("class=\"testo_dialogo\"" 13507..13528) }
token: ElementEnd { end: Open, span: StrSpan(">" 13528..13529) }
token: Text { text: StrSpan("Addio. Ma non dovrai svegliarti pi√∫, ricorda." 13529..13575) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 13577..13578)), span: StrSpan("</p>" 13575..13579) }
token: Text { text: StrSpan("\n" 13579..13580) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 13582..13586)), span: StrSpan("</body>" 13580..13587) }
token: Text { text: StrSpan("\n" 13587..13588) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 13590..13594)), span: StrSpan("</html>" 13588..13595) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Schiuma d‚Äôonda" 340..356) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 358..360)), span: StrSpan("</h1>" 356..361) }
token: Text { text: StrSpan("\n\n" 361..363) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 364..365), span: StrSpan("<p" 363..365) }
token: ElementEnd { end: Open, span: StrSpan(">" 365..366) }
token: Text { text: StrSpan("Di Britomarti, ninfa cretese e minoica, ci parla Callimaco. Che Saffo fosse lesbica di Lesbo √® un fatto spiacevole, ma noi riteniamo pi√∫ triste il suo scontento della vita, per cui s‚Äôindusse a buttarsi in mare, nel mare di Grecia. Questo mare √® pieno d‚Äôisole e sulla pi√∫ orientale di tutte, Cipro, scese Afrodite nata dalle onde. Mare che vide molti amori e grosse sventure. √à necessario fare i nomi di Ariadne, Fedra, Andromaca, Elle, Scilla, Io, Cassandra, Medea? Tutte lo traversarono, e pi√∫ d‚Äôuna ci rimase. Vien da pensare che sia tutto intriso di sperma e di lacrime." 366..951) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 953..954)), span: StrSpan("</p>" 951..955) }
token: Text { text: StrSpan("\n\n" 955..957) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 958..959), span: StrSpan("<p" 957..959) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 960..965), value: StrSpan("testo_indicazioni_scena" 967..990), span: StrSpan("class=\"testo_indicazioni_scena\"" 960..991) }
token: ElementEnd { end: Open, span: StrSpan(">" 991..992) }
token: Text { text: StrSpan("(parlano Saffo e Britomarti)" 992..1020) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1022..1023)), span: StrSpan("</p>" 1020..1024) }
token: Text { text: StrSpan("\n\n\n" 1024..1027) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1028..1029), span: StrSpan("<p" 1027..1029) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1030..1035), value: StrSpan("testo_personaggio testo_maiuscoletto" 1037..1073), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1030..1074) }
token: ElementEnd { end: Open, span: StrSpan(">" 1074..1075) }
token: Text { text: StrSpan("Saffo." 1075..1081) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1083..1084)), span: StrSpan("</p>" 1081..1085) }
token: Text { text: StrSpan("\n" 1085..1086) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1087..1088), span: StrSpan("<p" 1086..1088) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1089..1094), value: StrSpan("testo_dialogo" 1096..1109), span: StrSpan("class=\"testo_dialogo\"" 1089..1110) }
token: ElementEnd { end: Open, span: StrSpan(">" 1110..1111) }
token: Text { text: StrSpan("√à monotono qui, Britomarti. Il mare √® monotono. Tu che sei qui da tanto tempo, non t‚Äôannoi?" 1111..1206) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1208..1209)), span: StrSpan("</p>" 1206..1210) }
token: Text { text: StrSpan("\n\n" 1210..1212) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1213..1214), span: StrSpan("<p" 1212..1214) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1215..1220), value: StrSpan("testo_personaggio testo_maiuscoletto" 1222..1258), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1215..1259) }
token: ElementEnd { end: Open, span: StrSpan(">" 1259..1260) }
token: Text { text: StrSpan("Britomarti." 1260..1271) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1273..1274)), span: StrSpan("</p>" 1271..1275) }
token: Text { text: StrSpan("\n" 1275..1276) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1277..1278), span: StrSpan("<p" 1276..1278) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1279..1284), value: StrSpan("testo_dialogo" 1286..1299), span: StrSpan("class=\"testo_dialogo\"" 1279..1300) }
token: ElementEnd { end: Open, span: StrSpan(">" 1300..1301) }
token: Text { text: StrSpan("Preferivi quand‚Äôeri mortale, lo so. Diventare un po‚Äô d‚Äôonda che schiuma, non vi basta. Eppure cercate la morte, questa morte. Tu perch√© l‚Äôhai cercata?" 1301..1460) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1462..1463)), span: StrSpan("</p>" 1460..1464) }
token: Text { text: StrSpan("\n\n" 1464..1466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1467..1468), span: StrSpan("<p" 1466..1468) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1469..1474), value: StrSpan("testo_personaggio testo_maiuscoletto" 1476..1512), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1469..1513) }
token: ElementEnd { end: Open, span: StrSpan(">" 1513..1514) }
token: Text { text: StrSpan("Saffo." 1514..1520) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1522..1523)), span: StrSpan("</p>" 1520..1524) }
token: Text { text: StrSpan("\n" 1524..1525) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1526..1527), span: StrSpan("<p" 1525..1527) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1528..1533), value: StrSpan("testo_dialogo" 1535..1548), span: StrSpan("class=\"testo_dialogo\"" 1528..1549) }
token: ElementEnd { end: Open, span: StrSpan(">" 1549..1550) }
token: Text { text: StrSpan("Non sapevo che fosse cos√≠. Credevo che tutto finisse con l‚Äôultimo salto. Che il desiderio, l‚Äôinquietudine, il tumulto sarebbero spenti. Il mare inghiotte, il mare annienta, mi dicevo." 1550..1738) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1740..1741)), span: StrSpan("</p>" 1738..1742) }
token: Text { text: StrSpan("\n\n" 1742..1744) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1745..1746), span: StrSpan("<p" 1744..1746) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1747..1752), value: StrSpan("testo_personaggio testo_maiuscoletto" 1754..1790), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1747..1791) }
token: ElementEnd { end: Open, span: StrSpan(">" 1791..1792) }
token: Text { text: StrSpan("Britomarti." 1792..1803) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1805..1806)), span: StrSpan("</p>" 1803..1807) }
token: Text { text: StrSpan("\n" 1807..1808) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1809..1810), span: StrSpan("<p" 1808..1810) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1811..1816), value: StrSpan("testo_dialogo" 1818..1831), span: StrSpan("class=\"testo_dialogo\"" 1811..1832) }
token: ElementEnd { end: Open, span: StrSpan(">" 1832..1833) }
token: Text { text: StrSpan("Tutto muore nel mare, e rivive. Ora lo sai." 1833..1876) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1878..1879)), span: StrSpan("</p>" 1876..1880) }
token: Text { text: StrSpan("\n\n" 1880..1882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1883..1884), span: StrSpan("<p" 1882..1884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1885..1890), value: StrSpan("testo_personaggio testo_maiuscoletto" 1892..1928), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1885..1929) }
token: ElementEnd { end: Open, span: StrSpan(">" 1929..1930) }
token: Text { text: StrSpan("Saffo." 1930..1936) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1938..1939)), span: StrSpan("</p>" 1936..1940) }
token: Text { text: StrSpan("\n" 1940..1941) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1942..1943), span: StrSpan("<p" 1941..1943) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1944..1949), value: StrSpan("testo_dialogo" 1951..1964), span: StrSpan("class=\"testo_dialogo\"" 1944..1965) }
token: ElementEnd { end: Open, span: StrSpan(">" 1965..1966) }
token: Text { text: StrSpan("E tu perch√© hai cercato il mare, Britomarti ‚Äì tu che eri ninfa?" 1966..2032) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2034..2035)), span: StrSpan("</p>" 2032..2036) }
token: Text { text: StrSpan("\n\n" 2036..2038) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2039..2040), span: StrSpan("<p" 2038..2040) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2041..2046), value: StrSpan("testo_personaggio testo_maiuscoletto" 2048..2084), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2041..2085) }
token: ElementEnd { end: Open, span: StrSpan(">" 2085..2086) }
token: Text { text: StrSpan("Britomarti." 2086..2097) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2099..2100)), span: StrSpan("</p>" 2097..2101) }
token: Text { text: StrSpan("\n" 2101..2102) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2103..2104), span: StrSpan("<p" 2102..2104) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2105..2110), value: StrSpan("testo_dialogo" 2112..2125), span: StrSpan("class=\"testo_dialogo\"" 2105..2126) }
token: ElementEnd { end: Open, span: StrSpan(">" 2126..2127) }
token: Text { text: StrSpan("Non l‚Äôho cercato, il mare. Io vivevo sui monti. E fuggivo sotto la luna, inseguita da non so che mortale. Tu, Saffo, non conosci i nostri boschi, altissimi, a strapiombo sul mare. Spiccai il salto, per salvarmi." 2127..2340) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2342..2343)), span: StrSpan("</p>" 2340..2344) }
token: Text { text: StrSpan("\n\n" 2344..2346) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2347..2348), span: StrSpan("<p" 2346..2348) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2349..2354), value: StrSpan("testo_personaggio testo_maiuscoletto" 2356..2392), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2349..2393) }
token: ElementEnd { end: Open, span: StrSpan(">" 2393..2394) }
token: Text { text: StrSpan("Saffo." 2394..2400) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2402..2403)), span: StrSpan("</p>" 2400..2404) }
token: Text { text: StrSpan("\n" 2404..2405) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2406..2407), span: StrSpan("<p" 2405..2407) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2408..2413), value: StrSpan("testo_dialogo" 2415..2428), span: StrSpan("class=\"testo_dialogo\"" 2408..2429) }
token: ElementEnd { end: Open, span: StrSpan(">" 2429..2430) }
token: Text { text: StrSpan("E perch√© poi, salvarti?" 2430..2454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2456..2457)), span: StrSpan("</p>" 2454..2458) }
token: Text { text: StrSpan("\n\n" 2458..2460) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2461..2462), span: StrSpan("<p" 2460..2462) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2463..2468), value: StrSpan("testo_personaggio testo_maiuscoletto" 2470..2506), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2463..2507) }
token: ElementEnd { end: Open, span: StrSpan(">" 2507..2508) }
token: Text { text: StrSpan("Britomarti." 2508..2519) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2521..2522)), span: StrSpan("</p>" 2519..2523) }
token: Text { text: StrSpan("\n" 2523..2524) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2525..2526), span: StrSpan("<p" 2524..2526) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2527..2532), value: StrSpan("testo_dialogo" 2534..2547), span: StrSpan("class=\"testo_dialogo\"" 2527..2548) }
token: ElementEnd { end: Open, span: StrSpan(">" 2548..2549) }
token: Text { text: StrSpan("Per sfuggirgli, per essere io. Perch√© dovevo, Saffo." 2549..2602) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2604..2605)), span: StrSpan("</p>" 2602..2606) }
token: Text { text: StrSpan("\n\n" 2606..2608) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2609..2610), span: StrSpan("<p" 2608..2610) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2611..2616), value: StrSpan("testo_personaggio testo_maiuscoletto" 2618..2654), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2611..2655) }
token: ElementEnd { end: Open, span: StrSpan(">" 2655..2656) }
token: Text { text: StrSpan("Saffo." 2656..2662) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2664..2665)), span: StrSpan("</p>" 2662..2666) }
token: Text { text: StrSpan("\n" 2666..2667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2668..2669), span: StrSpan("<p" 2667..2669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2670..2675), value: StrSpan("testo_dialogo" 2677..2690), span: StrSpan("class=\"testo_dialogo\"" 2670..2691) }
token: ElementEnd { end: Open, span: StrSpan(">" 2691..2692) }
token: Text { text: StrSpan("Dovevi? Tanto ti dispiaceva quel mortale?" 2692..2733) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2735..2736)), span: StrSpan("</p>" 2733..2737) }
token: Text { text: StrSpan("\n\n" 2737..2739) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2740..2741), span: StrSpan("<p" 2739..2741) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2742..2747), value: StrSpan("testo_personaggio testo_maiuscoletto" 2749..2785), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2742..2786) }
token: ElementEnd { end: Open, span: StrSpan(">" 2786..2787) }
token: Text { text: StrSpan("Britomarti." 2787..2798) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2800..2801)), span: StrSpan("</p>" 2798..2802) }
token: Text { text: StrSpan("\n" 2802..2803) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2804..2805), span: StrSpan("<p" 2803..2805) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2806..2811), value: StrSpan("testo_dialogo" 2813..2826), span: StrSpan("class=\"testo_dialogo\"" 2806..2827) }
token: ElementEnd { end: Open, span: StrSpan(">" 2827..2828) }
token: Text { text: StrSpan("Non so, non l‚Äôavevo veduto. Sapevo soltanto che dovevo fuggire." 2828..2893) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2895..2896)), span: StrSpan("</p>" 2893..2897) }
token: Text { text: StrSpan("\n\n" 2897..2899) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2900..2901), span: StrSpan("<p" 2899..2901) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2902..2907), value: StrSpan("testo_personaggio testo_maiuscoletto" 2909..2945), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2902..2946) }
token: ElementEnd { end: Open, span: StrSpan(">" 2946..2947) }
token: Text { text: StrSpan("Saffo." 2947..2953) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2955..2956)), span: StrSpan("</p>" 2953..2957) }
token: Text { text: StrSpan("\n" 2957..2958) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2959..2960), span: StrSpan("<p" 2958..2960) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2961..2966), value: StrSpan("testo_dialogo" 2968..2981), span: StrSpan("class=\"testo_dialogo\"" 2961..2982) }
token: ElementEnd { end: Open, span: StrSpan(">" 2982..2983) }
token: Text { text: StrSpan("√à possibile questo? Lasciare i giorni, la montagna, i prati ‚Äì lasciar la terra e diventare schiuma d‚Äôonda ‚Äì tutto perch√© dovevi? " 2983..3120) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("em" 3121..3123), span: StrSpan("<em" 3120..3123) }
token: ElementEnd { end: Open, span: StrSpan(">" 3123..3124) }
token: Text { text: StrSpan("Dovevi" 3124..3130) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("em" 3132..3134)), span: StrSpan("</em>" 3130..3135) }
token: Text { text: StrSpan(" che cosa? Non ne sentivi desider√Æ, non eri fatta anche di questo?" 3135..3202) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3204..3205)), span: StrSpan("</p>" 3202..3206) }
token: Text { text: StrSpan("\n\n" 3206..3208) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3209..3210), span: StrSpan("<p" 3208..3210) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3211..3216), value: StrSpan("testo_personaggio testo_maiuscoletto" 3218..3254), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3211..3255) }
token: ElementEnd { end: Open, span: StrSpan(">" 3255..3256) }
token: Text { text: StrSpan("Britomarti." 3256..3267) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3269..3270)), span: StrSpan("</p>" 3267..3271) }
token: Text { text: StrSpan("\n" 3271..3272) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3273..3274), span: StrSpan("<p" 3272..3274) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3275..3280), value: StrSpan("testo_dialogo" 3282..3295), span: StrSpan("class=\"testo_dialogo\"" 3275..3296) }
token: ElementEnd { end: Open, span: StrSpan(">" 3296..3297) }
token: Text { text: StrSpan("Non ti capisco, Saffo bella. I desider√Æ e l‚Äôinquietudine ti han fatta chi sei; poi ti lagni che anch‚Äôio sia fuggita." 3297..3418) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3420..3421)), span: StrSpan("</p>" 3418..3422) }
token: Text { text: StrSpan("\n\n" 3422..3424) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3425..3426), span: StrSpan("<p" 3424..3426) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3427..3432), value: StrSpan("testo_personaggio testo_maiuscoletto" 3434..3470), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3427..3471) }
token: ElementEnd { end: Open, span: StrSpan(">" 3471..3472) }
token: Text { text: StrSpan("Saffo." 3472..3478) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3480..3481)), span: StrSpan("</p>" 3478..3482) }
token: Text { text: StrSpan("\n" 3482..3483) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3484..3485), span: StrSpan("<p" 3483..3485) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3486..3491), value: StrSpan("testo_dialogo" 3493..3506), span: StrSpan("class=\"testo_dialogo\"" 3486..3507) }
token: ElementEnd { end: Open, span: StrSpan(">" 3507..3508) }
token: Text { text: StrSpan("Tu non eri mortale e sapevi che a niente si sfugge." 3508..3559) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3561..3562)), span: StrSpan("</p>" 3559..3563) }
token: Text { text: StrSpan("\n\n" 3563..3565) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3566..3567), span: StrSpan("<p" 3565..3567) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3568..3573), value: StrSpan("testo_personaggio testo_maiuscoletto" 3575..3611), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3568..3612) }
token: ElementEnd { end: Open, span: StrSpan(">" 3612..3613) }
token: Text { text: StrSpan("Britomarti." 3613..3624) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3626..3627)), span: StrSpan("</p>" 3624..3628) }
token: Text { text: StrSpan("\n" 3628..3629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3630..3631), span: StrSpan("<p" 3629..3631) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3632..3637), value: StrSpan("testo_dialogo" 3639..3652), span: StrSpan("class=\"testo_dialogo\"" 3632..3653) }
token: ElementEnd { end: Open, span: StrSpan(">" 3653..3654) }
token: Text { text: StrSpan("Non ho fuggito i desider√Æ, Saffo. Quel che desidero ce l‚Äôho. Prima ero ninfa delle rupi, ora del mare. Siamo fatte di questo. La nostra vita √® foglia e tronco, polla d‚Äôacqua, schiuma d‚Äôonda. Noi giochiamo a sfiorare le cose, non fuggiamo. Mutiamo. Questo √® il nostro desiderio e il destino. Nostro solo terrore √® che un uomo ci possegga, ci fermi. Allora s√≠ che sarebbe la fine. Tu conosci Calipso?" 3654..4063) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4065..4066)), span: StrSpan("</p>" 4063..4067) }
token: Text { text: StrSpan("\n\n" 4067..4069) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4070..4071), span: StrSpan("<p" 4069..4071) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4072..4077), value: StrSpan("testo_personaggio testo_maiuscoletto" 4079..4115), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4072..4116) }
token: ElementEnd { end: Open, span: StrSpan(">" 4116..4117) }
token: Text { text: StrSpan("Saffo." 4117..4123) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4125..4126)), span: StrSpan("</p>" 4123..4127) }
token: Text { text: StrSpan("\n" 4127..4128) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4129..4130), span: StrSpan("<p" 4128..4130) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4131..4136), value: StrSpan("testo_dialogo" 4138..4151), span: StrSpan("class=\"testo_dialogo\"" 4131..4152) }
token: ElementEnd { end: Open, span: StrSpan(">" 4152..4153) }
token: Text { text: StrSpan("Ne ho sentito." 4153..4167) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4169..4170)), span: StrSpan("</p>" 4167..4171) }
token: Text { text: StrSpan("\n\n" 4171..4173) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4174..4175), span: StrSpan("<p" 4173..4175) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4176..4181), value: StrSpan("testo_personaggio testo_maiuscoletto" 4183..4219), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4176..4220) }
token: ElementEnd { end: Open, span: StrSpan(">" 4220..4221) }
token: Text { text: StrSpan("Britomarti." 4221..4232) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4234..4235)), span: StrSpan("</p>" 4232..4236) }
token: Text { text: StrSpan("\n" 4236..4237) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4238..4239), span: StrSpan("<p" 4237..4239) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4240..4245), value: StrSpan("testo_dialogo" 4247..4260), span: StrSpan("class=\"testo_dialogo\"" 4240..4261) }
token: ElementEnd { end: Open, span: StrSpan(">" 4261..4262) }
token: Text { text: StrSpan("Calipso si √® fatta fermare da un uomo. E pi√∫ nulla le √® valso. Per anni e anni non usc√≠ pi√∫ dalla sua grotta. Vennero tutte, Leucotea, Callianira, Cimodoce, Orit√≠a, venne Anfitr√≠te, e le parlarono, la presero con s√©, la salvarono. Ma ci vollero anni, e che quell‚Äôuomo se ne andasse." 4262..4554) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4556..4557)), span: StrSpan("</p>" 4554..4558) }
token: Text { text: StrSpan("\n\n" 4558..4560) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4561..4562), span: StrSpan("<p" 4560..4562) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4563..4568), value: StrSpan("testo_personaggio testo_maiuscoletto" 4570..4606), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4563..4607) }
token: ElementEnd { end: Open, span: StrSpan(">" 4607..4608) }
token: Text { text: StrSpan("Saffo." 4608..4614) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4616..4617)), span: StrSpan("</p>" 4614..4618) }
token: Text { text: StrSpan("\n" 4618..4619) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4620..4621), span: StrSpan("<p" 4619..4621) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4622..4627), value: StrSpan("testo_dialogo" 4629..4642), span: StrSpan("class=\"testo_dialogo\"" 4622..4643) }
token: ElementEnd { end: Open, span: StrSpan(">" 4643..4644) }
token: Text { text: StrSpan("Io capisco Calipso. Ma non capisco che vi abbia ascoltate. Che cos‚Äô√® un desiderio che cede?" 4644..4738) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4740..4741)), span: StrSpan("</p>" 4738..4742) }
token: Text { text: StrSpan("\n\n" 4742..4744) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4745..4746), span: StrSpan("<p" 4744..4746) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4747..4752), value: StrSpan("testo_personaggio testo_maiuscoletto" 4754..4790), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4747..4791) }
token: ElementEnd { end: Open, span: StrSpan(">" 4791..4792) }
token: Text { text: StrSpan("Britomarti." 4792..4803) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4805..4806)), span: StrSpan("</p>" 4803..4807) }
token: Text { text: StrSpan("\n" 4807..4808) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4809..4810), span: StrSpan("<p" 4808..4810) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4811..4816), value: StrSpan("testo_dialogo" 4818..4831), span: StrSpan("class=\"testo_dialogo\"" 4811..4832) }
token: ElementEnd { end: Open, span: StrSpan(">" 4832..4833) }
token: Text { text: StrSpan("Oh Saffo, onda mortale, non saprai mai cos‚Äô√® sorridere?" 4833..4891) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4893..4894)), span: StrSpan("</p>" 4891..4895) }
token: Text { text: StrSpan("\n\n" 4895..4897) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4898..4899), span: StrSpan("<p" 4897..4899) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4900..4905), value: StrSpan("testo_personaggio testo_maiuscoletto" 4907..4943), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4900..4944) }
token: ElementEnd { end: Open, span: StrSpan(">" 4944..4945) }
token: Text { text: StrSpan("Saffo." 4945..4951) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4953..4954)), span: StrSpan("</p>" 4951..4955) }
token: Text { text: StrSpan("\n" 4955..4956) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4957..4958), span: StrSpan("<p" 4956..4958) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4959..4964), value: StrSpan("testo_dialogo" 4966..4979), span: StrSpan("class=\"testo_dialogo\"" 4959..4980) }
token: ElementEnd { end: Open, span: StrSpan(">" 4980..4981) }
token: Text { text: StrSpan("Lo sapevo da viva. E ho cercato la morte." 4981..5022) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5024..5025)), span: StrSpan("</p>" 5022..5026) }
token: Text { text: StrSpan("\n\n" 5026..5028) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5029..5030), span: StrSpan("<p" 5028..5030) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5031..5036), value: StrSpan("testo_personaggio testo_maiuscoletto" 5038..5074), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5031..5075) }
token: ElementEnd { end: Open, span: StrSpan(">" 5075..5076) }
token: Text { text: StrSpan("Britomarti." 5076..5087) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5089..5090)), span: StrSpan("</p>" 5087..5091) }
token: Text { text: StrSpan("\n" 5091..5092) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5093..5094), span: StrSpan("<p" 5092..5094) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5095..5100), value: StrSpan("testo_dialogo" 5102..5115), span: StrSpan("class=\"testo_dialogo\"" 5095..5116) }
token: ElementEnd { end: Open, span: StrSpan(">" 5116..5117) }
token: Text { text: StrSpan("Oh Saffo, non √® questo il sorridere. Sorridere √® vivere come un‚Äôonda o una foglia, accettando la sorte. √à morire a una forma e rinascere a un‚Äôaltra. √à accettare, accettare, se stesse e il destino." 5117..5321) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5323..5324)), span: StrSpan("</p>" 5321..5325) }
token: Text { text: StrSpan("\n\n" 5325..5327) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5328..5329), span: StrSpan("<p" 5327..5329) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5330..5335), value: StrSpan("testo_personaggio testo_maiuscoletto" 5337..5373), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5330..5374) }
token: ElementEnd { end: Open, span: StrSpan(">" 5374..5375) }
token: Text { text: StrSpan("Saffo." 5375..5381) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5383..5384)), span: StrSpan("</p>" 5381..5385) }
token: Text { text: StrSpan("\n" 5385..5386) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5387..5388), span: StrSpan("<p" 5386..5388) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5389..5394), value: StrSpan("testo_dialogo" 5396..5409), span: StrSpan("class=\"testo_dialogo\"" 5389..5410) }
token: ElementEnd { end: Open, span: StrSpan(">" 5410..5411) }
token: Text { text: StrSpan("Tu l‚Äôhai dunque accettato?" 5411..5439) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5441..5442)), span: StrSpan("</p>" 5439..5443) }
token: Text { text: StrSpan("\n\n" 5443..5445) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5446..5447), span: StrSpan("<p" 5445..5447) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5448..5453), value: StrSpan("testo_personaggio testo_maiuscoletto" 5455..5491), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5448..5492) }
token: ElementEnd { end: Open, span: StrSpan(">" 5492..5493) }
token: Text { text: StrSpan("Britomarti." 5493..5504) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5506..5507)), span: StrSpan("</p>" 5504..5508) }
token: Text { text: StrSpan("\n" 5508..5509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5510..5511), span: StrSpan("<p" 5509..5511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5512..5517), value: StrSpan("testo_dialogo" 5519..5532), span: StrSpan("class=\"testo_dialogo\"" 5512..5533) }
token: ElementEnd { end: Open, span: StrSpan(">" 5533..5534) }
token: Text { text: StrSpan("Sono fuggita, Saffo. Per noialtre √® pi√∫ facile." 5534..5583) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5585..5586)), span: StrSpan("</p>" 5583..5587) }
token: Text { text: StrSpan("\n\n" 5587..5589) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5590..5591), span: StrSpan("<p" 5589..5591) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5592..5597), value: StrSpan("testo_personaggio testo_maiuscoletto" 5599..5635), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5592..5636) }
token: ElementEnd { end: Open, span: StrSpan(">" 5636..5637) }
token: Text { text: StrSpan("Saffo." 5637..5643) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5645..5646)), span: StrSpan("</p>" 5643..5647) }
token: Text { text: StrSpan("\n" 5647..5648) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5649..5650), span: StrSpan("<p" 5648..5650) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5651..5656), value: StrSpan("testo_dialogo" 5658..5671), span: StrSpan("class=\"testo_dialogo\"" 5651..5672) }
token: ElementEnd { end: Open, span: StrSpan(">" 5672..5673) }
token: Text { text: StrSpan("Anch‚Äôio, Britomarti, nei giorni, sapevo fuggire. E la mia fuga era guardare nelle cose e nel tumulto, e farne un canto, una parola. Ma il destino √® ben altro." 5673..5834) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5836..5837)), span: StrSpan("</p>" 5834..5838) }
token: Text { text: StrSpan("\n\n" 5838..5840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5841..5842), span: StrSpan("<p" 5840..5842) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5843..5848), value: StrSpan("testo_personaggio testo_maiuscoletto" 5850..5886), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5843..5887) }
token: ElementEnd { end: Open, span: StrSpan(">" 5887..5888) }
token: Text { text: StrSpan("Britomarti." 5888..5899) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5901..5902)), span: StrSpan("</p>" 5899..5903) }
token: Text { text: StrSpan("\n" 5903..5904) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5905..5906), span: StrSpan("<p" 5904..5906) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5907..5912), value: StrSpan("testo_dialogo" 5914..5927), span: StrSpan("class=\"testo_dialogo\"" 5907..5928) }
token: ElementEnd { end: Open, span: StrSpan(">" 5928..5929) }
token: Text { text: StrSpan("Saffo, perch√©? Il destino √® gioia, e quando tu cantavi il canto eri felice." 5929..6006) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6008..6009)), span: StrSpan("</p>" 6006..6010) }
token: Text { text: StrSpan("\n\n" 6010..6012) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6013..6014), span: StrSpan("<p" 6012..6014) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6015..6020), value: StrSpan("testo_personaggio testo_maiuscoletto" 6022..6058), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6015..6059) }
token: ElementEnd { end: Open, span: StrSpan(">" 6059..6060) }
token: Text { text: StrSpan("Saffo." 6060..6066) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6068..6069)), span: StrSpan("</p>" 6066..6070) }
token: Text { text: StrSpan("\n" 6070..6071) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6072..6073), span: StrSpan("<p" 6071..6073) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6074..6079), value: StrSpan("testo_dialogo" 6081..6094), span: StrSpan("class=\"testo_dialogo\"" 6074..6095) }
token: ElementEnd { end: Open, span: StrSpan(">" 6095..6096) }
token: Text { text: StrSpan("Non sono mai stata felice, Britomarti. Il desiderio non √® canto. Il desiderio schianta e brucia, come il serpe, come il vento." 6096..6223) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6225..6226)), span: StrSpan("</p>" 6223..6227) }
token: Text { text: StrSpan("\n\n" 6227..6229) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6230..6231), span: StrSpan("<p" 6229..6231) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6232..6237), value: StrSpan("testo_personaggio testo_maiuscoletto" 6239..6275), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6232..6276) }
token: ElementEnd { end: Open, span: StrSpan(">" 6276..6277) }
token: Text { text: StrSpan("Britomarti." 6277..6288) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6290..6291)), span: StrSpan("</p>" 6288..6292) }
token: Text { text: StrSpan("\n" 6292..6293) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6294..6295), span: StrSpan("<p" 6293..6295) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6296..6301), value: StrSpan("testo_dialogo" 6303..6316), span: StrSpan("class=\"testo_dialogo\"" 6296..6317) }
token: ElementEnd { end: Open, span: StrSpan(">" 6317..6318) }
token: Text { text: StrSpan("Non hai mai conosciuto donne mortali che vivessero in pace nel desiderio e nel tumulto?" 6318..6405) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6407..6408)), span: StrSpan("</p>" 6405..6409) }
token: Text { text: StrSpan("\n\n" 6409..6411) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6412..6413), span: StrSpan("<p" 6411..6413) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6414..6419), value: StrSpan("testo_personaggio testo_maiuscoletto" 6421..6457), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6414..6458) }
token: ElementEnd { end: Open, span: StrSpan(">" 6458..6459) }
token: Text { text: StrSpan("Saffo." 6459..6465) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6467..6468)), span: StrSpan("</p>" 6465..6469) }
token: Text { text: StrSpan("\n" 6469..6470) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6471..6472), span: StrSpan("<p" 6470..6472) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6473..6478), value: StrSpan("testo_dialogo" 6480..6493), span: StrSpan("class=\"testo_dialogo\"" 6473..6494) }
token: ElementEnd { end: Open, span: StrSpan(">" 6494..6495) }
token: Text { text: StrSpan("Nessuna‚Ä¶ forse s√≠‚Ä¶ Non le mortali come Saffo. Tu eri ancora la ninfa dei monti, io non ero ancor nata. Una donna varc√≤ questo mare, una mortale, che visse sempre nel tumulto ‚Äì forse in pace. Una donna che uccise, distrusse, accec√≤, come una dea ‚Äì sempre uguale a se stessa. Forse non ebbe da sorridere neppure. Era bella, non sciocca, e intorno a lei tutto moriva e combatteva. Britomarti, combattevano e morivano chiedendo solo che il suo nome fosse un istante unito al loro, desse il nome alla vita e alla morte di tutti. E sorridevano per lei‚Ä¶ Tu la conosci ‚Äì Elena Tindaride, la figlia di Leda." 6495..7108) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7110..7111)), span: StrSpan("</p>" 7108..7112) }
token: Text { text: StrSpan("\n\n" 7112..7114) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7115..7116), span: StrSpan("<p" 7114..7116) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7117..7122), value: StrSpan("testo_personaggio testo_maiuscoletto" 7124..7160), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7117..7161) }
token: ElementEnd { end: Open, span: StrSpan(">" 7161..7162) }
token: Text { text: StrSpan("Britomarti." 7162..7173) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7175..7176)), span: StrSpan("</p>" 7173..7177) }
token: Text { text: StrSpan("\n" 7177..7178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7179..7180), span: StrSpan("<p" 7178..7180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7181..7186), value: StrSpan("testo_dialogo" 7188..7201), span: StrSpan("class=\"testo_dialogo\"" 7181..7202) }
token: ElementEnd { end: Open, span: StrSpan(">" 7202..7203) }
token: Text { text: StrSpan("E costei fu felice?" 7203..7222) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7224..7225)), span: StrSpan("</p>" 7222..7226) }
token: Text { text: StrSpan("\n\n" 7226..7228) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7229..7230), span: StrSpan("<p" 7228..7230) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7231..7236), value: StrSpan("testo_personaggio testo_maiuscoletto" 7238..7274), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7231..7275) }
token: ElementEnd { end: Open, span: StrSpan(">" 7275..7276) }
token: Text { text: StrSpan("Saffo." 7276..7282) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7284..7285)), span: StrSpan("</p>" 7282..7286) }
token: Text { text: StrSpan("\n" 7286..7287) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7288..7289), span: StrSpan("<p" 7287..7289) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7290..7295), value: StrSpan("testo_dialogo" 7297..7310), span: StrSpan("class=\"testo_dialogo\"" 7290..7311) }
token: ElementEnd { end: Open, span: StrSpan(">" 7311..7312) }
token: Text { text: StrSpan("Non fugg√≠, questo √® certo. Bastava a se stessa. Non si chiese quale fosse il suo destino. Chi volle, e fu forte abbastanza, la prese con s√©. Segu√≠ a dieci anni un eroe, la ritolsero a lui, la sposarono a un altro, anche questo la perse, se la contesero oltremare in molti, la riprese il secondo, visse in pace con lui, fu sepolta, e nell‚ÄôAde conobbe altri ancora. Non ment√≠ con nessuno, non sorrise a nessuno. Forse fu felice." 7312..7745) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7747..7748)), span: StrSpan("</p>" 7745..7749) }
token: Text { text: StrSpan("\n\n" 7749..7751) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7752..7753), span: StrSpan("<p" 7751..7753) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7754..7759), value: StrSpan("testo_personaggio testo_maiuscoletto" 7761..7797), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7754..7798) }
token: ElementEnd { end: Open, span: StrSpan(">" 7798..7799) }
token: Text { text: StrSpan("Britomarti." 7799..7810) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7812..7813)), span: StrSpan("</p>" 7810..7814) }
token: Text { text: StrSpan("\n" 7814..7815) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7816..7817), span: StrSpan("<p" 7815..7817) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7818..7823), value: StrSpan("testo_dialogo" 7825..7838), span: StrSpan("class=\"testo_dialogo\"" 7818..7839) }
token: ElementEnd { end: Open, span: StrSpan(">" 7839..7840) }
token: Text { text: StrSpan("E tu invidi costei?" 7840..7859) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7861..7862)), span: StrSpan("</p>" 7859..7863) }
token: Text { text: StrSpan("\n\n" 7863..7865) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7866..7867), span: StrSpan("<p" 7865..7867) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7868..7873), value: StrSpan("testo_personaggio testo_maiuscoletto" 7875..7911), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7868..7912) }
token: ElementEnd { end: Open, span: StrSpan(">" 7912..7913) }
token: Text { text: StrSpan("Saffo." 7913..7919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7921..7922)), span: StrSpan("</p>" 7919..7923) }
token: Text { text: StrSpan("\n" 7923..7924) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7925..7926), span: StrSpan("<p" 7924..7926) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7927..7932), value: StrSpan("testo_dialogo" 7934..7947), span: StrSpan("class=\"testo_dialogo\"" 7927..7948) }
token: ElementEnd { end: Open, span: StrSpan(">" 7948..7949) }
token: Text { text: StrSpan("Non invidio nessuno. Io ho voluto morire. Essere un‚Äôaltra non mi basta. Se non posso esser Saffo, preferisco esser nulla." 7949..8072) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8074..8075)), span: StrSpan("</p>" 8072..8076) }
token: Text { text: StrSpan("\n\n" 8076..8078) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8079..8080), span: StrSpan("<p" 8078..8080) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8081..8086), value: StrSpan("testo_personaggio testo_maiuscoletto" 8088..8124), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8081..8125) }
token: ElementEnd { end: Open, span: StrSpan(">" 8125..8126) }
token: Text { text: StrSpan("Britomarti." 8126..8137) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8139..8140)), span: StrSpan("</p>" 8137..8141) }
token: Text { text: StrSpan("\n" 8141..8142) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8143..8144), span: StrSpan("<p" 8142..8144) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8145..8150), value: StrSpan("testo_dialogo" 8152..8165), span: StrSpan("class=\"testo_dialogo\"" 8145..8166) }
token: ElementEnd { end: Open, span: StrSpan(">" 8166..8167) }
token: Text { text: StrSpan("Dunque accetti il destino?" 8167..8193) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8195..8196)), span: StrSpan("</p>" 8193..8197) }
token: Text { text: StrSpan("\n\n" 8197..8199) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8200..8201), span: StrSpan("<p" 8199..8201) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8202..8207), value: StrSpan("testo_personaggio testo_maiuscoletto" 8209..8245), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8202..8246) }
token: ElementEnd { end: Open, span: StrSpan(">" 8246..8247) }
token: Text { text: StrSpan("Saffo." 8247..8253) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8255..8256)), span: StrSpan("</p>" 8253..8257) }
token: Text { text: StrSpan("\n" 8257..8258) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8259..8260), span: StrSpan("<p" 8258..8260) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8261..8266), value: StrSpan("testo_dialogo" 8268..8281), span: StrSpan("class=\"testo_dialogo\"" 8261..8282) }
token: ElementEnd { end: Open, span: StrSpan(">" 8282..8283) }
token: Text { text: StrSpan("Non l‚Äôaccetto. Lo sono. Nessuno l‚Äôaccetta." 8283..8329) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8331..8332)), span: StrSpan("</p>" 8329..8333) }
token: Text { text: StrSpan("\n\n" 8333..8335) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8336..8337), span: StrSpan("<p" 8335..8337) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8338..8343), value: StrSpan("testo_personaggio testo_maiuscoletto" 8345..8381), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8338..8382) }
token: ElementEnd { end: Open, span: StrSpan(">" 8382..8383) }
token: Text { text: StrSpan("Britomarti." 8383..8394) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8396..8397)), span: StrSpan("</p>" 8394..8398) }
token: Text { text: StrSpan("\n" 8398..8399) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8400..8401), span: StrSpan("<p" 8399..8401) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8402..8407), value: StrSpan("testo_dialogo" 8409..8422), span: StrSpan("class=\"testo_dialogo\"" 8402..8423) }
token: ElementEnd { end: Open, span: StrSpan(">" 8423..8424) }
token: Text { text: StrSpan("Tranne noi che sappiamo sorridere." 8424..8458) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8460..8461)), span: StrSpan("</p>" 8458..8462) }
token: Text { text: StrSpan("\n\n" 8462..8464) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8465..8466), span: StrSpan("<p" 8464..8466) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8467..8472), value: StrSpan("testo_personaggio testo_maiuscoletto" 8474..8510), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8467..8511) }
token: ElementEnd { end: Open, span: StrSpan(">" 8511..8512) }
token: Text { text: StrSpan("Saffo." 8512..8518) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8520..8521)), span: StrSpan("</p>" 8518..8522) }
token: Text { text: StrSpan("\n" 8522..8523) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8524..8525), span: StrSpan("<p" 8523..8525) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8526..8531), value: StrSpan("testo_dialogo" 8533..8546), span: StrSpan("class=\"testo_dialogo\"" 8526..8547) }
token: ElementEnd { end: Open, span: StrSpan(">" 8547..8548) }
token: Text { text: StrSpan("Bella forza. √à nel vostro destino. Ma che cosa significa?" 8548..8606) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8608..8609)), span: StrSpan("</p>" 8606..8610) }
token: Text { text: StrSpan("\n\n" 8610..8612) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8613..8614), span: StrSpan("<p" 8612..8614) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8615..8620), value: StrSpan("testo_personaggio testo_maiuscoletto" 8622..8658), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8615..8659) }
token: ElementEnd { end: Open, span: StrSpan(">" 8659..8660) }
token: Text { text: StrSpan("Britomarti." 8660..8671) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8673..8674)), span: StrSpan("</p>" 8671..8675) }
token: Text { text: StrSpan("\n" 8675..8676) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8677..8678), span: StrSpan("<p" 8676..8678) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8679..8684), value: StrSpan("testo_dialogo" 8686..8699), span: StrSpan("class=\"testo_dialogo\"" 8679..8700) }
token: ElementEnd { end: Open, span: StrSpan(">" 8700..8701) }
token: Text { text: StrSpan("Significa accettarsi e accettare." 8701..8734) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8736..8737)), span: StrSpan("</p>" 8734..8738) }
token: Text { text: StrSpan("\n\n" 8738..8740) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8741..8742), span: StrSpan("<p" 8740..8742) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8743..8748), value: StrSpan("testo_personaggio testo_maiuscoletto" 8750..8786), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8743..8787) }
token: ElementEnd { end: Open, span: StrSpan(">" 8787..8788) }
token: Text { text: StrSpan("Saffo." 8788..8794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8796..8797)), span: StrSpan("</p>" 8794..8798) }
token: Text { text: StrSpan("\n" 8798..8799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8800..8801), span: StrSpan("<p" 8799..8801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8802..8807), value: StrSpan("testo_dialogo" 8809..8822), span: StrSpan("class=\"testo_dialogo\"" 8802..8823) }
token: ElementEnd { end: Open, span: StrSpan(">" 8823..8824) }
token: Text { text: StrSpan("E che cosa vuol dire? Si pu√≤ accettare che una forza ti rapisca e tu diventi desiderio, desiderio tremante che si dibatte intorno a un corpo, di compagno o compagna, come la schiuma tra gli scogli? E questo corpo ti respinge e t‚Äôinfrange, e tu ricadi, e vorresti abbracciare lo scoglio, accettarlo. Altre volte sei scoglio tu stessa, e la schiuma ‚Äì il tumulto ‚Äì si dibatte ai tuoi piedi. Nessuno ha mai pace. Si pu√≤ accettare tutto questo?" 8824..9271) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9273..9274)), span: StrSpan("</p>" 9271..9275) }
token: Text { text: StrSpan("\n\n" 9275..9277) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9278..9279), span: StrSpan("<p" 9277..9279) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9280..9285), value: StrSpan("testo_personaggio testo_maiuscoletto" 9287..9323), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9280..9324) }
token: ElementEnd { end: Open, span: StrSpan(">" 9324..9325) }
token: Text { text: StrSpan("Britomarti." 9325..9336) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9338..9339)), span: StrSpan("</p>" 9336..9340) }
token: Text { text: StrSpan("\n" 9340..9341) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9342..9343), span: StrSpan("<p" 9341..9343) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9344..9349), value: StrSpan("testo_dialogo" 9351..9364), span: StrSpan("class=\"testo_dialogo\"" 9344..9365) }
token: ElementEnd { end: Open, span: StrSpan(">" 9365..9366) }
token: Text { text: StrSpan("Bisogna accettarlo. Hai voluto sfuggire, e sei schiuma anche tu." 9366..9430) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9432..9433)), span: StrSpan("</p>" 9430..9434) }
token: Text { text: StrSpan("\n\n" 9434..9436) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9437..9438), span: StrSpan("<p" 9436..9438) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9439..9444), value: StrSpan("testo_personaggio testo_maiuscoletto" 9446..9482), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9439..9483) }
token: ElementEnd { end: Open, span: StrSpan(">" 9483..9484) }
token: Text { text: StrSpan("Saffo." 9484..9490) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9492..9493)), span: StrSpan("</p>" 9490..9494) }
token: Text { text: StrSpan("\n" 9494..9495) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9496..9497), span: StrSpan("<p" 9495..9497) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9498..9503), value: StrSpan("testo_dialogo" 9505..9518), span: StrSpan("class=\"testo_dialogo\"" 9498..9519) }
token: ElementEnd { end: Open, span: StrSpan(">" 9519..9520) }
token: Text { text: StrSpan("Ma tu lo senti questo tedio, quest‚Äôinquietudine marina? Qui tutto macera e ribolle senza posa. Anche ci√≤ che √® morto si dibatte inquieto." 9520..9661) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9663..9664)), span: StrSpan("</p>" 9661..9665) }
token: Text { text: StrSpan("\n\n" 9665..9667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9668..9669), span: StrSpan("<p" 9667..9669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9670..9675), value: StrSpan("testo_personaggio testo_maiuscoletto" 9677..9713), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9670..9714) }
token: ElementEnd { end: Open, span: StrSpan(">" 9714..9715) }
token: Text { text: StrSpan("Britomarti." 9715..9726) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9728..9729)), span: StrSpan("</p>" 9726..9730) }
token: Text { text: StrSpan("\n" 9730..9731) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9732..9733), span: StrSpan("<p" 9731..9733) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9734..9739), value: StrSpan("testo_dialogo" 9741..9754), span: StrSpan("class=\"testo_dialogo\"" 9734..9755) }
token: ElementEnd { end: Open, span: StrSpan(">" 9755..9756) }
token: Text { text: StrSpan("Dovresti conoscerlo il mare. Anche tu sei da un‚Äôisola‚Ä¶" 9756..9814) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9816..9817)), span: StrSpan("</p>" 9814..9818) }
token: Text { text: StrSpan("\n\n" 9818..9820) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9821..9822), span: StrSpan("<p" 9820..9822) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9823..9828), value: StrSpan("testo_personaggio testo_maiuscoletto" 9830..9866), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9823..9867) }
token: ElementEnd { end: Open, span: StrSpan(">" 9867..9868) }
token: Text { text: StrSpan("Saffo." 9868..9874) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9876..9877)), span: StrSpan("</p>" 9874..9878) }
token: Text { text: StrSpan("\n" 9878..9879) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9880..9881), span: StrSpan("<p" 9879..9881) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9882..9887), value: StrSpan("testo_dialogo" 9889..9902), span: StrSpan("class=\"testo_dialogo\"" 9882..9903) }
token: ElementEnd { end: Open, span: StrSpan(">" 9903..9904) }
token: Text { text: StrSpan("Oh Britomarti, fin da bimba mi atterriva. Questa vita incessante √® monotona e triste. Non c‚Äô√® parola che ne dica il tedio." 9904..10030) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10032..10033)), span: StrSpan("</p>" 10030..10034) }
token: Text { text: StrSpan("\n\n" 10034..10036) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10037..10038), span: StrSpan("<p" 10036..10038) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10039..10044), value: StrSpan("testo_personaggio testo_maiuscoletto" 10046..10082), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10039..10083) }
token: ElementEnd { end: Open, span: StrSpan(">" 10083..10084) }
token: Text { text: StrSpan("Britomarti." 10084..10095) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10097..10098)), span: StrSpan("</p>" 10095..10099) }
token: Text { text: StrSpan("\n" 10099..10100) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10101..10102), span: StrSpan("<p" 10100..10102) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10103..10108), value: StrSpan("testo_dialogo" 10110..10123), span: StrSpan("class=\"testo_dialogo\"" 10103..10124) }
token: ElementEnd { end: Open, span: StrSpan(">" 10124..10125) }
token: Text { text: StrSpan("Un tempo, nella mia isola, vedevo arrivare e partire i mortali. C‚Äôerano donne come te, donna d‚Äôamore, Saffo. Non mi parvero mai tristi n√© stanche." 10125..10276) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10278..10279)), span: StrSpan("</p>" 10276..10280) }
token: Text { text: StrSpan("\n\n" 10280..10282) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10283..10284), span: StrSpan("<p" 10282..10284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10285..10290), value: StrSpan("testo_personaggio testo_maiuscoletto" 10292..10328), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10285..10329) }
token: ElementEnd { end: Open, span: StrSpan(">" 10329..10330) }
token: Text { text: StrSpan("Saffo." 10330..10336) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10338..10339)), span: StrSpan("</p>" 10336..10340) }
token: Text { text: StrSpan("\n" 10340..10341) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10342..10343), span: StrSpan("<p" 10341..10343) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10344..10349), value: StrSpan("testo_dialogo" 10351..10364), span: StrSpan("class=\"testo_dialogo\"" 10344..10365) }
token: ElementEnd { end: Open, span: StrSpan(">" 10365..10366) }
token: Text { text: StrSpan("Lo so, Britomarti, lo so. Ma le hai seguite sul loro cammino? Ci fu quella che in terra straniera s‚Äôimpicc√≤ con le sue mani alla trave di casa. E quella che si svegli√≤ la mattina sopra uno scoglio, abbandonata. E poi le altre, tante altre, da tutte le isole, da tutte le terre, che discesero in mare e chi fu serva, chi straziata, chi uccise i suoi figli, chi stent√≤ giorno e notte, chi non tocc√≤ pi√∫ terraferma e divenne una cosa, una belva del mare." 10366..10824) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10826..10827)), span: StrSpan("</p>" 10824..10828) }
token: Text { text: StrSpan("\n\n" 10828..10830) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10831..10832), span: StrSpan("<p" 10830..10832) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10833..10838), value: StrSpan("testo_personaggio testo_maiuscoletto" 10840..10876), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10833..10877) }
token: ElementEnd { end: Open, span: StrSpan(">" 10877..10878) }
token: Text { text: StrSpan("Britomarti." 10878..10889) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10891..10892)), span: StrSpan("</p>" 10889..10893) }
token: Text { text: StrSpan("\n" 10893..10894) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10895..10896), span: StrSpan("<p" 10894..10896) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10897..10902), value: StrSpan("testo_dialogo" 10904..10917), span: StrSpan("class=\"testo_dialogo\"" 10897..10918) }
token: ElementEnd { end: Open, span: StrSpan(">" 10918..10919) }
token: Text { text: StrSpan("Ma la Tindaride, tu hai detto, usc√≠ illesa." 10919..10963) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10965..10966)), span: StrSpan("</p>" 10963..10967) }
token: Text { text: StrSpan("\n\n" 10967..10969) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10970..10971), span: StrSpan("<p" 10969..10971) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10972..10977), value: StrSpan("testo_personaggio testo_maiuscoletto" 10979..11015), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10972..11016) }
token: ElementEnd { end: Open, span: StrSpan(">" 11016..11017) }
token: Text { text: StrSpan("Saffo." 11017..11023) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11025..11026)), span: StrSpan("</p>" 11023..11027) }
token: Text { text: StrSpan("\n" 11027..11028) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11029..11030), span: StrSpan("<p" 11028..11030) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11031..11036), value: StrSpan("testo_dialogo" 11038..11051), span: StrSpan("class=\"testo_dialogo\"" 11031..11052) }
token: ElementEnd { end: Open, span: StrSpan(">" 11052..11053) }
token: Text { text: StrSpan("Seminando l‚Äôincendio e la strage. Non sorrise a nessuno. Non ment√≠ con nessuno. Ah, fu degna del mare. Britomarti, ricorda chi nacque quaggi√∫‚Ä¶" 11053..11201) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11203..11204)), span: StrSpan("</p>" 11201..11205) }
token: Text { text: StrSpan("\n\n" 11205..11207) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11208..11209), span: StrSpan("<p" 11207..11209) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11210..11215), value: StrSpan("testo_personaggio testo_maiuscoletto" 11217..11253), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11210..11254) }
token: ElementEnd { end: Open, span: StrSpan(">" 11254..11255) }
token: Text { text: StrSpan("Britomarti." 11255..11266) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11268..11269)), span: StrSpan("</p>" 11266..11270) }
token: Text { text: StrSpan("\n" 11270..11271) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11272..11273), span: StrSpan("<p" 11271..11273) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11274..11279), value: StrSpan("testo_dialogo" 11281..11294), span: StrSpan("class=\"testo_dialogo\"" 11274..11295) }
token: ElementEnd { end: Open, span: StrSpan(">" 11295..11296) }
token: Text { text: StrSpan("Chi vuoi dire?" 11296..11310) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11312..11313)), span: StrSpan("</p>" 11310..11314) }
token: Text { text: StrSpan("\n\n" 11314..11316) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11317..11318), span: StrSpan("<p" 11316..11318) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11319..11324), value: StrSpan("testo_personaggio testo_maiuscoletto" 11326..11362), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11319..11363) }
token: ElementEnd { end: Open, span: StrSpan(">" 11363..11364) }
token: Text { text: StrSpan("Saffo." 11364..11370) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11372..11373)), span: StrSpan("</p>" 11370..11374) }
token: Text { text: StrSpan("\n" 11374..11375) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11376..11377), span: StrSpan("<p" 11375..11377) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11378..11383), value: StrSpan("testo_dialogo" 11385..11398), span: StrSpan("class=\"testo_dialogo\"" 11378..11399) }
token: ElementEnd { end: Open, span: StrSpan(">" 11399..11400) }
token: Text { text: StrSpan("C‚Äô√® ancora un‚Äôisola che non hai visto. Quando sorge il mattino, √® la prima nel sole‚Ä¶" 11400..11492) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11494..11495)), span: StrSpan("</p>" 11492..11496) }
token: Text { text: StrSpan("\n\n" 11496..11498) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11499..11500), span: StrSpan("<p" 11498..11500) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11501..11506), value: StrSpan("testo_personaggio testo_maiuscoletto" 11508..11544), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11501..11545) }
token: ElementEnd { end: Open, span: StrSpan(">" 11545..11546) }
token: Text { text: StrSpan("Britomarti." 11546..11557) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11559..11560)), span: StrSpan("</p>" 11557..11561) }
token: Text { text: StrSpan("\n" 11561..11562) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11563..11564), span: StrSpan("<p" 11562..11564) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11565..11570), value: StrSpan("testo_dialogo" 11572..11585), span: StrSpan("class=\"testo_dialogo\"" 11565..11586) }
token: ElementEnd { end: Open, span: StrSpan(">" 11586..11587) }
token: Text { text: StrSpan("Oh Saffo." 11587..11596) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11598..11599)), span: StrSpan("</p>" 11596..11600) }
token: Text { text: StrSpan("\n\n" 11600..11602) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11603..11604), span: StrSpan("<p" 11602..11604) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11605..11610), value: StrSpan("testo_personaggio testo_maiuscoletto" 11612..11648), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11605..11649) }
token: ElementEnd { end: Open, span: StrSpan(">" 11649..11650) }
token: Text { text: StrSpan("Saffo." 11650..11656) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11658..11659)), span: StrSpan("</p>" 11656..11660) }
token: Text { text: StrSpan("\n" 11660..11661) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11662..11663), span: StrSpan("<p" 11661..11663) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11664..11669), value: StrSpan("testo_dialogo" 11671..11684), span: StrSpan("class=\"testo_dialogo\"" 11664..11685) }
token: ElementEnd { end: Open, span: StrSpan(">" 11685..11686) }
token: Text { text: StrSpan("L√† balz√≤ dalla schiuma quella che non ha nome, l‚Äôinquieta angosciosa, che sorride da sola." 11686..11780) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11782..11783)), span: StrSpan("</p>" 11780..11784) }
token: Text { text: StrSpan("\n\n" 11784..11786) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11787..11788), span: StrSpan("<p" 11786..11788) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11789..11794), value: StrSpan("testo_personaggio testo_maiuscoletto" 11796..11832), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11789..11833) }
token: ElementEnd { end: Open, span: StrSpan(">" 11833..11834) }
token: Text { text: StrSpan("Britomarti." 11834..11845) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11847..11848)), span: StrSpan("</p>" 11845..11849) }
token: Text { text: StrSpan("\n" 11849..11850) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11851..11852), span: StrSpan("<p" 11850..11852) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11853..11858), value: StrSpan("testo_dialogo" 11860..11873), span: StrSpan("class=\"testo_dialogo\"" 11853..11874) }
token: ElementEnd { end: Open, span: StrSpan(">" 11874..11875) }
token: Text { text: StrSpan("Ma lei non soffre. √à una gran dea." 11875..11910) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11912..11913)), span: StrSpan("</p>" 11910..11914) }
token: Text { text: StrSpan("\n\n" 11914..11916) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11917..11918), span: StrSpan("<p" 11916..11918) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11919..11924), value: StrSpan("testo_personaggio testo_maiuscoletto" 11926..11962), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11919..11963) }
token: ElementEnd { end: Open, span: StrSpan(">" 11963..11964) }
token: Text { text: StrSpan("Saffo." 11964..11970) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11972..11973)), span: StrSpan("</p>" 11970..11974) }
token: Text { text: StrSpan("\n" 11974..11975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11976..11977), span: StrSpan("<p" 11975..11977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11978..11983), value: StrSpan("testo_dialogo" 11985..11998), span: StrSpan("class=\"testo_dialogo\"" 11978..11999) }
token: ElementEnd { end: Open, span: StrSpan(">" 11999..12000) }
token: Text { text: StrSpan("E tutto quello che si macera e dibatte nel mare, √® sua sostanza e suo respiro. Tu l‚Äôhai veduta, Britomarti?" 12000..12110) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12112..12113)), span: StrSpan("</p>" 12110..12114) }
token: Text { text: StrSpan("\n\n" 12114..12116) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12117..12118), span: StrSpan("<p" 12116..12118) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12119..12124), value: StrSpan("testo_personaggio testo_maiuscoletto" 12126..12162), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12119..12163) }
token: ElementEnd { end: Open, span: StrSpan(">" 12163..12164) }
token: Text { text: StrSpan("Britomarti." 12164..12175) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12177..12178)), span: StrSpan("</p>" 12175..12179) }
token: Text { text: StrSpan("\n" 12179..12180) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12181..12182), span: StrSpan("<p" 12180..12182) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12183..12188), value: StrSpan("testo_dialogo" 12190..12203), span: StrSpan("class=\"testo_dialogo\"" 12183..12204) }
token: ElementEnd { end: Open, span: StrSpan(">" 12204..12205) }
token: Text { text: StrSpan("Oh Saffo, non dirlo. Sono soltanto una piccola ninfa." 12205..12258) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12260..12261)), span: StrSpan("</p>" 12258..12262) }
token: Text { text: StrSpan("\n\n" 12262..12264) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12265..12266), span: StrSpan("<p" 12264..12266) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12267..12272), value: StrSpan("testo_personaggio testo_maiuscoletto" 12274..12310), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12267..12311) }
token: ElementEnd { end: Open, span: StrSpan(">" 12311..12312) }
token: Text { text: StrSpan("Saffo." 12312..12318) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12320..12321)), span: StrSpan("</p>" 12318..12322) }
token: Text { text: StrSpan("\n" 12322..12323) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12324..12325), span: StrSpan("<p" 12323..12325) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12326..12331), value: StrSpan("testo_dialogo" 12333..12346), span: StrSpan("class=\"testo_dialogo\"" 12326..12347) }
token: ElementEnd { end: Open, span: StrSpan(">" 12347..12348) }
token: Text { text: StrSpan("Tu vedi, dunque‚Ä¶" 12348..12366) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12368..12369)), span: StrSpan("</p>" 12366..12370) }
token: Text { text: StrSpan("\n\n" 12370..12372) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12373..12374), span: StrSpan("<p" 12372..12374) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12375..12380), value: StrSpan("testo_personaggio testo_maiuscoletto" 12382..12418), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12375..12419) }
token: ElementEnd { end: Open, span: StrSpan(">" 12419..12420) }
token: Text { text: StrSpan("Britomarti." 12420..12431) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12433..12434)), span: StrSpan("</p>" 12431..12435) }
token: Text { text: StrSpan("\n" 12435..12436) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12437..12438), span: StrSpan("<p" 12436..12438) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12439..12444), value: StrSpan("testo_dialogo" 12446..12459), span: StrSpan("class=\"testo_dialogo\"" 12439..12460) }
token: ElementEnd { end: Open, span: StrSpan(">" 12460..12461) }
token: Text { text: StrSpan("Davanti a lei, tutte fuggiamo. Non parlarne, bambina." 12461..12514) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12516..12517)), span: StrSpan("</p>" 12514..12518) }
token: Text { text: StrSpan("\n" 12518..12519) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 12521..12525)), span: StrSpan("</body>" 12519..12526) }
token: Text { text: StrSpan("\n" 12526..12527) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 12529..12533)), span: StrSpan("</html>" 12527..12534) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La madre" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("La vita di Meleagro era legata a un tizzone che la madre Altea cav√≤ dal fuoco quando le nacque il figlio. Madre imperiosa che, quando Meleagro ebbe ucciso lo zio che pretendeva la sua parte della pelle del cinghiale, in uno scatto d‚Äôira ributt√≤ il tizzone nel fuoco e lo lasci√≤ incenerire." 358..652) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 654..655)), span: StrSpan("</p>" 652..656) }
token: Text { text: StrSpan("\n\n" 656..658) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 659..660), span: StrSpan("<p" 658..660) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 661..666), value: StrSpan("testo_indicazioni_scena" 668..691), span: StrSpan("class=\"testo_indicazioni_scena\"" 661..692) }
token: ElementEnd { end: Open, span: StrSpan(">" 692..693) }
token: Text { text: StrSpan("(parlano Meleagro e Ermete)" 693..720) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 722..723)), span: StrSpan("</p>" 720..724) }
token: Text { text: StrSpan("\n\n\n" 724..727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 728..729), span: StrSpan("<p" 727..729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 730..735), value: StrSpan("testo_personaggio testo_maiuscoletto" 737..773), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 730..774) }
token: ElementEnd { end: Open, span: StrSpan(">" 774..775) }
token: Text { text: StrSpan("Meleagro." 775..784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 786..787)), span: StrSpan("</p>" 784..788) }
token: Text { text: StrSpan("\n" 788..789) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 790..791), span: StrSpan("<p" 789..791) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 792..797), value: StrSpan("testo_dialogo" 799..812), span: StrSpan("class=\"testo_dialogo\"" 792..813) }
token: ElementEnd { end: Open, span: StrSpan(">" 813..814) }
token: Text { text: StrSpan("Sono bruciato come un tizzo, Ermete." 814..850) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 852..853)), span: StrSpan("</p>" 850..854) }
token: Text { text: StrSpan("\n\n" 854..856) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 857..858), span: StrSpan("<p" 856..858) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 859..864), value: StrSpan("testo_personaggio testo_maiuscoletto" 866..902), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 859..903) }
token: ElementEnd { end: Open, span: StrSpan(">" 903..904) }
token: Text { text: StrSpan("Ermete." 904..911) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 913..914)), span: StrSpan("</p>" 911..915) }
token: Text { text: StrSpan("\n" 915..916) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 917..918), span: StrSpan("<p" 916..918) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 919..924), value: StrSpan("testo_dialogo" 926..939), span: StrSpan("class=\"testo_dialogo\"" 919..940) }
token: ElementEnd { end: Open, span: StrSpan(">" 940..941) }
token: Text { text: StrSpan("Ma non avrai sofferto molto." 941..969) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 971..972)), span: StrSpan("</p>" 969..973) }
token: Text { text: StrSpan("\n\n" 973..975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 976..977), span: StrSpan("<p" 975..977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 978..983), value: StrSpan("testo_personaggio testo_maiuscoletto" 985..1021), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 978..1022) }
token: ElementEnd { end: Open, span: StrSpan(">" 1022..1023) }
token: Text { text: StrSpan("Meleagro." 1023..1032) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1034..1035)), span: StrSpan("</p>" 1032..1036) }
token: Text { text: StrSpan("\n" 1036..1037) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1038..1039), span: StrSpan("<p" 1037..1039) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1040..1045), value: StrSpan("testo_dialogo" 1047..1060), span: StrSpan("class=\"testo_dialogo\"" 1040..1061) }
token: ElementEnd { end: Open, span: StrSpan(">" 1061..1062) }
token: Text { text: StrSpan("Era peggio la pena, la passione di prima." 1062..1103) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1105..1106)), span: StrSpan("</p>" 1103..1107) }
token: Text { text: StrSpan("\n\n" 1107..1109) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1110..1111), span: StrSpan("<p" 1109..1111) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1112..1117), value: StrSpan("testo_personaggio testo_maiuscoletto" 1119..1155), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1112..1156) }
token: ElementEnd { end: Open, span: StrSpan(">" 1156..1157) }
token: Text { text: StrSpan("Ermete." 1157..1164) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1166..1167)), span: StrSpan("</p>" 1164..1168) }
token: Text { text: StrSpan("\n" 1168..1169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1170..1171), span: StrSpan("<p" 1169..1171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1172..1177), value: StrSpan("testo_dialogo" 1179..1192), span: StrSpan("class=\"testo_dialogo\"" 1172..1193) }
token: ElementEnd { end: Open, span: StrSpan(">" 1193..1194) }
token: Text { text: StrSpan("E adesso ascolta, Meleagro. Tu sei morto. La fiamma, l‚Äôarsione sono cose passate. Tu sei meno del fumo che si √® staccato da quel fuoco. Sei quasi il nulla. Rass√©gnati. E per te sono un nulla le cose del mondo, il mattino, la sera, i paesi. Gu√†rdati intorno adesso." 1194..1463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1465..1466)), span: StrSpan("</p>" 1463..1467) }
token: Text { text: StrSpan("\n\n" 1467..1469) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1470..1471), span: StrSpan("<p" 1469..1471) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1472..1477), value: StrSpan("testo_personaggio testo_maiuscoletto" 1479..1515), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1472..1516) }
token: ElementEnd { end: Open, span: StrSpan(">" 1516..1517) }
token: Text { text: StrSpan("Meleagro." 1517..1526) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1528..1529)), span: StrSpan("</p>" 1526..1530) }
token: Text { text: StrSpan("\n" 1530..1531) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1532..1533), span: StrSpan("<p" 1531..1533) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1534..1539), value: StrSpan("testo_dialogo" 1541..1554), span: StrSpan("class=\"testo_dialogo\"" 1534..1555) }
token: ElementEnd { end: Open, span: StrSpan(">" 1555..1556) }
token: Text { text: StrSpan("Non vedo nulla. E non m‚Äôimporta. Sono ancora una brace‚Ä¶ Cos‚Äôhai detto dei paesi del mondo? O Ermete, come a dio che tu sei, certo il mondo √® bello, e diverso, e sempre dolce. Hai i tuoi occhi, Ermete. Ma io Meleagro fui soltanto cacciatore e figlio di cacciatori, non uscii mai dalle mie selve, vissi davanti a un focolare, e quando nacqui il mio destino era gi√† chiuso nel tizzone che mia madre rub√≤. Non conobbi che qualche compagno, le belve, e mia madre." 1556..2023) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2025..2026)), span: StrSpan("</p>" 2023..2027) }
token: Text { text: StrSpan("\n\n" 2027..2029) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2030..2031), span: StrSpan("<p" 2029..2031) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2032..2037), value: StrSpan("testo_personaggio testo_maiuscoletto" 2039..2075), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2032..2076) }
token: ElementEnd { end: Open, span: StrSpan(">" 2076..2077) }
token: Text { text: StrSpan("Ermete." 2077..2084) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2086..2087)), span: StrSpan("</p>" 2084..2088) }
token: Text { text: StrSpan("\n" 2088..2089) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2090..2091), span: StrSpan("<p" 2089..2091) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2092..2097), value: StrSpan("testo_dialogo" 2099..2112), span: StrSpan("class=\"testo_dialogo\"" 2092..2113) }
token: ElementEnd { end: Open, span: StrSpan(">" 2113..2114) }
token: Text { text: StrSpan("Tu credi che l‚Äôuomo, qualunque uomo, abbia mai conosciuto altro?" 2114..2180) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2182..2183)), span: StrSpan("</p>" 2180..2184) }
token: Text { text: StrSpan("\n\n" 2184..2186) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2187..2188), span: StrSpan("<p" 2186..2188) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2189..2194), value: StrSpan("testo_personaggio testo_maiuscoletto" 2196..2232), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2189..2233) }
token: ElementEnd { end: Open, span: StrSpan(">" 2233..2234) }
token: Text { text: StrSpan("Meleagro." 2234..2243) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2245..2246)), span: StrSpan("</p>" 2243..2247) }
token: Text { text: StrSpan("\n" 2247..2248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2249..2250), span: StrSpan("<p" 2248..2250) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2251..2256), value: StrSpan("testo_dialogo" 2258..2271), span: StrSpan("class=\"testo_dialogo\"" 2251..2272) }
token: ElementEnd { end: Open, span: StrSpan(">" 2272..2273) }
token: Text { text: StrSpan("Non so. Ma ho sentito narrare di libere vite di l√† dai monti e dai fiumi, di traversate, di arcipelaghi, d‚Äôincontri con mostri e con d√®i. Di uomini pi√∫ forti anche di me, pi√∫ giovani, segn√†ti da strani destini." 2273..2490) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2492..2493)), span: StrSpan("</p>" 2490..2494) }
token: Text { text: StrSpan("\n\n" 2494..2496) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2497..2498), span: StrSpan("<p" 2496..2498) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2499..2504), value: StrSpan("testo_personaggio testo_maiuscoletto" 2506..2542), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2499..2543) }
token: ElementEnd { end: Open, span: StrSpan(">" 2543..2544) }
token: Text { text: StrSpan("Ermete." 2544..2551) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2553..2554)), span: StrSpan("</p>" 2551..2555) }
token: Text { text: StrSpan("\n" 2555..2556) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2557..2558), span: StrSpan("<p" 2556..2558) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2559..2564), value: StrSpan("testo_dialogo" 2566..2579), span: StrSpan("class=\"testo_dialogo\"" 2559..2580) }
token: ElementEnd { end: Open, span: StrSpan(">" 2580..2581) }
token: Text { text: StrSpan("Avevano tutti una madre, Meleagro. E fatiche da compiere. E una morte li attendeva, per la passione di qualcuno. Nessuno fu signore di s√© n√© conobbe mai altro." 2581..2742) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2744..2745)), span: StrSpan("</p>" 2742..2746) }
token: Text { text: StrSpan("\n\n" 2746..2748) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2749..2750), span: StrSpan("<p" 2748..2750) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2751..2756), value: StrSpan("testo_personaggio testo_maiuscoletto" 2758..2794), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2751..2795) }
token: ElementEnd { end: Open, span: StrSpan(">" 2795..2796) }
token: Text { text: StrSpan("Meleagro." 2796..2805) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2807..2808)), span: StrSpan("</p>" 2805..2809) }
token: Text { text: StrSpan("\n" 2809..2810) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2811..2812), span: StrSpan("<p" 2810..2812) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2813..2818), value: StrSpan("testo_dialogo" 2820..2833), span: StrSpan("class=\"testo_dialogo\"" 2813..2834) }
token: ElementEnd { end: Open, span: StrSpan(">" 2834..2835) }
token: Text { text: StrSpan("Una madre‚Ä¶ nessuno conosce la mia. Nessuno sa cosa significhi saper la propria vita in mano a lei e sentirsi bruciare, e quegli occhi che fissano il fuoco. Perch√©, il giorno che nacqui, strapp√≤ il tizzone dalla fiamma e non lasci√≤ che incenerissi? E dovevo crescere, diventare quel Meleagro, piangere, giocare, andare a caccia, veder l‚Äôinverno, veder le stagioni, essere uomo ‚Äì ma saper l‚Äôaltra cosa, portare nel cuore quel peso, spiarle in viso la mia sorte quotidiana. Qui √® la pena. Non √® nulla un nemico." 2835..3356) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3358..3359)), span: StrSpan("</p>" 3356..3360) }
token: Text { text: StrSpan("\n\n" 3360..3362) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3363..3364), span: StrSpan("<p" 3362..3364) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3365..3370), value: StrSpan("testo_personaggio testo_maiuscoletto" 3372..3408), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3365..3409) }
token: ElementEnd { end: Open, span: StrSpan(">" 3409..3410) }
token: Text { text: StrSpan("Ermete." 3410..3417) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3419..3420)), span: StrSpan("</p>" 3417..3421) }
token: Text { text: StrSpan("\n" 3421..3422) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3423..3424), span: StrSpan("<p" 3422..3424) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3425..3430), value: StrSpan("testo_dialogo" 3432..3445), span: StrSpan("class=\"testo_dialogo\"" 3425..3446) }
token: ElementEnd { end: Open, span: StrSpan(">" 3446..3447) }
token: Text { text: StrSpan("Siete stranezze, voi mortali. Vi stupite di ci√≤ che sapete. Che un nemico non pesi, √® evidente. Cos√≠ come ognuno ha una madre. E perch√© dunque √® inaccettabile saper la propria vita in mano a lei?" 3447..3647) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3649..3650)), span: StrSpan("</p>" 3647..3651) }
token: Text { text: StrSpan("\n\n" 3651..3653) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3654..3655), span: StrSpan("<p" 3653..3655) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3656..3661), value: StrSpan("testo_personaggio testo_maiuscoletto" 3663..3699), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3656..3700) }
token: ElementEnd { end: Open, span: StrSpan(">" 3700..3701) }
token: Text { text: StrSpan("Meleagro." 3701..3710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3712..3713)), span: StrSpan("</p>" 3710..3714) }
token: Text { text: StrSpan("\n" 3714..3715) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3716..3717), span: StrSpan("<p" 3715..3717) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3718..3723), value: StrSpan("testo_dialogo" 3725..3738), span: StrSpan("class=\"testo_dialogo\"" 3718..3739) }
token: ElementEnd { end: Open, span: StrSpan(">" 3739..3740) }
token: Text { text: StrSpan("Noi cacciatori, Ermete, abbiamo un patto. Quando saliamo la montagna ci aiutiamo a vicenda ‚Äì ciascuno ha in pugno la vita dell‚Äôaltro, ma non si tradisce il compagno." 3740..3909) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3911..3912)), span: StrSpan("</p>" 3909..3913) }
token: Text { text: StrSpan("\n\n" 3913..3915) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3916..3917), span: StrSpan("<p" 3915..3917) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3918..3923), value: StrSpan("testo_personaggio testo_maiuscoletto" 3925..3961), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3918..3962) }
token: ElementEnd { end: Open, span: StrSpan(">" 3962..3963) }
token: Text { text: StrSpan("Ermete." 3963..3970) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3972..3973)), span: StrSpan("</p>" 3970..3974) }
token: Text { text: StrSpan("\n" 3974..3975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3976..3977), span: StrSpan("<p" 3975..3977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3978..3983), value: StrSpan("testo_dialogo" 3985..3998), span: StrSpan("class=\"testo_dialogo\"" 3978..3999) }
token: ElementEnd { end: Open, span: StrSpan(">" 3999..4000) }
token: Text { text: StrSpan("O sciocco, non si tradisce che il compagno‚Ä¶ Ma non √® questo. Sempre la vostra vita √® nel tizzone, e la madre vi ha strappati dal fuoco, e voi vivete mezzo riarsi. E la passione che vi finisce √® ancora quella della madre. Che altro siete se non carne e sangue suoi?" 4000..4269) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4271..4272)), span: StrSpan("</p>" 4269..4273) }
token: Text { text: StrSpan("\n\n" 4273..4275) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4276..4277), span: StrSpan("<p" 4275..4277) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4278..4283), value: StrSpan("testo_personaggio testo_maiuscoletto" 4285..4321), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4278..4322) }
token: ElementEnd { end: Open, span: StrSpan(">" 4322..4323) }
token: Text { text: StrSpan("Meleagro." 4323..4332) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4334..4335)), span: StrSpan("</p>" 4332..4336) }
token: Text { text: StrSpan("\n" 4336..4337) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4338..4339), span: StrSpan("<p" 4337..4339) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4340..4345), value: StrSpan("testo_dialogo" 4347..4360), span: StrSpan("class=\"testo_dialogo\"" 4340..4361) }
token: ElementEnd { end: Open, span: StrSpan(">" 4361..4362) }
token: Text { text: StrSpan("Ermete, bisogna aver visto i suoi occhi. Bisogna averli visti dall‚Äôinfanzia, e saputi familiari e sentiti fissi su ogni tuo passo e gesto, per giorni, per anni, e sapere che invecchiano, che muoiono, e soffrirci, farsene pena, temere di offenderli. Allora s√≠, √® inaccettabile che fissino il fuoco vedendo il tizzone." 4362..4682) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4684..4685)), span: StrSpan("</p>" 4682..4686) }
token: Text { text: StrSpan("\n\n" 4686..4688) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4689..4690), span: StrSpan("<p" 4688..4690) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4691..4696), value: StrSpan("testo_personaggio testo_maiuscoletto" 4698..4734), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4691..4735) }
token: ElementEnd { end: Open, span: StrSpan(">" 4735..4736) }
token: Text { text: StrSpan("Ermete." 4736..4743) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4745..4746)), span: StrSpan("</p>" 4743..4747) }
token: Text { text: StrSpan("\n" 4747..4748) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4749..4750), span: StrSpan("<p" 4748..4750) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4751..4756), value: StrSpan("testo_dialogo" 4758..4771), span: StrSpan("class=\"testo_dialogo\"" 4751..4772) }
token: ElementEnd { end: Open, span: StrSpan(">" 4772..4773) }
token: Text { text: StrSpan("Sai anche questo e ti stupisci, Meleagro? Ma che invecchino e muoiano vuol dire che tu intanto ti sei fatto uomo e sapendo di offenderli li vai cercando altrove vivi e veri. E se trovi questi occhi ‚Äì si trovano sempre, Meleagro ‚Äì chi li porta √® di nuovo la madre. E tu allora non sai pi√∫ con chi hai da fare e sei quasi contento, ma sta‚Äô certo che loro ‚Äì la vecchia e le giovani ‚Äì sanno. E nessuno pu√≤ sfuggire al destino che l‚Äôha segnato dalla nascita col fuoco." 4773..5251) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5253..5254)), span: StrSpan("</p>" 5251..5255) }
token: Text { text: StrSpan("\n\n" 5255..5257) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5258..5259), span: StrSpan("<p" 5257..5259) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5260..5265), value: StrSpan("testo_personaggio testo_maiuscoletto" 5267..5303), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5260..5304) }
token: ElementEnd { end: Open, span: StrSpan(">" 5304..5305) }
token: Text { text: StrSpan("Meleagro." 5305..5314) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5316..5317)), span: StrSpan("</p>" 5314..5318) }
token: Text { text: StrSpan("\n" 5318..5319) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5320..5321), span: StrSpan("<p" 5319..5321) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5322..5327), value: StrSpan("testo_dialogo" 5329..5342), span: StrSpan("class=\"testo_dialogo\"" 5322..5343) }
token: ElementEnd { end: Open, span: StrSpan(">" 5343..5344) }
token: Text { text: StrSpan("Qualche altro ha avuto il mio destino, Ermete?" 5344..5390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5392..5393)), span: StrSpan("</p>" 5390..5394) }
token: Text { text: StrSpan("\n\n" 5394..5396) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5397..5398), span: StrSpan("<p" 5396..5398) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5399..5404), value: StrSpan("testo_personaggio testo_maiuscoletto" 5406..5442), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5399..5443) }
token: ElementEnd { end: Open, span: StrSpan(">" 5443..5444) }
token: Text { text: StrSpan("Ermete." 5444..5451) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5453..5454)), span: StrSpan("</p>" 5451..5455) }
token: Text { text: StrSpan("\n" 5455..5456) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5457..5458), span: StrSpan("<p" 5456..5458) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5459..5464), value: StrSpan("testo_dialogo" 5466..5479), span: StrSpan("class=\"testo_dialogo\"" 5459..5480) }
token: ElementEnd { end: Open, span: StrSpan(">" 5480..5481) }
token: Text { text: StrSpan("Tutti, Meleagro, tutti. Tutti attende una morte, per la passione di qualcuno. Nella carne e nel sangue di ognuno rugge la madre. Vero √® che molti sono vili, pi√∫ di te." 5481..5650) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5652..5653)), span: StrSpan("</p>" 5650..5654) }
token: Text { text: StrSpan("\n\n" 5654..5656) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5657..5658), span: StrSpan("<p" 5656..5658) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5659..5664), value: StrSpan("testo_personaggio testo_maiuscoletto" 5666..5702), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5659..5703) }
token: ElementEnd { end: Open, span: StrSpan(">" 5703..5704) }
token: Text { text: StrSpan("Meleagro." 5704..5713) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5715..5716)), span: StrSpan("</p>" 5713..5717) }
token: Text { text: StrSpan("\n" 5717..5718) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5719..5720), span: StrSpan("<p" 5718..5720) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5721..5726), value: StrSpan("testo_dialogo" 5728..5741), span: StrSpan("class=\"testo_dialogo\"" 5721..5742) }
token: ElementEnd { end: Open, span: StrSpan(">" 5742..5743) }
token: Text { text: StrSpan("Non ero vile, Ermete." 5743..5764) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5766..5767)), span: StrSpan("</p>" 5764..5768) }
token: Text { text: StrSpan("\n\n" 5768..5770) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5771..5772), span: StrSpan("<p" 5770..5772) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5773..5778), value: StrSpan("testo_personaggio testo_maiuscoletto" 5780..5816), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5773..5817) }
token: ElementEnd { end: Open, span: StrSpan(">" 5817..5818) }
token: Text { text: StrSpan("Ermete." 5818..5825) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5827..5828)), span: StrSpan("</p>" 5825..5829) }
token: Text { text: StrSpan("\n" 5829..5830) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5831..5832), span: StrSpan("<p" 5830..5832) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5833..5838), value: StrSpan("testo_dialogo" 5840..5853), span: StrSpan("class=\"testo_dialogo\"" 5833..5854) }
token: ElementEnd { end: Open, span: StrSpan(">" 5854..5855) }
token: Text { text: StrSpan("Ti parlo come a ombra, non come a mortale. Fin che l‚Äôuomo non sa, √® coraggioso." 5855..5937) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5939..5940)), span: StrSpan("</p>" 5937..5941) }
token: Text { text: StrSpan("\n\n" 5941..5943) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5944..5945), span: StrSpan("<p" 5943..5945) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5946..5951), value: StrSpan("testo_personaggio testo_maiuscoletto" 5953..5989), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5946..5990) }
token: ElementEnd { end: Open, span: StrSpan(">" 5990..5991) }
token: Text { text: StrSpan("Meleagro." 5991..6000) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6002..6003)), span: StrSpan("</p>" 6000..6004) }
token: Text { text: StrSpan("\n" 6004..6005) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6006..6007), span: StrSpan("<p" 6005..6007) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6008..6013), value: StrSpan("testo_dialogo" 6015..6028), span: StrSpan("class=\"testo_dialogo\"" 6008..6029) }
token: ElementEnd { end: Open, span: StrSpan(">" 6029..6030) }
token: Text { text: StrSpan("Non sono vile, se mi guardo intorno. So tante cose adesso. Ma non credo che anche lei ‚Äì la giovane ‚Äì sapesse quegli occhi." 6030..6156) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6158..6159)), span: StrSpan("</p>" 6156..6160) }
token: Text { text: StrSpan("\n\n" 6160..6162) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6163..6164), span: StrSpan("<p" 6162..6164) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6165..6170), value: StrSpan("testo_personaggio testo_maiuscoletto" 6172..6208), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6165..6209) }
token: ElementEnd { end: Open, span: StrSpan(">" 6209..6210) }
token: Text { text: StrSpan("Ermete." 6210..6217) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6219..6220)), span: StrSpan("</p>" 6217..6221) }
token: Text { text: StrSpan("\n" 6221..6222) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6223..6224), span: StrSpan("<p" 6222..6224) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6225..6230), value: StrSpan("testo_dialogo" 6232..6245), span: StrSpan("class=\"testo_dialogo\"" 6225..6246) }
token: ElementEnd { end: Open, span: StrSpan(">" 6246..6247) }
token: Text { text: StrSpan("Non li sapeva. " 6247..6262) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("em" 6263..6265), span: StrSpan("<em" 6262..6265) }
token: ElementEnd { end: Open, span: StrSpan(">" 6265..6266) }
token: Text { text: StrSpan("Era" 6266..6269) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("em" 6271..6273)), span: StrSpan("</em>" 6269..6274) }
token: Text { text: StrSpan(" quegli occhi." 6274..6288) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6290..6291)), span: StrSpan("</p>" 6288..6292) }
token: Text { text: StrSpan("\n\n" 6292..6294) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6295..6296), span: StrSpan("<p" 6294..6296) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6297..6302), value: StrSpan("testo_personaggio testo_maiuscoletto" 6304..6340), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6297..6341) }
token: ElementEnd { end: Open, span: StrSpan(">" 6341..6342) }
token: Text { text: StrSpan("Meleagro." 6342..6351) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6353..6354)), span: StrSpan("</p>" 6351..6355) }
token: Text { text: StrSpan("\n" 6355..6356) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6357..6358), span: StrSpan("<p" 6356..6358) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6359..6364), value: StrSpan("testo_dialogo" 6366..6379), span: StrSpan("class=\"testo_dialogo\"" 6359..6380) }
token: ElementEnd { end: Open, span: StrSpan(">" 6380..6381) }
token: Text { text: StrSpan("O Atalanta, io mi domando se anche tu sarai madre, e capace di guardare nel fuoco." 6381..6463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6465..6466)), span: StrSpan("</p>" 6463..6467) }
token: Text { text: StrSpan("\n\n" 6467..6469) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6470..6471), span: StrSpan("<p" 6469..6471) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6472..6477), value: StrSpan("testo_personaggio testo_maiuscoletto" 6479..6515), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6472..6516) }
token: ElementEnd { end: Open, span: StrSpan(">" 6516..6517) }
token: Text { text: StrSpan("Ermete." 6517..6524) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6526..6527)), span: StrSpan("</p>" 6524..6528) }
token: Text { text: StrSpan("\n" 6528..6529) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6530..6531), span: StrSpan("<p" 6529..6531) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6532..6537), value: StrSpan("testo_dialogo" 6539..6552), span: StrSpan("class=\"testo_dialogo\"" 6532..6553) }
token: ElementEnd { end: Open, span: StrSpan(">" 6553..6554) }
token: Text { text: StrSpan("Vedi se ti ricordi le parole che disse, la sera che scannaste il cinghiale." 6554..6629) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6631..6632)), span: StrSpan("</p>" 6629..6633) }
token: Text { text: StrSpan("\n\n" 6633..6635) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6636..6637), span: StrSpan("<p" 6635..6637) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6638..6643), value: StrSpan("testo_personaggio testo_maiuscoletto" 6645..6681), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6638..6682) }
token: ElementEnd { end: Open, span: StrSpan(">" 6682..6683) }
token: Text { text: StrSpan("Meleagro." 6683..6692) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6694..6695)), span: StrSpan("</p>" 6692..6696) }
token: Text { text: StrSpan("\n" 6696..6697) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6698..6699), span: StrSpan("<p" 6697..6699) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6700..6705), value: StrSpan("testo_dialogo" 6707..6720), span: StrSpan("class=\"testo_dialogo\"" 6700..6721) }
token: ElementEnd { end: Open, span: StrSpan(">" 6721..6722) }
token: Text { text: StrSpan("Quella sera. La sera del patto. Non la dimentico, Ermete. Atalanta era piena di furia perch√© avevo lasciato sfuggire la belva nella neve. Mi men√≤ un colpo con la scure e mi prese alla spalla. Io da quel colpo mi sentii toccare appena, ma le urlai pi√∫ furente di lei: ¬´" 6722..6994) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 6995..6996), span: StrSpan("<q" 6994..6996) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6997..7002), value: StrSpan("testo_no_virgolette" 7004..7023), span: StrSpan("class=\"testo_no_virgolette\"" 6997..7024) }
token: ElementEnd { end: Open, span: StrSpan(">" 7024..7025) }
token: Text { text: StrSpan("Ritorna a casa. Ritorna con le donne, Atalanta. Qui non √® luogo da capricci di ragazze" 7025..7112) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 7114..7115)), span: StrSpan("</q>" 7112..7116) }
token: Text { text: StrSpan("¬ª. E la sera, quando il cinghiale fu morto, Atalanta cammin√≤ con me in mezzo ai compagni e mi diede la scure ch‚Äôera tornata a cercare da sola sul nevaio. Facemmo il patto, quella sera, che, andando a caccia, uno dei due sarebbe a turno stato disarmato, perch√© l‚Äôaltro non fosse tentato dall‚Äôira." 7116..7420) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7422..7423)), span: StrSpan("</p>" 7420..7424) }
token: Text { text: StrSpan("\n\n" 7424..7426) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7427..7428), span: StrSpan("<p" 7426..7428) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7429..7434), value: StrSpan("testo_personaggio testo_maiuscoletto" 7436..7472), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7429..7473) }
token: ElementEnd { end: Open, span: StrSpan(">" 7473..7474) }
token: Text { text: StrSpan("Ermete." 7474..7481) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7483..7484)), span: StrSpan("</p>" 7481..7485) }
token: Text { text: StrSpan("\n" 7485..7486) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7487..7488), span: StrSpan("<p" 7486..7488) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7489..7494), value: StrSpan("testo_dialogo" 7496..7509), span: StrSpan("class=\"testo_dialogo\"" 7489..7510) }
token: ElementEnd { end: Open, span: StrSpan(">" 7510..7511) }
token: Text { text: StrSpan("E che cosa ti disse Atalanta?" 7511..7540) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7542..7543)), span: StrSpan("</p>" 7540..7544) }
token: Text { text: StrSpan("\n\n" 7544..7546) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7547..7548), span: StrSpan("<p" 7546..7548) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7549..7554), value: StrSpan("testo_personaggio testo_maiuscoletto" 7556..7592), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7549..7593) }
token: ElementEnd { end: Open, span: StrSpan(">" 7593..7594) }
token: Text { text: StrSpan("Meleagro." 7594..7603) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7605..7606)), span: StrSpan("</p>" 7603..7607) }
token: Text { text: StrSpan("\n" 7607..7608) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7609..7610), span: StrSpan("<p" 7608..7610) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7611..7616), value: StrSpan("testo_dialogo" 7618..7631), span: StrSpan("class=\"testo_dialogo\"" 7611..7632) }
token: ElementEnd { end: Open, span: StrSpan(">" 7632..7633) }
token: Text { text: StrSpan("Non l‚Äôho scordato, Ermete. ¬´" 7633..7664) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 7665..7666), span: StrSpan("<q" 7664..7666) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7667..7672), value: StrSpan("testo_no_virgolette" 7674..7693), span: StrSpan("class=\"testo_no_virgolette\"" 7667..7694) }
token: ElementEnd { end: Open, span: StrSpan(">" 7694..7695) }
token: Text { text: StrSpan("O figlio di Altea" 7695..7712) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 7714..7715)), span: StrSpan("</q>" 7712..7716) }
token: Text { text: StrSpan("¬ª disse, ¬´" 7716..7728) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 7729..7730), span: StrSpan("<q" 7728..7730) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7731..7736), value: StrSpan("testo_no_virgolette" 7738..7757), span: StrSpan("class=\"testo_no_virgolette\"" 7731..7758) }
token: ElementEnd { end: Open, span: StrSpan(">" 7758..7759) }
token: Text { text: StrSpan("la pelle del cinghiale star√† sul nostro letto di nozze. Sar√† come il prezzo del tuo sangue ‚Äì e del mio" 7759..7865) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 7867..7868)), span: StrSpan("</q>" 7865..7869) }
token: Text { text: StrSpan("¬ª. E sorrise, cos√≠ per farsi perdonare." 7869..7910) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7912..7913)), span: StrSpan("</p>" 7910..7914) }
token: Text { text: StrSpan("\n\n" 7914..7916) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7917..7918), span: StrSpan("<p" 7916..7918) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7919..7924), value: StrSpan("testo_personaggio testo_maiuscoletto" 7926..7962), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7919..7963) }
token: ElementEnd { end: Open, span: StrSpan(">" 7963..7964) }
token: Text { text: StrSpan("Ermete." 7964..7971) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7973..7974)), span: StrSpan("</p>" 7971..7975) }
token: Text { text: StrSpan("\n" 7975..7976) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7977..7978), span: StrSpan("<p" 7976..7978) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7979..7984), value: StrSpan("testo_dialogo" 7986..7999), span: StrSpan("class=\"testo_dialogo\"" 7979..8000) }
token: ElementEnd { end: Open, span: StrSpan(">" 8000..8001) }
token: Text { text: StrSpan("Nessun mortale, Meleagro, riesce a pensare sua madre ragazza. Ma non ti pare che chi dice queste cose sar√† capace di guardare il fuoco? Anche la vecchia Altea ti uccise per un prezzo del sangue." 8001..8196) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8198..8199)), span: StrSpan("</p>" 8196..8200) }
token: Text { text: StrSpan("\n\n" 8200..8202) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8203..8204), span: StrSpan("<p" 8202..8204) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8205..8210), value: StrSpan("testo_personaggio testo_maiuscoletto" 8212..8248), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8205..8249) }
token: ElementEnd { end: Open, span: StrSpan(">" 8249..8250) }
token: Text { text: StrSpan("Meleagro." 8250..8259) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8261..8262)), span: StrSpan("</p>" 8259..8263) }
token: Text { text: StrSpan("\n" 8263..8264) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8265..8266), span: StrSpan("<p" 8264..8266) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8267..8272), value: StrSpan("testo_dialogo" 8274..8287), span: StrSpan("class=\"testo_dialogo\"" 8267..8288) }
token: ElementEnd { end: Open, span: StrSpan(">" 8288..8289) }
token: Text { text: StrSpan("O Ermete, tutto ci√≤ √® il mio destino. Ma son pure esistiti mortali che vissero a saziet√† senza che nessuno avesse in pugno i loro giorni‚Ä¶" 8289..8431) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8433..8434)), span: StrSpan("</p>" 8431..8435) }
token: Text { text: StrSpan("\n\n" 8435..8437) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8438..8439), span: StrSpan("<p" 8437..8439) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8440..8445), value: StrSpan("testo_personaggio testo_maiuscoletto" 8447..8483), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8440..8484) }
token: ElementEnd { end: Open, span: StrSpan(">" 8484..8485) }
token: Text { text: StrSpan("Ermete." 8485..8492) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8494..8495)), span: StrSpan("</p>" 8492..8496) }
token: Text { text: StrSpan("\n" 8496..8497) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8498..8499), span: StrSpan("<p" 8497..8499) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8500..8505), value: StrSpan("testo_dialogo" 8507..8520), span: StrSpan("class=\"testo_dialogo\"" 8500..8521) }
token: ElementEnd { end: Open, span: StrSpan(">" 8521..8522) }
token: Text { text: StrSpan("Tu ne conosci, Meleagro? Sarebbero d√®i. Qualche vile √® riuscito a nascondere il capo, ma anche lui portava sangue di madre, e allora l‚Äôodio, la passione, la furia son divampati nel suo cuore solo. In qualche sera della vita anche lui si √® sentito riardere. Non tutti ‚Äì √® vero ‚Äì siete morti di questo. Tutti, quando sapete, conducete una vita di morti. Credimi, Meleagro, tu hai avuto fortuna." 8522..8924) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8926..8927)), span: StrSpan("</p>" 8924..8928) }
token: Text { text: StrSpan("\n\n" 8928..8930) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8931..8932), span: StrSpan("<p" 8930..8932) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8933..8938), value: StrSpan("testo_personaggio testo_maiuscoletto" 8940..8976), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8933..8977) }
token: ElementEnd { end: Open, span: StrSpan(">" 8977..8978) }
token: Text { text: StrSpan("Meleagro." 8978..8987) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8989..8990)), span: StrSpan("</p>" 8987..8991) }
token: Text { text: StrSpan("\n" 8991..8992) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8993..8994), span: StrSpan("<p" 8992..8994) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8995..9000), value: StrSpan("testo_dialogo" 9002..9015), span: StrSpan("class=\"testo_dialogo\"" 8995..9016) }
token: ElementEnd { end: Open, span: StrSpan(">" 9016..9017) }
token: Text { text: StrSpan("Ma nemmeno vedere i miei figli‚Ä¶ non conoscere quasi il mio letto‚Ä¶" 9017..9086) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9088..9089)), span: StrSpan("</p>" 9086..9090) }
token: Text { text: StrSpan("\n\n" 9090..9092) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9093..9094), span: StrSpan("<p" 9092..9094) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9095..9100), value: StrSpan("testo_personaggio testo_maiuscoletto" 9102..9138), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9095..9139) }
token: ElementEnd { end: Open, span: StrSpan(">" 9139..9140) }
token: Text { text: StrSpan("Ermete." 9140..9147) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9149..9150)), span: StrSpan("</p>" 9147..9151) }
token: Text { text: StrSpan("\n" 9151..9152) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9153..9154), span: StrSpan("<p" 9152..9154) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9155..9160), value: StrSpan("testo_dialogo" 9162..9175), span: StrSpan("class=\"testo_dialogo\"" 9155..9176) }
token: ElementEnd { end: Open, span: StrSpan(">" 9176..9177) }
token: Text { text: StrSpan("Hai avuto fortuna. I tuoi figli non nasceranno. Il tuo letto √® deserto. I tuoi compagni vanno a caccia come quando non c‚Äôeri. Tu sei un‚Äôombra e il nulla." 9177..9335) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9337..9338)), span: StrSpan("</p>" 9335..9339) }
token: Text { text: StrSpan("\n\n" 9339..9341) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9342..9343), span: StrSpan("<p" 9341..9343) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9344..9349), value: StrSpan("testo_personaggio testo_maiuscoletto" 9351..9387), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9344..9388) }
token: ElementEnd { end: Open, span: StrSpan(">" 9388..9389) }
token: Text { text: StrSpan("Meleagro." 9389..9398) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9400..9401)), span: StrSpan("</p>" 9398..9402) }
token: Text { text: StrSpan("\n" 9402..9403) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9404..9405), span: StrSpan("<p" 9403..9405) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9406..9411), value: StrSpan("testo_dialogo" 9413..9426), span: StrSpan("class=\"testo_dialogo\"" 9406..9427) }
token: ElementEnd { end: Open, span: StrSpan(">" 9427..9428) }
token: Text { text: StrSpan("E Atalanta, Atalanta?" 9428..9449) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9451..9452)), span: StrSpan("</p>" 9449..9453) }
token: Text { text: StrSpan("\n\n" 9453..9455) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9456..9457), span: StrSpan("<p" 9455..9457) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9458..9463), value: StrSpan("testo_personaggio testo_maiuscoletto" 9465..9501), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9458..9502) }
token: ElementEnd { end: Open, span: StrSpan(">" 9502..9503) }
token: Text { text: StrSpan("Ermete." 9503..9510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9512..9513)), span: StrSpan("</p>" 9510..9514) }
token: Text { text: StrSpan("\n" 9514..9515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9516..9517), span: StrSpan("<p" 9515..9517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9518..9523), value: StrSpan("testo_dialogo" 9525..9538), span: StrSpan("class=\"testo_dialogo\"" 9518..9539) }
token: ElementEnd { end: Open, span: StrSpan(">" 9539..9540) }
token: Text { text: StrSpan("La casa √® vuota come quando annottava e tardavate a ritornare dalla caccia. Atalanta, che ti ha istigato a vendicarti, non √® morta. Le due donne convivono senza parole, guardando il focolare, dov‚Äô√® stramazzato il fratello di tua madre e dove tu sei fatto cenere. Forse non si odiano nemmeno. Si conoscono troppo. Senza l‚Äôuomo le donne son nulla." 9540..9892) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9894..9895)), span: StrSpan("</p>" 9892..9896) }
token: Text { text: StrSpan("\n\n" 9896..9898) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9899..9900), span: StrSpan("<p" 9898..9900) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9901..9906), value: StrSpan("testo_personaggio testo_maiuscoletto" 9908..9944), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9901..9945) }
token: ElementEnd { end: Open, span: StrSpan(">" 9945..9946) }
token: Text { text: StrSpan("Meleagro." 9946..9955) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9957..9958)), span: StrSpan("</p>" 9955..9959) }
token: Text { text: StrSpan("\n" 9959..9960) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9961..9962), span: StrSpan("<p" 9960..9962) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9963..9968), value: StrSpan("testo_dialogo" 9970..9983), span: StrSpan("class=\"testo_dialogo\"" 9963..9984) }
token: ElementEnd { end: Open, span: StrSpan(">" 9984..9985) }
token: Text { text: StrSpan("Ma allora perch√© ci hanno ucciso?" 9985..10019) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10021..10022)), span: StrSpan("</p>" 10019..10023) }
token: Text { text: StrSpan("\n\n" 10023..10025) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10026..10027), span: StrSpan("<p" 10025..10027) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10028..10033), value: StrSpan("testo_personaggio testo_maiuscoletto" 10035..10071), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10028..10072) }
token: ElementEnd { end: Open, span: StrSpan(">" 10072..10073) }
token: Text { text: StrSpan("Ermete." 10073..10080) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10082..10083)), span: StrSpan("</p>" 10080..10084) }
token: Text { text: StrSpan("\n" 10084..10085) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10086..10087), span: StrSpan("<p" 10085..10087) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10088..10093), value: StrSpan("testo_dialogo" 10095..10108), span: StrSpan("class=\"testo_dialogo\"" 10088..10109) }
token: ElementEnd { end: Open, span: StrSpan(">" 10109..10110) }
token: Text { text: StrSpan("Chiedi perch√© vi han fatto, Meleagro." 10110..10148) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10150..10151)), span: StrSpan("</p>" 10148..10152) }
token: Text { text: StrSpan("\n" 10152..10153) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 10155..10159)), span: StrSpan("</body>" 10153..10160) }
token: Text { text: StrSpan("\n" 10160..10161) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 10163..10167)), span: StrSpan("</html>" 10161..10168) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("I due" 340..345) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 347..349)), span: StrSpan("</h1>" 345..350) }
token: Text { text: StrSpan("\n\n" 350..352) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 353..354), span: StrSpan("<p" 352..354) }
token: ElementEnd { end: Open, span: StrSpan(">" 354..355) }
token: Text { text: StrSpan("Superfluo rifare Omero. Noi abbiamo voluto semplicemente riferire un colloquio che ebbe luogo la vigilia della morte di Patroclo." 355..484) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 486..487)), span: StrSpan("</p>" 484..488) }
token: Text { text: StrSpan("\n\n" 488..490) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 491..492), span: StrSpan("<p" 490..492) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 493..498), value: StrSpan("testo_indicazioni_scena" 500..523), span: StrSpan("class=\"testo_indicazioni_scena\"" 493..524) }
token: ElementEnd { end: Open, span: StrSpan(">" 524..525) }
token: Text { text: StrSpan("(parlano Achille e Patroclo)" 525..553) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 555..556)), span: StrSpan("</p>" 553..557) }
token: Text { text: StrSpan("\n\n\n" 557..560) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 561..562), span: StrSpan("<p" 560..562) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 563..568), value: StrSpan("testo_personaggio testo_maiuscoletto" 570..606), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 563..607) }
token: ElementEnd { end: Open, span: StrSpan(">" 607..608) }
token: Text { text: StrSpan("Achille." 608..616) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 618..619)), span: StrSpan("</p>" 616..620) }
token: Text { text: StrSpan("\n" 620..621) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 622..623), span: StrSpan("<p" 621..623) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 624..629), value: StrSpan("testo_dialogo" 631..644), span: StrSpan("class=\"testo_dialogo\"" 624..645) }
token: ElementEnd { end: Open, span: StrSpan(">" 645..646) }
token: Text { text: StrSpan("Patroclo, perch√© noi uomini diciamo sempre per farci coraggio: ¬´" 646..712) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 713..714), span: StrSpan("<q" 712..714) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 715..720), value: StrSpan("testo_no_virgolette" 722..741), span: StrSpan("class=\"testo_no_virgolette\"" 715..742) }
token: ElementEnd { end: Open, span: StrSpan(">" 742..743) }
token: Text { text: StrSpan("Ne ho viste di peggio" 743..764) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 766..767)), span: StrSpan("</q>" 764..768) }
token: Text { text: StrSpan("¬ª quando dovremmo dire: ¬´" 768..795) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 796..797), span: StrSpan("<q" 795..797) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 798..803), value: StrSpan("testo_no_virgolette" 805..824), span: StrSpan("class=\"testo_no_virgolette\"" 798..825) }
token: ElementEnd { end: Open, span: StrSpan(">" 825..826) }
token: Text { text: StrSpan("Il peggio verr√†. Verr√† un giorno che saremo cadaveri" 826..880) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 882..883)), span: StrSpan("</q>" 880..884) }
token: Text { text: StrSpan("¬ª?" 884..887) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 889..890)), span: StrSpan("</p>" 887..891) }
token: Text { text: StrSpan("\n\n" 891..893) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 894..895), span: StrSpan("<p" 893..895) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 896..901), value: StrSpan("testo_personaggio testo_maiuscoletto" 903..939), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 896..940) }
token: ElementEnd { end: Open, span: StrSpan(">" 940..941) }
token: Text { text: StrSpan("Patroclo." 941..950) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 952..953)), span: StrSpan("</p>" 950..954) }
token: Text { text: StrSpan("\n" 954..955) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 956..957), span: StrSpan("<p" 955..957) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 958..963), value: StrSpan("testo_dialogo" 965..978), span: StrSpan("class=\"testo_dialogo\"" 958..979) }
token: ElementEnd { end: Open, span: StrSpan(">" 979..980) }
token: Text { text: StrSpan("Achille, non ti conosco pi√∫." 980..1009) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1011..1012)), span: StrSpan("</p>" 1009..1013) }
token: Text { text: StrSpan("\n\n" 1013..1015) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1016..1017), span: StrSpan("<p" 1015..1017) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1018..1023), value: StrSpan("testo_personaggio testo_maiuscoletto" 1025..1061), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1018..1062) }
token: ElementEnd { end: Open, span: StrSpan(">" 1062..1063) }
token: Text { text: StrSpan("Achille." 1063..1071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1073..1074)), span: StrSpan("</p>" 1071..1075) }
token: Text { text: StrSpan("\n" 1075..1076) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1077..1078), span: StrSpan("<p" 1076..1078) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1079..1084), value: StrSpan("testo_dialogo" 1086..1099), span: StrSpan("class=\"testo_dialogo\"" 1079..1100) }
token: ElementEnd { end: Open, span: StrSpan(">" 1100..1101) }
token: Text { text: StrSpan("Ma io s√≠ ti conosco. Non basta un po‚Äô di vino per uccidere Patroclo. Stasera so che dopotutto non c‚Äô√® differenza tra noialtri e gli uomini vili. Per tutti c‚Äô√® un peggio. E questo peggio vien per ultimo, viene dopo ogni cosa, e ti tappa la bocca come un pugno di terra. √à sempre bello ricordarsi: ¬´" 1101..1409) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1410..1411), span: StrSpan("<q" 1409..1411) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1412..1417), value: StrSpan("testo_no_virgolette" 1419..1438), span: StrSpan("class=\"testo_no_virgolette\"" 1412..1439) }
token: ElementEnd { end: Open, span: StrSpan(">" 1439..1440) }
token: Text { text: StrSpan("Ho visto questo, ho patito quest‚Äôaltro" 1440..1480) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1482..1483)), span: StrSpan("</q>" 1480..1484) }
token: Text { text: StrSpan("¬ª ‚Äì ma non √® iniquo che proprio la cosa pi√∫ dura non la potremo ricordare?" 1484..1563) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1565..1566)), span: StrSpan("</p>" 1563..1567) }
token: Text { text: StrSpan("\n\n" 1567..1569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1570..1571), span: StrSpan("<p" 1569..1571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1572..1577), value: StrSpan("testo_personaggio testo_maiuscoletto" 1579..1615), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1572..1616) }
token: ElementEnd { end: Open, span: StrSpan(">" 1616..1617) }
token: Text { text: StrSpan("Patroclo." 1617..1626) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1628..1629)), span: StrSpan("</p>" 1626..1630) }
token: Text { text: StrSpan("\n" 1630..1631) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1632..1633), span: StrSpan("<p" 1631..1633) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1634..1639), value: StrSpan("testo_dialogo" 1641..1654), span: StrSpan("class=\"testo_dialogo\"" 1634..1655) }
token: ElementEnd { end: Open, span: StrSpan(">" 1655..1656) }
token: Text { text: StrSpan("Almeno, uno di noi la potr√† ricordare per l‚Äôaltro. Speriamolo. Cos√≠ giocheremo il destino." 1656..1750) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1752..1753)), span: StrSpan("</p>" 1750..1754) }
token: Text { text: StrSpan("\n\n" 1754..1756) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1757..1758), span: StrSpan("<p" 1756..1758) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1759..1764), value: StrSpan("testo_personaggio testo_maiuscoletto" 1766..1802), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1759..1803) }
token: ElementEnd { end: Open, span: StrSpan(">" 1803..1804) }
token: Text { text: StrSpan("Achille." 1804..1812) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1814..1815)), span: StrSpan("</p>" 1812..1816) }
token: Text { text: StrSpan("\n" 1816..1817) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1818..1819), span: StrSpan("<p" 1817..1819) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1820..1825), value: StrSpan("testo_dialogo" 1827..1840), span: StrSpan("class=\"testo_dialogo\"" 1820..1841) }
token: ElementEnd { end: Open, span: StrSpan(">" 1841..1842) }
token: Text { text: StrSpan("Per questo, la notte, si beve. Hai mai pensato che un bambino non beve, perch√© per lui non esiste la morte? Tu, Patroclo, hai bevuto da ragazzo?" 1842..1987) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1989..1990)), span: StrSpan("</p>" 1987..1991) }
token: Text { text: StrSpan("\n\n" 1991..1993) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1994..1995), span: StrSpan("<p" 1993..1995) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1996..2001), value: StrSpan("testo_personaggio testo_maiuscoletto" 2003..2039), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1996..2040) }
token: ElementEnd { end: Open, span: StrSpan(">" 2040..2041) }
token: Text { text: StrSpan("Patroclo." 2041..2050) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2052..2053)), span: StrSpan("</p>" 2050..2054) }
token: Text { text: StrSpan("\n" 2054..2055) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2056..2057), span: StrSpan("<p" 2055..2057) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2058..2063), value: StrSpan("testo_dialogo" 2065..2078), span: StrSpan("class=\"testo_dialogo\"" 2058..2079) }
token: ElementEnd { end: Open, span: StrSpan(">" 2079..2080) }
token: Text { text: StrSpan("Non ho mai fatto nulla che non fosse con te e come te." 2080..2134) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2136..2137)), span: StrSpan("</p>" 2134..2138) }
token: Text { text: StrSpan("\n\n" 2138..2140) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2141..2142), span: StrSpan("<p" 2140..2142) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2143..2148), value: StrSpan("testo_personaggio testo_maiuscoletto" 2150..2186), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2143..2187) }
token: ElementEnd { end: Open, span: StrSpan(">" 2187..2188) }
token: Text { text: StrSpan("Achille." 2188..2196) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2198..2199)), span: StrSpan("</p>" 2196..2200) }
token: Text { text: StrSpan("\n" 2200..2201) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2202..2203), span: StrSpan("<p" 2201..2203) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2204..2209), value: StrSpan("testo_dialogo" 2211..2224), span: StrSpan("class=\"testo_dialogo\"" 2204..2225) }
token: ElementEnd { end: Open, span: StrSpan(">" 2225..2226) }
token: Text { text: StrSpan("Voglio dire, quando stavamo sempre insieme e giocavamo e cacciavamo, e la giornata era breve ma gli anni non passavano mai, tu sapevi cos‚Äôera la morte, la tua morte? Perch√© da ragazzi si uccide, ma non si sa cos‚Äô√® la morte. Poi viene il giorno che d‚Äôun tratto si capisce, si √® dentro la morte, e da allora si √® uomini fatti. Si combatte e si gioca, si beve, si passa la notte impazienti. Ma hai mai veduto un ragazzo ubriaco?" 2226..2661) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2663..2664)), span: StrSpan("</p>" 2661..2665) }
token: Text { text: StrSpan("\n\n" 2665..2667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2668..2669), span: StrSpan("<p" 2667..2669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2670..2675), value: StrSpan("testo_personaggio testo_maiuscoletto" 2677..2713), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2670..2714) }
token: ElementEnd { end: Open, span: StrSpan(">" 2714..2715) }
token: Text { text: StrSpan("Patroclo." 2715..2724) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2726..2727)), span: StrSpan("</p>" 2724..2728) }
token: Text { text: StrSpan("\n" 2728..2729) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2730..2731), span: StrSpan("<p" 2729..2731) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2732..2737), value: StrSpan("testo_dialogo" 2739..2752), span: StrSpan("class=\"testo_dialogo\"" 2732..2753) }
token: ElementEnd { end: Open, span: StrSpan(">" 2753..2754) }
token: Text { text: StrSpan("Mi chiedo quando fu la prima volta. Non lo so. Non ricordo. Mi pare di aver sempre bevuto, e ignorato la morte." 2754..2865) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2867..2868)), span: StrSpan("</p>" 2865..2869) }
token: Text { text: StrSpan("\n\n" 2869..2871) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2872..2873), span: StrSpan("<p" 2871..2873) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2874..2879), value: StrSpan("testo_personaggio testo_maiuscoletto" 2881..2917), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2874..2918) }
token: ElementEnd { end: Open, span: StrSpan(">" 2918..2919) }
token: Text { text: StrSpan("Achille." 2919..2927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2929..2930)), span: StrSpan("</p>" 2927..2931) }
token: Text { text: StrSpan("\n" 2931..2932) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2933..2934), span: StrSpan("<p" 2932..2934) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2935..2940), value: StrSpan("testo_dialogo" 2942..2955), span: StrSpan("class=\"testo_dialogo\"" 2935..2956) }
token: ElementEnd { end: Open, span: StrSpan(">" 2956..2957) }
token: Text { text: StrSpan("Tu sei come un ragazzo, Patroclo." 2957..2990) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2992..2993)), span: StrSpan("</p>" 2990..2994) }
token: Text { text: StrSpan("\n\n" 2994..2996) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2997..2998), span: StrSpan("<p" 2996..2998) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2999..3004), value: StrSpan("testo_personaggio testo_maiuscoletto" 3006..3042), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2999..3043) }
token: ElementEnd { end: Open, span: StrSpan(">" 3043..3044) }
token: Text { text: StrSpan("Patroclo." 3044..3053) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3055..3056)), span: StrSpan("</p>" 3053..3057) }
token: Text { text: StrSpan("\n" 3057..3058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3059..3060), span: StrSpan("<p" 3058..3060) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3061..3066), value: StrSpan("testo_dialogo" 3068..3081), span: StrSpan("class=\"testo_dialogo\"" 3061..3082) }
token: ElementEnd { end: Open, span: StrSpan(">" 3082..3083) }
token: Text { text: StrSpan("Chiedilo ai tuoi nemici, Achille." 3083..3116) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3118..3119)), span: StrSpan("</p>" 3116..3120) }
token: Text { text: StrSpan("\n\n" 3120..3122) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3123..3124), span: StrSpan("<p" 3122..3124) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3125..3130), value: StrSpan("testo_personaggio testo_maiuscoletto" 3132..3168), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3125..3169) }
token: ElementEnd { end: Open, span: StrSpan(">" 3169..3170) }
token: Text { text: StrSpan("Achille." 3170..3178) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3180..3181)), span: StrSpan("</p>" 3178..3182) }
token: Text { text: StrSpan("\n" 3182..3183) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3184..3185), span: StrSpan("<p" 3183..3185) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3186..3191), value: StrSpan("testo_dialogo" 3193..3206), span: StrSpan("class=\"testo_dialogo\"" 3186..3207) }
token: ElementEnd { end: Open, span: StrSpan(">" 3207..3208) }
token: Text { text: StrSpan("Lo far√≤. Ma la morte per te non esiste. E non √® buon guerriero chi non teme la morte." 3208..3295) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3297..3298)), span: StrSpan("</p>" 3295..3299) }
token: Text { text: StrSpan("\n\n" 3299..3301) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3302..3303), span: StrSpan("<p" 3301..3303) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3304..3309), value: StrSpan("testo_personaggio testo_maiuscoletto" 3311..3347), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3304..3348) }
token: ElementEnd { end: Open, span: StrSpan(">" 3348..3349) }
token: Text { text: StrSpan("Patroclo." 3349..3358) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3360..3361)), span: StrSpan("</p>" 3358..3362) }
token: Text { text: StrSpan("\n" 3362..3363) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3364..3365), span: StrSpan("<p" 3363..3365) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3366..3371), value: StrSpan("testo_dialogo" 3373..3386), span: StrSpan("class=\"testo_dialogo\"" 3366..3387) }
token: ElementEnd { end: Open, span: StrSpan(">" 3387..3388) }
token: Text { text: StrSpan("Pure bevo con te, questa notte." 3388..3419) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3421..3422)), span: StrSpan("</p>" 3419..3423) }
token: Text { text: StrSpan("\n\n" 3423..3425) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3426..3427), span: StrSpan("<p" 3425..3427) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3428..3433), value: StrSpan("testo_personaggio testo_maiuscoletto" 3435..3471), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3428..3472) }
token: ElementEnd { end: Open, span: StrSpan(">" 3472..3473) }
token: Text { text: StrSpan("Achille." 3473..3481) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3483..3484)), span: StrSpan("</p>" 3481..3485) }
token: Text { text: StrSpan("\n" 3485..3486) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3487..3488), span: StrSpan("<p" 3486..3488) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3489..3494), value: StrSpan("testo_dialogo" 3496..3509), span: StrSpan("class=\"testo_dialogo\"" 3489..3510) }
token: ElementEnd { end: Open, span: StrSpan(">" 3510..3511) }
token: Text { text: StrSpan("E non hai ricordi, Patroclo? Non dici mai: ¬´" 3511..3556) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3557..3558), span: StrSpan("<q" 3556..3558) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3559..3564), value: StrSpan("testo_no_virgolette" 3566..3585), span: StrSpan("class=\"testo_no_virgolette\"" 3559..3586) }
token: ElementEnd { end: Open, span: StrSpan(">" 3586..3587) }
token: Text { text: StrSpan("Quest‚Äôho fatto. Quest‚Äôho veduto" 3587..3622) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3624..3625)), span: StrSpan("</q>" 3622..3626) }
token: Text { text: StrSpan("¬ª chiedendoti che cos‚Äôhai fatto veramente, che cos‚Äô√® stata la tua vita, cos‚Äô√® che hai lasciato di te sulla terra e nel mare? A che serve passare dei giorni se non si ricordano?" 3626..3811) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3813..3814)), span: StrSpan("</p>" 3811..3815) }
token: Text { text: StrSpan("\n\n" 3815..3817) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3818..3819), span: StrSpan("<p" 3817..3819) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3820..3825), value: StrSpan("testo_personaggio testo_maiuscoletto" 3827..3863), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3820..3864) }
token: ElementEnd { end: Open, span: StrSpan(">" 3864..3865) }
token: Text { text: StrSpan("Patroclo." 3865..3874) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3876..3877)), span: StrSpan("</p>" 3874..3878) }
token: Text { text: StrSpan("\n" 3878..3879) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3880..3881), span: StrSpan("<p" 3879..3881) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3882..3887), value: StrSpan("testo_dialogo" 3889..3902), span: StrSpan("class=\"testo_dialogo\"" 3882..3903) }
token: ElementEnd { end: Open, span: StrSpan(">" 3903..3904) }
token: Text { text: StrSpan("Quand‚Äôeravamo due ragazzi, Achille, niente ricordavamo. Ci bastava essere insieme tutto il tempo." 3904..4003) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4005..4006)), span: StrSpan("</p>" 4003..4007) }
token: Text { text: StrSpan("\n\n" 4007..4009) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4010..4011), span: StrSpan("<p" 4009..4011) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4012..4017), value: StrSpan("testo_personaggio testo_maiuscoletto" 4019..4055), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4012..4056) }
token: ElementEnd { end: Open, span: StrSpan(">" 4056..4057) }
token: Text { text: StrSpan("Achille." 4057..4065) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4067..4068)), span: StrSpan("</p>" 4065..4069) }
token: Text { text: StrSpan("\n" 4069..4070) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4071..4072), span: StrSpan("<p" 4070..4072) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4073..4078), value: StrSpan("testo_dialogo" 4080..4093), span: StrSpan("class=\"testo_dialogo\"" 4073..4094) }
token: ElementEnd { end: Open, span: StrSpan(">" 4094..4095) }
token: Text { text: StrSpan("Io mi chiedo se ancora qualcuno in Tessaglia si ricorda d‚Äôallora. E quando da questa guerra torneranno i compagni laggi√∫, chi passer√† su quelle strade, chi sapr√† che una volta ci fummo anche noi ‚Äì ed eravamo due ragazzi come adesso ce n‚Äô√® certo degli altri. Lo sapranno i ragazzi che crescono adesso, che cosa li attende?" 4095..4426) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4428..4429)), span: StrSpan("</p>" 4426..4430) }
token: Text { text: StrSpan("\n\n" 4430..4432) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4433..4434), span: StrSpan("<p" 4432..4434) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4435..4440), value: StrSpan("testo_personaggio testo_maiuscoletto" 4442..4478), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4435..4479) }
token: ElementEnd { end: Open, span: StrSpan(">" 4479..4480) }
token: Text { text: StrSpan("Patroclo." 4480..4489) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4491..4492)), span: StrSpan("</p>" 4489..4493) }
token: Text { text: StrSpan("\n" 4493..4494) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4495..4496), span: StrSpan("<p" 4494..4496) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4497..4502), value: StrSpan("testo_dialogo" 4504..4517), span: StrSpan("class=\"testo_dialogo\"" 4497..4518) }
token: ElementEnd { end: Open, span: StrSpan(">" 4518..4519) }
token: Text { text: StrSpan("Non ci si pensa, da ragazzi." 4519..4547) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4549..4550)), span: StrSpan("</p>" 4547..4551) }
token: Text { text: StrSpan("\n\n" 4551..4553) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4554..4555), span: StrSpan("<p" 4553..4555) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4556..4561), value: StrSpan("testo_personaggio testo_maiuscoletto" 4563..4599), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4556..4600) }
token: ElementEnd { end: Open, span: StrSpan(">" 4600..4601) }
token: Text { text: StrSpan("Achille." 4601..4609) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4611..4612)), span: StrSpan("</p>" 4609..4613) }
token: Text { text: StrSpan("\n" 4613..4614) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4615..4616), span: StrSpan("<p" 4614..4616) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4617..4622), value: StrSpan("testo_dialogo" 4624..4637), span: StrSpan("class=\"testo_dialogo\"" 4617..4638) }
token: ElementEnd { end: Open, span: StrSpan(">" 4638..4639) }
token: Text { text: StrSpan("Ci sono giorni che dovranno ancora nascere e noi non vedremo." 4639..4700) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4702..4703)), span: StrSpan("</p>" 4700..4704) }
token: Text { text: StrSpan("\n\n" 4704..4706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4707..4708), span: StrSpan("<p" 4706..4708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4709..4714), value: StrSpan("testo_personaggio testo_maiuscoletto" 4716..4752), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4709..4753) }
token: ElementEnd { end: Open, span: StrSpan(">" 4753..4754) }
token: Text { text: StrSpan("Patroclo." 4754..4763) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4765..4766)), span: StrSpan("</p>" 4763..4767) }
token: Text { text: StrSpan("\n" 4767..4768) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4769..4770), span: StrSpan("<p" 4768..4770) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4771..4776), value: StrSpan("testo_dialogo" 4778..4791), span: StrSpan("class=\"testo_dialogo\"" 4771..4792) }
token: ElementEnd { end: Open, span: StrSpan(">" 4792..4793) }
token: Text { text: StrSpan("Non ne abbiamo veduti gi√† molti?" 4793..4826) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4828..4829)), span: StrSpan("</p>" 4826..4830) }
token: Text { text: StrSpan("\n\n" 4830..4832) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4833..4834), span: StrSpan("<p" 4832..4834) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4835..4840), value: StrSpan("testo_personaggio testo_maiuscoletto" 4842..4878), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4835..4879) }
token: ElementEnd { end: Open, span: StrSpan(">" 4879..4880) }
token: Text { text: StrSpan("Achille." 4880..4888) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4890..4891)), span: StrSpan("</p>" 4888..4892) }
token: Text { text: StrSpan("\n" 4892..4893) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4894..4895), span: StrSpan("<p" 4893..4895) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4896..4901), value: StrSpan("testo_dialogo" 4903..4916), span: StrSpan("class=\"testo_dialogo\"" 4896..4917) }
token: ElementEnd { end: Open, span: StrSpan(">" 4917..4918) }
token: Text { text: StrSpan("No, Patroclo, non molti. Verr√† il giorno che saremo cadaveri. Che avremo tappata la bocca con un pugno di terra. E nemmeno sapremo quel che abbiamo veduto." 4918..5074) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5076..5077)), span: StrSpan("</p>" 5074..5078) }
token: Text { text: StrSpan("\n\n" 5078..5080) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5081..5082), span: StrSpan("<p" 5080..5082) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5083..5088), value: StrSpan("testo_personaggio testo_maiuscoletto" 5090..5126), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5083..5127) }
token: ElementEnd { end: Open, span: StrSpan(">" 5127..5128) }
token: Text { text: StrSpan("Patroclo." 5128..5137) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5139..5140)), span: StrSpan("</p>" 5137..5141) }
token: Text { text: StrSpan("\n" 5141..5142) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5143..5144), span: StrSpan("<p" 5142..5144) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5145..5150), value: StrSpan("testo_dialogo" 5152..5165), span: StrSpan("class=\"testo_dialogo\"" 5145..5166) }
token: ElementEnd { end: Open, span: StrSpan(">" 5166..5167) }
token: Text { text: StrSpan("Non serve pensarci." 5167..5186) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5188..5189)), span: StrSpan("</p>" 5186..5190) }
token: Text { text: StrSpan("\n\n" 5190..5192) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5193..5194), span: StrSpan("<p" 5192..5194) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5195..5200), value: StrSpan("testo_personaggio testo_maiuscoletto" 5202..5238), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5195..5239) }
token: ElementEnd { end: Open, span: StrSpan(">" 5239..5240) }
token: Text { text: StrSpan("Achille." 5240..5248) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5250..5251)), span: StrSpan("</p>" 5248..5252) }
token: Text { text: StrSpan("\n" 5252..5253) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5254..5255), span: StrSpan("<p" 5253..5255) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5256..5261), value: StrSpan("testo_dialogo" 5263..5276), span: StrSpan("class=\"testo_dialogo\"" 5256..5277) }
token: ElementEnd { end: Open, span: StrSpan(">" 5277..5278) }
token: Text { text: StrSpan("Non si pu√≤ non pensarci. Da ragazzi si √® come immortali, si guarda e si ride. Non si sa quello che costa. Non si sa la fatica e il rimpianto. Si combatte per gioco e ci si butta a terra morti. Poi si ride e si torna a giocare." 5278..5506) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5508..5509)), span: StrSpan("</p>" 5506..5510) }
token: Text { text: StrSpan("\n\n" 5510..5512) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5513..5514), span: StrSpan("<p" 5512..5514) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5515..5520), value: StrSpan("testo_personaggio testo_maiuscoletto" 5522..5558), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5515..5559) }
token: ElementEnd { end: Open, span: StrSpan(">" 5559..5560) }
token: Text { text: StrSpan("Patroclo." 5560..5569) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5571..5572)), span: StrSpan("</p>" 5569..5573) }
token: Text { text: StrSpan("\n" 5573..5574) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5575..5576), span: StrSpan("<p" 5574..5576) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5577..5582), value: StrSpan("testo_dialogo" 5584..5597), span: StrSpan("class=\"testo_dialogo\"" 5577..5598) }
token: ElementEnd { end: Open, span: StrSpan(">" 5598..5599) }
token: Text { text: StrSpan("Noi abbiamo altri giochi. Il letto e il bottino. I nemici. E questo bere di stanotte. Achille, quando torneremo in campo?" 5599..5720) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5722..5723)), span: StrSpan("</p>" 5720..5724) }
token: Text { text: StrSpan("\n\n" 5724..5726) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5727..5728), span: StrSpan("<p" 5726..5728) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5729..5734), value: StrSpan("testo_personaggio testo_maiuscoletto" 5736..5772), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5729..5773) }
token: ElementEnd { end: Open, span: StrSpan(">" 5773..5774) }
token: Text { text: StrSpan("Achille." 5774..5782) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5784..5785)), span: StrSpan("</p>" 5782..5786) }
token: Text { text: StrSpan("\n" 5786..5787) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5788..5789), span: StrSpan("<p" 5787..5789) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5790..5795), value: StrSpan("testo_dialogo" 5797..5810), span: StrSpan("class=\"testo_dialogo\"" 5790..5811) }
token: ElementEnd { end: Open, span: StrSpan(">" 5811..5812) }
token: Text { text: StrSpan("Torneremo, sta‚Äô certo. Un destino ci aspetta. Quando vedrai le navi in fiamme, sar√† l‚Äôora." 5812..5907) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5909..5910)), span: StrSpan("</p>" 5907..5911) }
token: Text { text: StrSpan("\n\n" 5911..5913) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5914..5915), span: StrSpan("<p" 5913..5915) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5916..5921), value: StrSpan("testo_personaggio testo_maiuscoletto" 5923..5959), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5916..5960) }
token: ElementEnd { end: Open, span: StrSpan(">" 5960..5961) }
token: Text { text: StrSpan("Patroclo." 5961..5970) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5972..5973)), span: StrSpan("</p>" 5970..5974) }
token: Text { text: StrSpan("\n" 5974..5975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5976..5977), span: StrSpan("<p" 5975..5977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5978..5983), value: StrSpan("testo_dialogo" 5985..5998), span: StrSpan("class=\"testo_dialogo\"" 5978..5999) }
token: ElementEnd { end: Open, span: StrSpan(">" 5999..6000) }
token: Text { text: StrSpan("A questo punto?" 6000..6015) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6017..6018)), span: StrSpan("</p>" 6015..6019) }
token: Text { text: StrSpan("\n\n" 6019..6021) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6022..6023), span: StrSpan("<p" 6021..6023) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6024..6029), value: StrSpan("testo_personaggio testo_maiuscoletto" 6031..6067), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6024..6068) }
token: ElementEnd { end: Open, span: StrSpan(">" 6068..6069) }
token: Text { text: StrSpan("Achille." 6069..6077) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6079..6080)), span: StrSpan("</p>" 6077..6081) }
token: Text { text: StrSpan("\n" 6081..6082) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6083..6084), span: StrSpan("<p" 6082..6084) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6085..6090), value: StrSpan("testo_dialogo" 6092..6105), span: StrSpan("class=\"testo_dialogo\"" 6085..6106) }
token: ElementEnd { end: Open, span: StrSpan(">" 6106..6107) }
token: Text { text: StrSpan("Perch√©? ti spaventa? Non ne hai viste di peggio?" 6107..6156) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6158..6159)), span: StrSpan("</p>" 6156..6160) }
token: Text { text: StrSpan("\n\n" 6160..6162) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6163..6164), span: StrSpan("<p" 6162..6164) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6165..6170), value: StrSpan("testo_personaggio testo_maiuscoletto" 6172..6208), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6165..6209) }
token: ElementEnd { end: Open, span: StrSpan(">" 6209..6210) }
token: Text { text: StrSpan("Patroclo." 6210..6219) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6221..6222)), span: StrSpan("</p>" 6219..6223) }
token: Text { text: StrSpan("\n" 6223..6224) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6225..6226), span: StrSpan("<p" 6224..6226) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6227..6232), value: StrSpan("testo_dialogo" 6234..6247), span: StrSpan("class=\"testo_dialogo\"" 6227..6248) }
token: ElementEnd { end: Open, span: StrSpan(">" 6248..6249) }
token: Text { text: StrSpan("Mi mette la smania. Siamo qui per finirla. Magari domani." 6249..6306) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6308..6309)), span: StrSpan("</p>" 6306..6310) }
token: Text { text: StrSpan("\n\n" 6310..6312) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6313..6314), span: StrSpan("<p" 6312..6314) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6315..6320), value: StrSpan("testo_personaggio testo_maiuscoletto" 6322..6358), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6315..6359) }
token: ElementEnd { end: Open, span: StrSpan(">" 6359..6360) }
token: Text { text: StrSpan("Achille." 6360..6368) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6370..6371)), span: StrSpan("</p>" 6368..6372) }
token: Text { text: StrSpan("\n" 6372..6373) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6374..6375), span: StrSpan("<p" 6373..6375) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6376..6381), value: StrSpan("testo_dialogo" 6383..6396), span: StrSpan("class=\"testo_dialogo\"" 6376..6397) }
token: ElementEnd { end: Open, span: StrSpan(">" 6397..6398) }
token: Text { text: StrSpan("Non aver fretta, Patroclo. Lascia dire ¬´" 6398..6439) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 6440..6441), span: StrSpan("<q" 6439..6441) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6442..6447), value: StrSpan("testo_no_virgolette" 6449..6468), span: StrSpan("class=\"testo_no_virgolette\"" 6442..6469) }
token: ElementEnd { end: Open, span: StrSpan(">" 6469..6470) }
token: Text { text: StrSpan("domani" 6470..6476) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 6478..6479)), span: StrSpan("</q>" 6476..6480) }
token: Text { text: StrSpan("¬ª agli d√®i. Solamente per loro quel che √® stato sar√†." 6480..6537) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6539..6540)), span: StrSpan("</p>" 6537..6541) }
token: Text { text: StrSpan("\n\n" 6541..6543) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6544..6545), span: StrSpan("<p" 6543..6545) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6546..6551), value: StrSpan("testo_personaggio testo_maiuscoletto" 6553..6589), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6546..6590) }
token: ElementEnd { end: Open, span: StrSpan(">" 6590..6591) }
token: Text { text: StrSpan("Patroclo." 6591..6600) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6602..6603)), span: StrSpan("</p>" 6600..6604) }
token: Text { text: StrSpan("\n" 6604..6605) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6606..6607), span: StrSpan("<p" 6605..6607) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6608..6613), value: StrSpan("testo_dialogo" 6615..6628), span: StrSpan("class=\"testo_dialogo\"" 6608..6629) }
token: ElementEnd { end: Open, span: StrSpan(">" 6629..6630) }
token: Text { text: StrSpan("Ma vederne di peggio dipende da noi. Fino all‚Äôultimo. Bevi, Achille. Alla lancia e allo scudo. Quel che √® stato sar√† ancora. Torneremo a rischiare." 6630..6781) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6783..6784)), span: StrSpan("</p>" 6781..6785) }
token: Text { text: StrSpan("\n\n" 6785..6787) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6788..6789), span: StrSpan("<p" 6787..6789) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6790..6795), value: StrSpan("testo_personaggio testo_maiuscoletto" 6797..6833), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6790..6834) }
token: ElementEnd { end: Open, span: StrSpan(">" 6834..6835) }
token: Text { text: StrSpan("Achille." 6835..6843) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6845..6846)), span: StrSpan("</p>" 6843..6847) }
token: Text { text: StrSpan("\n" 6847..6848) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6849..6850), span: StrSpan("<p" 6848..6850) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6851..6856), value: StrSpan("testo_dialogo" 6858..6871), span: StrSpan("class=\"testo_dialogo\"" 6851..6872) }
token: ElementEnd { end: Open, span: StrSpan(">" 6872..6873) }
token: Text { text: StrSpan("Bevo ai mortali e agli immortali, Patroclo. A mio padre e a mia madre. A quel che √® stato, nel ricordo. E a noi due." 6873..6990) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6992..6993)), span: StrSpan("</p>" 6990..6994) }
token: Text { text: StrSpan("\n\n" 6994..6996) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6997..6998), span: StrSpan("<p" 6996..6998) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6999..7004), value: StrSpan("testo_personaggio testo_maiuscoletto" 7006..7042), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6999..7043) }
token: ElementEnd { end: Open, span: StrSpan(">" 7043..7044) }
token: Text { text: StrSpan("Patroclo." 7044..7053) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7055..7056)), span: StrSpan("</p>" 7053..7057) }
token: Text { text: StrSpan("\n" 7057..7058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7059..7060), span: StrSpan("<p" 7058..7060) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7061..7066), value: StrSpan("testo_dialogo" 7068..7081), span: StrSpan("class=\"testo_dialogo\"" 7061..7082) }
token: ElementEnd { end: Open, span: StrSpan(">" 7082..7083) }
token: Text { text: StrSpan("Tante cose ricordi?" 7083..7102) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7104..7105)), span: StrSpan("</p>" 7102..7106) }
token: Text { text: StrSpan("\n\n" 7106..7108) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7109..7110), span: StrSpan("<p" 7108..7110) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7111..7116), value: StrSpan("testo_personaggio testo_maiuscoletto" 7118..7154), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7111..7155) }
token: ElementEnd { end: Open, span: StrSpan(">" 7155..7156) }
token: Text { text: StrSpan("Achille." 7156..7164) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7166..7167)), span: StrSpan("</p>" 7164..7168) }
token: Text { text: StrSpan("\n" 7168..7169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7170..7171), span: StrSpan("<p" 7169..7171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7172..7177), value: StrSpan("testo_dialogo" 7179..7192), span: StrSpan("class=\"testo_dialogo\"" 7172..7193) }
token: ElementEnd { end: Open, span: StrSpan(">" 7193..7194) }
token: Text { text: StrSpan("Non pi√∫ che una donnetta o un pezzente. Anche loro son stati ragazzi." 7194..7264) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7266..7267)), span: StrSpan("</p>" 7264..7268) }
token: Text { text: StrSpan("\n\n" 7268..7270) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7271..7272), span: StrSpan("<p" 7270..7272) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7273..7278), value: StrSpan("testo_personaggio testo_maiuscoletto" 7280..7316), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7273..7317) }
token: ElementEnd { end: Open, span: StrSpan(">" 7317..7318) }
token: Text { text: StrSpan("Patroclo." 7318..7327) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7329..7330)), span: StrSpan("</p>" 7327..7331) }
token: Text { text: StrSpan("\n" 7331..7332) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7333..7334), span: StrSpan("<p" 7332..7334) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7335..7340), value: StrSpan("testo_dialogo" 7342..7355), span: StrSpan("class=\"testo_dialogo\"" 7335..7356) }
token: ElementEnd { end: Open, span: StrSpan(">" 7356..7357) }
token: Text { text: StrSpan("Tu sei ricco, Achille, e per te la ricchezza √® uno straccio che si butta. Tu solo puoi dire di esser come un pezzente. Tu che hai preso d‚Äôassalto lo scoglio del T√©nedo, tu che hai spezzato la cintura dell‚Äôamazzone, e lottato con gli orsi sulla montagna. Quale altro bimbo la madre ha temprato nel fuoco come te? Tu sei spada e sei lancia, Achille." 7357..7710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7712..7713)), span: StrSpan("</p>" 7710..7714) }
token: Text { text: StrSpan("\n\n" 7714..7716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7717..7718), span: StrSpan("<p" 7716..7718) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7719..7724), value: StrSpan("testo_personaggio testo_maiuscoletto" 7726..7762), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7719..7763) }
token: ElementEnd { end: Open, span: StrSpan(">" 7763..7764) }
token: Text { text: StrSpan("Achille." 7764..7772) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7774..7775)), span: StrSpan("</p>" 7772..7776) }
token: Text { text: StrSpan("\n" 7776..7777) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7778..7779), span: StrSpan("<p" 7777..7779) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7780..7785), value: StrSpan("testo_dialogo" 7787..7800), span: StrSpan("class=\"testo_dialogo\"" 7780..7801) }
token: ElementEnd { end: Open, span: StrSpan(">" 7801..7802) }
token: Text { text: StrSpan("Tranne nel fuoco, tu sei stato con me sempre." 7802..7847) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7849..7850)), span: StrSpan("</p>" 7847..7851) }
token: Text { text: StrSpan("\n\n" 7851..7853) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7854..7855), span: StrSpan("<p" 7853..7855) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7856..7861), value: StrSpan("testo_personaggio testo_maiuscoletto" 7863..7899), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7856..7900) }
token: ElementEnd { end: Open, span: StrSpan(">" 7900..7901) }
token: Text { text: StrSpan("Patroclo." 7901..7910) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7912..7913)), span: StrSpan("</p>" 7910..7914) }
token: Text { text: StrSpan("\n" 7914..7915) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7916..7917), span: StrSpan("<p" 7915..7917) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7918..7923), value: StrSpan("testo_dialogo" 7925..7938), span: StrSpan("class=\"testo_dialogo\"" 7918..7939) }
token: ElementEnd { end: Open, span: StrSpan(">" 7939..7940) }
token: Text { text: StrSpan("Come l‚Äôombra accompagna la nube. Come Teseo con Piritoo. Forse un giorno ti aspetta, Achille, che anche tu verrai nell‚ÄôAde a liberarmi. E vedremo anche questa." 7940..8103) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8105..8106)), span: StrSpan("</p>" 8103..8107) }
token: Text { text: StrSpan("\n\n" 8107..8109) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8110..8111), span: StrSpan("<p" 8109..8111) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8112..8117), value: StrSpan("testo_personaggio testo_maiuscoletto" 8119..8155), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8112..8156) }
token: ElementEnd { end: Open, span: StrSpan(">" 8156..8157) }
token: Text { text: StrSpan("Achille." 8157..8165) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8167..8168)), span: StrSpan("</p>" 8165..8169) }
token: Text { text: StrSpan("\n" 8169..8170) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8171..8172), span: StrSpan("<p" 8170..8172) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8173..8178), value: StrSpan("testo_dialogo" 8180..8193), span: StrSpan("class=\"testo_dialogo\"" 8173..8194) }
token: ElementEnd { end: Open, span: StrSpan(">" 8194..8195) }
token: Text { text: StrSpan("Meglio quel tempo che non c‚Äôera l‚ÄôAde. Allora andavamo tra boschi e torrenti e, lavato il sudore, eravamo ragazzi. Allora ogni gesto, ogni cenno era un gioco. Eravamo ricordo e nessuno sapeva. Avevamo del coraggio? Non so. Non importa. So che sul monte del centauro era l‚Äôestate, era l‚Äôinverno, era tutta la vita. Eravamo immortali." 8195..8535) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8537..8538)), span: StrSpan("</p>" 8535..8539) }
token: Text { text: StrSpan("\n\n" 8539..8541) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8542..8543), span: StrSpan("<p" 8541..8543) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8544..8549), value: StrSpan("testo_personaggio testo_maiuscoletto" 8551..8587), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8544..8588) }
token: ElementEnd { end: Open, span: StrSpan(">" 8588..8589) }
token: Text { text: StrSpan("Patroclo." 8589..8598) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8600..8601)), span: StrSpan("</p>" 8598..8602) }
token: Text { text: StrSpan("\n" 8602..8603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8604..8605), span: StrSpan("<p" 8603..8605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8606..8611), value: StrSpan("testo_dialogo" 8613..8626), span: StrSpan("class=\"testo_dialogo\"" 8606..8627) }
token: ElementEnd { end: Open, span: StrSpan(">" 8627..8628) }
token: Text { text: StrSpan("Ma poi venne il peggio. Venne il rischio e la morte. E allora noi fummo guerrieri." 8628..8710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8712..8713)), span: StrSpan("</p>" 8710..8714) }
token: Text { text: StrSpan("\n\n" 8714..8716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8717..8718), span: StrSpan("<p" 8716..8718) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8719..8724), value: StrSpan("testo_personaggio testo_maiuscoletto" 8726..8762), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8719..8763) }
token: ElementEnd { end: Open, span: StrSpan(">" 8763..8764) }
token: Text { text: StrSpan("Achille." 8764..8772) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8774..8775)), span: StrSpan("</p>" 8772..8776) }
token: Text { text: StrSpan("\n" 8776..8777) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8778..8779), span: StrSpan("<p" 8777..8779) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8780..8785), value: StrSpan("testo_dialogo" 8787..8800), span: StrSpan("class=\"testo_dialogo\"" 8780..8801) }
token: ElementEnd { end: Open, span: StrSpan(">" 8801..8802) }
token: Text { text: StrSpan("Non si sfugge alla sorte. E non vidi mio figlio. Anche Deidamia √® morta. Oh perch√© non rimasi sull‚Äôisola in mezzo alle donne?" 8802..8931) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8933..8934)), span: StrSpan("</p>" 8931..8935) }
token: Text { text: StrSpan("\n\n" 8935..8937) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8938..8939), span: StrSpan("<p" 8937..8939) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8940..8945), value: StrSpan("testo_personaggio testo_maiuscoletto" 8947..8983), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8940..8984) }
token: ElementEnd { end: Open, span: StrSpan(">" 8984..8985) }
token: Text { text: StrSpan("Patroclo." 8985..8994) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8996..8997)), span: StrSpan("</p>" 8994..8998) }
token: Text { text: StrSpan("\n" 8998..8999) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9000..9001), span: StrSpan("<p" 8999..9001) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9002..9007), value: StrSpan("testo_dialogo" 9009..9022), span: StrSpan("class=\"testo_dialogo\"" 9002..9023) }
token: ElementEnd { end: Open, span: StrSpan(">" 9023..9024) }
token: Text { text: StrSpan("Avresti poveri ricordi, Achille. Saresti un ragazzo. Meglio soffrire che non essere esistito." 9024..9117) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9119..9120)), span: StrSpan("</p>" 9117..9121) }
token: Text { text: StrSpan("\n\n" 9121..9123) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9124..9125), span: StrSpan("<p" 9123..9125) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9126..9131), value: StrSpan("testo_personaggio testo_maiuscoletto" 9133..9169), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9126..9170) }
token: ElementEnd { end: Open, span: StrSpan(">" 9170..9171) }
token: Text { text: StrSpan("Achille." 9171..9179) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9181..9182)), span: StrSpan("</p>" 9179..9183) }
token: Text { text: StrSpan("\n" 9183..9184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9185..9186), span: StrSpan("<p" 9184..9186) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9187..9192), value: StrSpan("testo_dialogo" 9194..9207), span: StrSpan("class=\"testo_dialogo\"" 9187..9208) }
token: ElementEnd { end: Open, span: StrSpan(">" 9208..9209) }
token: Text { text: StrSpan("Ma chi ti dice che la vita fosse questa?... Oh Patroclo, √® questa. Dovevamo vedere il peggio." 9209..9303) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9305..9306)), span: StrSpan("</p>" 9303..9307) }
token: Text { text: StrSpan("\n\n" 9307..9309) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9310..9311), span: StrSpan("<p" 9309..9311) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9312..9317), value: StrSpan("testo_personaggio testo_maiuscoletto" 9319..9355), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9312..9356) }
token: ElementEnd { end: Open, span: StrSpan(">" 9356..9357) }
token: Text { text: StrSpan("Patroclo." 9357..9366) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9368..9369)), span: StrSpan("</p>" 9366..9370) }
token: Text { text: StrSpan("\n" 9370..9371) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9372..9373), span: StrSpan("<p" 9371..9373) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9374..9379), value: StrSpan("testo_dialogo" 9381..9394), span: StrSpan("class=\"testo_dialogo\"" 9374..9395) }
token: ElementEnd { end: Open, span: StrSpan(">" 9395..9396) }
token: Text { text: StrSpan("Io domani esco in campo. Con te." 9396..9428) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9430..9431)), span: StrSpan("</p>" 9428..9432) }
token: Text { text: StrSpan("\n\n" 9432..9434) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9435..9436), span: StrSpan("<p" 9434..9436) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9437..9442), value: StrSpan("testo_personaggio testo_maiuscoletto" 9444..9480), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9437..9481) }
token: ElementEnd { end: Open, span: StrSpan(">" 9481..9482) }
token: Text { text: StrSpan("Achille." 9482..9490) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9492..9493)), span: StrSpan("</p>" 9490..9494) }
token: Text { text: StrSpan("\n" 9494..9495) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9496..9497), span: StrSpan("<p" 9495..9497) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9498..9503), value: StrSpan("testo_dialogo" 9505..9518), span: StrSpan("class=\"testo_dialogo\"" 9498..9519) }
token: ElementEnd { end: Open, span: StrSpan(">" 9519..9520) }
token: Text { text: StrSpan("Non √® ancora il mio giorno." 9520..9548) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9550..9551)), span: StrSpan("</p>" 9548..9552) }
token: Text { text: StrSpan("\n\n" 9552..9554) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9555..9556), span: StrSpan("<p" 9554..9556) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9557..9562), value: StrSpan("testo_personaggio testo_maiuscoletto" 9564..9600), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9557..9601) }
token: ElementEnd { end: Open, span: StrSpan(">" 9601..9602) }
token: Text { text: StrSpan("Patroclo." 9602..9611) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9613..9614)), span: StrSpan("</p>" 9611..9615) }
token: Text { text: StrSpan("\n" 9615..9616) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9617..9618), span: StrSpan("<p" 9616..9618) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9619..9624), value: StrSpan("testo_dialogo" 9626..9639), span: StrSpan("class=\"testo_dialogo\"" 9619..9640) }
token: ElementEnd { end: Open, span: StrSpan(">" 9640..9641) }
token: Text { text: StrSpan("E allora andr√≤ solo. E per farti vergogna prender√≤ la tua lancia." 9641..9708) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9710..9711)), span: StrSpan("</p>" 9708..9712) }
token: Text { text: StrSpan("\n\n" 9712..9714) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9715..9716), span: StrSpan("<p" 9714..9716) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9717..9722), value: StrSpan("testo_personaggio testo_maiuscoletto" 9724..9760), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9717..9761) }
token: ElementEnd { end: Open, span: StrSpan(">" 9761..9762) }
token: Text { text: StrSpan("Achille." 9762..9770) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9772..9773)), span: StrSpan("</p>" 9770..9774) }
token: Text { text: StrSpan("\n" 9774..9775) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9776..9777), span: StrSpan("<p" 9775..9777) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9778..9783), value: StrSpan("testo_dialogo" 9785..9798), span: StrSpan("class=\"testo_dialogo\"" 9778..9799) }
token: ElementEnd { end: Open, span: StrSpan(">" 9799..9800) }
token: Text { text: StrSpan("Io non ero ancor nato, che abbatterono il frassino. Vorrei vedere la radura che ne resta." 9800..9889) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9891..9892)), span: StrSpan("</p>" 9889..9893) }
token: Text { text: StrSpan("\n\n" 9893..9895) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9896..9897), span: StrSpan("<p" 9895..9897) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9898..9903), value: StrSpan("testo_personaggio testo_maiuscoletto" 9905..9941), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9898..9942) }
token: ElementEnd { end: Open, span: StrSpan(">" 9942..9943) }
token: Text { text: StrSpan("Patroclo." 9943..9952) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9954..9955)), span: StrSpan("</p>" 9952..9956) }
token: Text { text: StrSpan("\n" 9956..9957) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9958..9959), span: StrSpan("<p" 9957..9959) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9960..9965), value: StrSpan("testo_dialogo" 9967..9980), span: StrSpan("class=\"testo_dialogo\"" 9960..9981) }
token: ElementEnd { end: Open, span: StrSpan(">" 9981..9982) }
token: Text { text: StrSpan("Scendi in campo e la vedrai degna di te. Tanti nemici, tanti ceppi." 9982..10049) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10051..10052)), span: StrSpan("</p>" 10049..10053) }
token: Text { text: StrSpan("\n\n" 10053..10055) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10056..10057), span: StrSpan("<p" 10055..10057) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10058..10063), value: StrSpan("testo_personaggio testo_maiuscoletto" 10065..10101), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10058..10102) }
token: ElementEnd { end: Open, span: StrSpan(">" 10102..10103) }
token: Text { text: StrSpan("Achille." 10103..10111) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10113..10114)), span: StrSpan("</p>" 10111..10115) }
token: Text { text: StrSpan("\n" 10115..10116) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10117..10118), span: StrSpan("<p" 10116..10118) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10119..10124), value: StrSpan("testo_dialogo" 10126..10139), span: StrSpan("class=\"testo_dialogo\"" 10119..10140) }
token: ElementEnd { end: Open, span: StrSpan(">" 10140..10141) }
token: Text { text: StrSpan("Le navi non ardono ancora." 10141..10167) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10169..10170)), span: StrSpan("</p>" 10167..10171) }
token: Text { text: StrSpan("\n\n" 10171..10173) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10174..10175), span: StrSpan("<p" 10173..10175) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10176..10181), value: StrSpan("testo_personaggio testo_maiuscoletto" 10183..10219), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10176..10220) }
token: ElementEnd { end: Open, span: StrSpan(">" 10220..10221) }
token: Text { text: StrSpan("Patroclo." 10221..10230) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10232..10233)), span: StrSpan("</p>" 10230..10234) }
token: Text { text: StrSpan("\n" 10234..10235) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10236..10237), span: StrSpan("<p" 10235..10237) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10238..10243), value: StrSpan("testo_dialogo" 10245..10258), span: StrSpan("class=\"testo_dialogo\"" 10238..10259) }
token: ElementEnd { end: Open, span: StrSpan(">" 10259..10260) }
token: Text { text: StrSpan("Prender√≤ i tuoi schinieri e il tuo scudo. Sarai tu nel mio braccio. Nulla potr√† sfiorarmi. Mi parr√† di giocare." 10260..10374) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10376..10377)), span: StrSpan("</p>" 10374..10378) }
token: Text { text: StrSpan("\n\n" 10378..10380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10381..10382), span: StrSpan("<p" 10380..10382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10383..10388), value: StrSpan("testo_personaggio testo_maiuscoletto" 10390..10426), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10383..10427) }
token: ElementEnd { end: Open, span: StrSpan(">" 10427..10428) }
token: Text { text: StrSpan("Achille." 10428..10436) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10438..10439)), span: StrSpan("</p>" 10436..10440) }
token: Text { text: StrSpan("\n" 10440..10441) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10442..10443), span: StrSpan("<p" 10441..10443) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10444..10449), value: StrSpan("testo_dialogo" 10451..10464), span: StrSpan("class=\"testo_dialogo\"" 10444..10465) }
token: ElementEnd { end: Open, span: StrSpan(">" 10465..10466) }
token: Text { text: StrSpan("Sei davvero il bambino che beve." 10466..10498) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10500..10501)), span: StrSpan("</p>" 10498..10502) }
token: Text { text: StrSpan("\n\n" 10502..10504) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10505..10506), span: StrSpan("<p" 10504..10506) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10507..10512), value: StrSpan("testo_personaggio testo_maiuscoletto" 10514..10550), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10507..10551) }
token: ElementEnd { end: Open, span: StrSpan(">" 10551..10552) }
token: Text { text: StrSpan("Patroclo." 10552..10561) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10563..10564)), span: StrSpan("</p>" 10561..10565) }
token: Text { text: StrSpan("\n" 10565..10566) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10567..10568), span: StrSpan("<p" 10566..10568) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10569..10574), value: StrSpan("testo_dialogo" 10576..10589), span: StrSpan("class=\"testo_dialogo\"" 10569..10590) }
token: ElementEnd { end: Open, span: StrSpan(">" 10590..10591) }
token: Text { text: StrSpan("Quando correvi col centauro, Achille, non pensavi ai ricordi. E non eri pi√∫ immortale che stanotte." 10591..10691) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10693..10694)), span: StrSpan("</p>" 10691..10695) }
token: Text { text: StrSpan("\n\n" 10695..10697) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10698..10699), span: StrSpan("<p" 10697..10699) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10700..10705), value: StrSpan("testo_personaggio testo_maiuscoletto" 10707..10743), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10700..10744) }
token: ElementEnd { end: Open, span: StrSpan(">" 10744..10745) }
token: Text { text: StrSpan("Achille." 10745..10753) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10755..10756)), span: StrSpan("</p>" 10753..10757) }
token: Text { text: StrSpan("\n" 10757..10758) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10759..10760), span: StrSpan("<p" 10758..10760) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10761..10766), value: StrSpan("testo_dialogo" 10768..10781), span: StrSpan("class=\"testo_dialogo\"" 10761..10782) }
token: ElementEnd { end: Open, span: StrSpan(">" 10782..10783) }
token: Text { text: StrSpan("Solamente gli d√®i sanno il destino e vivono. Ma tu giochi al destino." 10783..10853) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10855..10856)), span: StrSpan("</p>" 10853..10857) }
token: Text { text: StrSpan("\n\n" 10857..10859) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10860..10861), span: StrSpan("<p" 10859..10861) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10862..10867), value: StrSpan("testo_personaggio testo_maiuscoletto" 10869..10905), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10862..10906) }
token: ElementEnd { end: Open, span: StrSpan(">" 10906..10907) }
token: Text { text: StrSpan("Patroclo." 10907..10916) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10918..10919)), span: StrSpan("</p>" 10916..10920) }
token: Text { text: StrSpan("\n" 10920..10921) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10922..10923), span: StrSpan("<p" 10921..10923) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10924..10929), value: StrSpan("testo_dialogo" 10931..10944), span: StrSpan("class=\"testo_dialogo\"" 10924..10945) }
token: ElementEnd { end: Open, span: StrSpan(">" 10945..10946) }
token: Text { text: StrSpan("Bevi ancora con me. Poi domani, magari nell‚ÄôAde, diremo anche questa." 10946..11017) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11019..11020)), span: StrSpan("</p>" 11017..11021) }
token: Text { text: StrSpan("\n" 11021..11022) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 11024..11028)), span: StrSpan("</body>" 11022..11029) }
token: Text { text: StrSpan("\n" 11029..11030) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 11032..11036)), span: StrSpan("</html>" 11030..11037) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La strada" 340..349) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 351..353)), span: StrSpan("</h1>" 349..354) }
token: Text { text: StrSpan("\n\n" 354..356) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 357..358), span: StrSpan("<p" 356..358) }
token: ElementEnd { end: Open, span: StrSpan(">" 358..359) }
token: Text { text: StrSpan("Tutti sanno che Edipo, vinta la sfinge e sposata Iocasta, scoperse chi era interrogando il pastore che l‚Äôaveva salvato sul Citerone. E allora l‚Äôoracolo che avrebbe ucciso il padre e sposata la madre fu vero, e Edipo si accec√≤ dall‚Äôorrore e usc√≠ di Tebe e mor√≠ vagabondo." 359..638) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 640..641)), span: StrSpan("</p>" 638..642) }
token: Text { text: StrSpan("\n\n" 642..644) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 645..646), span: StrSpan("<p" 644..646) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 647..652), value: StrSpan("testo_indicazioni_scena" 654..677), span: StrSpan("class=\"testo_indicazioni_scena\"" 647..678) }
token: ElementEnd { end: Open, span: StrSpan(">" 678..679) }
token: Text { text: StrSpan("(parlano Edipo e un mendicante)" 679..710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 712..713)), span: StrSpan("</p>" 710..714) }
token: Text { text: StrSpan("\n\n\n" 714..717) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 718..719), span: StrSpan("<p" 717..719) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 720..725), value: StrSpan("testo_personaggio testo_maiuscoletto" 727..763), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 720..764) }
token: ElementEnd { end: Open, span: StrSpan(">" 764..765) }
token: Text { text: StrSpan("Edipo." 765..771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 773..774)), span: StrSpan("</p>" 771..775) }
token: Text { text: StrSpan("\n" 775..776) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 777..778), span: StrSpan("<p" 776..778) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 779..784), value: StrSpan("testo_dialogo" 786..799), span: StrSpan("class=\"testo_dialogo\"" 779..800) }
token: ElementEnd { end: Open, span: StrSpan(">" 800..801) }
token: Text { text: StrSpan("Non sono un uomo come gli altri, amico. Io sono stato condannato dalla sorte. Ero nato per regnare tra voi. Sono cresciuto sulle montagne. Vedere una montagna o una torre mi rimescolava ‚Äì o una citt√† in distanza, camminando nella polvere. E non sapevo di cercare la mia sorte. Adesso non vedo pi√∫ nulla e le montagne son soltanto fatica. Ogni cosa che faccio √® destino. Capisci?" 801..1184) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1186..1187)), span: StrSpan("</p>" 1184..1188) }
token: Text { text: StrSpan("\n\n" 1188..1190) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1191..1192), span: StrSpan("<p" 1190..1192) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1193..1198), value: StrSpan("testo_personaggio testo_maiuscoletto" 1200..1236), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1193..1237) }
token: ElementEnd { end: Open, span: StrSpan(">" 1237..1238) }
token: Text { text: StrSpan("Mendicante." 1238..1249) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1251..1252)), span: StrSpan("</p>" 1249..1253) }
token: Text { text: StrSpan("\n" 1253..1254) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1255..1256), span: StrSpan("<p" 1254..1256) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1257..1262), value: StrSpan("testo_dialogo" 1264..1277), span: StrSpan("class=\"testo_dialogo\"" 1257..1278) }
token: ElementEnd { end: Open, span: StrSpan(">" 1278..1279) }
token: Text { text: StrSpan("Io sono vecchio, Edipo, e non ho visto che destini. Ma credi che gli altri ‚Äì anche i servi, anche i gobbi o gli storpi ‚Äì non amerebbero esser stati re di Tebe come te?" 1279..1450) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1452..1453)), span: StrSpan("</p>" 1450..1454) }
token: Text { text: StrSpan("\n\n" 1454..1456) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1457..1458), span: StrSpan("<p" 1456..1458) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1459..1464), value: StrSpan("testo_personaggio testo_maiuscoletto" 1466..1502), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1459..1503) }
token: ElementEnd { end: Open, span: StrSpan(">" 1503..1504) }
token: Text { text: StrSpan("Edipo." 1504..1510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1512..1513)), span: StrSpan("</p>" 1510..1514) }
token: Text { text: StrSpan("\n" 1514..1515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1516..1517), span: StrSpan("<p" 1515..1517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1518..1523), value: StrSpan("testo_dialogo" 1525..1538), span: StrSpan("class=\"testo_dialogo\"" 1518..1539) }
token: ElementEnd { end: Open, span: StrSpan(">" 1539..1540) }
token: Text { text: StrSpan("Capiscimi, amico. Il mio destino non √® stato di aver perso qualcosa. N√© gli anni n√© gli acciacchi mi spaventano. Vorrei cadere anche pi√∫ in basso, vorrei perdere tutto ‚Äì √® la sorte comune. Ma non essere Edipo, non essere l‚Äôuomo che senza saperlo doveva regnare." 1540..1810) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1812..1813)), span: StrSpan("</p>" 1810..1814) }
token: Text { text: StrSpan("\n\n" 1814..1816) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1817..1818), span: StrSpan("<p" 1816..1818) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1819..1824), value: StrSpan("testo_personaggio testo_maiuscoletto" 1826..1862), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1819..1863) }
token: ElementEnd { end: Open, span: StrSpan(">" 1863..1864) }
token: Text { text: StrSpan("Mendicante." 1864..1875) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1877..1878)), span: StrSpan("</p>" 1875..1879) }
token: Text { text: StrSpan("\n" 1879..1880) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1881..1882), span: StrSpan("<p" 1880..1882) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1883..1888), value: StrSpan("testo_dialogo" 1890..1903), span: StrSpan("class=\"testo_dialogo\"" 1883..1904) }
token: ElementEnd { end: Open, span: StrSpan(">" 1904..1905) }
token: Text { text: StrSpan("Non capisco. Ringrazia che sei stato signore e hai mangiato, hai bevuto, hai dormito dentro un letto. Chi √® morto sta peggio." 1905..2031) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2033..2034)), span: StrSpan("</p>" 2031..2035) }
token: Text { text: StrSpan("\n\n" 2035..2037) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2038..2039), span: StrSpan("<p" 2037..2039) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2040..2045), value: StrSpan("testo_personaggio testo_maiuscoletto" 2047..2083), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2040..2084) }
token: ElementEnd { end: Open, span: StrSpan(">" 2084..2085) }
token: Text { text: StrSpan("Edipo." 2085..2091) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2093..2094)), span: StrSpan("</p>" 2091..2095) }
token: Text { text: StrSpan("\n" 2095..2096) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2097..2098), span: StrSpan("<p" 2096..2098) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2099..2104), value: StrSpan("testo_dialogo" 2106..2119), span: StrSpan("class=\"testo_dialogo\"" 2099..2120) }
token: ElementEnd { end: Open, span: StrSpan(">" 2120..2121) }
token: Text { text: StrSpan("Non √® questo, ti dico. Mi duole di prima, di quando non ero ancora nulla e avrei potuto essere un uomo come gli altri. E invece no, c‚Äôera il destino. Dovevo andare e capitare proprio a Tebe. Dovevo uccidere quel vecchio. Generare quei figli. Val la pena di fare una cosa ch‚Äôera gi√† come fatta quando ancora non c‚Äôeri?" 2121..2446) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2448..2449)), span: StrSpan("</p>" 2446..2450) }
token: Text { text: StrSpan("\n\n" 2450..2452) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2453..2454), span: StrSpan("<p" 2452..2454) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2455..2460), value: StrSpan("testo_personaggio testo_maiuscoletto" 2462..2498), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2455..2499) }
token: ElementEnd { end: Open, span: StrSpan(">" 2499..2500) }
token: Text { text: StrSpan("Mendicante." 2500..2511) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2513..2514)), span: StrSpan("</p>" 2511..2515) }
token: Text { text: StrSpan("\n" 2515..2516) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2517..2518), span: StrSpan("<p" 2516..2518) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2519..2524), value: StrSpan("testo_dialogo" 2526..2539), span: StrSpan("class=\"testo_dialogo\"" 2519..2540) }
token: ElementEnd { end: Open, span: StrSpan(">" 2540..2541) }
token: Text { text: StrSpan("Vale la pena, Edipo. A noi tocca e ci basta. Lascia il resto agli d√®i." 2541..2612) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2614..2615)), span: StrSpan("</p>" 2612..2616) }
token: Text { text: StrSpan("\n\n" 2616..2618) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2619..2620), span: StrSpan("<p" 2618..2620) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2621..2626), value: StrSpan("testo_personaggio testo_maiuscoletto" 2628..2664), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2621..2665) }
token: ElementEnd { end: Open, span: StrSpan(">" 2665..2666) }
token: Text { text: StrSpan("Edipo." 2666..2672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2674..2675)), span: StrSpan("</p>" 2672..2676) }
token: Text { text: StrSpan("\n" 2676..2677) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2678..2679), span: StrSpan("<p" 2677..2679) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2680..2685), value: StrSpan("testo_dialogo" 2687..2700), span: StrSpan("class=\"testo_dialogo\"" 2680..2701) }
token: ElementEnd { end: Open, span: StrSpan(">" 2701..2702) }
token: Text { text: StrSpan("Non ci son d√®i nella mia vita. Quel che mi tocca √® pi√∫ crudele degli d√®i. Cercavo, ignaro come tutti, di far bene, di trovare nei giorni un bene ignoto che mi desse la sera un sollievo, la speranza che domani avrei fatto di pi√∫. Nemmeno all‚Äôempio manca questa contentezza. M‚Äôaccompagnavano sospetti, voci vaghe, minacce. Da principio era solo un oracolo, una trista parola, e sperai di scampare. Vissi tutti quegli anni come il fuggiasco si guarda alle spalle. Osai credere soltanto ai miei pensieri, agli istanti di tregua, ai risvegli improvvisi. Stetti sempre all‚Äôagguato. E non scampai. Proprio in quegli attimi il destino si compiva." 2702..3351) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3353..3354)), span: StrSpan("</p>" 3351..3355) }
token: Text { text: StrSpan("\n\n" 3355..3357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3358..3359), span: StrSpan("<p" 3357..3359) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3360..3365), value: StrSpan("testo_personaggio testo_maiuscoletto" 3367..3403), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3360..3404) }
token: ElementEnd { end: Open, span: StrSpan(">" 3404..3405) }
token: Text { text: StrSpan("Mendicante." 3405..3416) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3418..3419)), span: StrSpan("</p>" 3416..3420) }
token: Text { text: StrSpan("\n" 3420..3421) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3422..3423), span: StrSpan("<p" 3421..3423) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3424..3429), value: StrSpan("testo_dialogo" 3431..3444), span: StrSpan("class=\"testo_dialogo\"" 3424..3445) }
token: ElementEnd { end: Open, span: StrSpan(">" 3445..3446) }
token: Text { text: StrSpan("Ma, Edipo, per tutti √® cos√≠. Vuol dir questo un destino. Certo i tuoi casi sono stati atroci." 3446..3541) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3543..3544)), span: StrSpan("</p>" 3541..3545) }
token: Text { text: StrSpan("\n\n" 3545..3547) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3548..3549), span: StrSpan("<p" 3547..3549) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3550..3555), value: StrSpan("testo_personaggio testo_maiuscoletto" 3557..3593), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3550..3594) }
token: ElementEnd { end: Open, span: StrSpan(">" 3594..3595) }
token: Text { text: StrSpan("Edipo." 3595..3601) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3603..3604)), span: StrSpan("</p>" 3601..3605) }
token: Text { text: StrSpan("\n" 3605..3606) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3607..3608), span: StrSpan("<p" 3606..3608) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3609..3614), value: StrSpan("testo_dialogo" 3616..3629), span: StrSpan("class=\"testo_dialogo\"" 3609..3630) }
token: ElementEnd { end: Open, span: StrSpan(">" 3630..3631) }
token: Text { text: StrSpan("No, non capisci, non capisci, non √® questo. Vorrei che fossero pi√∫ atroci ancora. Vorrei essere l‚Äôuomo pi√∫ sozzo e pi√∫ vile purch√© quello che ho fatto l‚Äôavessi voluto. Non sub√≠to cos√≠. Non compiuto volendo far altro. Che cosa √® ancora Edipo, che cosa siamo tutti quanti, se fin la voglia pi√∫ segreta del tuo sangue √® gi√† esistita prima ancora che nascessi e tutto quanto era gi√† detto?" 3631..4032) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4034..4035)), span: StrSpan("</p>" 4032..4036) }
token: Text { text: StrSpan("\n\n" 4036..4038) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4039..4040), span: StrSpan("<p" 4038..4040) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4041..4046), value: StrSpan("testo_personaggio testo_maiuscoletto" 4048..4084), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4041..4085) }
token: ElementEnd { end: Open, span: StrSpan(">" 4085..4086) }
token: Text { text: StrSpan("Mendicante." 4086..4097) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4099..4100)), span: StrSpan("</p>" 4097..4101) }
token: Text { text: StrSpan("\n" 4101..4102) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4103..4104), span: StrSpan("<p" 4102..4104) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4105..4110), value: StrSpan("testo_dialogo" 4112..4125), span: StrSpan("class=\"testo_dialogo\"" 4105..4126) }
token: ElementEnd { end: Open, span: StrSpan(">" 4126..4127) }
token: Text { text: StrSpan("Forse, Edipo, qualche giorno di contento c‚Äô√® stato anche per te. E non dico quando hai vinto la Sfinge e tutta Tebe ti acclamava, o ti √® nato il tuo primo figliolo, e sedevi in palazzo ascoltando il consiglio. A queste cose non puoi pi√∫ pensare, va bene. Ma hai pure vissuto la vita di tutti; sei stato giovane e hai veduto il mondo, hai riso e giocato e parlato, non senza saggezza; hai goduto delle cose, il risveglio e il riposo, e battuto le strade. Ora sei cieco, va bene. Ma hai veduto altri giorni." 4127..4637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4639..4640)), span: StrSpan("</p>" 4637..4641) }
token: Text { text: StrSpan("\n\n" 4641..4643) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4644..4645), span: StrSpan("<p" 4643..4645) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4646..4651), value: StrSpan("testo_personaggio testo_maiuscoletto" 4653..4689), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4646..4690) }
token: ElementEnd { end: Open, span: StrSpan(">" 4690..4691) }
token: Text { text: StrSpan("Edipo." 4691..4697) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4699..4700)), span: StrSpan("</p>" 4697..4701) }
token: Text { text: StrSpan("\n" 4701..4702) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4703..4704), span: StrSpan("<p" 4702..4704) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4705..4710), value: StrSpan("testo_dialogo" 4712..4725), span: StrSpan("class=\"testo_dialogo\"" 4705..4726) }
token: ElementEnd { end: Open, span: StrSpan(">" 4726..4727) }
token: Text { text: StrSpan("Sarei folle, a negarlo. E la mia vita √® stata lunga. Ma di nuovo ti dico: ero nato per regnare tra voi. A chi ha la febbre le frutta pi√∫ buone d√†nno soltanto smanie e nausea. E la mia febbre √® il mio destino ‚Äì il timore, l‚Äôorrore perenne di compiere proprio la cosa saputa. Io sapevo ‚Äì ho saputo sempre ‚Äì di agire come lo scoiattolo che crede d‚Äôinerpicarsi e fa soltanto ruotare la gabbia. E mi domando: chi fu Edipo?" 4727..5158) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5160..5161)), span: StrSpan("</p>" 5158..5162) }
token: Text { text: StrSpan("\n\n" 5162..5164) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5165..5166), span: StrSpan("<p" 5164..5166) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5167..5172), value: StrSpan("testo_personaggio testo_maiuscoletto" 5174..5210), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5167..5211) }
token: ElementEnd { end: Open, span: StrSpan(">" 5211..5212) }
token: Text { text: StrSpan("Mendicante." 5212..5223) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5225..5226)), span: StrSpan("</p>" 5223..5227) }
token: Text { text: StrSpan("\n" 5227..5228) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5229..5230), span: StrSpan("<p" 5228..5230) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5231..5236), value: StrSpan("testo_dialogo" 5238..5251), span: StrSpan("class=\"testo_dialogo\"" 5231..5252) }
token: ElementEnd { end: Open, span: StrSpan(">" 5252..5253) }
token: Text { text: StrSpan("Un grande un vero signore, puoi dirlo. Io sentivo parlare di te, sulle strade e alle porte di Tebe. Ci fu qualcuno che lasci√≤ la casa e gir√≤ la Beozia e vide il mare, e per avere la tua sorte and√≤ a Delfi a tentare l‚Äôoracolo. Vedi che il tuo destino fu tanto insolito da mutare l‚Äôaltrui. Che dovr√† dire invece un uomo sempre vissuto in un villaggio, in un mestiere, che fa ogni giorno un solo gesto, e ha i soliti figli, le solite feste, e muore all‚Äôet√† di suo padre del solito male?" 5253..5747) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5749..5750)), span: StrSpan("</p>" 5747..5751) }
token: Text { text: StrSpan("\n\n" 5751..5753) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5754..5755), span: StrSpan("<p" 5753..5755) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5756..5761), value: StrSpan("testo_personaggio testo_maiuscoletto" 5763..5799), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5756..5800) }
token: ElementEnd { end: Open, span: StrSpan(">" 5800..5801) }
token: Text { text: StrSpan("Edipo." 5801..5807) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5809..5810)), span: StrSpan("</p>" 5807..5811) }
token: Text { text: StrSpan("\n" 5811..5812) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5813..5814), span: StrSpan("<p" 5812..5814) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5815..5820), value: StrSpan("testo_dialogo" 5822..5835), span: StrSpan("class=\"testo_dialogo\"" 5815..5836) }
token: ElementEnd { end: Open, span: StrSpan(">" 5836..5837) }
token: Text { text: StrSpan("Non sono un uomo come gli altri, lo so. Ma so che anche il servo o l‚Äôidiota se conoscesse i suoi giorni, schiferebbe anche quel povero piacere che ci trova. I disgraziati che han cercato il mio destino, sono forse scampati al proprio?" 5837..6073) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6075..6076)), span: StrSpan("</p>" 6073..6077) }
token: Text { text: StrSpan("\n\n" 6077..6079) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6080..6081), span: StrSpan("<p" 6079..6081) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6082..6087), value: StrSpan("testo_personaggio testo_maiuscoletto" 6089..6125), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6082..6126) }
token: ElementEnd { end: Open, span: StrSpan(">" 6126..6127) }
token: Text { text: StrSpan("Mendicante." 6127..6138) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6140..6141)), span: StrSpan("</p>" 6138..6142) }
token: Text { text: StrSpan("\n" 6142..6143) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6144..6145), span: StrSpan("<p" 6143..6145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6146..6151), value: StrSpan("testo_dialogo" 6153..6166), span: StrSpan("class=\"testo_dialogo\"" 6146..6167) }
token: ElementEnd { end: Open, span: StrSpan(">" 6167..6168) }
token: Text { text: StrSpan("La vita √® grande, Edipo. Io, che ti parlo, sono stato di costoro. Ho lasciato la casa e percorso la Grecia. Ho visto Delfi e sono giunto al mare. Speravo l‚Äôincontro, la fortuna, la Sfinge. Ti sapevo felice nella reggia di Tebe. Ero un uomo robusto, allora. E se anche non ho trovato la Sfinge, e nessun oracolo ha parlato per me, mi √® piaciuta la vita che ho fatto. Tu sei stato il mio oracolo. Tu hai rovesciato il mio destino. Mendicare o regnare, che importa? Abbiamo entrambi vissuto. Lascia il resto agli d√®i." 6168..6687) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6689..6690)), span: StrSpan("</p>" 6687..6691) }
token: Text { text: StrSpan("\n\n" 6691..6693) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6694..6695), span: StrSpan("<p" 6693..6695) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6696..6701), value: StrSpan("testo_personaggio testo_maiuscoletto" 6703..6739), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6696..6740) }
token: ElementEnd { end: Open, span: StrSpan(">" 6740..6741) }
token: Text { text: StrSpan("Edipo." 6741..6747) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6749..6750)), span: StrSpan("</p>" 6747..6751) }
token: Text { text: StrSpan("\n" 6751..6752) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6753..6754), span: StrSpan("<p" 6752..6754) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6755..6760), value: StrSpan("testo_dialogo" 6762..6775), span: StrSpan("class=\"testo_dialogo\"" 6755..6776) }
token: ElementEnd { end: Open, span: StrSpan(">" 6776..6777) }
token: Text { text: StrSpan("Non saprai mai se ci√≤ che hai fatto l‚Äôhai voluto‚Ä¶ Ma certo la libera strada ha qualcosa di umano, di unicamente umano. Nella sua solitudine tortuosa √® come l‚Äôimmagine di quel dolore che ci scava. Un dolore che √® come un sollievo, come una pioggia dopo l‚Äôafa ‚Äì silenzioso e tranquillo, pare che sgorghi dalle cose, dal fondo del cuore. Questa stanchezza e questa pace, dopo i clamori del destino, son forse l‚Äôunica cosa che √® nostra davvero." 6777..7233) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7235..7236)), span: StrSpan("</p>" 7233..7237) }
token: Text { text: StrSpan("\n\n" 7237..7239) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7240..7241), span: StrSpan("<p" 7239..7241) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7242..7247), value: StrSpan("testo_personaggio testo_maiuscoletto" 7249..7285), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7242..7286) }
token: ElementEnd { end: Open, span: StrSpan(">" 7286..7287) }
token: Text { text: StrSpan("Mendicante." 7287..7298) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7300..7301)), span: StrSpan("</p>" 7298..7302) }
token: Text { text: StrSpan("\n" 7302..7303) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7304..7305), span: StrSpan("<p" 7303..7305) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7306..7311), value: StrSpan("testo_dialogo" 7313..7326), span: StrSpan("class=\"testo_dialogo\"" 7306..7327) }
token: ElementEnd { end: Open, span: StrSpan(">" 7327..7328) }
token: Text { text: StrSpan("Un giorno non c‚Äôeravamo, Edipo. Dunque anche le voglie del cuore, anche il sangue, anche i risvegli sono usciti dal nulla. Sto per dire che anche il tuo desiderio di scampare al destino, √® destino esso stesso. Non siamo noi che abbiamo fatto il nostro sangue. Tant‚Äô√® saperlo e viver franchi, secondo l‚Äôoracolo." 7328..7646) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7648..7649)), span: StrSpan("</p>" 7646..7650) }
token: Text { text: StrSpan("\n\n" 7650..7652) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7653..7654), span: StrSpan("<p" 7652..7654) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7655..7660), value: StrSpan("testo_personaggio testo_maiuscoletto" 7662..7698), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7655..7699) }
token: ElementEnd { end: Open, span: StrSpan(">" 7699..7700) }
token: Text { text: StrSpan("Edipo." 7700..7706) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7708..7709)), span: StrSpan("</p>" 7706..7710) }
token: Text { text: StrSpan("\n" 7710..7711) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7712..7713), span: StrSpan("<p" 7711..7713) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7714..7719), value: StrSpan("testo_dialogo" 7721..7734), span: StrSpan("class=\"testo_dialogo\"" 7714..7735) }
token: ElementEnd { end: Open, span: StrSpan(">" 7735..7736) }
token: Text { text: StrSpan("Fin che si cerca, amico, allora s√≠. Tu hai avuto fortuna a non giungere mai. Ma viene il giorno che ritorni al Citerone e tu pi√∫ non ci pensi, la montagna √® per te un‚Äôaltra infanzia, la vedi ogni giorno e magari ci sali. Poi qualcuno ti dice che sei nato lass√∫. E tutto crolla." 7736..8019) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8021..8022)), span: StrSpan("</p>" 8019..8023) }
token: Text { text: StrSpan("\n\n" 8023..8025) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8026..8027), span: StrSpan("<p" 8025..8027) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8028..8033), value: StrSpan("testo_personaggio testo_maiuscoletto" 8035..8071), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8028..8072) }
token: ElementEnd { end: Open, span: StrSpan(">" 8072..8073) }
token: Text { text: StrSpan("Mendicante." 8073..8084) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8086..8087)), span: StrSpan("</p>" 8084..8088) }
token: Text { text: StrSpan("\n" 8088..8089) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8090..8091), span: StrSpan("<p" 8089..8091) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8092..8097), value: StrSpan("testo_dialogo" 8099..8112), span: StrSpan("class=\"testo_dialogo\"" 8092..8113) }
token: ElementEnd { end: Open, span: StrSpan(">" 8113..8114) }
token: Text { text: StrSpan("Ti capisco, Edipo. Ma abbiamo tutti una montagna dell‚Äôinfanzia. E per lontano che si vagabondi, ci si ritrova sul suo sentiero. L√† fummo fatti quel che siamo." 8114..8275) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8277..8278)), span: StrSpan("</p>" 8275..8279) }
token: Text { text: StrSpan("\n\n" 8279..8281) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8282..8283), span: StrSpan("<p" 8281..8283) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8284..8289), value: StrSpan("testo_personaggio testo_maiuscoletto" 8291..8327), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8284..8328) }
token: ElementEnd { end: Open, span: StrSpan(">" 8328..8329) }
token: Text { text: StrSpan("Edipo." 8329..8335) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8337..8338)), span: StrSpan("</p>" 8335..8339) }
token: Text { text: StrSpan("\n" 8339..8340) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8341..8342), span: StrSpan("<p" 8340..8342) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8343..8348), value: StrSpan("testo_dialogo" 8350..8363), span: StrSpan("class=\"testo_dialogo\"" 8343..8364) }
token: ElementEnd { end: Open, span: StrSpan(">" 8364..8365) }
token: Text { text: StrSpan("Altro √® parlare, altro soffrire, amico. Ma certo parlando, qualcosa si placa nel cuore. Parlare √® un poco come andare per le strade giorno e notte a modo nostro senza m√®ta, non come i giovani che cercano fortuna. E tu hai molto parlato, e visto molto. Davvero volevi regnare?" 8365..8643) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8645..8646)), span: StrSpan("</p>" 8643..8647) }
token: Text { text: StrSpan("\n\n" 8647..8649) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8650..8651), span: StrSpan("<p" 8649..8651) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8652..8657), value: StrSpan("testo_personaggio testo_maiuscoletto" 8659..8695), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8652..8696) }
token: ElementEnd { end: Open, span: StrSpan(">" 8696..8697) }
token: Text { text: StrSpan("Mendicante." 8697..8708) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8710..8711)), span: StrSpan("</p>" 8708..8712) }
token: Text { text: StrSpan("\n" 8712..8713) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8714..8715), span: StrSpan("<p" 8713..8715) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8716..8721), value: StrSpan("testo_dialogo" 8723..8736), span: StrSpan("class=\"testo_dialogo\"" 8716..8737) }
token: ElementEnd { end: Open, span: StrSpan(">" 8737..8738) }
token: Text { text: StrSpan("Chi lo sa? Quel che √® certo, dovevo cambiare. Si cerca una cosa e si trova tutt‚Äôaltro. Anche questo √® destino. Ma parlare ci aiuta a ritrovare noi stessi." 8738..8896) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8898..8899)), span: StrSpan("</p>" 8896..8900) }
token: Text { text: StrSpan("\n\n" 8900..8902) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8903..8904), span: StrSpan("<p" 8902..8904) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8905..8910), value: StrSpan("testo_personaggio testo_maiuscoletto" 8912..8948), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8905..8949) }
token: ElementEnd { end: Open, span: StrSpan(">" 8949..8950) }
token: Text { text: StrSpan("Edipo." 8950..8956) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8958..8959)), span: StrSpan("</p>" 8956..8960) }
token: Text { text: StrSpan("\n" 8960..8961) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8962..8963), span: StrSpan("<p" 8961..8963) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8964..8969), value: StrSpan("testo_dialogo" 8971..8984), span: StrSpan("class=\"testo_dialogo\"" 8964..8985) }
token: ElementEnd { end: Open, span: StrSpan(">" 8985..8986) }
token: Text { text: StrSpan("E hai famiglia? hai qualcuno? Non credo." 8986..9026) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9028..9029)), span: StrSpan("</p>" 9026..9030) }
token: Text { text: StrSpan("\n\n" 9030..9032) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9033..9034), span: StrSpan("<p" 9032..9034) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9035..9040), value: StrSpan("testo_personaggio testo_maiuscoletto" 9042..9078), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9035..9079) }
token: ElementEnd { end: Open, span: StrSpan(">" 9079..9080) }
token: Text { text: StrSpan("Mendicante." 9080..9091) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9093..9094)), span: StrSpan("</p>" 9091..9095) }
token: Text { text: StrSpan("\n" 9095..9096) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9097..9098), span: StrSpan("<p" 9096..9098) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9099..9104), value: StrSpan("testo_dialogo" 9106..9119), span: StrSpan("class=\"testo_dialogo\"" 9099..9120) }
token: ElementEnd { end: Open, span: StrSpan(">" 9120..9121) }
token: Text { text: StrSpan("Non sarei quel che sono." 9121..9145) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9147..9148)), span: StrSpan("</p>" 9145..9149) }
token: Text { text: StrSpan("\n\n" 9149..9151) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9152..9153), span: StrSpan("<p" 9151..9153) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9154..9159), value: StrSpan("testo_personaggio testo_maiuscoletto" 9161..9197), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9154..9198) }
token: ElementEnd { end: Open, span: StrSpan(">" 9198..9199) }
token: Text { text: StrSpan("Edipo." 9199..9205) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9207..9208)), span: StrSpan("</p>" 9205..9209) }
token: Text { text: StrSpan("\n" 9209..9210) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9211..9212), span: StrSpan("<p" 9210..9212) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9213..9218), value: StrSpan("testo_dialogo" 9220..9233), span: StrSpan("class=\"testo_dialogo\"" 9213..9234) }
token: ElementEnd { end: Open, span: StrSpan(">" 9234..9235) }
token: Text { text: StrSpan("Strana cosa che per capire il prossimo ci tocchi fuggirlo. E i discorsi pi√∫ veri sono quelli che facciamo per caso, tra sconosciuti. Oh cos√≠ dovevo vivere, io Edipo, lungo le strade della F√≤cide e dell‚ÄôIstmo, quando avevo i miei occhi. E non salire le montagne, non dar retta agli oracoli‚Ä¶" 9235..9531) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9533..9534)), span: StrSpan("</p>" 9531..9535) }
token: Text { text: StrSpan("\n\n" 9535..9537) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9538..9539), span: StrSpan("<p" 9537..9539) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9540..9545), value: StrSpan("testo_personaggio testo_maiuscoletto" 9547..9583), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9540..9584) }
token: ElementEnd { end: Open, span: StrSpan(">" 9584..9585) }
token: Text { text: StrSpan("Mendicante." 9585..9596) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9598..9599)), span: StrSpan("</p>" 9596..9600) }
token: Text { text: StrSpan("\n" 9600..9601) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9602..9603), span: StrSpan("<p" 9601..9603) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9604..9609), value: StrSpan("testo_dialogo" 9611..9624), span: StrSpan("class=\"testo_dialogo\"" 9604..9625) }
token: ElementEnd { end: Open, span: StrSpan(">" 9625..9626) }
token: Text { text: StrSpan("Tu dimentichi almeno un discorso di quelli che hai fatto." 9626..9683) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9685..9686)), span: StrSpan("</p>" 9683..9687) }
token: Text { text: StrSpan("\n\n" 9687..9689) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9690..9691), span: StrSpan("<p" 9689..9691) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9692..9697), value: StrSpan("testo_personaggio testo_maiuscoletto" 9699..9735), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9692..9736) }
token: ElementEnd { end: Open, span: StrSpan(">" 9736..9737) }
token: Text { text: StrSpan("Edipo." 9737..9743) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9745..9746)), span: StrSpan("</p>" 9743..9747) }
token: Text { text: StrSpan("\n" 9747..9748) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9749..9750), span: StrSpan("<p" 9748..9750) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9751..9756), value: StrSpan("testo_dialogo" 9758..9771), span: StrSpan("class=\"testo_dialogo\"" 9751..9772) }
token: ElementEnd { end: Open, span: StrSpan(">" 9772..9773) }
token: Text { text: StrSpan("Quale, amico?" 9773..9786) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9788..9789)), span: StrSpan("</p>" 9786..9790) }
token: Text { text: StrSpan("\n\n" 9790..9792) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9793..9794), span: StrSpan("<p" 9792..9794) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9795..9800), value: StrSpan("testo_personaggio testo_maiuscoletto" 9802..9838), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9795..9839) }
token: ElementEnd { end: Open, span: StrSpan(">" 9839..9840) }
token: Text { text: StrSpan("Mendicante." 9840..9851) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9853..9854)), span: StrSpan("</p>" 9851..9855) }
token: Text { text: StrSpan("\n" 9855..9856) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9857..9858), span: StrSpan("<p" 9856..9858) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9859..9864), value: StrSpan("testo_dialogo" 9866..9879), span: StrSpan("class=\"testo_dialogo\"" 9859..9880) }
token: ElementEnd { end: Open, span: StrSpan(">" 9880..9881) }
token: Text { text: StrSpan("Quello al crocicchio della Sfinge." 9881..9915) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9917..9918)), span: StrSpan("</p>" 9915..9919) }
token: Text { text: StrSpan("\n" 9919..9920) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 9922..9926)), span: StrSpan("</body>" 9920..9927) }
token: Text { text: StrSpan("\n" 9927..9928) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 9930..9934)), span: StrSpan("</html>" 9928..9935) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La rupe" 340..347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 349..351)), span: StrSpan("</h1>" 347..352) }
token: Text { text: StrSpan("\n\n" 352..354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 355..356), span: StrSpan("<p" 354..356) }
token: ElementEnd { end: Open, span: StrSpan(">" 356..357) }
token: Text { text: StrSpan("Nella storia del mondo l‚Äô√®ra detta titanica fu popolata di uomini, di mostri, e di d√®i non ancora organizzati in Olimpo. Qualcuno anzi pensa che non ci fossero che mostri ‚Äì vale a dire intelligenze chiuse in un corpo deforme e bestiale. Di qui il sospetto che molti degli uccisori di mostri ‚Äì Eracle in testa ‚Äì versassero sangue fraterno." 357..705) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 707..708)), span: StrSpan("</p>" 705..709) }
token: Text { text: StrSpan("\n\n" 709..711) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 712..713), span: StrSpan("<p" 711..713) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 714..719), value: StrSpan("testo_indicazioni_scena" 721..744), span: StrSpan("class=\"testo_indicazioni_scena\"" 714..745) }
token: ElementEnd { end: Open, span: StrSpan(">" 745..746) }
token: Text { text: StrSpan("(parlano Eracle e Prometeo)" 746..773) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 775..776)), span: StrSpan("</p>" 773..777) }
token: Text { text: StrSpan("\n\n\n" 777..780) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 781..782), span: StrSpan("<p" 780..782) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 783..788), value: StrSpan("testo_personaggio testo_maiuscoletto" 790..826), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 783..827) }
token: ElementEnd { end: Open, span: StrSpan(">" 827..828) }
token: Text { text: StrSpan("Eracle." 828..835) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 837..838)), span: StrSpan("</p>" 835..839) }
token: Text { text: StrSpan("\n" 839..840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 841..842), span: StrSpan("<p" 840..842) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 843..848), value: StrSpan("testo_dialogo" 850..863), span: StrSpan("class=\"testo_dialogo\"" 843..864) }
token: ElementEnd { end: Open, span: StrSpan(">" 864..865) }
token: Text { text: StrSpan("Prometeo, sono venuto a liberarti." 865..899) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 901..902)), span: StrSpan("</p>" 899..903) }
token: Text { text: StrSpan("\n\n" 903..905) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 906..907), span: StrSpan("<p" 905..907) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 908..913), value: StrSpan("testo_personaggio testo_maiuscoletto" 915..951), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 908..952) }
token: ElementEnd { end: Open, span: StrSpan(">" 952..953) }
token: Text { text: StrSpan("Prometeo." 953..962) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 964..965)), span: StrSpan("</p>" 962..966) }
token: Text { text: StrSpan("\n" 966..967) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 968..969), span: StrSpan("<p" 967..969) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 970..975), value: StrSpan("testo_dialogo" 977..990), span: StrSpan("class=\"testo_dialogo\"" 970..991) }
token: ElementEnd { end: Open, span: StrSpan(">" 991..992) }
token: Text { text: StrSpan("Lo so e ti aspettavo. Devo ringraziarti, Eracle. Hai percorso una strada terribile, per salire fin qua. Ma tu non sai cos‚Äô√® paura." 992..1125) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1127..1128)), span: StrSpan("</p>" 1125..1129) }
token: Text { text: StrSpan("\n\n" 1129..1131) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1132..1133), span: StrSpan("<p" 1131..1133) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1134..1139), value: StrSpan("testo_personaggio testo_maiuscoletto" 1141..1177), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1134..1178) }
token: ElementEnd { end: Open, span: StrSpan(">" 1178..1179) }
token: Text { text: StrSpan("Eracle." 1179..1186) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1188..1189)), span: StrSpan("</p>" 1186..1190) }
token: Text { text: StrSpan("\n" 1190..1191) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1192..1193), span: StrSpan("<p" 1191..1193) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1194..1199), value: StrSpan("testo_dialogo" 1201..1214), span: StrSpan("class=\"testo_dialogo\"" 1194..1215) }
token: ElementEnd { end: Open, span: StrSpan(">" 1215..1216) }
token: Text { text: StrSpan("Il tuo stato √® pi√∫ terribile, Prometeo." 1216..1257) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1259..1260)), span: StrSpan("</p>" 1257..1261) }
token: Text { text: StrSpan("\n\n" 1261..1263) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1264..1265), span: StrSpan("<p" 1263..1265) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1266..1271), value: StrSpan("testo_personaggio testo_maiuscoletto" 1273..1309), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1266..1310) }
token: ElementEnd { end: Open, span: StrSpan(">" 1310..1311) }
token: Text { text: StrSpan("Prometeo." 1311..1320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1322..1323)), span: StrSpan("</p>" 1320..1324) }
token: Text { text: StrSpan("\n" 1324..1325) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1326..1327), span: StrSpan("<p" 1325..1327) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1328..1333), value: StrSpan("testo_dialogo" 1335..1348), span: StrSpan("class=\"testo_dialogo\"" 1328..1349) }
token: ElementEnd { end: Open, span: StrSpan(">" 1349..1350) }
token: Text { text: StrSpan("Veramente tu non sai cos‚Äô√® paura? Non credo." 1350..1397) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1399..1400)), span: StrSpan("</p>" 1397..1401) }
token: Text { text: StrSpan("\n\n" 1401..1403) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1404..1405), span: StrSpan("<p" 1403..1405) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1406..1411), value: StrSpan("testo_personaggio testo_maiuscoletto" 1413..1449), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1406..1450) }
token: ElementEnd { end: Open, span: StrSpan(">" 1450..1451) }
token: Text { text: StrSpan("Eracle." 1451..1458) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1460..1461)), span: StrSpan("</p>" 1458..1462) }
token: Text { text: StrSpan("\n" 1462..1463) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1464..1465), span: StrSpan("<p" 1463..1465) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1466..1471), value: StrSpan("testo_dialogo" 1473..1486), span: StrSpan("class=\"testo_dialogo\"" 1466..1487) }
token: ElementEnd { end: Open, span: StrSpan(">" 1487..1488) }
token: Text { text: StrSpan("Se paura √® non fare quel che debbo, allora io non l‚Äôho mai provata. Ma sono un uomo, Prometeo, non sempre so quello che debbo fare." 1488..1622) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1624..1625)), span: StrSpan("</p>" 1622..1626) }
token: Text { text: StrSpan("\n\n" 1626..1628) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1629..1630), span: StrSpan("<p" 1628..1630) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1631..1636), value: StrSpan("testo_personaggio testo_maiuscoletto" 1638..1674), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1631..1675) }
token: ElementEnd { end: Open, span: StrSpan(">" 1675..1676) }
token: Text { text: StrSpan("Prometeo." 1676..1685) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1687..1688)), span: StrSpan("</p>" 1685..1689) }
token: Text { text: StrSpan("\n" 1689..1690) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1691..1692), span: StrSpan("<p" 1690..1692) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1693..1698), value: StrSpan("testo_dialogo" 1700..1713), span: StrSpan("class=\"testo_dialogo\"" 1693..1714) }
token: ElementEnd { end: Open, span: StrSpan(">" 1714..1715) }
token: Text { text: StrSpan("Piet√† e paura sono l‚Äôuomo. Non c‚Äô√® altro." 1715..1762) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1764..1765)), span: StrSpan("</p>" 1762..1766) }
token: Text { text: StrSpan("\n\n" 1766..1768) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1769..1770), span: StrSpan("<p" 1768..1770) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1771..1776), value: StrSpan("testo_personaggio testo_maiuscoletto" 1778..1814), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1771..1815) }
token: ElementEnd { end: Open, span: StrSpan(">" 1815..1816) }
token: Text { text: StrSpan("Eracle." 1816..1823) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1825..1826)), span: StrSpan("</p>" 1823..1827) }
token: Text { text: StrSpan("\n" 1827..1828) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1829..1830), span: StrSpan("<p" 1828..1830) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1831..1836), value: StrSpan("testo_dialogo" 1838..1851), span: StrSpan("class=\"testo_dialogo\"" 1831..1852) }
token: ElementEnd { end: Open, span: StrSpan(">" 1852..1853) }
token: Text { text: StrSpan("Prometeo, tu mi trattieni a discorrere, e ogni istante che passa il tuo supplizio continua. Sono venuto a liberarti." 1853..1969) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1971..1972)), span: StrSpan("</p>" 1969..1973) }
token: Text { text: StrSpan("\n\n" 1973..1975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1976..1977), span: StrSpan("<p" 1975..1977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1978..1983), value: StrSpan("testo_personaggio testo_maiuscoletto" 1985..2021), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1978..2022) }
token: ElementEnd { end: Open, span: StrSpan(">" 2022..2023) }
token: Text { text: StrSpan("Prometeo." 2023..2032) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2034..2035)), span: StrSpan("</p>" 2032..2036) }
token: Text { text: StrSpan("\n" 2036..2037) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2038..2039), span: StrSpan("<p" 2037..2039) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2040..2045), value: StrSpan("testo_dialogo" 2047..2060), span: StrSpan("class=\"testo_dialogo\"" 2040..2061) }
token: ElementEnd { end: Open, span: StrSpan(">" 2061..2062) }
token: Text { text: StrSpan("Lo so, Eracle. Lo sapevo gi√† quand‚Äôeri solo un bimbo in fasce, quando non eri ancora nato. Ma mi succede come a un uomo che abbia molto patito in un luogo ‚Äì nel carcere, in esilio, in un pericolo ‚Äì e quando viene il momento d‚Äôuscirne non sa risolversi a passare quell‚Äôistante, a mettersi dietro le spalle la vita sofferta." 2062..2395) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2397..2398)), span: StrSpan("</p>" 2395..2399) }
token: Text { text: StrSpan("\n\n" 2399..2401) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2402..2403), span: StrSpan("<p" 2401..2403) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2404..2409), value: StrSpan("testo_personaggio testo_maiuscoletto" 2411..2447), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2404..2448) }
token: ElementEnd { end: Open, span: StrSpan(">" 2448..2449) }
token: Text { text: StrSpan("Eracle." 2449..2456) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2458..2459)), span: StrSpan("</p>" 2456..2460) }
token: Text { text: StrSpan("\n" 2460..2461) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2462..2463), span: StrSpan("<p" 2461..2463) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2464..2469), value: StrSpan("testo_dialogo" 2471..2484), span: StrSpan("class=\"testo_dialogo\"" 2464..2485) }
token: ElementEnd { end: Open, span: StrSpan(">" 2485..2486) }
token: Text { text: StrSpan("Non vuoi lasciare la tua rupe?" 2486..2516) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2518..2519)), span: StrSpan("</p>" 2516..2520) }
token: Text { text: StrSpan("\n\n" 2520..2522) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2523..2524), span: StrSpan("<p" 2522..2524) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2525..2530), value: StrSpan("testo_personaggio testo_maiuscoletto" 2532..2568), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2525..2569) }
token: ElementEnd { end: Open, span: StrSpan(">" 2569..2570) }
token: Text { text: StrSpan("Prometeo." 2570..2579) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2581..2582)), span: StrSpan("</p>" 2579..2583) }
token: Text { text: StrSpan("\n" 2583..2584) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2585..2586), span: StrSpan("<p" 2584..2586) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2587..2592), value: StrSpan("testo_dialogo" 2594..2607), span: StrSpan("class=\"testo_dialogo\"" 2587..2608) }
token: ElementEnd { end: Open, span: StrSpan(">" 2608..2609) }
token: Text { text: StrSpan("Devo lasciarla, Eracle ‚Äì ti dico che ti aspettavo. Ma, come a uomo, l‚Äôistante mi pesa. Tu sai che qui si soffre molto." 2609..2731) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2733..2734)), span: StrSpan("</p>" 2731..2735) }
token: Text { text: StrSpan("\n\n" 2735..2737) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2738..2739), span: StrSpan("<p" 2737..2739) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2740..2745), value: StrSpan("testo_personaggio testo_maiuscoletto" 2747..2783), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2740..2784) }
token: ElementEnd { end: Open, span: StrSpan(">" 2784..2785) }
token: Text { text: StrSpan("Eracle." 2785..2792) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2794..2795)), span: StrSpan("</p>" 2792..2796) }
token: Text { text: StrSpan("\n" 2796..2797) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2798..2799), span: StrSpan("<p" 2797..2799) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2800..2805), value: StrSpan("testo_dialogo" 2807..2820), span: StrSpan("class=\"testo_dialogo\"" 2800..2821) }
token: ElementEnd { end: Open, span: StrSpan(">" 2821..2822) }
token: Text { text: StrSpan("Basta guardarti, Prometeo." 2822..2848) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2850..2851)), span: StrSpan("</p>" 2848..2852) }
token: Text { text: StrSpan("\n\n" 2852..2854) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2855..2856), span: StrSpan("<p" 2854..2856) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2857..2862), value: StrSpan("testo_personaggio testo_maiuscoletto" 2864..2900), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2857..2901) }
token: ElementEnd { end: Open, span: StrSpan(">" 2901..2902) }
token: Text { text: StrSpan("Prometeo." 2902..2911) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2913..2914)), span: StrSpan("</p>" 2911..2915) }
token: Text { text: StrSpan("\n" 2915..2916) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2917..2918), span: StrSpan("<p" 2916..2918) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2919..2924), value: StrSpan("testo_dialogo" 2926..2939), span: StrSpan("class=\"testo_dialogo\"" 2919..2940) }
token: ElementEnd { end: Open, span: StrSpan(">" 2940..2941) }
token: Text { text: StrSpan("Si soffre al punto che si vuol morire. Un giorno anche tu saprai questo, e salirai sopra una rupe. Ma io, Eracle, morire non posso. Nemmeno tu, del resto, morirai." 2941..3104) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3106..3107)), span: StrSpan("</p>" 3104..3108) }
token: Text { text: StrSpan("\n\n" 3108..3110) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3111..3112), span: StrSpan("<p" 3110..3112) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3113..3118), value: StrSpan("testo_personaggio testo_maiuscoletto" 3120..3156), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3113..3157) }
token: ElementEnd { end: Open, span: StrSpan(">" 3157..3158) }
token: Text { text: StrSpan("Eracle." 3158..3165) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3167..3168)), span: StrSpan("</p>" 3165..3169) }
token: Text { text: StrSpan("\n" 3169..3170) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3171..3172), span: StrSpan("<p" 3170..3172) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3173..3178), value: StrSpan("testo_dialogo" 3180..3193), span: StrSpan("class=\"testo_dialogo\"" 3173..3194) }
token: ElementEnd { end: Open, span: StrSpan(">" 3194..3195) }
token: Text { text: StrSpan("Che dici?" 3195..3204) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3206..3207)), span: StrSpan("</p>" 3204..3208) }
token: Text { text: StrSpan("\n\n" 3208..3210) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3211..3212), span: StrSpan("<p" 3210..3212) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3213..3218), value: StrSpan("testo_personaggio testo_maiuscoletto" 3220..3256), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3213..3257) }
token: ElementEnd { end: Open, span: StrSpan(">" 3257..3258) }
token: Text { text: StrSpan("Prometeo." 3258..3267) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3269..3270)), span: StrSpan("</p>" 3267..3271) }
token: Text { text: StrSpan("\n" 3271..3272) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3273..3274), span: StrSpan("<p" 3272..3274) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3275..3280), value: StrSpan("testo_dialogo" 3282..3295), span: StrSpan("class=\"testo_dialogo\"" 3275..3296) }
token: ElementEnd { end: Open, span: StrSpan(">" 3296..3297) }
token: Text { text: StrSpan("Ti rapir√† un dio. Anzi una dea." 3297..3329) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3331..3332)), span: StrSpan("</p>" 3329..3333) }
token: Text { text: StrSpan("\n\n" 3333..3335) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3336..3337), span: StrSpan("<p" 3335..3337) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3338..3343), value: StrSpan("testo_personaggio testo_maiuscoletto" 3345..3381), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3338..3382) }
token: ElementEnd { end: Open, span: StrSpan(">" 3382..3383) }
token: Text { text: StrSpan("Eracle." 3383..3390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3392..3393)), span: StrSpan("</p>" 3390..3394) }
token: Text { text: StrSpan("\n" 3394..3395) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3396..3397), span: StrSpan("<p" 3395..3397) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3398..3403), value: StrSpan("testo_dialogo" 3405..3418), span: StrSpan("class=\"testo_dialogo\"" 3398..3419) }
token: ElementEnd { end: Open, span: StrSpan(">" 3419..3420) }
token: Text { text: StrSpan("Non so, Prometeo. Lascia dunque che ti sleghi." 3420..3466) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3468..3469)), span: StrSpan("</p>" 3466..3470) }
token: Text { text: StrSpan("\n\n" 3470..3472) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3473..3474), span: StrSpan("<p" 3472..3474) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3475..3480), value: StrSpan("testo_personaggio testo_maiuscoletto" 3482..3518), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3475..3519) }
token: ElementEnd { end: Open, span: StrSpan(">" 3519..3520) }
token: Text { text: StrSpan("Prometeo." 3520..3529) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3531..3532)), span: StrSpan("</p>" 3529..3533) }
token: Text { text: StrSpan("\n" 3533..3534) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3535..3536), span: StrSpan("<p" 3534..3536) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3537..3542), value: StrSpan("testo_dialogo" 3544..3557), span: StrSpan("class=\"testo_dialogo\"" 3537..3558) }
token: ElementEnd { end: Open, span: StrSpan(">" 3558..3559) }
token: Text { text: StrSpan("E tu sarai come un bambino, pieno di calda gratitudine, e scorderai le iniquit√† e le fatiche, e vivrai sotto il cielo, lodando gli d√®i, la loro sapienza e bont√†." 3559..3723) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3725..3726)), span: StrSpan("</p>" 3723..3727) }
token: Text { text: StrSpan("\n\n" 3727..3729) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3730..3731), span: StrSpan("<p" 3729..3731) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3732..3737), value: StrSpan("testo_personaggio testo_maiuscoletto" 3739..3775), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3732..3776) }
token: ElementEnd { end: Open, span: StrSpan(">" 3776..3777) }
token: Text { text: StrSpan("Eracle." 3777..3784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3786..3787)), span: StrSpan("</p>" 3784..3788) }
token: Text { text: StrSpan("\n" 3788..3789) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3790..3791), span: StrSpan("<p" 3789..3791) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3792..3797), value: StrSpan("testo_dialogo" 3799..3812), span: StrSpan("class=\"testo_dialogo\"" 3792..3813) }
token: ElementEnd { end: Open, span: StrSpan(">" 3813..3814) }
token: Text { text: StrSpan("Non ci viene ogni cosa da loro?" 3814..3845) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3847..3848)), span: StrSpan("</p>" 3845..3849) }
token: Text { text: StrSpan("\n\n" 3849..3851) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3852..3853), span: StrSpan("<p" 3851..3853) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3854..3859), value: StrSpan("testo_personaggio testo_maiuscoletto" 3861..3897), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3854..3898) }
token: ElementEnd { end: Open, span: StrSpan(">" 3898..3899) }
token: Text { text: StrSpan("Prometeo." 3899..3908) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3910..3911)), span: StrSpan("</p>" 3908..3912) }
token: Text { text: StrSpan("\n" 3912..3913) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3914..3915), span: StrSpan("<p" 3913..3915) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3916..3921), value: StrSpan("testo_dialogo" 3923..3936), span: StrSpan("class=\"testo_dialogo\"" 3916..3937) }
token: ElementEnd { end: Open, span: StrSpan(">" 3937..3938) }
token: Text { text: StrSpan("O Eracle, c‚Äô√® una sapienza pi√∫ antica. Il mondo √® vecchio, pi√∫ di questa rupe. E anche loro lo sanno. Ogni cosa ha un destino. Ma gli d√®i sono giovani, giovani quasi come te." 3938..4119) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4121..4122)), span: StrSpan("</p>" 4119..4123) }
token: Text { text: StrSpan("\n\n" 4123..4125) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4126..4127), span: StrSpan("<p" 4125..4127) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4128..4133), value: StrSpan("testo_personaggio testo_maiuscoletto" 4135..4171), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4128..4172) }
token: ElementEnd { end: Open, span: StrSpan(">" 4172..4173) }
token: Text { text: StrSpan("Eracle." 4173..4180) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4182..4183)), span: StrSpan("</p>" 4180..4184) }
token: Text { text: StrSpan("\n" 4184..4185) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4186..4187), span: StrSpan("<p" 4185..4187) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4188..4193), value: StrSpan("testo_dialogo" 4195..4208), span: StrSpan("class=\"testo_dialogo\"" 4188..4209) }
token: ElementEnd { end: Open, span: StrSpan(">" 4209..4210) }
token: Text { text: StrSpan("Non eri uno di loro anche tu?" 4210..4239) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4241..4242)), span: StrSpan("</p>" 4239..4243) }
token: Text { text: StrSpan("\n\n" 4243..4245) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4246..4247), span: StrSpan("<p" 4245..4247) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4248..4253), value: StrSpan("testo_personaggio testo_maiuscoletto" 4255..4291), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4248..4292) }
token: ElementEnd { end: Open, span: StrSpan(">" 4292..4293) }
token: Text { text: StrSpan("Prometeo." 4293..4302) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4304..4305)), span: StrSpan("</p>" 4302..4306) }
token: Text { text: StrSpan("\n" 4306..4307) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4308..4309), span: StrSpan("<p" 4307..4309) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4310..4315), value: StrSpan("testo_dialogo" 4317..4330), span: StrSpan("class=\"testo_dialogo\"" 4310..4331) }
token: ElementEnd { end: Open, span: StrSpan(">" 4331..4332) }
token: Text { text: StrSpan("Lo sar√≤ ancora. Cos√≠ vuole il destino. Ma un tempo ero un titano e vissi in un mondo senza d√®i. Anche questo √® accaduto‚Ä¶ Non puoi pensarlo un mondo simile?" 4332..4493) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4495..4496)), span: StrSpan("</p>" 4493..4497) }
token: Text { text: StrSpan("\n\n" 4497..4499) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4500..4501), span: StrSpan("<p" 4499..4501) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4502..4507), value: StrSpan("testo_personaggio testo_maiuscoletto" 4509..4545), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4502..4546) }
token: ElementEnd { end: Open, span: StrSpan(">" 4546..4547) }
token: Text { text: StrSpan("Eracle." 4547..4554) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4556..4557)), span: StrSpan("</p>" 4554..4558) }
token: Text { text: StrSpan("\n" 4558..4559) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4560..4561), span: StrSpan("<p" 4559..4561) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4562..4567), value: StrSpan("testo_dialogo" 4569..4582), span: StrSpan("class=\"testo_dialogo\"" 4562..4583) }
token: ElementEnd { end: Open, span: StrSpan(">" 4583..4584) }
token: Text { text: StrSpan("Non √® il mondo dei mostri e del caos?" 4584..4622) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4624..4625)), span: StrSpan("</p>" 4622..4626) }
token: Text { text: StrSpan("\n\n" 4626..4628) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4629..4630), span: StrSpan("<p" 4628..4630) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4631..4636), value: StrSpan("testo_personaggio testo_maiuscoletto" 4638..4674), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4631..4675) }
token: ElementEnd { end: Open, span: StrSpan(">" 4675..4676) }
token: Text { text: StrSpan("Prometeo." 4676..4685) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4687..4688)), span: StrSpan("</p>" 4685..4689) }
token: Text { text: StrSpan("\n" 4689..4690) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4691..4692), span: StrSpan("<p" 4690..4692) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4693..4698), value: StrSpan("testo_dialogo" 4700..4713), span: StrSpan("class=\"testo_dialogo\"" 4693..4714) }
token: ElementEnd { end: Open, span: StrSpan(">" 4714..4715) }
token: Text { text: StrSpan("Dei titani e degli uomini, Eracle. Delle belve e dei boschi. Del mare e del cielo. √à il mondo di lotta e di sangue, che ti ha fatto chi sei. Fin l‚Äôultimo dio, il pi√∫ iniquo, era allora un titano. Non c‚Äô√® cosa che valga, nel mondo presente o futuro, che non fosse titanica." 4715..4994) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4996..4997)), span: StrSpan("</p>" 4994..4998) }
token: Text { text: StrSpan("\n\n" 4998..5000) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5001..5002), span: StrSpan("<p" 5000..5002) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5003..5008), value: StrSpan("testo_personaggio testo_maiuscoletto" 5010..5046), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5003..5047) }
token: ElementEnd { end: Open, span: StrSpan(">" 5047..5048) }
token: Text { text: StrSpan("Eracle." 5048..5055) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5057..5058)), span: StrSpan("</p>" 5055..5059) }
token: Text { text: StrSpan("\n" 5059..5060) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5061..5062), span: StrSpan("<p" 5060..5062) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5063..5068), value: StrSpan("testo_dialogo" 5070..5083), span: StrSpan("class=\"testo_dialogo\"" 5063..5084) }
token: ElementEnd { end: Open, span: StrSpan(">" 5084..5085) }
token: Text { text: StrSpan("Era un mondo di rupi." 5085..5106) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5108..5109)), span: StrSpan("</p>" 5106..5110) }
token: Text { text: StrSpan("\n\n" 5110..5112) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5113..5114), span: StrSpan("<p" 5112..5114) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5115..5120), value: StrSpan("testo_personaggio testo_maiuscoletto" 5122..5158), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5115..5159) }
token: ElementEnd { end: Open, span: StrSpan(">" 5159..5160) }
token: Text { text: StrSpan("Prometeo." 5160..5169) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5171..5172)), span: StrSpan("</p>" 5169..5173) }
token: Text { text: StrSpan("\n" 5173..5174) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5175..5176), span: StrSpan("<p" 5174..5176) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5177..5182), value: StrSpan("testo_dialogo" 5184..5197), span: StrSpan("class=\"testo_dialogo\"" 5177..5198) }
token: ElementEnd { end: Open, span: StrSpan(">" 5198..5199) }
token: Text { text: StrSpan("Tutti avete una rupe, voi uomini. Per questo vi amavo. Ma gli d√®i sono quelli che non sanno la rupe. Non sanno ridere n√© piangere. Sorridono davanti al destino." 5199..5361) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5363..5364)), span: StrSpan("</p>" 5361..5365) }
token: Text { text: StrSpan("\n\n" 5365..5367) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5368..5369), span: StrSpan("<p" 5367..5369) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5370..5375), value: StrSpan("testo_personaggio testo_maiuscoletto" 5377..5413), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5370..5414) }
token: ElementEnd { end: Open, span: StrSpan(">" 5414..5415) }
token: Text { text: StrSpan("Eracle." 5415..5422) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5424..5425)), span: StrSpan("</p>" 5422..5426) }
token: Text { text: StrSpan("\n" 5426..5427) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5428..5429), span: StrSpan("<p" 5427..5429) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5430..5435), value: StrSpan("testo_dialogo" 5437..5450), span: StrSpan("class=\"testo_dialogo\"" 5430..5451) }
token: ElementEnd { end: Open, span: StrSpan(">" 5451..5452) }
token: Text { text: StrSpan("Sono loro che ti hanno inchiodato." 5452..5486) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5488..5489)), span: StrSpan("</p>" 5486..5490) }
token: Text { text: StrSpan("\n\n" 5490..5492) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5493..5494), span: StrSpan("<p" 5492..5494) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5495..5500), value: StrSpan("testo_personaggio testo_maiuscoletto" 5502..5538), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5495..5539) }
token: ElementEnd { end: Open, span: StrSpan(">" 5539..5540) }
token: Text { text: StrSpan("Prometeo." 5540..5549) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5551..5552)), span: StrSpan("</p>" 5549..5553) }
token: Text { text: StrSpan("\n" 5553..5554) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5555..5556), span: StrSpan("<p" 5554..5556) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5557..5562), value: StrSpan("testo_dialogo" 5564..5577), span: StrSpan("class=\"testo_dialogo\"" 5557..5578) }
token: ElementEnd { end: Open, span: StrSpan(">" 5578..5579) }
token: Text { text: StrSpan("Oh Eracle, il vittorioso √® sempre un dio. Fin che l‚Äôuomo-titano combatte e tien duro, pu√≤ ridere e piangere. E se t‚Äôinchiodano, se sali sul monte, quest‚Äô√® la vittoria che il destino ti consente. Dobbiamo esserne grati. Che cos‚Äô√® una vittoria se non piet√† che si fa gesto, che salva gli altri a spese sue? Ciascuno lavora per gli altri, sotto la legge del destino. Io stesso, Eracle, se oggi vengo liberato, lo devo a qualcuno." 5579..6018) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6020..6021)), span: StrSpan("</p>" 6018..6022) }
token: Text { text: StrSpan("\n\n" 6022..6024) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6025..6026), span: StrSpan("<p" 6024..6026) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6027..6032), value: StrSpan("testo_personaggio testo_maiuscoletto" 6034..6070), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6027..6071) }
token: ElementEnd { end: Open, span: StrSpan(">" 6071..6072) }
token: Text { text: StrSpan("Eracle." 6072..6079) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6081..6082)), span: StrSpan("</p>" 6079..6083) }
token: Text { text: StrSpan("\n" 6083..6084) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6085..6086), span: StrSpan("<p" 6084..6086) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6087..6092), value: StrSpan("testo_dialogo" 6094..6107), span: StrSpan("class=\"testo_dialogo\"" 6087..6108) }
token: ElementEnd { end: Open, span: StrSpan(">" 6108..6109) }
token: Text { text: StrSpan("Ne ho vedute di peggio, e non ti ho ancora liberato." 6109..6161) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6163..6164)), span: StrSpan("</p>" 6161..6165) }
token: Text { text: StrSpan("\n\n" 6165..6167) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6168..6169), span: StrSpan("<p" 6167..6169) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6170..6175), value: StrSpan("testo_personaggio testo_maiuscoletto" 6177..6213), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6170..6214) }
token: ElementEnd { end: Open, span: StrSpan(">" 6214..6215) }
token: Text { text: StrSpan("Prometeo." 6215..6224) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6226..6227)), span: StrSpan("</p>" 6224..6228) }
token: Text { text: StrSpan("\n" 6228..6229) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6230..6231), span: StrSpan("<p" 6229..6231) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6232..6237), value: StrSpan("testo_dialogo" 6239..6252), span: StrSpan("class=\"testo_dialogo\"" 6232..6253) }
token: ElementEnd { end: Open, span: StrSpan(">" 6253..6254) }
token: Text { text: StrSpan("Eracle, non parlo di te. Tu sei pietoso e coraggioso. Ma la tua parte l‚Äôhai gi√† fatta." 6254..6343) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6345..6346)), span: StrSpan("</p>" 6343..6347) }
token: Text { text: StrSpan("\n\n" 6347..6349) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6350..6351), span: StrSpan("<p" 6349..6351) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6352..6357), value: StrSpan("testo_personaggio testo_maiuscoletto" 6359..6395), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6352..6396) }
token: ElementEnd { end: Open, span: StrSpan(">" 6396..6397) }
token: Text { text: StrSpan("Eracle." 6397..6404) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6406..6407)), span: StrSpan("</p>" 6404..6408) }
token: Text { text: StrSpan("\n" 6408..6409) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6410..6411), span: StrSpan("<p" 6409..6411) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6412..6417), value: StrSpan("testo_dialogo" 6419..6432), span: StrSpan("class=\"testo_dialogo\"" 6412..6433) }
token: ElementEnd { end: Open, span: StrSpan(">" 6433..6434) }
token: Text { text: StrSpan("Nulla ho fatto, Prometeo." 6434..6459) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6461..6462)), span: StrSpan("</p>" 6459..6463) }
token: Text { text: StrSpan("\n\n" 6463..6465) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6466..6467), span: StrSpan("<p" 6465..6467) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6468..6473), value: StrSpan("testo_personaggio testo_maiuscoletto" 6475..6511), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6468..6512) }
token: ElementEnd { end: Open, span: StrSpan(">" 6512..6513) }
token: Text { text: StrSpan("Prometeo." 6513..6522) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6524..6525)), span: StrSpan("</p>" 6522..6526) }
token: Text { text: StrSpan("\n" 6526..6527) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6528..6529), span: StrSpan("<p" 6527..6529) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6530..6535), value: StrSpan("testo_dialogo" 6537..6550), span: StrSpan("class=\"testo_dialogo\"" 6530..6551) }
token: ElementEnd { end: Open, span: StrSpan(">" 6551..6552) }
token: Text { text: StrSpan("Non saresti un mortale, se sapessi il destino. Ma tu vivi in un mondo di d√®i. E gli d√®i vi hanno tolto anche questo. Non sai nulla e hai gi√† fatto ogni cosa. Ricorda il centauro." 6552..6733) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6735..6736)), span: StrSpan("</p>" 6733..6737) }
token: Text { text: StrSpan("\n\n" 6737..6739) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6740..6741), span: StrSpan("<p" 6739..6741) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6742..6747), value: StrSpan("testo_personaggio testo_maiuscoletto" 6749..6785), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6742..6786) }
token: ElementEnd { end: Open, span: StrSpan(">" 6786..6787) }
token: Text { text: StrSpan("Eracle." 6787..6794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6796..6797)), span: StrSpan("</p>" 6794..6798) }
token: Text { text: StrSpan("\n" 6798..6799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6800..6801), span: StrSpan("<p" 6799..6801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6802..6807), value: StrSpan("testo_dialogo" 6809..6822), span: StrSpan("class=\"testo_dialogo\"" 6802..6823) }
token: ElementEnd { end: Open, span: StrSpan(">" 6823..6824) }
token: Text { text: StrSpan("L‚Äôuomo-belva che ho ucciso stamane?" 6824..6861) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6863..6864)), span: StrSpan("</p>" 6861..6865) }
token: Text { text: StrSpan("\n\n" 6865..6867) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6868..6869), span: StrSpan("<p" 6867..6869) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6870..6875), value: StrSpan("testo_personaggio testo_maiuscoletto" 6877..6913), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6870..6914) }
token: ElementEnd { end: Open, span: StrSpan(">" 6914..6915) }
token: Text { text: StrSpan("Prometeo." 6915..6924) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6926..6927)), span: StrSpan("</p>" 6924..6928) }
token: Text { text: StrSpan("\n" 6928..6929) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6930..6931), span: StrSpan("<p" 6929..6931) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6932..6937), value: StrSpan("testo_dialogo" 6939..6952), span: StrSpan("class=\"testo_dialogo\"" 6932..6953) }
token: ElementEnd { end: Open, span: StrSpan(">" 6953..6954) }
token: Text { text: StrSpan("Non si uccidono, i mostri. Non lo possono nemmeno gli d√®i. Giorno verr√† che crederai di avere ucciso un altro mostro, e pi√∫ bestiale, e avrai soltanto preparato la tua rupe. Sai chi hai colpito stamattina?" 6954..7162) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7164..7165)), span: StrSpan("</p>" 7162..7166) }
token: Text { text: StrSpan("\n\n" 7166..7168) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7169..7170), span: StrSpan("<p" 7168..7170) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7171..7176), value: StrSpan("testo_personaggio testo_maiuscoletto" 7178..7214), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7171..7215) }
token: ElementEnd { end: Open, span: StrSpan(">" 7215..7216) }
token: Text { text: StrSpan("Eracle." 7216..7223) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7225..7226)), span: StrSpan("</p>" 7223..7227) }
token: Text { text: StrSpan("\n" 7227..7228) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7229..7230), span: StrSpan("<p" 7228..7230) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7231..7236), value: StrSpan("testo_dialogo" 7238..7251), span: StrSpan("class=\"testo_dialogo\"" 7231..7252) }
token: ElementEnd { end: Open, span: StrSpan(">" 7252..7253) }
token: Text { text: StrSpan("Il centauro." 7253..7265) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7267..7268)), span: StrSpan("</p>" 7265..7269) }
token: Text { text: StrSpan("\n\n" 7269..7271) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7272..7273), span: StrSpan("<p" 7271..7273) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7274..7279), value: StrSpan("testo_personaggio testo_maiuscoletto" 7281..7317), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7274..7318) }
token: ElementEnd { end: Open, span: StrSpan(">" 7318..7319) }
token: Text { text: StrSpan("Prometeo." 7319..7328) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7330..7331)), span: StrSpan("</p>" 7328..7332) }
token: Text { text: StrSpan("\n" 7332..7333) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7334..7335), span: StrSpan("<p" 7333..7335) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7336..7341), value: StrSpan("testo_dialogo" 7343..7356), span: StrSpan("class=\"testo_dialogo\"" 7336..7357) }
token: ElementEnd { end: Open, span: StrSpan(">" 7357..7358) }
token: Text { text: StrSpan("Hai colpito Chirone, il pietoso, il buon amico dei titani e dei mortali." 7358..7430) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7432..7433)), span: StrSpan("</p>" 7430..7434) }
token: Text { text: StrSpan("\n\n" 7434..7436) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7437..7438), span: StrSpan("<p" 7436..7438) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7439..7444), value: StrSpan("testo_personaggio testo_maiuscoletto" 7446..7482), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7439..7483) }
token: ElementEnd { end: Open, span: StrSpan(">" 7483..7484) }
token: Text { text: StrSpan("Eracle." 7484..7491) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7493..7494)), span: StrSpan("</p>" 7491..7495) }
token: Text { text: StrSpan("\n" 7495..7496) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7497..7498), span: StrSpan("<p" 7496..7498) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7499..7504), value: StrSpan("testo_dialogo" 7506..7519), span: StrSpan("class=\"testo_dialogo\"" 7499..7520) }
token: ElementEnd { end: Open, span: StrSpan(">" 7520..7521) }
token: Text { text: StrSpan("Oh Prometeo‚Ä¶" 7521..7535) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7537..7538)), span: StrSpan("</p>" 7535..7539) }
token: Text { text: StrSpan("\n\n" 7539..7541) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7542..7543), span: StrSpan("<p" 7541..7543) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7544..7549), value: StrSpan("testo_personaggio testo_maiuscoletto" 7551..7587), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7544..7588) }
token: ElementEnd { end: Open, span: StrSpan(">" 7588..7589) }
token: Text { text: StrSpan("Prometeo." 7589..7598) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7600..7601)), span: StrSpan("</p>" 7598..7602) }
token: Text { text: StrSpan("\n" 7602..7603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7604..7605), span: StrSpan("<p" 7603..7605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7606..7611), value: StrSpan("testo_dialogo" 7613..7626), span: StrSpan("class=\"testo_dialogo\"" 7606..7627) }
token: ElementEnd { end: Open, span: StrSpan(">" 7627..7628) }
token: Text { text: StrSpan("Non dolertene, Eracle. Siamo tutti consorti. √à la legge del mondo che nessuno si liberi se per lui non si versa del sangue. Anche per te avverr√† lo stesso, sull‚ÄôOeta. E Chirone sapeva." 7628..7816) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7818..7819)), span: StrSpan("</p>" 7816..7820) }
token: Text { text: StrSpan("\n\n" 7820..7822) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7823..7824), span: StrSpan("<p" 7822..7824) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7825..7830), value: StrSpan("testo_personaggio testo_maiuscoletto" 7832..7868), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7825..7869) }
token: ElementEnd { end: Open, span: StrSpan(">" 7869..7870) }
token: Text { text: StrSpan("Eracle." 7870..7877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7879..7880)), span: StrSpan("</p>" 7877..7881) }
token: Text { text: StrSpan("\n" 7881..7882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7883..7884), span: StrSpan("<p" 7882..7884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7885..7890), value: StrSpan("testo_dialogo" 7892..7905), span: StrSpan("class=\"testo_dialogo\"" 7885..7906) }
token: ElementEnd { end: Open, span: StrSpan(">" 7906..7907) }
token: Text { text: StrSpan("Vuoi dire che si √® offerto?" 7907..7935) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7937..7938)), span: StrSpan("</p>" 7935..7939) }
token: Text { text: StrSpan("\n\n" 7939..7941) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7942..7943), span: StrSpan("<p" 7941..7943) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7944..7949), value: StrSpan("testo_personaggio testo_maiuscoletto" 7951..7987), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7944..7988) }
token: ElementEnd { end: Open, span: StrSpan(">" 7988..7989) }
token: Text { text: StrSpan("Prometeo." 7989..7998) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8000..8001)), span: StrSpan("</p>" 7998..8002) }
token: Text { text: StrSpan("\n" 8002..8003) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8004..8005), span: StrSpan("<p" 8003..8005) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8006..8011), value: StrSpan("testo_dialogo" 8013..8026), span: StrSpan("class=\"testo_dialogo\"" 8006..8027) }
token: ElementEnd { end: Open, span: StrSpan(">" 8027..8028) }
token: Text { text: StrSpan("Certamente. Come un tempo io sapevo che il furto del fuoco sarebbe stato la mia rupe." 8028..8113) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8115..8116)), span: StrSpan("</p>" 8113..8117) }
token: Text { text: StrSpan("\n\n" 8117..8119) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8120..8121), span: StrSpan("<p" 8119..8121) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8122..8127), value: StrSpan("testo_personaggio testo_maiuscoletto" 8129..8165), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8122..8166) }
token: ElementEnd { end: Open, span: StrSpan(">" 8166..8167) }
token: Text { text: StrSpan("Eracle." 8167..8174) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8176..8177)), span: StrSpan("</p>" 8174..8178) }
token: Text { text: StrSpan("\n" 8178..8179) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8180..8181), span: StrSpan("<p" 8179..8181) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8182..8187), value: StrSpan("testo_dialogo" 8189..8202), span: StrSpan("class=\"testo_dialogo\"" 8182..8203) }
token: ElementEnd { end: Open, span: StrSpan(">" 8203..8204) }
token: Text { text: StrSpan("Prometeo, lascia che ti sciolga. Poi dimmi tutto, di Chirone e dell‚ÄôOeta." 8204..8279) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8281..8282)), span: StrSpan("</p>" 8279..8283) }
token: Text { text: StrSpan("\n\n" 8283..8285) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8286..8287), span: StrSpan("<p" 8285..8287) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8288..8293), value: StrSpan("testo_personaggio testo_maiuscoletto" 8295..8331), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8288..8332) }
token: ElementEnd { end: Open, span: StrSpan(">" 8332..8333) }
token: Text { text: StrSpan("Prometeo." 8333..8342) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8344..8345)), span: StrSpan("</p>" 8342..8346) }
token: Text { text: StrSpan("\n" 8346..8347) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8348..8349), span: StrSpan("<p" 8347..8349) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8350..8355), value: StrSpan("testo_dialogo" 8357..8370), span: StrSpan("class=\"testo_dialogo\"" 8350..8371) }
token: ElementEnd { end: Open, span: StrSpan(">" 8371..8372) }
token: Text { text: StrSpan("Sono gi√† sciolto, Eracle. Io potevo esser sciolto soltanto se un altro prendeva il mio posto. E Chirone si √® fatto trafiggere da te, che la sorte mandava. Ma in questo mondo che √® nato dal caos, regna una legge di giustizia. La piet√†, la paura e il coraggio sono solo strumenti. Nulla si fa che non ritorni. Il sangue che tu hai sparso e spargerai, ti spinger√† sul monte Oeta a morir la tua morte. Sar√† il sangue dei mostri che tu vivi a distruggere. E salirai su un rogo, fatto del fuoco che io ho rubato." 8372..8884) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8886..8887)), span: StrSpan("</p>" 8884..8888) }
token: Text { text: StrSpan("\n\n" 8888..8890) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8891..8892), span: StrSpan("<p" 8890..8892) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8893..8898), value: StrSpan("testo_personaggio testo_maiuscoletto" 8900..8936), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8893..8937) }
token: ElementEnd { end: Open, span: StrSpan(">" 8937..8938) }
token: Text { text: StrSpan("Eracle." 8938..8945) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8947..8948)), span: StrSpan("</p>" 8945..8949) }
token: Text { text: StrSpan("\n" 8949..8950) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8951..8952), span: StrSpan("<p" 8950..8952) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8953..8958), value: StrSpan("testo_dialogo" 8960..8973), span: StrSpan("class=\"testo_dialogo\"" 8953..8974) }
token: ElementEnd { end: Open, span: StrSpan(">" 8974..8975) }
token: Text { text: StrSpan("Ma non posso morire, mi hai detto." 8975..9009) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9011..9012)), span: StrSpan("</p>" 9009..9013) }
token: Text { text: StrSpan("\n\n" 9013..9015) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9016..9017), span: StrSpan("<p" 9015..9017) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9018..9023), value: StrSpan("testo_personaggio testo_maiuscoletto" 9025..9061), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9018..9062) }
token: ElementEnd { end: Open, span: StrSpan(">" 9062..9063) }
token: Text { text: StrSpan("Prometeo." 9063..9072) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9074..9075)), span: StrSpan("</p>" 9072..9076) }
token: Text { text: StrSpan("\n" 9076..9077) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9078..9079), span: StrSpan("<p" 9077..9079) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9080..9085), value: StrSpan("testo_dialogo" 9087..9100), span: StrSpan("class=\"testo_dialogo\"" 9080..9101) }
token: ElementEnd { end: Open, span: StrSpan(">" 9101..9102) }
token: Text { text: StrSpan("La morte √® entrata in questo mondo con gli d√®i. Voi mortali temete la morte perch√©, in quanto d√®i, li sapete immortali. Ma ciascuno ha la morte che si merita. Finiranno anche loro." 9102..9286) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9288..9289)), span: StrSpan("</p>" 9286..9290) }
token: Text { text: StrSpan("\n\n" 9290..9292) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9293..9294), span: StrSpan("<p" 9292..9294) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9295..9300), value: StrSpan("testo_personaggio testo_maiuscoletto" 9302..9338), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9295..9339) }
token: ElementEnd { end: Open, span: StrSpan(">" 9339..9340) }
token: Text { text: StrSpan("Eracle." 9340..9347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9349..9350)), span: StrSpan("</p>" 9347..9351) }
token: Text { text: StrSpan("\n" 9351..9352) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9353..9354), span: StrSpan("<p" 9352..9354) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9355..9360), value: StrSpan("testo_dialogo" 9362..9375), span: StrSpan("class=\"testo_dialogo\"" 9355..9376) }
token: ElementEnd { end: Open, span: StrSpan(">" 9376..9377) }
token: Text { text: StrSpan("Come dici?" 9377..9387) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9389..9390)), span: StrSpan("</p>" 9387..9391) }
token: Text { text: StrSpan("\n\n" 9391..9393) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9394..9395), span: StrSpan("<p" 9393..9395) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9396..9401), value: StrSpan("testo_personaggio testo_maiuscoletto" 9403..9439), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9396..9440) }
token: ElementEnd { end: Open, span: StrSpan(">" 9440..9441) }
token: Text { text: StrSpan("Prometeo." 9441..9450) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9452..9453)), span: StrSpan("</p>" 9450..9454) }
token: Text { text: StrSpan("\n" 9454..9455) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9456..9457), span: StrSpan("<p" 9455..9457) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9458..9463), value: StrSpan("testo_dialogo" 9465..9478), span: StrSpan("class=\"testo_dialogo\"" 9458..9479) }
token: ElementEnd { end: Open, span: StrSpan(">" 9479..9480) }
token: Text { text: StrSpan("Tutto non si pu√≤ dire. Ma ric√≤rdati sempre che i mostri non muoiono. Quello che muore √® la paura che t‚Äôincutono. Cos√≠ √® degli d√®i. Quando i mortali non ne avranno pi√∫ paura, gli d√®i spariranno." 9480..9683) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9685..9686)), span: StrSpan("</p>" 9683..9687) }
token: Text { text: StrSpan("\n\n" 9687..9689) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9690..9691), span: StrSpan("<p" 9689..9691) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9692..9697), value: StrSpan("testo_personaggio testo_maiuscoletto" 9699..9735), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9692..9736) }
token: ElementEnd { end: Open, span: StrSpan(">" 9736..9737) }
token: Text { text: StrSpan("Eracle." 9737..9744) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9746..9747)), span: StrSpan("</p>" 9744..9748) }
token: Text { text: StrSpan("\n" 9748..9749) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9750..9751), span: StrSpan("<p" 9749..9751) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9752..9757), value: StrSpan("testo_dialogo" 9759..9772), span: StrSpan("class=\"testo_dialogo\"" 9752..9773) }
token: ElementEnd { end: Open, span: StrSpan(">" 9773..9774) }
token: Text { text: StrSpan("Torneranno i titani?" 9774..9794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9796..9797)), span: StrSpan("</p>" 9794..9798) }
token: Text { text: StrSpan("\n\n" 9798..9800) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9801..9802), span: StrSpan("<p" 9800..9802) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9803..9808), value: StrSpan("testo_personaggio testo_maiuscoletto" 9810..9846), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9803..9847) }
token: ElementEnd { end: Open, span: StrSpan(">" 9847..9848) }
token: Text { text: StrSpan("Prometeo." 9848..9857) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9859..9860)), span: StrSpan("</p>" 9857..9861) }
token: Text { text: StrSpan("\n" 9861..9862) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9863..9864), span: StrSpan("<p" 9862..9864) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9865..9870), value: StrSpan("testo_dialogo" 9872..9885), span: StrSpan("class=\"testo_dialogo\"" 9865..9886) }
token: ElementEnd { end: Open, span: StrSpan(">" 9886..9887) }
token: Text { text: StrSpan("Non ritorneranno i sassi e le selve. Ci sono. Quel che √® stato sar√†." 9887..9957) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9959..9960)), span: StrSpan("</p>" 9957..9961) }
token: Text { text: StrSpan("\n\n" 9961..9963) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9964..9965), span: StrSpan("<p" 9963..9965) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9966..9971), value: StrSpan("testo_personaggio testo_maiuscoletto" 9973..10009), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9966..10010) }
token: ElementEnd { end: Open, span: StrSpan(">" 10010..10011) }
token: Text { text: StrSpan("Eracle." 10011..10018) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10020..10021)), span: StrSpan("</p>" 10018..10022) }
token: Text { text: StrSpan("\n" 10022..10023) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10024..10025), span: StrSpan("<p" 10023..10025) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10026..10031), value: StrSpan("testo_dialogo" 10033..10046), span: StrSpan("class=\"testo_dialogo\"" 10026..10047) }
token: ElementEnd { end: Open, span: StrSpan(">" 10047..10048) }
token: Text { text: StrSpan("Ma foste pure incatenati. Anche tu." 10048..10083) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10085..10086)), span: StrSpan("</p>" 10083..10087) }
token: Text { text: StrSpan("\n\n" 10087..10089) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10090..10091), span: StrSpan("<p" 10089..10091) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10092..10097), value: StrSpan("testo_personaggio testo_maiuscoletto" 10099..10135), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10092..10136) }
token: ElementEnd { end: Open, span: StrSpan(">" 10136..10137) }
token: Text { text: StrSpan("Prometeo." 10137..10146) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10148..10149)), span: StrSpan("</p>" 10146..10150) }
token: Text { text: StrSpan("\n" 10150..10151) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10152..10153), span: StrSpan("<p" 10151..10153) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10154..10159), value: StrSpan("testo_dialogo" 10161..10174), span: StrSpan("class=\"testo_dialogo\"" 10154..10175) }
token: ElementEnd { end: Open, span: StrSpan(">" 10175..10176) }
token: Text { text: StrSpan("Siamo un nome, non altro. Capiscimi, Eracle. E il mondo ha stagioni come i campi e la terra. Ritorna l‚Äôinverno, ritorna l‚Äôestate. Chi pu√≤ dire che la selva perisca? o che duri la stessa? Voi sarete i titani, fra poco." 10176..10398) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10400..10401)), span: StrSpan("</p>" 10398..10402) }
token: Text { text: StrSpan("\n\n" 10402..10404) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10405..10406), span: StrSpan("<p" 10404..10406) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10407..10412), value: StrSpan("testo_personaggio testo_maiuscoletto" 10414..10450), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10407..10451) }
token: ElementEnd { end: Open, span: StrSpan(">" 10451..10452) }
token: Text { text: StrSpan("Eracle." 10452..10459) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10461..10462)), span: StrSpan("</p>" 10459..10463) }
token: Text { text: StrSpan("\n" 10463..10464) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10465..10466), span: StrSpan("<p" 10464..10466) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10467..10472), value: StrSpan("testo_dialogo" 10474..10487), span: StrSpan("class=\"testo_dialogo\"" 10467..10488) }
token: ElementEnd { end: Open, span: StrSpan(">" 10488..10489) }
token: Text { text: StrSpan("Noi mortali?" 10489..10501) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10503..10504)), span: StrSpan("</p>" 10501..10505) }
token: Text { text: StrSpan("\n\n" 10505..10507) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10508..10509), span: StrSpan("<p" 10507..10509) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10510..10515), value: StrSpan("testo_personaggio testo_maiuscoletto" 10517..10553), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10510..10554) }
token: ElementEnd { end: Open, span: StrSpan(">" 10554..10555) }
token: Text { text: StrSpan("Prometeo." 10555..10564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10566..10567)), span: StrSpan("</p>" 10564..10568) }
token: Text { text: StrSpan("\n" 10568..10569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10570..10571), span: StrSpan("<p" 10569..10571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10572..10577), value: StrSpan("testo_dialogo" 10579..10592), span: StrSpan("class=\"testo_dialogo\"" 10572..10593) }
token: ElementEnd { end: Open, span: StrSpan(">" 10593..10594) }
token: Text { text: StrSpan("Voi mortali ‚Äì o immortali, non conta." 10594..10633) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10635..10636)), span: StrSpan("</p>" 10633..10637) }
token: Text { text: StrSpan("\n" 10637..10638) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 10640..10644)), span: StrSpan("</body>" 10638..10645) }
token: Text { text: StrSpan("\n" 10645..10646) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 10648..10652)), span: StrSpan("</html>" 10646..10653) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("L‚Äôinconsolabile" 340..357) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 359..361)), span: StrSpan("</h1>" 357..362) }
token: Text { text: StrSpan("\n\n" 362..364) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 365..366), span: StrSpan("<p" 364..366) }
token: ElementEnd { end: Open, span: StrSpan(">" 366..367) }
token: Text { text: StrSpan("Il sesso, l‚Äôebbrezza e il sangue richiamarono sempre il mondo sotterraneo e promisero a pi√∫ d‚Äôuno beatitudini ctonie. Ma il tracio Orfeo, cantore, viandante nell‚ÄôAde e vittima lacerata come lo stesso Dioniso, valse di pi√∫." 367..597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 599..600)), span: StrSpan("</p>" 597..601) }
token: Text { text: StrSpan("\n\n" 601..603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 604..605), span: StrSpan("<p" 603..605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 606..611), value: StrSpan("testo_indicazioni_scena" 613..636), span: StrSpan("class=\"testo_indicazioni_scena\"" 606..637) }
token: ElementEnd { end: Open, span: StrSpan(">" 637..638) }
token: Text { text: StrSpan("(parlano Orfeo e Bacca)" 638..661) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 663..664)), span: StrSpan("</p>" 661..665) }
token: Text { text: StrSpan("\n\n\n" 665..668) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 669..670), span: StrSpan("<p" 668..670) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 671..676), value: StrSpan("testo_personaggio testo_maiuscoletto" 678..714), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 671..715) }
token: ElementEnd { end: Open, span: StrSpan(">" 715..716) }
token: Text { text: StrSpan("Orfeo." 716..722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 724..725)), span: StrSpan("</p>" 722..726) }
token: Text { text: StrSpan("\n" 726..727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 728..729), span: StrSpan("<p" 727..729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 730..735), value: StrSpan("testo_dialogo" 737..750), span: StrSpan("class=\"testo_dialogo\"" 730..751) }
token: ElementEnd { end: Open, span: StrSpan(">" 751..752) }
token: Text { text: StrSpan("√à andata cos√≠. Salivamo il sentiero tra il bosco delle ombre. Erano gi√† lontani Cocito, lo Stige, la barca, i lamenti. S‚Äôintravvedeva sulle foglie il barlume del cielo. Mi sentivo alle spalle il frusc√≠o del suo passo. Ma io ero ancora laggi√∫ e avevo addosso quel freddo. Pensavo che un giorno avrei dovuto tornarci, che ci√≤ ch‚Äô√® stato sar√† ancora. Pensavo alla vita con lei, com‚Äôera prima; che un‚Äôaltra volta sarebbe finita. Ci√≤ ch‚Äô√® stato sar√†. Pensavo a quel gelo, a quel vuoto che avevo traversato e che lei si portava nelle ossa, nel midollo, nel sangue. Valeva la pena di rivivere ancora? Ci pensai, e intravvidi il barlume del giorno. Allora dissi ¬´" 752..1429) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1430..1431), span: StrSpan("<q" 1429..1431) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1432..1437), value: StrSpan("testo_no_virgolette" 1439..1458), span: StrSpan("class=\"testo_no_virgolette\"" 1432..1459) }
token: ElementEnd { end: Open, span: StrSpan(">" 1459..1460) }
token: Text { text: StrSpan("Sia finita" 1460..1470) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1472..1473)), span: StrSpan("</q>" 1470..1474) }
token: Text { text: StrSpan("¬ª e mi voltai. Euridice scomparve come si spegne una candela. Sentii soltanto un cigol√≠o, come d‚Äôun topo che si salva." 1474..1596) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1598..1599)), span: StrSpan("</p>" 1596..1600) }
token: Text { text: StrSpan("\n\n" 1600..1602) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1603..1604), span: StrSpan("<p" 1602..1604) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1605..1610), value: StrSpan("testo_personaggio testo_maiuscoletto" 1612..1648), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1605..1649) }
token: ElementEnd { end: Open, span: StrSpan(">" 1649..1650) }
token: Text { text: StrSpan("Bacca." 1650..1656) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1658..1659)), span: StrSpan("</p>" 1656..1660) }
token: Text { text: StrSpan("\n" 1660..1661) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1662..1663), span: StrSpan("<p" 1661..1663) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1664..1669), value: StrSpan("testo_dialogo" 1671..1684), span: StrSpan("class=\"testo_dialogo\"" 1664..1685) }
token: ElementEnd { end: Open, span: StrSpan(">" 1685..1686) }
token: Text { text: StrSpan("Strane parole, Orfeo. Quasi non posso crederci. Qui si diceva ch‚Äôeri caro agli d√®i e alle muse. Molte di noi ti seguono perch√© ti sanno innamorato e infelice. Eri tanto innamorato che ‚Äì solo tra gli uomini ‚Äì hai varcato le porte del nulla. No, non ci credo, Orfeo. Non √® stata tua colpa se il destino ti ha tradito." 1686..2010) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2012..2013)), span: StrSpan("</p>" 2010..2014) }
token: Text { text: StrSpan("\n\n" 2014..2016) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2017..2018), span: StrSpan("<p" 2016..2018) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2019..2024), value: StrSpan("testo_personaggio testo_maiuscoletto" 2026..2062), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2019..2063) }
token: ElementEnd { end: Open, span: StrSpan(">" 2063..2064) }
token: Text { text: StrSpan("Orfeo." 2064..2070) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2072..2073)), span: StrSpan("</p>" 2070..2074) }
token: Text { text: StrSpan("\n" 2074..2075) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2076..2077), span: StrSpan("<p" 2075..2077) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2078..2083), value: StrSpan("testo_dialogo" 2085..2098), span: StrSpan("class=\"testo_dialogo\"" 2078..2099) }
token: ElementEnd { end: Open, span: StrSpan(">" 2099..2100) }
token: Text { text: StrSpan("Che c‚Äôentra il destino. Il mio destino non tradisce. Ridicolo che dopo quel viaggio, dopo aver visto in faccia il nulla, io mi voltassi per errore o per capriccio." 2100..2265) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2267..2268)), span: StrSpan("</p>" 2265..2269) }
token: Text { text: StrSpan("\n\n" 2269..2271) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2272..2273), span: StrSpan("<p" 2271..2273) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2274..2279), value: StrSpan("testo_personaggio testo_maiuscoletto" 2281..2317), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2274..2318) }
token: ElementEnd { end: Open, span: StrSpan(">" 2318..2319) }
token: Text { text: StrSpan("Bacca." 2319..2325) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2327..2328)), span: StrSpan("</p>" 2325..2329) }
token: Text { text: StrSpan("\n" 2329..2330) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2331..2332), span: StrSpan("<p" 2330..2332) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2333..2338), value: StrSpan("testo_dialogo" 2340..2353), span: StrSpan("class=\"testo_dialogo\"" 2333..2354) }
token: ElementEnd { end: Open, span: StrSpan(">" 2354..2355) }
token: Text { text: StrSpan("Qui si dice che fu per amore." 2355..2384) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2386..2387)), span: StrSpan("</p>" 2384..2388) }
token: Text { text: StrSpan("\n\n" 2388..2390) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2391..2392), span: StrSpan("<p" 2390..2392) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2393..2398), value: StrSpan("testo_personaggio testo_maiuscoletto" 2400..2436), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2393..2437) }
token: ElementEnd { end: Open, span: StrSpan(">" 2437..2438) }
token: Text { text: StrSpan("Orfeo." 2438..2444) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2446..2447)), span: StrSpan("</p>" 2444..2448) }
token: Text { text: StrSpan("\n" 2448..2449) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2450..2451), span: StrSpan("<p" 2449..2451) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2452..2457), value: StrSpan("testo_dialogo" 2459..2472), span: StrSpan("class=\"testo_dialogo\"" 2452..2473) }
token: ElementEnd { end: Open, span: StrSpan(">" 2473..2474) }
token: Text { text: StrSpan("Non si ama chi √® morto." 2474..2498) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2500..2501)), span: StrSpan("</p>" 2498..2502) }
token: Text { text: StrSpan("\n\n" 2502..2504) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2505..2506), span: StrSpan("<p" 2504..2506) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2507..2512), value: StrSpan("testo_personaggio testo_maiuscoletto" 2514..2550), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2507..2551) }
token: ElementEnd { end: Open, span: StrSpan(">" 2551..2552) }
token: Text { text: StrSpan("Bacca." 2552..2558) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2560..2561)), span: StrSpan("</p>" 2558..2562) }
token: Text { text: StrSpan("\n" 2562..2563) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2564..2565), span: StrSpan("<p" 2563..2565) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2566..2571), value: StrSpan("testo_dialogo" 2573..2586), span: StrSpan("class=\"testo_dialogo\"" 2566..2587) }
token: ElementEnd { end: Open, span: StrSpan(">" 2587..2588) }
token: Text { text: StrSpan("Eppure hai pianto per monti e colline ‚Äì l‚Äôhai cercata e chiamata ‚Äì sei disceso nell‚ÄôAde. Questo cos‚Äôera?" 2588..2702) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2704..2705)), span: StrSpan("</p>" 2702..2706) }
token: Text { text: StrSpan("\n\n" 2706..2708) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2709..2710), span: StrSpan("<p" 2708..2710) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2711..2716), value: StrSpan("testo_personaggio testo_maiuscoletto" 2718..2754), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2711..2755) }
token: ElementEnd { end: Open, span: StrSpan(">" 2755..2756) }
token: Text { text: StrSpan("Orfeo." 2756..2762) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2764..2765)), span: StrSpan("</p>" 2762..2766) }
token: Text { text: StrSpan("\n" 2766..2767) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2768..2769), span: StrSpan("<p" 2767..2769) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2770..2775), value: StrSpan("testo_dialogo" 2777..2790), span: StrSpan("class=\"testo_dialogo\"" 2770..2791) }
token: ElementEnd { end: Open, span: StrSpan(">" 2791..2792) }
token: Text { text: StrSpan("Tu dici che sei come un uomo. Sappi dunque che un uomo non sa che farsi della morte. L‚ÄôEuridice che ho pianto era una stagione della vita. Io cercavo ben altro laggi√∫ che il suo amore. Cercavo un passato che Euridice non sa. L‚Äôho capito tra i morti mentre cantavo il mio canto. Ho visto le ombre irrigidirsi e guardar vuoto, i lamenti cessare, Persef√≤ne nascondersi il volto, lo stesso tenebroso-impassibile, Ade, protendersi come un mortale e ascoltare. Ho capito che i morti non sono pi√∫ nulla." 2792..3295) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3297..3298)), span: StrSpan("</p>" 3295..3299) }
token: Text { text: StrSpan("\n\n" 3299..3301) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3302..3303), span: StrSpan("<p" 3301..3303) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3304..3309), value: StrSpan("testo_personaggio testo_maiuscoletto" 3311..3347), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3304..3348) }
token: ElementEnd { end: Open, span: StrSpan(">" 3348..3349) }
token: Text { text: StrSpan("Bacca." 3349..3355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3357..3358)), span: StrSpan("</p>" 3355..3359) }
token: Text { text: StrSpan("\n" 3359..3360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3361..3362), span: StrSpan("<p" 3360..3362) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3363..3368), value: StrSpan("testo_dialogo" 3370..3383), span: StrSpan("class=\"testo_dialogo\"" 3363..3384) }
token: ElementEnd { end: Open, span: StrSpan(">" 3384..3385) }
token: Text { text: StrSpan("Il dolore ti ha stravolto, Orfeo. Chi non rivorrebbe il passato? Euridice era quasi rinata." 3385..3476) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3478..3479)), span: StrSpan("</p>" 3476..3480) }
token: Text { text: StrSpan("\n\n" 3480..3482) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3483..3484), span: StrSpan("<p" 3482..3484) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3485..3490), value: StrSpan("testo_personaggio testo_maiuscoletto" 3492..3528), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3485..3529) }
token: ElementEnd { end: Open, span: StrSpan(">" 3529..3530) }
token: Text { text: StrSpan("Orfeo." 3530..3536) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3538..3539)), span: StrSpan("</p>" 3536..3540) }
token: Text { text: StrSpan("\n" 3540..3541) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3542..3543), span: StrSpan("<p" 3541..3543) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3544..3549), value: StrSpan("testo_dialogo" 3551..3564), span: StrSpan("class=\"testo_dialogo\"" 3544..3565) }
token: ElementEnd { end: Open, span: StrSpan(">" 3565..3566) }
token: Text { text: StrSpan("Per poi morire un‚Äôaltra volta, Bacca. Per portarsi nel sangue l‚Äôorrore dell‚ÄôAde e tremare con me giorno e notte. Tu non sai cos‚Äô√® il nulla." 3566..3714) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3716..3717)), span: StrSpan("</p>" 3714..3718) }
token: Text { text: StrSpan("\n\n" 3718..3720) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3721..3722), span: StrSpan("<p" 3720..3722) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3723..3728), value: StrSpan("testo_personaggio testo_maiuscoletto" 3730..3766), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3723..3767) }
token: ElementEnd { end: Open, span: StrSpan(">" 3767..3768) }
token: Text { text: StrSpan("Bacca." 3768..3774) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3776..3777)), span: StrSpan("</p>" 3774..3778) }
token: Text { text: StrSpan("\n" 3778..3779) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3780..3781), span: StrSpan("<p" 3779..3781) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3782..3787), value: StrSpan("testo_dialogo" 3789..3802), span: StrSpan("class=\"testo_dialogo\"" 3782..3803) }
token: ElementEnd { end: Open, span: StrSpan(">" 3803..3804) }
token: Text { text: StrSpan("E cos√≠ tu che cantando avevi riavuto il passato, l‚Äôhai respinto e distrutto. No, non ci posso credere." 3804..3909) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3911..3912)), span: StrSpan("</p>" 3909..3913) }
token: Text { text: StrSpan("\n\n" 3913..3915) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3916..3917), span: StrSpan("<p" 3915..3917) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3918..3923), value: StrSpan("testo_personaggio testo_maiuscoletto" 3925..3961), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3918..3962) }
token: ElementEnd { end: Open, span: StrSpan(">" 3962..3963) }
token: Text { text: StrSpan("Orfeo." 3963..3969) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3971..3972)), span: StrSpan("</p>" 3969..3973) }
token: Text { text: StrSpan("\n" 3973..3974) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3975..3976), span: StrSpan("<p" 3974..3976) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3977..3982), value: StrSpan("testo_dialogo" 3984..3997), span: StrSpan("class=\"testo_dialogo\"" 3977..3998) }
token: ElementEnd { end: Open, span: StrSpan(">" 3998..3999) }
token: Text { text: StrSpan("Capiscimi, Bacca. Fu un vero passato soltanto nel canto. L‚ÄôAde vide se stesso soltanto ascoltandomi. Gi√† salendo il sentiero quel passato svaniva, si faceva ricordo, sapeva di morte. Quando mi giunse il primo barlume di cielo, trasalii come un ragazzo, felice e incredulo, trasalii per me solo, per il mondo dei vivi. La stagione che avevo cercato era l√† in quel barlume. Non m‚Äôimport√≤ nulla di lei che mi seguiva. Il mio passato fu il chiarore, fu il canto e il mattino. E mi voltai." 3999..4490) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4492..4493)), span: StrSpan("</p>" 4490..4494) }
token: Text { text: StrSpan("\n\n" 4494..4496) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4497..4498), span: StrSpan("<p" 4496..4498) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4499..4504), value: StrSpan("testo_personaggio testo_maiuscoletto" 4506..4542), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4499..4543) }
token: ElementEnd { end: Open, span: StrSpan(">" 4543..4544) }
token: Text { text: StrSpan("Bacca." 4544..4550) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4552..4553)), span: StrSpan("</p>" 4550..4554) }
token: Text { text: StrSpan("\n" 4554..4555) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4556..4557), span: StrSpan("<p" 4555..4557) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4558..4563), value: StrSpan("testo_dialogo" 4565..4578), span: StrSpan("class=\"testo_dialogo\"" 4558..4579) }
token: ElementEnd { end: Open, span: StrSpan(">" 4579..4580) }
token: Text { text: StrSpan("Come hai potuto rassegnarti, Orfeo? Chi ti ha visto al ritorno facevi paura. Euridice era stata per te un‚Äôesistenza." 4580..4698) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4700..4701)), span: StrSpan("</p>" 4698..4702) }
token: Text { text: StrSpan("\n\n" 4702..4704) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4705..4706), span: StrSpan("<p" 4704..4706) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4707..4712), value: StrSpan("testo_personaggio testo_maiuscoletto" 4714..4750), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4707..4751) }
token: ElementEnd { end: Open, span: StrSpan(">" 4751..4752) }
token: Text { text: StrSpan("Orfeo." 4752..4758) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4760..4761)), span: StrSpan("</p>" 4758..4762) }
token: Text { text: StrSpan("\n" 4762..4763) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4764..4765), span: StrSpan("<p" 4763..4765) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4766..4771), value: StrSpan("testo_dialogo" 4773..4786), span: StrSpan("class=\"testo_dialogo\"" 4766..4787) }
token: ElementEnd { end: Open, span: StrSpan(">" 4787..4788) }
token: Text { text: StrSpan("Sciocchezze. Euridice morendo divenne altra cosa. Quell‚ÄôOrfeo che discese nell‚ÄôAde, non era pi√∫ sposo n√© vedovo. Il mio pianto d‚Äôallora fu come i pianti che si fanno da ragazzo e si sorride a ricordarli. La stagione √® passata. Io cercavo, piangendo, non pi√∫ lei ma me stesso. Un destino, se vuoi. Mi ascoltavo." 4788..5108) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5110..5111)), span: StrSpan("</p>" 5108..5112) }
token: Text { text: StrSpan("\n\n" 5112..5114) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5115..5116), span: StrSpan("<p" 5114..5116) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5117..5122), value: StrSpan("testo_personaggio testo_maiuscoletto" 5124..5160), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5117..5161) }
token: ElementEnd { end: Open, span: StrSpan(">" 5161..5162) }
token: Text { text: StrSpan("Bacca." 5162..5168) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5170..5171)), span: StrSpan("</p>" 5168..5172) }
token: Text { text: StrSpan("\n" 5172..5173) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5174..5175), span: StrSpan("<p" 5173..5175) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5176..5181), value: StrSpan("testo_dialogo" 5183..5196), span: StrSpan("class=\"testo_dialogo\"" 5176..5197) }
token: ElementEnd { end: Open, span: StrSpan(">" 5197..5198) }
token: Text { text: StrSpan("Molte di noi ti vengon dietro perch√© credevano a questo tuo pianto. Tu ci hai dunque ingannate?" 5198..5294) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5296..5297)), span: StrSpan("</p>" 5294..5298) }
token: Text { text: StrSpan("\n\n" 5298..5300) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5301..5302), span: StrSpan("<p" 5300..5302) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5303..5308), value: StrSpan("testo_personaggio testo_maiuscoletto" 5310..5346), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5303..5347) }
token: ElementEnd { end: Open, span: StrSpan(">" 5347..5348) }
token: Text { text: StrSpan("Orfeo." 5348..5354) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5356..5357)), span: StrSpan("</p>" 5354..5358) }
token: Text { text: StrSpan("\n" 5358..5359) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5360..5361), span: StrSpan("<p" 5359..5361) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5362..5367), value: StrSpan("testo_dialogo" 5369..5382), span: StrSpan("class=\"testo_dialogo\"" 5362..5383) }
token: ElementEnd { end: Open, span: StrSpan(">" 5383..5384) }
token: Text { text: StrSpan("O Bacca, Bacca, non vuoi proprio capire? Il mio destino non tradisce. Ho cercato me stesso. Non si cerca che questo." 5384..5500) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5502..5503)), span: StrSpan("</p>" 5500..5504) }
token: Text { text: StrSpan("\n\n" 5504..5506) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5507..5508), span: StrSpan("<p" 5506..5508) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5509..5514), value: StrSpan("testo_personaggio testo_maiuscoletto" 5516..5552), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5509..5553) }
token: ElementEnd { end: Open, span: StrSpan(">" 5553..5554) }
token: Text { text: StrSpan("Bacca." 5554..5560) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5562..5563)), span: StrSpan("</p>" 5560..5564) }
token: Text { text: StrSpan("\n" 5564..5565) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5566..5567), span: StrSpan("<p" 5565..5567) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5568..5573), value: StrSpan("testo_dialogo" 5575..5588), span: StrSpan("class=\"testo_dialogo\"" 5568..5589) }
token: ElementEnd { end: Open, span: StrSpan(">" 5589..5590) }
token: Text { text: StrSpan("Qui noi siamo pi√∫ semplici, Orfeo. Qui crediamo all‚Äôamore e alla morte, e piangiamo e ridiamo con tutti. Le nostre feste pi√∫ gioiose sono quelle dove scorre del sangue. Noi, le donne di Tracia, non le temiamo queste cose." 5590..5815) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5817..5818)), span: StrSpan("</p>" 5815..5819) }
token: Text { text: StrSpan("\n\n" 5819..5821) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5822..5823), span: StrSpan("<p" 5821..5823) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5824..5829), value: StrSpan("testo_personaggio testo_maiuscoletto" 5831..5867), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5824..5868) }
token: ElementEnd { end: Open, span: StrSpan(">" 5868..5869) }
token: Text { text: StrSpan("Orfeo." 5869..5875) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5877..5878)), span: StrSpan("</p>" 5875..5879) }
token: Text { text: StrSpan("\n" 5879..5880) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5881..5882), span: StrSpan("<p" 5880..5882) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5883..5888), value: StrSpan("testo_dialogo" 5890..5903), span: StrSpan("class=\"testo_dialogo\"" 5883..5904) }
token: ElementEnd { end: Open, span: StrSpan(">" 5904..5905) }
token: Text { text: StrSpan("Visto dal lato della vita tutto √® bello. Ma credi a chi √® stato tra i morti‚Ä¶ Non vale la pena." 5905..6003) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6005..6006)), span: StrSpan("</p>" 6003..6007) }
token: Text { text: StrSpan("\n\n" 6007..6009) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6010..6011), span: StrSpan("<p" 6009..6011) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6012..6017), value: StrSpan("testo_personaggio testo_maiuscoletto" 6019..6055), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6012..6056) }
token: ElementEnd { end: Open, span: StrSpan(">" 6056..6057) }
token: Text { text: StrSpan("Bacca." 6057..6063) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6065..6066)), span: StrSpan("</p>" 6063..6067) }
token: Text { text: StrSpan("\n" 6067..6068) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6069..6070), span: StrSpan("<p" 6068..6070) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6071..6076), value: StrSpan("testo_dialogo" 6078..6091), span: StrSpan("class=\"testo_dialogo\"" 6071..6092) }
token: ElementEnd { end: Open, span: StrSpan(">" 6092..6093) }
token: Text { text: StrSpan("Un tempo non eri cos√≠. Non parlavi del nulla. Accostare la morte ci fa simili agli d√®i. Tu stesso insegnavi che un‚Äôebbrezza travolge la vita e la morte e ci fa pi√∫ che umani‚Ä¶ Tu hai veduto la festa." 6093..6298) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6300..6301)), span: StrSpan("</p>" 6298..6302) }
token: Text { text: StrSpan("\n\n" 6302..6304) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6305..6306), span: StrSpan("<p" 6304..6306) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6307..6312), value: StrSpan("testo_personaggio testo_maiuscoletto" 6314..6350), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6307..6351) }
token: ElementEnd { end: Open, span: StrSpan(">" 6351..6352) }
token: Text { text: StrSpan("Orfeo." 6352..6358) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6360..6361)), span: StrSpan("</p>" 6358..6362) }
token: Text { text: StrSpan("\n" 6362..6363) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6364..6365), span: StrSpan("<p" 6363..6365) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6366..6371), value: StrSpan("testo_dialogo" 6373..6386), span: StrSpan("class=\"testo_dialogo\"" 6366..6387) }
token: ElementEnd { end: Open, span: StrSpan(">" 6387..6388) }
token: Text { text: StrSpan("Non √® il sangue ci√≤ che conta, ragazza. N√© l‚Äôebbrezza n√© il sangue mi fanno impressione. Ma che cosa sia un uomo √® ben difficile dirlo. Neanche tu, Bacca, lo sai." 6388..6557) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6559..6560)), span: StrSpan("</p>" 6557..6561) }
token: Text { text: StrSpan("\n\n" 6561..6563) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6564..6565), span: StrSpan("<p" 6563..6565) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6566..6571), value: StrSpan("testo_personaggio testo_maiuscoletto" 6573..6609), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6566..6610) }
token: ElementEnd { end: Open, span: StrSpan(">" 6610..6611) }
token: Text { text: StrSpan("Bacca." 6611..6617) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6619..6620)), span: StrSpan("</p>" 6617..6621) }
token: Text { text: StrSpan("\n" 6621..6622) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6623..6624), span: StrSpan("<p" 6622..6624) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6625..6630), value: StrSpan("testo_dialogo" 6632..6645), span: StrSpan("class=\"testo_dialogo\"" 6625..6646) }
token: ElementEnd { end: Open, span: StrSpan(">" 6646..6647) }
token: Text { text: StrSpan("Senza di noi saresti nulla, Orfeo." 6647..6681) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6683..6684)), span: StrSpan("</p>" 6681..6685) }
token: Text { text: StrSpan("\n\n" 6685..6687) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6688..6689), span: StrSpan("<p" 6687..6689) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6690..6695), value: StrSpan("testo_personaggio testo_maiuscoletto" 6697..6733), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6690..6734) }
token: ElementEnd { end: Open, span: StrSpan(">" 6734..6735) }
token: Text { text: StrSpan("Orfeo." 6735..6741) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6743..6744)), span: StrSpan("</p>" 6741..6745) }
token: Text { text: StrSpan("\n" 6745..6746) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6747..6748), span: StrSpan("<p" 6746..6748) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6749..6754), value: StrSpan("testo_dialogo" 6756..6769), span: StrSpan("class=\"testo_dialogo\"" 6749..6770) }
token: ElementEnd { end: Open, span: StrSpan(">" 6770..6771) }
token: Text { text: StrSpan("Lo dicevo e lo so. Ma poi che importa? Senza di voi sono disceso all‚ÄôAde‚Ä¶" 6771..6848) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6850..6851)), span: StrSpan("</p>" 6848..6852) }
token: Text { text: StrSpan("\n\n" 6852..6854) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6855..6856), span: StrSpan("<p" 6854..6856) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6857..6862), value: StrSpan("testo_personaggio testo_maiuscoletto" 6864..6900), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6857..6901) }
token: ElementEnd { end: Open, span: StrSpan(">" 6901..6902) }
token: Text { text: StrSpan("Bacca." 6902..6908) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6910..6911)), span: StrSpan("</p>" 6908..6912) }
token: Text { text: StrSpan("\n" 6912..6913) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6914..6915), span: StrSpan("<p" 6913..6915) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6916..6921), value: StrSpan("testo_dialogo" 6923..6936), span: StrSpan("class=\"testo_dialogo\"" 6916..6937) }
token: ElementEnd { end: Open, span: StrSpan(">" 6937..6938) }
token: Text { text: StrSpan("Sei disceso a cercarci." 6938..6961) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6963..6964)), span: StrSpan("</p>" 6961..6965) }
token: Text { text: StrSpan("\n\n" 6965..6967) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6968..6969), span: StrSpan("<p" 6967..6969) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6970..6975), value: StrSpan("testo_personaggio testo_maiuscoletto" 6977..7013), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6970..7014) }
token: ElementEnd { end: Open, span: StrSpan(">" 7014..7015) }
token: Text { text: StrSpan("Orfeo." 7015..7021) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7023..7024)), span: StrSpan("</p>" 7021..7025) }
token: Text { text: StrSpan("\n" 7025..7026) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7027..7028), span: StrSpan("<p" 7026..7028) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7029..7034), value: StrSpan("testo_dialogo" 7036..7049), span: StrSpan("class=\"testo_dialogo\"" 7029..7050) }
token: ElementEnd { end: Open, span: StrSpan(">" 7050..7051) }
token: Text { text: StrSpan("Ma non vi ho trovate. Volevo tutt‚Äôaltro. Che tornando alla luce ho trovato." 7051..7128) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7130..7131)), span: StrSpan("</p>" 7128..7132) }
token: Text { text: StrSpan("\n\n" 7132..7134) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7135..7136), span: StrSpan("<p" 7134..7136) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7137..7142), value: StrSpan("testo_personaggio testo_maiuscoletto" 7144..7180), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7137..7181) }
token: ElementEnd { end: Open, span: StrSpan(">" 7181..7182) }
token: Text { text: StrSpan("Bacca." 7182..7188) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7190..7191)), span: StrSpan("</p>" 7188..7192) }
token: Text { text: StrSpan("\n" 7192..7193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7194..7195), span: StrSpan("<p" 7193..7195) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7196..7201), value: StrSpan("testo_dialogo" 7203..7216), span: StrSpan("class=\"testo_dialogo\"" 7196..7217) }
token: ElementEnd { end: Open, span: StrSpan(">" 7217..7218) }
token: Text { text: StrSpan("Un tempo cantavi Euridice sui monti‚Ä¶" 7218..7256) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7258..7259)), span: StrSpan("</p>" 7256..7260) }
token: Text { text: StrSpan("\n\n" 7260..7262) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7263..7264), span: StrSpan("<p" 7262..7264) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7265..7270), value: StrSpan("testo_personaggio testo_maiuscoletto" 7272..7308), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7265..7309) }
token: ElementEnd { end: Open, span: StrSpan(">" 7309..7310) }
token: Text { text: StrSpan("Orfeo." 7310..7316) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7318..7319)), span: StrSpan("</p>" 7316..7320) }
token: Text { text: StrSpan("\n" 7320..7321) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7322..7323), span: StrSpan("<p" 7321..7323) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7324..7329), value: StrSpan("testo_dialogo" 7331..7344), span: StrSpan("class=\"testo_dialogo\"" 7324..7345) }
token: ElementEnd { end: Open, span: StrSpan(">" 7345..7346) }
token: Text { text: StrSpan("Il tempo passa, Bacca. Ci sono i monti, non c‚Äô√® pi√∫ Euridice. Queste cose hanno un nome, e si chiamano uomo. Invocare gli d√®i della festa qui non serve." 7346..7503) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7505..7506)), span: StrSpan("</p>" 7503..7507) }
token: Text { text: StrSpan("\n\n" 7507..7509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7510..7511), span: StrSpan("<p" 7509..7511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7512..7517), value: StrSpan("testo_personaggio testo_maiuscoletto" 7519..7555), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7512..7556) }
token: ElementEnd { end: Open, span: StrSpan(">" 7556..7557) }
token: Text { text: StrSpan("Bacca." 7557..7563) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7565..7566)), span: StrSpan("</p>" 7563..7567) }
token: Text { text: StrSpan("\n" 7567..7568) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7569..7570), span: StrSpan("<p" 7568..7570) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7571..7576), value: StrSpan("testo_dialogo" 7578..7591), span: StrSpan("class=\"testo_dialogo\"" 7571..7592) }
token: ElementEnd { end: Open, span: StrSpan(">" 7592..7593) }
token: Text { text: StrSpan("Anche tu li invocavi." 7593..7614) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7616..7617)), span: StrSpan("</p>" 7614..7618) }
token: Text { text: StrSpan("\n\n" 7618..7620) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7621..7622), span: StrSpan("<p" 7620..7622) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7623..7628), value: StrSpan("testo_personaggio testo_maiuscoletto" 7630..7666), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7623..7667) }
token: ElementEnd { end: Open, span: StrSpan(">" 7667..7668) }
token: Text { text: StrSpan("Orfeo." 7668..7674) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7676..7677)), span: StrSpan("</p>" 7674..7678) }
token: Text { text: StrSpan("\n" 7678..7679) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7680..7681), span: StrSpan("<p" 7679..7681) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7682..7687), value: StrSpan("testo_dialogo" 7689..7702), span: StrSpan("class=\"testo_dialogo\"" 7682..7703) }
token: ElementEnd { end: Open, span: StrSpan(">" 7703..7704) }
token: Text { text: StrSpan("Tutto fa un uomo, nella vita. Tutto crede, nei giorni. Crede perfino che il suo sangue scorra alle volte in vene altrui. O che quello che √® stato si possa disfare. Crede di rompere il destino con l‚Äôebbrezza. Tutto questo lo so, e non √® nulla." 7704..7950) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7952..7953)), span: StrSpan("</p>" 7950..7954) }
token: Text { text: StrSpan("\n\n" 7954..7956) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7957..7958), span: StrSpan("<p" 7956..7958) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7959..7964), value: StrSpan("testo_personaggio testo_maiuscoletto" 7966..8002), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7959..8003) }
token: ElementEnd { end: Open, span: StrSpan(">" 8003..8004) }
token: Text { text: StrSpan("Bacca." 8004..8010) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8012..8013)), span: StrSpan("</p>" 8010..8014) }
token: Text { text: StrSpan("\n" 8014..8015) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8016..8017), span: StrSpan("<p" 8015..8017) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8018..8023), value: StrSpan("testo_dialogo" 8025..8038), span: StrSpan("class=\"testo_dialogo\"" 8018..8039) }
token: ElementEnd { end: Open, span: StrSpan(">" 8039..8040) }
token: Text { text: StrSpan("Non sai che farti della morte, Orfeo, e il tuo pensiero √® solo morte. Ci fu un tempo che la festa ci rendeva immortali." 8040..8160) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8162..8163)), span: StrSpan("</p>" 8160..8164) }
token: Text { text: StrSpan("\n\n" 8164..8166) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8167..8168), span: StrSpan("<p" 8166..8168) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8169..8174), value: StrSpan("testo_personaggio testo_maiuscoletto" 8176..8212), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8169..8213) }
token: ElementEnd { end: Open, span: StrSpan(">" 8213..8214) }
token: Text { text: StrSpan("Orfeo." 8214..8220) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8222..8223)), span: StrSpan("</p>" 8220..8224) }
token: Text { text: StrSpan("\n" 8224..8225) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8226..8227), span: StrSpan("<p" 8225..8227) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8228..8233), value: StrSpan("testo_dialogo" 8235..8248), span: StrSpan("class=\"testo_dialogo\"" 8228..8249) }
token: ElementEnd { end: Open, span: StrSpan(">" 8249..8250) }
token: Text { text: StrSpan("E voi godetela la festa. Tutto √® lecito a chi non sa ancora. √à necessario che ciascuno scenda una volta nel suo inferno. L‚Äôorgia del mio destino √® finita nell‚ÄôAde, finita cantando secondo i miei modi la vita e la morte." 8250..8476) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8478..8479)), span: StrSpan("</p>" 8476..8480) }
token: Text { text: StrSpan("\n\n" 8480..8482) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8483..8484), span: StrSpan("<p" 8482..8484) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8485..8490), value: StrSpan("testo_personaggio testo_maiuscoletto" 8492..8528), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8485..8529) }
token: ElementEnd { end: Open, span: StrSpan(">" 8529..8530) }
token: Text { text: StrSpan("Bacca." 8530..8536) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8538..8539)), span: StrSpan("</p>" 8536..8540) }
token: Text { text: StrSpan("\n" 8540..8541) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8542..8543), span: StrSpan("<p" 8541..8543) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8544..8549), value: StrSpan("testo_dialogo" 8551..8564), span: StrSpan("class=\"testo_dialogo\"" 8544..8565) }
token: ElementEnd { end: Open, span: StrSpan(">" 8565..8566) }
token: Text { text: StrSpan("E che vuol dire che un destino non tradisce?" 8566..8610) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8612..8613)), span: StrSpan("</p>" 8610..8614) }
token: Text { text: StrSpan("\n\n" 8614..8616) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8617..8618), span: StrSpan("<p" 8616..8618) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8619..8624), value: StrSpan("testo_personaggio testo_maiuscoletto" 8626..8662), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8619..8663) }
token: ElementEnd { end: Open, span: StrSpan(">" 8663..8664) }
token: Text { text: StrSpan("Orfeo." 8664..8670) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8672..8673)), span: StrSpan("</p>" 8670..8674) }
token: Text { text: StrSpan("\n" 8674..8675) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8676..8677), span: StrSpan("<p" 8675..8677) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8678..8683), value: StrSpan("testo_dialogo" 8685..8698), span: StrSpan("class=\"testo_dialogo\"" 8678..8699) }
token: ElementEnd { end: Open, span: StrSpan(">" 8699..8700) }
token: Text { text: StrSpan("Vuol dire che √® dentro di te, cosa tua; pi√∫ profondo del sangue, di l√† da ogni ebbrezza. Nessun dio pu√≤ toccarlo." 8700..8817) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8819..8820)), span: StrSpan("</p>" 8817..8821) }
token: Text { text: StrSpan("\n\n" 8821..8823) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8824..8825), span: StrSpan("<p" 8823..8825) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8826..8831), value: StrSpan("testo_personaggio testo_maiuscoletto" 8833..8869), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8826..8870) }
token: ElementEnd { end: Open, span: StrSpan(">" 8870..8871) }
token: Text { text: StrSpan("Bacca." 8871..8877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8879..8880)), span: StrSpan("</p>" 8877..8881) }
token: Text { text: StrSpan("\n" 8881..8882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8883..8884), span: StrSpan("<p" 8882..8884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8885..8890), value: StrSpan("testo_dialogo" 8892..8905), span: StrSpan("class=\"testo_dialogo\"" 8885..8906) }
token: ElementEnd { end: Open, span: StrSpan(">" 8906..8907) }
token: Text { text: StrSpan("Pu√≤ darsi, Orfeo. Ma noi non cerchiamo nessuna Euridice. Com‚Äô√® dunque che scendiamo all‚Äôinferno anche noi?" 8907..9019) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9021..9022)), span: StrSpan("</p>" 9019..9023) }
token: Text { text: StrSpan("\n\n" 9023..9025) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9026..9027), span: StrSpan("<p" 9025..9027) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9028..9033), value: StrSpan("testo_personaggio testo_maiuscoletto" 9035..9071), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9028..9072) }
token: ElementEnd { end: Open, span: StrSpan(">" 9072..9073) }
token: Text { text: StrSpan("Orfeo." 9073..9079) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9081..9082)), span: StrSpan("</p>" 9079..9083) }
token: Text { text: StrSpan("\n" 9083..9084) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9085..9086), span: StrSpan("<p" 9084..9086) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9087..9092), value: StrSpan("testo_dialogo" 9094..9107), span: StrSpan("class=\"testo_dialogo\"" 9087..9108) }
token: ElementEnd { end: Open, span: StrSpan(">" 9108..9109) }
token: Text { text: StrSpan("Tutte le volte che s‚Äôinvoca un dio si conosce la morte. E si scende nell‚ÄôAde a strappare qualcosa, a violare un destino. Non si vince la notte, e si perde la luce. Ci si dibatte come ossessi." 9109..9304) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9306..9307)), span: StrSpan("</p>" 9304..9308) }
token: Text { text: StrSpan("\n\n" 9308..9310) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9311..9312), span: StrSpan("<p" 9310..9312) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9313..9318), value: StrSpan("testo_personaggio testo_maiuscoletto" 9320..9356), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9313..9357) }
token: ElementEnd { end: Open, span: StrSpan(">" 9357..9358) }
token: Text { text: StrSpan("Bacca." 9358..9364) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9366..9367)), span: StrSpan("</p>" 9364..9368) }
token: Text { text: StrSpan("\n" 9368..9369) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9370..9371), span: StrSpan("<p" 9369..9371) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9372..9377), value: StrSpan("testo_dialogo" 9379..9392), span: StrSpan("class=\"testo_dialogo\"" 9372..9393) }
token: ElementEnd { end: Open, span: StrSpan(">" 9393..9394) }
token: Text { text: StrSpan("Dici cose cattive‚Ä¶ Dunque hai perso la luce anche tu?" 9394..9449) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9451..9452)), span: StrSpan("</p>" 9449..9453) }
token: Text { text: StrSpan("\n\n" 9453..9455) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9456..9457), span: StrSpan("<p" 9455..9457) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9458..9463), value: StrSpan("testo_personaggio testo_maiuscoletto" 9465..9501), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9458..9502) }
token: ElementEnd { end: Open, span: StrSpan(">" 9502..9503) }
token: Text { text: StrSpan("Orfeo." 9503..9509) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9511..9512)), span: StrSpan("</p>" 9509..9513) }
token: Text { text: StrSpan("\n" 9513..9514) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9515..9516), span: StrSpan("<p" 9514..9516) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9517..9522), value: StrSpan("testo_dialogo" 9524..9537), span: StrSpan("class=\"testo_dialogo\"" 9517..9538) }
token: ElementEnd { end: Open, span: StrSpan(">" 9538..9539) }
token: Text { text: StrSpan("Ero quasi perduto, e cantavo. Comprendendo ho trovato me stesso." 9539..9603) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9605..9606)), span: StrSpan("</p>" 9603..9607) }
token: Text { text: StrSpan("\n\n" 9607..9609) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9610..9611), span: StrSpan("<p" 9609..9611) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9612..9617), value: StrSpan("testo_personaggio testo_maiuscoletto" 9619..9655), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9612..9656) }
token: ElementEnd { end: Open, span: StrSpan(">" 9656..9657) }
token: Text { text: StrSpan("Bacca." 9657..9663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9665..9666)), span: StrSpan("</p>" 9663..9667) }
token: Text { text: StrSpan("\n" 9667..9668) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9669..9670), span: StrSpan("<p" 9668..9670) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9671..9676), value: StrSpan("testo_dialogo" 9678..9691), span: StrSpan("class=\"testo_dialogo\"" 9671..9692) }
token: ElementEnd { end: Open, span: StrSpan(">" 9692..9693) }
token: Text { text: StrSpan("Vale la pena di trovarsi in questo modo? C‚Äô√® una strada pi√∫ semplice d‚Äôignoranza e di gioia. Il dio √® come un signore tra la vita e la morte. Ci si abbandona alla sua ebbrezza, si dilania o si vien dilaniate. Si rinasce ogni volta, e ci si sveglia come te nel giorno." 9693..9967) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9969..9970)), span: StrSpan("</p>" 9967..9971) }
token: Text { text: StrSpan("\n\n" 9971..9973) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9974..9975), span: StrSpan("<p" 9973..9975) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9976..9981), value: StrSpan("testo_personaggio testo_maiuscoletto" 9983..10019), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9976..10020) }
token: ElementEnd { end: Open, span: StrSpan(">" 10020..10021) }
token: Text { text: StrSpan("Orfeo." 10021..10027) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10029..10030)), span: StrSpan("</p>" 10027..10031) }
token: Text { text: StrSpan("\n" 10031..10032) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10033..10034), span: StrSpan("<p" 10032..10034) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10035..10040), value: StrSpan("testo_dialogo" 10042..10055), span: StrSpan("class=\"testo_dialogo\"" 10035..10056) }
token: ElementEnd { end: Open, span: StrSpan(">" 10056..10057) }
token: Text { text: StrSpan("Non parlare di giorno, di risveglio. Pochi uomini sanno. Nessuna donna come te, sa cosa sia." 10057..10149) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10151..10152)), span: StrSpan("</p>" 10149..10153) }
token: Text { text: StrSpan("\n\n" 10153..10155) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10156..10157), span: StrSpan("<p" 10155..10157) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10158..10163), value: StrSpan("testo_personaggio testo_maiuscoletto" 10165..10201), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10158..10202) }
token: ElementEnd { end: Open, span: StrSpan(">" 10202..10203) }
token: Text { text: StrSpan("Bacca." 10203..10209) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10211..10212)), span: StrSpan("</p>" 10209..10213) }
token: Text { text: StrSpan("\n" 10213..10214) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10215..10216), span: StrSpan("<p" 10214..10216) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10217..10222), value: StrSpan("testo_dialogo" 10224..10237), span: StrSpan("class=\"testo_dialogo\"" 10217..10238) }
token: ElementEnd { end: Open, span: StrSpan(">" 10238..10239) }
token: Text { text: StrSpan("Forse √® per questo che ti seguono, le donne della Tracia. Tu sei per loro come il dio. Sei disceso dai monti. Canti versi di amore e di morte." 10239..10382) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10384..10385)), span: StrSpan("</p>" 10382..10386) }
token: Text { text: StrSpan("\n\n" 10386..10388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10389..10390), span: StrSpan("<p" 10388..10390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10391..10396), value: StrSpan("testo_personaggio testo_maiuscoletto" 10398..10434), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10391..10435) }
token: ElementEnd { end: Open, span: StrSpan(">" 10435..10436) }
token: Text { text: StrSpan("Orfeo." 10436..10442) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10444..10445)), span: StrSpan("</p>" 10442..10446) }
token: Text { text: StrSpan("\n" 10446..10447) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10448..10449), span: StrSpan("<p" 10447..10449) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10450..10455), value: StrSpan("testo_dialogo" 10457..10470), span: StrSpan("class=\"testo_dialogo\"" 10450..10471) }
token: ElementEnd { end: Open, span: StrSpan(">" 10471..10472) }
token: Text { text: StrSpan("Sciocca. Con te si pu√≤ parlare almeno. Forse un giorno sarai come un uomo." 10472..10547) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10549..10550)), span: StrSpan("</p>" 10547..10551) }
token: Text { text: StrSpan("\n\n" 10551..10553) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10554..10555), span: StrSpan("<p" 10553..10555) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10556..10561), value: StrSpan("testo_personaggio testo_maiuscoletto" 10563..10599), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10556..10600) }
token: ElementEnd { end: Open, span: StrSpan(">" 10600..10601) }
token: Text { text: StrSpan("Bacca." 10601..10607) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10609..10610)), span: StrSpan("</p>" 10607..10611) }
token: Text { text: StrSpan("\n" 10611..10612) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10613..10614), span: StrSpan("<p" 10612..10614) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10615..10620), value: StrSpan("testo_dialogo" 10622..10635), span: StrSpan("class=\"testo_dialogo\"" 10615..10636) }
token: ElementEnd { end: Open, span: StrSpan(">" 10636..10637) }
token: Text { text: StrSpan("Purch√© prima le donne di Tracia‚Ä¶" 10637..10672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10674..10675)), span: StrSpan("</p>" 10672..10676) }
token: Text { text: StrSpan("\n\n" 10676..10678) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10679..10680), span: StrSpan("<p" 10678..10680) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10681..10686), value: StrSpan("testo_personaggio testo_maiuscoletto" 10688..10724), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10681..10725) }
token: ElementEnd { end: Open, span: StrSpan(">" 10725..10726) }
token: Text { text: StrSpan("Orfeo." 10726..10732) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10734..10735)), span: StrSpan("</p>" 10732..10736) }
token: Text { text: StrSpan("\n" 10736..10737) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10738..10739), span: StrSpan("<p" 10737..10739) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10740..10745), value: StrSpan("testo_dialogo" 10747..10760), span: StrSpan("class=\"testo_dialogo\"" 10740..10761) }
token: ElementEnd { end: Open, span: StrSpan(">" 10761..10762) }
token: Text { text: StrSpan("Di‚Äô." 10762..10768) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10770..10771)), span: StrSpan("</p>" 10768..10772) }
token: Text { text: StrSpan("\n\n" 10772..10774) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10775..10776), span: StrSpan("<p" 10774..10776) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10777..10782), value: StrSpan("testo_personaggio testo_maiuscoletto" 10784..10820), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10777..10821) }
token: ElementEnd { end: Open, span: StrSpan(">" 10821..10822) }
token: Text { text: StrSpan("Bacca." 10822..10828) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10830..10831)), span: StrSpan("</p>" 10828..10832) }
token: Text { text: StrSpan("\n" 10832..10833) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10834..10835), span: StrSpan("<p" 10833..10835) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10836..10841), value: StrSpan("testo_dialogo" 10843..10856), span: StrSpan("class=\"testo_dialogo\"" 10836..10857) }
token: ElementEnd { end: Open, span: StrSpan(">" 10857..10858) }
token: Text { text: StrSpan("Purch√© non sbranino il dio." 10858..10886) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10888..10889)), span: StrSpan("</p>" 10886..10890) }
token: Text { text: StrSpan("\n" 10890..10891) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 10893..10897)), span: StrSpan("</body>" 10891..10898) }
token: Text { text: StrSpan("\n" 10898..10899) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 10901..10905)), span: StrSpan("</html>" 10899..10906) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("L‚Äôuomo-lupo" 340..353) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 355..357)), span: StrSpan("</h1>" 353..358) }
token: Text { text: StrSpan("\n\n" 358..360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 361..362), span: StrSpan("<p" 360..362) }
token: ElementEnd { end: Open, span: StrSpan(">" 362..363) }
token: Text { text: StrSpan("Licaone, signore d‚ÄôArcadia, per la sua inumanit√† venne mutato in lupo da Zeus. Ma il mito non dice dove e come sia morto." 363..487) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 489..490)), span: StrSpan("</p>" 487..491) }
token: Text { text: StrSpan("\n\n" 491..493) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 494..495), span: StrSpan("<p" 493..495) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 496..501), value: StrSpan("testo_indicazioni_scena" 503..526), span: StrSpan("class=\"testo_indicazioni_scena\"" 496..527) }
token: ElementEnd { end: Open, span: StrSpan(">" 527..528) }
token: Text { text: StrSpan("(parlano due cacciatori)" 528..552) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 554..555)), span: StrSpan("</p>" 552..556) }
token: Text { text: StrSpan("\n\n\n" 556..559) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 560..561), span: StrSpan("<p" 559..561) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 562..567), value: StrSpan("testo_personaggio testo_maiuscoletto" 569..605), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 562..606) }
token: ElementEnd { end: Open, span: StrSpan(">" 606..607) }
token: Text { text: StrSpan("Primo cacciatore." 607..624) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 626..627)), span: StrSpan("</p>" 624..628) }
token: Text { text: StrSpan("\n" 628..629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 630..631), span: StrSpan("<p" 629..631) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 632..637), value: StrSpan("testo_dialogo" 639..652), span: StrSpan("class=\"testo_dialogo\"" 632..653) }
token: ElementEnd { end: Open, span: StrSpan(">" 653..654) }
token: Text { text: StrSpan("Non √® la prima volta che s‚Äôammazza una bestia." 654..703) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 705..706)), span: StrSpan("</p>" 703..707) }
token: Text { text: StrSpan("\n\n" 707..709) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 710..711), span: StrSpan("<p" 709..711) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 712..717), value: StrSpan("testo_personaggio testo_maiuscoletto" 719..755), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 712..756) }
token: ElementEnd { end: Open, span: StrSpan(">" 756..757) }
token: Text { text: StrSpan("Secondo cacciatore." 757..776) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 778..779)), span: StrSpan("</p>" 776..780) }
token: Text { text: StrSpan("\n" 780..781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 782..783), span: StrSpan("<p" 781..783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 784..789), value: StrSpan("testo_dialogo" 791..804), span: StrSpan("class=\"testo_dialogo\"" 784..805) }
token: ElementEnd { end: Open, span: StrSpan(">" 805..806) }
token: Text { text: StrSpan("Ma √® la prima che abbiamo ammazzato un uomo." 806..851) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 853..854)), span: StrSpan("</p>" 851..855) }
token: Text { text: StrSpan("\n\n" 855..857) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 858..859), span: StrSpan("<p" 857..859) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 860..865), value: StrSpan("testo_personaggio testo_maiuscoletto" 867..903), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 860..904) }
token: ElementEnd { end: Open, span: StrSpan(">" 904..905) }
token: Text { text: StrSpan("Primo cacciatore." 905..922) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 924..925)), span: StrSpan("</p>" 922..926) }
token: Text { text: StrSpan("\n" 926..927) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 928..929), span: StrSpan("<p" 927..929) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 930..935), value: StrSpan("testo_dialogo" 937..950), span: StrSpan("class=\"testo_dialogo\"" 930..951) }
token: ElementEnd { end: Open, span: StrSpan(">" 951..952) }
token: Text { text: StrSpan("Pensarci non √® fatto nostro. Sono i cani che ce l‚Äôhanno stanato. Non tocca a noi dirci chi fosse. Quando l‚Äôabbiamo visto chiuso contro i sassi, canuto e insanguato, sguazzare nel fango, coi denti pi√∫ rossi degli occhi, chi pensava al suo nome e alle storie di un tempo? Mor√≠ mordendo il giavellotto come fosse la gola di un cane. Aveva il cuore della bestia oltre che il pelo. Da un pezzo per queste boscaglie non si vedeva un lupo simile o pi√∫ grosso." 952..1412) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1414..1415)), span: StrSpan("</p>" 1412..1416) }
token: Text { text: StrSpan("\n\n" 1416..1418) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1419..1420), span: StrSpan("<p" 1418..1420) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1421..1426), value: StrSpan("testo_personaggio testo_maiuscoletto" 1428..1464), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1421..1465) }
token: ElementEnd { end: Open, span: StrSpan(">" 1465..1466) }
token: Text { text: StrSpan("Secondo cacciatore." 1466..1485) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1487..1488)), span: StrSpan("</p>" 1485..1489) }
token: Text { text: StrSpan("\n" 1489..1490) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1491..1492), span: StrSpan("<p" 1490..1492) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1493..1498), value: StrSpan("testo_dialogo" 1500..1513), span: StrSpan("class=\"testo_dialogo\"" 1493..1514) }
token: ElementEnd { end: Open, span: StrSpan(">" 1514..1515) }
token: Text { text: StrSpan("Io ci penso, al suo nome. Ero ancora ragazzo e gi√† dicevano di lui. Raccontavano cose incredibili di quando fu uomo ‚Äì che tent√≤ di scannare il Signore dei monti. Certo il suo pelo era colore della neve scarpicciata ‚Äì era vecchio, un fantasma ‚Äì e aveva gli occhi come sangue." 1515..1797) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1799..1800)), span: StrSpan("</p>" 1797..1801) }
token: Text { text: StrSpan("\n\n" 1801..1803) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1804..1805), span: StrSpan("<p" 1803..1805) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1806..1811), value: StrSpan("testo_personaggio testo_maiuscoletto" 1813..1849), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1806..1850) }
token: ElementEnd { end: Open, span: StrSpan(">" 1850..1851) }
token: Text { text: StrSpan("Primo cacciatore." 1851..1868) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1870..1871)), span: StrSpan("</p>" 1868..1872) }
token: Text { text: StrSpan("\n" 1872..1873) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1874..1875), span: StrSpan("<p" 1873..1875) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1876..1881), value: StrSpan("testo_dialogo" 1883..1896), span: StrSpan("class=\"testo_dialogo\"" 1876..1897) }
token: ElementEnd { end: Open, span: StrSpan(">" 1897..1898) }
token: Text { text: StrSpan("Ora √® fatta. Bisogna scuoiarlo e tornare in pianura. Pensa alla festa che ci attende." 1898..1984) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1986..1987)), span: StrSpan("</p>" 1984..1988) }
token: Text { text: StrSpan("\n\n" 1988..1990) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1991..1992), span: StrSpan("<p" 1990..1992) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1993..1998), value: StrSpan("testo_personaggio testo_maiuscoletto" 2000..2036), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1993..2037) }
token: ElementEnd { end: Open, span: StrSpan(">" 2037..2038) }
token: Text { text: StrSpan("Secondo cacciatore." 2038..2057) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2059..2060)), span: StrSpan("</p>" 2057..2061) }
token: Text { text: StrSpan("\n" 2061..2062) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2063..2064), span: StrSpan("<p" 2062..2064) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2065..2070), value: StrSpan("testo_dialogo" 2072..2085), span: StrSpan("class=\"testo_dialogo\"" 2065..2086) }
token: ElementEnd { end: Open, span: StrSpan(">" 2086..2087) }
token: Text { text: StrSpan("Ci muoveremo sotto l‚Äôalba. Che altro vuoi fare che scaldarci a questa legna? La guardia al cadavere la faranno i molossi." 2087..2210) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2212..2213)), span: StrSpan("</p>" 2210..2214) }
token: Text { text: StrSpan("\n\n" 2214..2216) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2217..2218), span: StrSpan("<p" 2216..2218) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2219..2224), value: StrSpan("testo_personaggio testo_maiuscoletto" 2226..2262), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2219..2263) }
token: ElementEnd { end: Open, span: StrSpan(">" 2263..2264) }
token: Text { text: StrSpan("Primo cacciatore." 2264..2281) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2283..2284)), span: StrSpan("</p>" 2281..2285) }
token: Text { text: StrSpan("\n" 2285..2286) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2287..2288), span: StrSpan("<p" 2286..2288) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2289..2294), value: StrSpan("testo_dialogo" 2296..2309), span: StrSpan("class=\"testo_dialogo\"" 2289..2310) }
token: ElementEnd { end: Open, span: StrSpan(">" 2310..2311) }
token: Text { text: StrSpan("Non √® un cadavere, √® soltanto una carcassa. Ma dobbiamo scuoiarlo, altrimenti ci diventa pi√∫ duro di un sasso." 2311..2424) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2426..2427)), span: StrSpan("</p>" 2424..2428) }
token: Text { text: StrSpan("\n\n" 2428..2430) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2431..2432), span: StrSpan("<p" 2430..2432) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2433..2438), value: StrSpan("testo_personaggio testo_maiuscoletto" 2440..2476), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2433..2477) }
token: ElementEnd { end: Open, span: StrSpan(">" 2477..2478) }
token: Text { text: StrSpan("Secondo cacciatore." 2478..2497) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2499..2500)), span: StrSpan("</p>" 2497..2501) }
token: Text { text: StrSpan("\n" 2501..2502) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2503..2504), span: StrSpan("<p" 2502..2504) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2505..2510), value: StrSpan("testo_dialogo" 2512..2525), span: StrSpan("class=\"testo_dialogo\"" 2505..2526) }
token: ElementEnd { end: Open, span: StrSpan(">" 2526..2527) }
token: Text { text: StrSpan("Mi domando se, presa la pelle, si dovr√† sotterrarlo. Una volta era un uomo. Il suo sangue ferino l‚Äôha sparso nel fango. E rester√† quel mucchio nudo di ossa e carne come di un vecchio o di un bambino." 2527..2730) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2732..2733)), span: StrSpan("</p>" 2730..2734) }
token: Text { text: StrSpan("\n\n" 2734..2736) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2737..2738), span: StrSpan("<p" 2736..2738) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2739..2744), value: StrSpan("testo_personaggio testo_maiuscoletto" 2746..2782), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2739..2783) }
token: ElementEnd { end: Open, span: StrSpan(">" 2783..2784) }
token: Text { text: StrSpan("Primo cacciatore." 2784..2801) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2803..2804)), span: StrSpan("</p>" 2801..2805) }
token: Text { text: StrSpan("\n" 2805..2806) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2807..2808), span: StrSpan("<p" 2806..2808) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2809..2814), value: StrSpan("testo_dialogo" 2816..2829), span: StrSpan("class=\"testo_dialogo\"" 2809..2830) }
token: ElementEnd { end: Open, span: StrSpan(">" 2830..2831) }
token: Text { text: StrSpan("Che fosse vecchio non hai torto. Era gi√† lupo quando ancora le montagne eran deserte. S‚Äôera fatto pi√∫ vecchio dei tronchi canuti e muffiti. Chi si ricorda ch‚Äôebbe un nome e fu qualcuno? Se vogliamo essere schietti, avrebbe dovuto esser morto da un pezzo." 2831..3091) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3093..3094)), span: StrSpan("</p>" 3091..3095) }
token: Text { text: StrSpan("\n\n" 3095..3097) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3098..3099), span: StrSpan("<p" 3097..3099) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3100..3105), value: StrSpan("testo_personaggio testo_maiuscoletto" 3107..3143), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3100..3144) }
token: ElementEnd { end: Open, span: StrSpan(">" 3144..3145) }
token: Text { text: StrSpan("Secondo cacciatore." 3145..3164) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3166..3167)), span: StrSpan("</p>" 3164..3168) }
token: Text { text: StrSpan("\n" 3168..3169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3170..3171), span: StrSpan("<p" 3169..3171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3172..3177), value: StrSpan("testo_dialogo" 3179..3192), span: StrSpan("class=\"testo_dialogo\"" 3172..3193) }
token: ElementEnd { end: Open, span: StrSpan(">" 3193..3194) }
token: Text { text: StrSpan("Ma il suo corpo restare insepolto‚Ä¶ Fu Licaone, un cacciatore come noi." 3194..3266) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3268..3269)), span: StrSpan("</p>" 3266..3270) }
token: Text { text: StrSpan("\n\n" 3270..3272) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3273..3274), span: StrSpan("<p" 3272..3274) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3275..3280), value: StrSpan("testo_personaggio testo_maiuscoletto" 3282..3318), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3275..3319) }
token: ElementEnd { end: Open, span: StrSpan(">" 3319..3320) }
token: Text { text: StrSpan("Primo cacciatore." 3320..3337) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3339..3340)), span: StrSpan("</p>" 3337..3341) }
token: Text { text: StrSpan("\n" 3341..3342) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3343..3344), span: StrSpan("<p" 3342..3344) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3345..3350), value: StrSpan("testo_dialogo" 3352..3365), span: StrSpan("class=\"testo_dialogo\"" 3345..3366) }
token: ElementEnd { end: Open, span: StrSpan(">" 3366..3367) }
token: Text { text: StrSpan("A ciascuno di noi pu√≤ toccare la morte sui monti, e nessuno trovarci mai pi√∫ se non la pioggia o l‚Äôavvoltoio. Se fu davvero un cacciatore, √® morto male." 3367..3524) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3526..3527)), span: StrSpan("</p>" 3524..3528) }
token: Text { text: StrSpan("\n\n" 3528..3530) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3531..3532), span: StrSpan("<p" 3530..3532) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3533..3538), value: StrSpan("testo_personaggio testo_maiuscoletto" 3540..3576), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3533..3577) }
token: ElementEnd { end: Open, span: StrSpan(">" 3577..3578) }
token: Text { text: StrSpan("Secondo cacciatore." 3578..3597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3599..3600)), span: StrSpan("</p>" 3597..3601) }
token: Text { text: StrSpan("\n" 3601..3602) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3603..3604), span: StrSpan("<p" 3602..3604) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3605..3610), value: StrSpan("testo_dialogo" 3612..3625), span: StrSpan("class=\"testo_dialogo\"" 3605..3626) }
token: ElementEnd { end: Open, span: StrSpan(">" 3626..3627) }
token: Text { text: StrSpan("Si √® difeso da vecchio, con gli occhi. Ma tu in fondo non credi che sia stato tuo simile. Non credi al suo nome. Se lo credessi, non vorresti insultarne il cadavere perch√© sapresti che anche lui spregiava i morti, anche lui visse torvo e inumano ‚Äì non per altro il Signore dei monti ne fece una belva." 3627..3932) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3934..3935)), span: StrSpan("</p>" 3932..3936) }
token: Text { text: StrSpan("\n\n" 3936..3938) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3939..3940), span: StrSpan("<p" 3938..3940) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3941..3946), value: StrSpan("testo_personaggio testo_maiuscoletto" 3948..3984), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3941..3985) }
token: ElementEnd { end: Open, span: StrSpan(">" 3985..3986) }
token: Text { text: StrSpan("Primo cacciatore." 3986..4003) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4005..4006)), span: StrSpan("</p>" 4003..4007) }
token: Text { text: StrSpan("\n" 4007..4008) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4009..4010), span: StrSpan("<p" 4008..4010) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4011..4016), value: StrSpan("testo_dialogo" 4018..4031), span: StrSpan("class=\"testo_dialogo\"" 4011..4032) }
token: ElementEnd { end: Open, span: StrSpan(">" 4032..4033) }
token: Text { text: StrSpan("Si racconta di lui che cuoceva i suoi simili." 4033..4078) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4080..4081)), span: StrSpan("</p>" 4078..4082) }
token: Text { text: StrSpan("\n\n" 4082..4084) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4085..4086), span: StrSpan("<p" 4084..4086) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4087..4092), value: StrSpan("testo_personaggio testo_maiuscoletto" 4094..4130), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4087..4131) }
token: ElementEnd { end: Open, span: StrSpan(">" 4131..4132) }
token: Text { text: StrSpan("Secondo cacciatore." 4132..4151) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4153..4154)), span: StrSpan("</p>" 4151..4155) }
token: Text { text: StrSpan("\n" 4155..4156) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4157..4158), span: StrSpan("<p" 4156..4158) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4159..4164), value: StrSpan("testo_dialogo" 4166..4179), span: StrSpan("class=\"testo_dialogo\"" 4159..4180) }
token: ElementEnd { end: Open, span: StrSpan(">" 4180..4181) }
token: Text { text: StrSpan("Conosco uomini che han fatto molto meno, e sono lupi ‚Äì non gli manca che l‚Äôurlo e rintanarsi nei boschi. Sei cos√≠ certo di te stesso da non sentirti qualche volta Licaone come lui? Tutti noialtri abbiamo giorni che, se un dio ci toccasse, urleremmo e saremmo alla gola di chi ci resiste. Che cos‚Äô√® che ci salva se non che al risveglio ci ritroviamo queste mani e questa bocca e questa voce? Ma lui non ebbe scappatoie ‚Äì lasci√≤ per sempre gli occhi umani e le case. Ora almeno ch‚Äô√® morto, dovrebbe avere pace." 4181..4703) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4705..4706)), span: StrSpan("</p>" 4703..4707) }
token: Text { text: StrSpan("\n\n" 4707..4709) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4710..4711), span: StrSpan("<p" 4709..4711) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4712..4717), value: StrSpan("testo_personaggio testo_maiuscoletto" 4719..4755), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4712..4756) }
token: ElementEnd { end: Open, span: StrSpan(">" 4756..4757) }
token: Text { text: StrSpan("Primo cacciatore." 4757..4774) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4776..4777)), span: StrSpan("</p>" 4774..4778) }
token: Text { text: StrSpan("\n" 4778..4779) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4780..4781), span: StrSpan("<p" 4779..4781) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4782..4787), value: StrSpan("testo_dialogo" 4789..4802), span: StrSpan("class=\"testo_dialogo\"" 4782..4803) }
token: ElementEnd { end: Open, span: StrSpan(">" 4803..4804) }
token: Text { text: StrSpan("Io non credo che avesse bisogno di pace. Chi pi√∫ in pace di lui, quando poteva accovacciarsi sulle rupi e ululare alla luna? Sono vissuto abbastanza nei boschi per sapere che i tronchi e le belve non temono nulla di sacro, e non guardano al cielo che per stormire o sbadigliare. C‚Äô√® anzi qualcosa che li uguaglia ai signori del cielo: quantunque facciano, non han rimorsi." 4804..5180) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5182..5183)), span: StrSpan("</p>" 5180..5184) }
token: Text { text: StrSpan("\n\n" 5184..5186) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5187..5188), span: StrSpan("<p" 5186..5188) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5189..5194), value: StrSpan("testo_personaggio testo_maiuscoletto" 5196..5232), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5189..5233) }
token: ElementEnd { end: Open, span: StrSpan(">" 5233..5234) }
token: Text { text: StrSpan("Secondo cacciatore." 5234..5253) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5255..5256)), span: StrSpan("</p>" 5253..5257) }
token: Text { text: StrSpan("\n" 5257..5258) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5259..5260), span: StrSpan("<p" 5258..5260) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5261..5266), value: StrSpan("testo_dialogo" 5268..5281), span: StrSpan("class=\"testo_dialogo\"" 5261..5282) }
token: ElementEnd { end: Open, span: StrSpan(">" 5282..5283) }
token: Text { text: StrSpan("A sentirti parrebbe che quello del lupo sia un alto destino." 5283..5343) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5345..5346)), span: StrSpan("</p>" 5343..5347) }
token: Text { text: StrSpan("\n\n" 5347..5349) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5350..5351), span: StrSpan("<p" 5349..5351) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5352..5357), value: StrSpan("testo_personaggio testo_maiuscoletto" 5359..5395), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5352..5396) }
token: ElementEnd { end: Open, span: StrSpan(">" 5396..5397) }
token: Text { text: StrSpan("Primo cacciatore." 5397..5414) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5416..5417)), span: StrSpan("</p>" 5414..5418) }
token: Text { text: StrSpan("\n" 5418..5419) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5420..5421), span: StrSpan("<p" 5419..5421) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5422..5427), value: StrSpan("testo_dialogo" 5429..5442), span: StrSpan("class=\"testo_dialogo\"" 5422..5443) }
token: ElementEnd { end: Open, span: StrSpan(">" 5443..5444) }
token: Text { text: StrSpan("Non so se alto o basso, ma hai mai sentito di una bestia o di una pianta che si facesse essere umano? Invece questi luoghi sono pieni di uomini e donne toccati dal dio ‚Äì chi divenne cespuglio, chi uccello, chi lupo. E per empio che fosse, per delitti che avesse commesso, guadagn√≤ che non ebbe pi√∫ le mani rosse, sfugg√≠ al rimorso e alla speranza, si scord√≤ di essere uomo. Provan altro gli d√®i?" 5444..5846) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5848..5849)), span: StrSpan("</p>" 5846..5850) }
token: Text { text: StrSpan("\n\n" 5850..5852) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5853..5854), span: StrSpan("<p" 5852..5854) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5855..5860), value: StrSpan("testo_personaggio testo_maiuscoletto" 5862..5898), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5855..5899) }
token: ElementEnd { end: Open, span: StrSpan(">" 5899..5900) }
token: Text { text: StrSpan("Secondo cacciatore." 5900..5919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5921..5922)), span: StrSpan("</p>" 5919..5923) }
token: Text { text: StrSpan("\n" 5923..5924) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5925..5926), span: StrSpan("<p" 5924..5926) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5927..5932), value: StrSpan("testo_dialogo" 5934..5947), span: StrSpan("class=\"testo_dialogo\"" 5927..5948) }
token: ElementEnd { end: Open, span: StrSpan(">" 5948..5949) }
token: Text { text: StrSpan("Un castigo √® un castigo, e chi l‚Äôinfligge almeno in questo ha compassione, che toglie all‚Äôempio l‚Äôincertezza, e del rimorso fa destino. Se anche la bestia si √® scordata del passato e vive solo per la presa e la morte, resta il suo nome, resta quello che fu. C‚Äô√® l‚Äôantica Callisto sepolta sul colle. Chi sa pi√∫ il suo delitto? I signori del cielo l‚Äôhanno molto punita. Di una donna ‚Äì era bella, si dice ‚Äì fare un‚Äôorsa che rugge e che lacrima, che nella notte per paura vuol tornare nelle case. Ecco una belva che non ebbe pace. Venne il figlio e l‚Äôuccise di lancia, e gli d√®i non si mossero. C‚Äô√® anche chi dice che, pentiti, ne fecero un groppo di stelle. Ma rimase il cadavere e questo √® sepolto." 5949..6674) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6676..6677)), span: StrSpan("</p>" 6674..6678) }
token: Text { text: StrSpan("\n\n" 6678..6680) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6681..6682), span: StrSpan("<p" 6680..6682) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6683..6688), value: StrSpan("testo_personaggio testo_maiuscoletto" 6690..6726), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6683..6727) }
token: ElementEnd { end: Open, span: StrSpan(">" 6727..6728) }
token: Text { text: StrSpan("Primo cacciatore." 6728..6745) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6747..6748)), span: StrSpan("</p>" 6745..6749) }
token: Text { text: StrSpan("\n" 6749..6750) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6751..6752), span: StrSpan("<p" 6750..6752) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6753..6758), value: StrSpan("testo_dialogo" 6760..6773), span: StrSpan("class=\"testo_dialogo\"" 6753..6774) }
token: ElementEnd { end: Open, span: StrSpan(">" 6774..6775) }
token: Text { text: StrSpan("Che vuoi dire? Conosco le storie. E che Callisto non sapesse rassegnarsi, non √® colpa degli d√®i. √à come chi va malinconico a un banchetto o s‚Äôubriaca a un funerale. S‚Äôio fossi lupo, sarei lupo anche nel sonno." 6775..6991) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6993..6994)), span: StrSpan("</p>" 6991..6995) }
token: Text { text: StrSpan("\n\n" 6995..6997) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6998..6999), span: StrSpan("<p" 6997..6999) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7000..7005), value: StrSpan("testo_personaggio testo_maiuscoletto" 7007..7043), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7000..7044) }
token: ElementEnd { end: Open, span: StrSpan(">" 7044..7045) }
token: Text { text: StrSpan("Secondo cacciatore." 7045..7064) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7066..7067)), span: StrSpan("</p>" 7064..7068) }
token: Text { text: StrSpan("\n" 7068..7069) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7070..7071), span: StrSpan("<p" 7069..7071) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7072..7077), value: StrSpan("testo_dialogo" 7079..7092), span: StrSpan("class=\"testo_dialogo\"" 7072..7093) }
token: ElementEnd { end: Open, span: StrSpan(">" 7093..7094) }
token: Text { text: StrSpan("Non conosci la strada del sangue. Gli d√®i non ti aggiungono n√© tolgono nulla. Solamente, d‚Äôun tocco leggero, t‚Äôinchiodano dove sei giunto. Quel che prima era voglia, era scelta, ti si scopre destino. Questo vuol dire, farsi lupo. Ma resti quello che √® fuggito dalle case, resti l‚Äôantico Licaone." 7094..7398) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7400..7401)), span: StrSpan("</p>" 7398..7402) }
token: Text { text: StrSpan("\n\n" 7402..7404) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7405..7406), span: StrSpan("<p" 7404..7406) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7407..7412), value: StrSpan("testo_personaggio testo_maiuscoletto" 7414..7450), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7407..7451) }
token: ElementEnd { end: Open, span: StrSpan(">" 7451..7452) }
token: Text { text: StrSpan("Primo cacciatore." 7452..7469) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7471..7472)), span: StrSpan("</p>" 7469..7473) }
token: Text { text: StrSpan("\n" 7473..7474) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7475..7476), span: StrSpan("<p" 7474..7476) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7477..7482), value: StrSpan("testo_dialogo" 7484..7497), span: StrSpan("class=\"testo_dialogo\"" 7477..7498) }
token: ElementEnd { end: Open, span: StrSpan(">" 7498..7499) }
token: Text { text: StrSpan("Vuoi dunque dire che, azzannato dai molossi, Licaone pat√≠ come un uomo cui si desse la caccia coi cani?" 7499..7603) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7605..7606)), span: StrSpan("</p>" 7603..7607) }
token: Text { text: StrSpan("\n\n" 7607..7609) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7610..7611), span: StrSpan("<p" 7609..7611) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7612..7617), value: StrSpan("testo_personaggio testo_maiuscoletto" 7619..7655), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7612..7656) }
token: ElementEnd { end: Open, span: StrSpan(">" 7656..7657) }
token: Text { text: StrSpan("Secondo cacciatore." 7657..7676) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7678..7679)), span: StrSpan("</p>" 7676..7680) }
token: Text { text: StrSpan("\n" 7680..7681) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7682..7683), span: StrSpan("<p" 7681..7683) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7684..7689), value: StrSpan("testo_dialogo" 7691..7704), span: StrSpan("class=\"testo_dialogo\"" 7684..7705) }
token: ElementEnd { end: Open, span: StrSpan(">" 7705..7706) }
token: Text { text: StrSpan("Era vecchio, sfinito; tu stesso consenti che non seppe difendersi. Mentre moriva senza voce sulle pietre, io pensavo a quei vecchi pezzenti che si fermano a volte davanti ai cortili, e i cani si strozzano alla catena per morderli. Anche questo succede, nelle case laggi√∫. Diciamo pure che √® vissuto come un lupo. Ma, morendo e vedendoci, cap√≠ di esser uomo. Ce lo disse con gli occhi." 7706..8093) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8095..8096)), span: StrSpan("</p>" 8093..8097) }
token: Text { text: StrSpan("\n\n" 8097..8099) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8100..8101), span: StrSpan("<p" 8099..8101) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8102..8107), value: StrSpan("testo_personaggio testo_maiuscoletto" 8109..8145), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8102..8146) }
token: ElementEnd { end: Open, span: StrSpan(">" 8146..8147) }
token: Text { text: StrSpan("Primo cacciatore." 8147..8164) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8166..8167)), span: StrSpan("</p>" 8164..8168) }
token: Text { text: StrSpan("\n" 8168..8169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8170..8171), span: StrSpan("<p" 8169..8171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8172..8177), value: StrSpan("testo_dialogo" 8179..8192), span: StrSpan("class=\"testo_dialogo\"" 8172..8193) }
token: ElementEnd { end: Open, span: StrSpan(">" 8193..8194) }
token: Text { text: StrSpan("Amico, e credi che gl‚Äôimporti di marcire sottoterra come un uomo, lui che l‚Äôultima cosa che ha visto eran uomini in caccia?" 8194..8321) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8323..8324)), span: StrSpan("</p>" 8321..8325) }
token: Text { text: StrSpan("\n\n" 8325..8327) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8328..8329), span: StrSpan("<p" 8327..8329) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8330..8335), value: StrSpan("testo_personaggio testo_maiuscoletto" 8337..8373), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8330..8374) }
token: ElementEnd { end: Open, span: StrSpan(">" 8374..8375) }
token: Text { text: StrSpan("Secondo cacciatore." 8375..8394) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8396..8397)), span: StrSpan("</p>" 8394..8398) }
token: Text { text: StrSpan("\n" 8398..8399) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8400..8401), span: StrSpan("<p" 8399..8401) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8402..8407), value: StrSpan("testo_dialogo" 8409..8422), span: StrSpan("class=\"testo_dialogo\"" 8402..8423) }
token: ElementEnd { end: Open, span: StrSpan(">" 8423..8424) }
token: Text { text: StrSpan("C‚Äô√® una pace di l√† dalla morte. Una sorte comune. Importa ai vivi, importa al lupo che √® in noi tutti. Ci √® toccato di ucciderlo. Seguiamo almeno l‚Äôusanza, e lasciamo l‚Äôingiuria agli d√®i. Torneremo alle case con le mani pulite." 8424..8662) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8664..8665)), span: StrSpan("</p>" 8662..8666) }
token: Text { text: StrSpan("\n" 8666..8667) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8669..8673)), span: StrSpan("</body>" 8667..8674) }
token: Text { text: StrSpan("\n" 8674..8675) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8677..8681)), span: StrSpan("</html>" 8675..8682) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("L‚Äôospite" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("La Frigia e la Lidia furon sempre paesi di cui i Greci amarono raccontare atrocit√†. Beninteso, era tutto accaduto a casa loro, ma in tempi pi√∫ antichi." 360..513) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 515..516)), span: StrSpan("</p>" 513..517) }
token: Text { text: StrSpan("\n\n" 517..519) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 520..521), span: StrSpan("<p" 519..521) }
token: ElementEnd { end: Open, span: StrSpan(">" 521..522) }
token: Text { text: StrSpan("Inutile dire chi perse la gara della mietitura." 522..569) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 571..572)), span: StrSpan("</p>" 569..573) }
token: Text { text: StrSpan("\n\n" 573..575) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 576..577), span: StrSpan("<p" 575..577) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 578..583), value: StrSpan("testo_indicazioni_scena" 585..608), span: StrSpan("class=\"testo_indicazioni_scena\"" 578..609) }
token: ElementEnd { end: Open, span: StrSpan(">" 609..610) }
token: Text { text: StrSpan("(parlano Litierse e Eracle)" 610..637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 639..640)), span: StrSpan("</p>" 637..641) }
token: Text { text: StrSpan("\n\n\n" 641..644) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 645..646), span: StrSpan("<p" 644..646) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 647..652), value: StrSpan("testo_personaggio testo_maiuscoletto" 654..690), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 647..691) }
token: ElementEnd { end: Open, span: StrSpan(">" 691..692) }
token: Text { text: StrSpan("Litierse." 692..701) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 703..704)), span: StrSpan("</p>" 701..705) }
token: Text { text: StrSpan("\n" 705..706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 707..708), span: StrSpan("<p" 706..708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 709..714), value: StrSpan("testo_dialogo" 716..729), span: StrSpan("class=\"testo_dialogo\"" 709..730) }
token: ElementEnd { end: Open, span: StrSpan(">" 730..731) }
token: Text { text: StrSpan("Ecco il campo, straniero. Anche noi siamo ospitali come voialtri a casa vostra. Di qua non ti √® possibile scampare, e come hai mangiato e bevuto con noi, la nostra terra si berr√† il tuo sangue. Quest‚Äôaltr‚Äôanno il Meandro vedr√† un grano fitto e spesso pi√∫ di questo." 731..1004) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1006..1007)), span: StrSpan("</p>" 1004..1008) }
token: Text { text: StrSpan("\n\n" 1008..1010) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1011..1012), span: StrSpan("<p" 1010..1012) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1013..1018), value: StrSpan("testo_personaggio testo_maiuscoletto" 1020..1056), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1013..1057) }
token: ElementEnd { end: Open, span: StrSpan(">" 1057..1058) }
token: Text { text: StrSpan("Eracle." 1058..1065) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1067..1068)), span: StrSpan("</p>" 1065..1069) }
token: Text { text: StrSpan("\n" 1069..1070) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1071..1072), span: StrSpan("<p" 1070..1072) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1073..1078), value: StrSpan("testo_dialogo" 1080..1093), span: StrSpan("class=\"testo_dialogo\"" 1073..1094) }
token: ElementEnd { end: Open, span: StrSpan(">" 1094..1095) }
token: Text { text: StrSpan("Molti ne avete uccisi in passato sul campo?" 1095..1138) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1140..1141)), span: StrSpan("</p>" 1138..1142) }
token: Text { text: StrSpan("\n\n" 1142..1144) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1145..1146), span: StrSpan("<p" 1144..1146) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1147..1152), value: StrSpan("testo_personaggio testo_maiuscoletto" 1154..1190), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1147..1191) }
token: ElementEnd { end: Open, span: StrSpan(">" 1191..1192) }
token: Text { text: StrSpan("Litierse." 1192..1201) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1203..1204)), span: StrSpan("</p>" 1201..1205) }
token: Text { text: StrSpan("\n" 1205..1206) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1207..1208), span: StrSpan("<p" 1206..1208) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1209..1214), value: StrSpan("testo_dialogo" 1216..1229), span: StrSpan("class=\"testo_dialogo\"" 1209..1230) }
token: ElementEnd { end: Open, span: StrSpan(">" 1230..1231) }
token: Text { text: StrSpan("Abbastanza. Ma nessuno che avesse la tua forza o bastasse da solo. E sei rosso di pelo, hai le pupille come fiori ‚Äì darai vigore a questa terra." 1231..1377) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1379..1380)), span: StrSpan("</p>" 1377..1381) }
token: Text { text: StrSpan("\n\n" 1381..1383) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1384..1385), span: StrSpan("<p" 1383..1385) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1386..1391), value: StrSpan("testo_personaggio testo_maiuscoletto" 1393..1429), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1386..1430) }
token: ElementEnd { end: Open, span: StrSpan(">" 1430..1431) }
token: Text { text: StrSpan("Eracle." 1431..1438) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1440..1441)), span: StrSpan("</p>" 1438..1442) }
token: Text { text: StrSpan("\n" 1442..1443) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1444..1445), span: StrSpan("<p" 1443..1445) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1446..1451), value: StrSpan("testo_dialogo" 1453..1466), span: StrSpan("class=\"testo_dialogo\"" 1446..1467) }
token: ElementEnd { end: Open, span: StrSpan(">" 1467..1468) }
token: Text { text: StrSpan("Chi vi ha insegnato quest‚Äôusanza?" 1468..1503) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1505..1506)), span: StrSpan("</p>" 1503..1507) }
token: Text { text: StrSpan("\n\n" 1507..1509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1510..1511), span: StrSpan("<p" 1509..1511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1512..1517), value: StrSpan("testo_personaggio testo_maiuscoletto" 1519..1555), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1512..1556) }
token: ElementEnd { end: Open, span: StrSpan(">" 1556..1557) }
token: Text { text: StrSpan("Litierse." 1557..1566) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1568..1569)), span: StrSpan("</p>" 1566..1570) }
token: Text { text: StrSpan("\n" 1570..1571) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1572..1573), span: StrSpan("<p" 1571..1573) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1574..1579), value: StrSpan("testo_dialogo" 1581..1594), span: StrSpan("class=\"testo_dialogo\"" 1574..1595) }
token: ElementEnd { end: Open, span: StrSpan(">" 1595..1596) }
token: Text { text: StrSpan("Si √® sempre fatto. Se non nutri la terra, come puoi chiederle che nutra te?" 1596..1672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1674..1675)), span: StrSpan("</p>" 1672..1676) }
token: Text { text: StrSpan("\n\n" 1676..1678) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1679..1680), span: StrSpan("<p" 1678..1680) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1681..1686), value: StrSpan("testo_personaggio testo_maiuscoletto" 1688..1724), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1681..1725) }
token: ElementEnd { end: Open, span: StrSpan(">" 1725..1726) }
token: Text { text: StrSpan("Eracle." 1726..1733) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1735..1736)), span: StrSpan("</p>" 1733..1737) }
token: Text { text: StrSpan("\n" 1737..1738) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1739..1740), span: StrSpan("<p" 1738..1740) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1741..1746), value: StrSpan("testo_dialogo" 1748..1761), span: StrSpan("class=\"testo_dialogo\"" 1741..1762) }
token: ElementEnd { end: Open, span: StrSpan(">" 1762..1763) }
token: Text { text: StrSpan("Gi√† quest‚Äôanno il tuo grano mi sembra in rigoglio. Giunge alla spalla di chi miete. Chi avevate scannato?" 1763..1871) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1873..1874)), span: StrSpan("</p>" 1871..1875) }
token: Text { text: StrSpan("\n\n" 1875..1877) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1878..1879), span: StrSpan("<p" 1877..1879) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1880..1885), value: StrSpan("testo_personaggio testo_maiuscoletto" 1887..1923), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1880..1924) }
token: ElementEnd { end: Open, span: StrSpan(">" 1924..1925) }
token: Text { text: StrSpan("Litierse." 1925..1934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1936..1937)), span: StrSpan("</p>" 1934..1938) }
token: Text { text: StrSpan("\n" 1938..1939) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1940..1941), span: StrSpan("<p" 1939..1941) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1942..1947), value: StrSpan("testo_dialogo" 1949..1962), span: StrSpan("class=\"testo_dialogo\"" 1942..1963) }
token: ElementEnd { end: Open, span: StrSpan(">" 1963..1964) }
token: Text { text: StrSpan("Non ci venne nessun forestiero. Uccidemmo un vecchio servo e un caprone. Fu un sangue molle che la terra sent√≠ appena. Vedi la spiga, com‚Äô√® vana. Il corpo che noi laceriamo deve prima sudare, schiumare nel sole. Per questo ti faremo mietere, portare i covoni, grondare fatica, e soltanto alla fine, quando il tuo sangue ferver√† vivo e schietto, sar√† il momento di aprirti la gola. Tu sei giovane e forte." 1964..2374) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2376..2377)), span: StrSpan("</p>" 2374..2378) }
token: Text { text: StrSpan("\n\n" 2378..2380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2381..2382), span: StrSpan("<p" 2380..2382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2383..2388), value: StrSpan("testo_personaggio testo_maiuscoletto" 2390..2426), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2383..2427) }
token: ElementEnd { end: Open, span: StrSpan(">" 2427..2428) }
token: Text { text: StrSpan("Eracle." 2428..2435) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2437..2438)), span: StrSpan("</p>" 2435..2439) }
token: Text { text: StrSpan("\n" 2439..2440) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2441..2442), span: StrSpan("<p" 2440..2442) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2443..2448), value: StrSpan("testo_dialogo" 2450..2463), span: StrSpan("class=\"testo_dialogo\"" 2443..2464) }
token: ElementEnd { end: Open, span: StrSpan(">" 2464..2465) }
token: Text { text: StrSpan("I vostri d√®i che cosa dicono?" 2465..2495) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2497..2498)), span: StrSpan("</p>" 2495..2499) }
token: Text { text: StrSpan("\n\n" 2499..2501) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2502..2503), span: StrSpan("<p" 2501..2503) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2504..2509), value: StrSpan("testo_personaggio testo_maiuscoletto" 2511..2547), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2504..2548) }
token: ElementEnd { end: Open, span: StrSpan(">" 2548..2549) }
token: Text { text: StrSpan("Litierse." 2549..2558) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2560..2561)), span: StrSpan("</p>" 2558..2562) }
token: Text { text: StrSpan("\n" 2562..2563) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2564..2565), span: StrSpan("<p" 2563..2565) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2566..2571), value: StrSpan("testo_dialogo" 2573..2586), span: StrSpan("class=\"testo_dialogo\"" 2566..2587) }
token: ElementEnd { end: Open, span: StrSpan(">" 2587..2588) }
token: Text { text: StrSpan("Non c‚Äô√® d√®i sopra il campo. C‚Äô√® soltanto la terra, la Madre, la Grotta, che attende sempre e si riscuote soltanto sotto il fiotto di sangue. Questa sera, straniero, sarai tu stesso nella grotta." 2588..2789) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2791..2792)), span: StrSpan("</p>" 2789..2793) }
token: Text { text: StrSpan("\n\n" 2793..2795) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2796..2797), span: StrSpan("<p" 2795..2797) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2798..2803), value: StrSpan("testo_personaggio testo_maiuscoletto" 2805..2841), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2798..2842) }
token: ElementEnd { end: Open, span: StrSpan(">" 2842..2843) }
token: Text { text: StrSpan("Eracle." 2843..2850) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2852..2853)), span: StrSpan("</p>" 2850..2854) }
token: Text { text: StrSpan("\n" 2854..2855) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2856..2857), span: StrSpan("<p" 2855..2857) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2858..2863), value: StrSpan("testo_dialogo" 2865..2878), span: StrSpan("class=\"testo_dialogo\"" 2858..2879) }
token: ElementEnd { end: Open, span: StrSpan(">" 2879..2880) }
token: Text { text: StrSpan("Voialtri Frigi non scendete nella grotta?" 2880..2921) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2923..2924)), span: StrSpan("</p>" 2921..2925) }
token: Text { text: StrSpan("\n\n" 2925..2927) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2928..2929), span: StrSpan("<p" 2927..2929) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2930..2935), value: StrSpan("testo_personaggio testo_maiuscoletto" 2937..2973), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2930..2974) }
token: ElementEnd { end: Open, span: StrSpan(">" 2974..2975) }
token: Text { text: StrSpan("Litierse." 2975..2984) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2986..2987)), span: StrSpan("</p>" 2984..2988) }
token: Text { text: StrSpan("\n" 2988..2989) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2990..2991), span: StrSpan("<p" 2989..2991) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2992..2997), value: StrSpan("testo_dialogo" 2999..3012), span: StrSpan("class=\"testo_dialogo\"" 2992..3013) }
token: ElementEnd { end: Open, span: StrSpan(">" 3013..3014) }
token: Text { text: StrSpan("Noi ne usciamo nascendo, e non c‚Äô√® fretta di tornarci." 3014..3071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3073..3074)), span: StrSpan("</p>" 3071..3075) }
token: Text { text: StrSpan("\n\n" 3075..3077) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3078..3079), span: StrSpan("<p" 3077..3079) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3080..3085), value: StrSpan("testo_personaggio testo_maiuscoletto" 3087..3123), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3080..3124) }
token: ElementEnd { end: Open, span: StrSpan(">" 3124..3125) }
token: Text { text: StrSpan("Eracle." 3125..3132) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3134..3135)), span: StrSpan("</p>" 3132..3136) }
token: Text { text: StrSpan("\n" 3136..3137) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3138..3139), span: StrSpan("<p" 3137..3139) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3140..3145), value: StrSpan("testo_dialogo" 3147..3160), span: StrSpan("class=\"testo_dialogo\"" 3140..3161) }
token: ElementEnd { end: Open, span: StrSpan(">" 3161..3162) }
token: Text { text: StrSpan("Ho capito. E cos√≠ l‚Äôescremento del sangue √® necessario ai vostri d√®i." 3162..3236) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3238..3239)), span: StrSpan("</p>" 3236..3240) }
token: Text { text: StrSpan("\n\n" 3240..3242) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3243..3244), span: StrSpan("<p" 3242..3244) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3245..3250), value: StrSpan("testo_personaggio testo_maiuscoletto" 3252..3288), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3245..3289) }
token: ElementEnd { end: Open, span: StrSpan(">" 3289..3290) }
token: Text { text: StrSpan("Litierse." 3290..3299) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3301..3302)), span: StrSpan("</p>" 3299..3303) }
token: Text { text: StrSpan("\n" 3303..3304) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3305..3306), span: StrSpan("<p" 3304..3306) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3307..3312), value: StrSpan("testo_dialogo" 3314..3327), span: StrSpan("class=\"testo_dialogo\"" 3307..3328) }
token: ElementEnd { end: Open, span: StrSpan(">" 3328..3329) }
token: Text { text: StrSpan("Non d√®i ma la terra, straniero. Voi non vivete su una terra?" 3329..3390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3392..3393)), span: StrSpan("</p>" 3390..3394) }
token: Text { text: StrSpan("\n\n" 3394..3396) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3397..3398), span: StrSpan("<p" 3396..3398) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3399..3404), value: StrSpan("testo_personaggio testo_maiuscoletto" 3406..3442), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3399..3443) }
token: ElementEnd { end: Open, span: StrSpan(">" 3443..3444) }
token: Text { text: StrSpan("Eracle." 3444..3451) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3453..3454)), span: StrSpan("</p>" 3451..3455) }
token: Text { text: StrSpan("\n" 3455..3456) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3457..3458), span: StrSpan("<p" 3456..3458) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3459..3464), value: StrSpan("testo_dialogo" 3466..3479), span: StrSpan("class=\"testo_dialogo\"" 3459..3480) }
token: ElementEnd { end: Open, span: StrSpan(">" 3480..3481) }
token: Text { text: StrSpan("I nostri d√®i non sono in terra, ma reggono il mare e la terra, la selva e la nuvola, come il pastore tiene il gregge e il padrone comanda ai suoi servi. Se ne stanno appartati, sul monte, come i pensieri dentro gli occhi di chi parla o come le nuvole in cielo. Non hanno bisogno di sangue." 3481..3771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3773..3774)), span: StrSpan("</p>" 3771..3775) }
token: Text { text: StrSpan("\n\n" 3775..3777) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3778..3779), span: StrSpan("<p" 3777..3779) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3780..3785), value: StrSpan("testo_personaggio testo_maiuscoletto" 3787..3823), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3780..3824) }
token: ElementEnd { end: Open, span: StrSpan(">" 3824..3825) }
token: Text { text: StrSpan("Litierse." 3825..3834) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3836..3837)), span: StrSpan("</p>" 3834..3838) }
token: Text { text: StrSpan("\n" 3838..3839) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3840..3841), span: StrSpan("<p" 3839..3841) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3842..3847), value: StrSpan("testo_dialogo" 3849..3862), span: StrSpan("class=\"testo_dialogo\"" 3842..3863) }
token: ElementEnd { end: Open, span: StrSpan(">" 3863..3864) }
token: Text { text: StrSpan("Non ti capisco, ospite straniero. La nuvola la rupe la grotta hanno per noi lo stesso nome e non si appartano. Il sangue che la Madre ci ha dato glielo rendiamo in sudore, in escremento, in morte. √à proprio vero che tu vieni di lontano. Quei vostri d√®i non sono nulla." 3864..4134) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4136..4137)), span: StrSpan("</p>" 4134..4138) }
token: Text { text: StrSpan("\n\n" 4138..4140) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4141..4142), span: StrSpan("<p" 4140..4142) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4143..4148), value: StrSpan("testo_personaggio testo_maiuscoletto" 4150..4186), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4143..4187) }
token: ElementEnd { end: Open, span: StrSpan(">" 4187..4188) }
token: Text { text: StrSpan("Eracle." 4188..4195) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4197..4198)), span: StrSpan("</p>" 4195..4199) }
token: Text { text: StrSpan("\n" 4199..4200) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4201..4202), span: StrSpan("<p" 4200..4202) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4203..4208), value: StrSpan("testo_dialogo" 4210..4223), span: StrSpan("class=\"testo_dialogo\"" 4203..4224) }
token: ElementEnd { end: Open, span: StrSpan(">" 4224..4225) }
token: Text { text: StrSpan("Sono una stirpe d‚Äôimmortali. Hanno vinto la selva, la terra e i suoi mostri. Hanno cacciato nella grotta tutti quelli come te che spargevano il sangue per nutrire la terra." 4225..4399) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4401..4402)), span: StrSpan("</p>" 4399..4403) }
token: Text { text: StrSpan("\n\n" 4403..4405) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4406..4407), span: StrSpan("<p" 4405..4407) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4408..4413), value: StrSpan("testo_personaggio testo_maiuscoletto" 4415..4451), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4408..4452) }
token: ElementEnd { end: Open, span: StrSpan(">" 4452..4453) }
token: Text { text: StrSpan("Litierse." 4453..4462) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4464..4465)), span: StrSpan("</p>" 4462..4466) }
token: Text { text: StrSpan("\n" 4466..4467) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4468..4469), span: StrSpan("<p" 4467..4469) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4470..4475), value: StrSpan("testo_dialogo" 4477..4490), span: StrSpan("class=\"testo_dialogo\"" 4470..4491) }
token: ElementEnd { end: Open, span: StrSpan(">" 4491..4492) }
token: Text { text: StrSpan("Oh vedi, i tuoi d√®i sanno quel che si fanno. Anche loro han dovuto saziare la terra. E del resto tu sei troppo robusto per essere nato da una terra non sazia." 4492..4651) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4653..4654)), span: StrSpan("</p>" 4651..4655) }
token: Text { text: StrSpan("\n\n" 4655..4657) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4658..4659), span: StrSpan("<p" 4657..4659) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4660..4665), value: StrSpan("testo_personaggio testo_maiuscoletto" 4667..4703), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4660..4704) }
token: ElementEnd { end: Open, span: StrSpan(">" 4704..4705) }
token: Text { text: StrSpan("Eracle." 4705..4712) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4714..4715)), span: StrSpan("</p>" 4712..4716) }
token: Text { text: StrSpan("\n" 4716..4717) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4718..4719), span: StrSpan("<p" 4717..4719) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4720..4725), value: StrSpan("testo_dialogo" 4727..4740), span: StrSpan("class=\"testo_dialogo\"" 4720..4741) }
token: ElementEnd { end: Open, span: StrSpan(">" 4741..4742) }
token: Text { text: StrSpan("Su dunque, Litierse, si miete?" 4742..4772) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4774..4775)), span: StrSpan("</p>" 4772..4776) }
token: Text { text: StrSpan("\n\n" 4776..4778) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4779..4780), span: StrSpan("<p" 4778..4780) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4781..4786), value: StrSpan("testo_personaggio testo_maiuscoletto" 4788..4824), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4781..4825) }
token: ElementEnd { end: Open, span: StrSpan(">" 4825..4826) }
token: Text { text: StrSpan("Litierse." 4826..4835) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4837..4838)), span: StrSpan("</p>" 4835..4839) }
token: Text { text: StrSpan("\n" 4839..4840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4841..4842), span: StrSpan("<p" 4840..4842) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4843..4848), value: StrSpan("testo_dialogo" 4850..4863), span: StrSpan("class=\"testo_dialogo\"" 4843..4864) }
token: ElementEnd { end: Open, span: StrSpan(">" 4864..4865) }
token: Text { text: StrSpan("Ospite, sei strano. Mai nessuno sinora ha detto questo davanti al campo. Non la temi la morte sul covone? Speri forse di fuggire tra i solchi come una quaglia o uno scoiattolo?" 4865..5041) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5043..5044)), span: StrSpan("</p>" 5041..5045) }
token: Text { text: StrSpan("\n\n" 5045..5047) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5048..5049), span: StrSpan("<p" 5047..5049) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5050..5055), value: StrSpan("testo_personaggio testo_maiuscoletto" 5057..5093), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5050..5094) }
token: ElementEnd { end: Open, span: StrSpan(">" 5094..5095) }
token: Text { text: StrSpan("Eracle." 5095..5102) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5104..5105)), span: StrSpan("</p>" 5102..5106) }
token: Text { text: StrSpan("\n" 5106..5107) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5108..5109), span: StrSpan("<p" 5107..5109) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5110..5115), value: StrSpan("testo_dialogo" 5117..5130), span: StrSpan("class=\"testo_dialogo\"" 5110..5131) }
token: ElementEnd { end: Open, span: StrSpan(">" 5131..5132) }
token: Text { text: StrSpan("Se ho ben capito, non √® morte ma ritorno alla Madre e come un dono ospitale. Tutti questi villani che s‚Äôaffaticano sul campo, saluteranno con preghiere e con canti chi dar√† il sangue per loro. √à un grande onore." 5132..5348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5350..5351)), span: StrSpan("</p>" 5348..5352) }
token: Text { text: StrSpan("\n\n" 5352..5354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5355..5356), span: StrSpan("<p" 5354..5356) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5357..5362), value: StrSpan("testo_personaggio testo_maiuscoletto" 5364..5400), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5357..5401) }
token: ElementEnd { end: Open, span: StrSpan(">" 5401..5402) }
token: Text { text: StrSpan("Litierse." 5402..5411) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5413..5414)), span: StrSpan("</p>" 5411..5415) }
token: Text { text: StrSpan("\n" 5415..5416) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5417..5418), span: StrSpan("<p" 5416..5418) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5419..5424), value: StrSpan("testo_dialogo" 5426..5439), span: StrSpan("class=\"testo_dialogo\"" 5419..5440) }
token: ElementEnd { end: Open, span: StrSpan(">" 5440..5441) }
token: Text { text: StrSpan("Ospite, grazie. Ti assicuro che il servo che abbiamo scannato l‚Äôaltr‚Äôanno non diceva cos√≠. Era vecchio e sfinito eppure si dovette legarlo con ritorte di scorza e a lungo si dibatt√© sotto le falci, tanto che prima di cadere s‚Äôera gi√† tutto dissanguato." 5441..5702) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5704..5705)), span: StrSpan("</p>" 5702..5706) }
token: Text { text: StrSpan("\n\n" 5706..5708) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5709..5710), span: StrSpan("<p" 5708..5710) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5711..5716), value: StrSpan("testo_personaggio testo_maiuscoletto" 5718..5754), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5711..5755) }
token: ElementEnd { end: Open, span: StrSpan(">" 5755..5756) }
token: Text { text: StrSpan("Eracle." 5756..5763) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5765..5766)), span: StrSpan("</p>" 5763..5767) }
token: Text { text: StrSpan("\n" 5767..5768) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5769..5770), span: StrSpan("<p" 5768..5770) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5771..5776), value: StrSpan("testo_dialogo" 5778..5791), span: StrSpan("class=\"testo_dialogo\"" 5771..5792) }
token: ElementEnd { end: Open, span: StrSpan(">" 5792..5793) }
token: Text { text: StrSpan("Questa volta, Litierse, andr√† meglio. E dimmi, ucciso l‚Äôinfelice, che ne fate?" 5793..5874) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5876..5877)), span: StrSpan("</p>" 5874..5878) }
token: Text { text: StrSpan("\n\n" 5878..5880) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5881..5882), span: StrSpan("<p" 5880..5882) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5883..5888), value: StrSpan("testo_personaggio testo_maiuscoletto" 5890..5926), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5883..5927) }
token: ElementEnd { end: Open, span: StrSpan(">" 5927..5928) }
token: Text { text: StrSpan("Litierse." 5928..5937) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5939..5940)), span: StrSpan("</p>" 5937..5941) }
token: Text { text: StrSpan("\n" 5941..5942) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5943..5944), span: StrSpan("<p" 5942..5944) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5945..5950), value: StrSpan("testo_dialogo" 5952..5965), span: StrSpan("class=\"testo_dialogo\"" 5945..5966) }
token: ElementEnd { end: Open, span: StrSpan(">" 5966..5967) }
token: Text { text: StrSpan("Lo si lacera ancor semivivo, e i brani li spargiamo nei campi a toccar la Madre. Conserviamo la testa sanguinosa avvolgendola in spighe e fiori, e tra canti e allegrie la gettiamo nel Meandro. Perch√© la Madre non √® terra soltanto ma, come ti ho detto, anche nuvola e acqua." 5967..6242) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6244..6245)), span: StrSpan("</p>" 6242..6246) }
token: Text { text: StrSpan("\n\n" 6246..6248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6249..6250), span: StrSpan("<p" 6248..6250) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6251..6256), value: StrSpan("testo_personaggio testo_maiuscoletto" 6258..6294), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6251..6295) }
token: ElementEnd { end: Open, span: StrSpan(">" 6295..6296) }
token: Text { text: StrSpan("Eracle." 6296..6303) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6305..6306)), span: StrSpan("</p>" 6303..6307) }
token: Text { text: StrSpan("\n" 6307..6308) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6309..6310), span: StrSpan("<p" 6308..6310) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6311..6316), value: StrSpan("testo_dialogo" 6318..6331), span: StrSpan("class=\"testo_dialogo\"" 6311..6332) }
token: ElementEnd { end: Open, span: StrSpan(">" 6332..6333) }
token: Text { text: StrSpan("Sai molte cose, tu Litierse, non per nulla sei signore dei campi in Celene. E a Pessino, dimmi, ne uccidono molti?" 6333..6447) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6449..6450)), span: StrSpan("</p>" 6447..6451) }
token: Text { text: StrSpan("\n\n" 6451..6453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6454..6455), span: StrSpan("<p" 6453..6455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6456..6461), value: StrSpan("testo_personaggio testo_maiuscoletto" 6463..6499), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6456..6500) }
token: ElementEnd { end: Open, span: StrSpan(">" 6500..6501) }
token: Text { text: StrSpan("Litierse." 6501..6510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6512..6513)), span: StrSpan("</p>" 6510..6514) }
token: Text { text: StrSpan("\n" 6514..6515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6516..6517), span: StrSpan("<p" 6515..6517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6518..6523), value: StrSpan("testo_dialogo" 6525..6538), span: StrSpan("class=\"testo_dialogo\"" 6518..6539) }
token: ElementEnd { end: Open, span: StrSpan(">" 6539..6540) }
token: Text { text: StrSpan("Dappertutto, straniero, si uccide sotto il sole. Il nostro grano non germoglia che da zolle toccate. La terra √® viva, e deve pure esser nutrita." 6540..6685) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6687..6688)), span: StrSpan("</p>" 6685..6689) }
token: Text { text: StrSpan("\n\n" 6689..6691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6692..6693), span: StrSpan("<p" 6691..6693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6694..6699), value: StrSpan("testo_personaggio testo_maiuscoletto" 6701..6737), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6694..6738) }
token: ElementEnd { end: Open, span: StrSpan(">" 6738..6739) }
token: Text { text: StrSpan("Eracle." 6739..6746) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6748..6749)), span: StrSpan("</p>" 6746..6750) }
token: Text { text: StrSpan("\n" 6750..6751) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6752..6753), span: StrSpan("<p" 6751..6753) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6754..6759), value: StrSpan("testo_dialogo" 6761..6774), span: StrSpan("class=\"testo_dialogo\"" 6754..6775) }
token: ElementEnd { end: Open, span: StrSpan(">" 6775..6776) }
token: Text { text: StrSpan("Ma perch√© chi uccidete dev‚Äôessere straniero? La terra, la grotta che vi ha fatti, dovr√† pur preferire di riprendersi i succhi che pi√∫ le somigliano. Anche tu, quando mangi, non preferisci il pane e il vino del tuo campo?" 6776..7001) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7003..7004)), span: StrSpan("</p>" 7001..7005) }
token: Text { text: StrSpan("\n\n" 7005..7007) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7008..7009), span: StrSpan("<p" 7007..7009) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7010..7015), value: StrSpan("testo_personaggio testo_maiuscoletto" 7017..7053), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7010..7054) }
token: ElementEnd { end: Open, span: StrSpan(">" 7054..7055) }
token: Text { text: StrSpan("Litierse." 7055..7064) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7066..7067)), span: StrSpan("</p>" 7064..7068) }
token: Text { text: StrSpan("\n" 7068..7069) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7070..7071), span: StrSpan("<p" 7069..7071) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7072..7077), value: StrSpan("testo_dialogo" 7079..7092), span: StrSpan("class=\"testo_dialogo\"" 7072..7093) }
token: ElementEnd { end: Open, span: StrSpan(">" 7093..7094) }
token: Text { text: StrSpan("Tu mi piaci, straniero, ti prendi a cuore il nostro bene come se fossi figlio nostro. Ma rifletti un momento perch√© duriamo la fatica e l‚Äôaffanno di questi lavori. Per vivere, no? E dunque √® giusto che noi restiamo in vita a goderci la messe, e che muoiano gli altri. Tu non sei contadino." 7094..7387) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7389..7390)), span: StrSpan("</p>" 7387..7391) }
token: Text { text: StrSpan("\n\n" 7391..7393) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7394..7395), span: StrSpan("<p" 7393..7395) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7396..7401), value: StrSpan("testo_personaggio testo_maiuscoletto" 7403..7439), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7396..7440) }
token: ElementEnd { end: Open, span: StrSpan(">" 7440..7441) }
token: Text { text: StrSpan("Eracle." 7441..7448) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7450..7451)), span: StrSpan("</p>" 7448..7452) }
token: Text { text: StrSpan("\n" 7452..7453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7454..7455), span: StrSpan("<p" 7453..7455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7456..7461), value: StrSpan("testo_dialogo" 7463..7476), span: StrSpan("class=\"testo_dialogo\"" 7456..7477) }
token: ElementEnd { end: Open, span: StrSpan(">" 7477..7478) }
token: Text { text: StrSpan("Ma non sarebbe anche pi√∫ giusto trovare il modo di por fine alle uccisioni e che tutti, stranieri e paesani, mangiassero il grano? Uccidere un‚Äôultima volta chi da solo fecondasse per sempre la terra e le nubi e la forza del sole su questa piana?" 7478..7726) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7728..7729)), span: StrSpan("</p>" 7726..7730) }
token: Text { text: StrSpan("\n\n" 7730..7732) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7733..7734), span: StrSpan("<p" 7732..7734) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7735..7740), value: StrSpan("testo_personaggio testo_maiuscoletto" 7742..7778), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7735..7779) }
token: ElementEnd { end: Open, span: StrSpan(">" 7779..7780) }
token: Text { text: StrSpan("Litierse." 7780..7789) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7791..7792)), span: StrSpan("</p>" 7789..7793) }
token: Text { text: StrSpan("\n" 7793..7794) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7795..7796), span: StrSpan("<p" 7794..7796) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7797..7802), value: StrSpan("testo_dialogo" 7804..7817), span: StrSpan("class=\"testo_dialogo\"" 7797..7818) }
token: ElementEnd { end: Open, span: StrSpan(">" 7818..7819) }
token: Text { text: StrSpan("Tu non sei contadino, lo vedo. Non sai nemmeno che la terra ricomincia a ogni solstizio e che il giro dell‚Äôanno esaurisce ogni cosa." 7819..7953) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7955..7956)), span: StrSpan("</p>" 7953..7957) }
token: Text { text: StrSpan("\n\n" 7957..7959) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7960..7961), span: StrSpan("<p" 7959..7961) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7962..7967), value: StrSpan("testo_personaggio testo_maiuscoletto" 7969..8005), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7962..8006) }
token: ElementEnd { end: Open, span: StrSpan(">" 8006..8007) }
token: Text { text: StrSpan("Eracle." 8007..8014) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8016..8017)), span: StrSpan("</p>" 8014..8018) }
token: Text { text: StrSpan("\n" 8018..8019) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8020..8021), span: StrSpan("<p" 8019..8021) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8022..8027), value: StrSpan("testo_dialogo" 8029..8042), span: StrSpan("class=\"testo_dialogo\"" 8022..8043) }
token: ElementEnd { end: Open, span: StrSpan(">" 8043..8044) }
token: Text { text: StrSpan("Ma ci sar√† su questa piana chi si √® nutrito, risalendo i suoi padri, di tutti i succhi delle stagioni, chi √® tanto ricco e tanto forte e di sangue cos√≠ generoso, da bastare una volta per tutte a rifare la terra delle stagioni passate?" 8044..8282) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8284..8285)), span: StrSpan("</p>" 8282..8286) }
token: Text { text: StrSpan("\n\n" 8286..8288) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8289..8290), span: StrSpan("<p" 8288..8290) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8291..8296), value: StrSpan("testo_personaggio testo_maiuscoletto" 8298..8334), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8291..8335) }
token: ElementEnd { end: Open, span: StrSpan(">" 8335..8336) }
token: Text { text: StrSpan("Litierse." 8336..8345) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8347..8348)), span: StrSpan("</p>" 8345..8349) }
token: Text { text: StrSpan("\n" 8349..8350) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8351..8352), span: StrSpan("<p" 8350..8352) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8353..8358), value: StrSpan("testo_dialogo" 8360..8373), span: StrSpan("class=\"testo_dialogo\"" 8353..8374) }
token: ElementEnd { end: Open, span: StrSpan(">" 8374..8375) }
token: Text { text: StrSpan("Tu mi fai ridere, straniero. Sembra quasi che parli di me. Sono il solo in Celene che, attraverso i miei padri, sono sempre vissuto quaggi√∫. Sono il signore, e tu lo sai." 8375..8546) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8548..8549)), span: StrSpan("</p>" 8546..8550) }
token: Text { text: StrSpan("\n\n" 8550..8552) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8553..8554), span: StrSpan("<p" 8552..8554) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8555..8560), value: StrSpan("testo_personaggio testo_maiuscoletto" 8562..8598), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8555..8599) }
token: ElementEnd { end: Open, span: StrSpan(">" 8599..8600) }
token: Text { text: StrSpan("Eracle." 8600..8607) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8609..8610)), span: StrSpan("</p>" 8607..8611) }
token: Text { text: StrSpan("\n" 8611..8612) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8613..8614), span: StrSpan("<p" 8612..8614) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8615..8620), value: StrSpan("testo_dialogo" 8622..8635), span: StrSpan("class=\"testo_dialogo\"" 8615..8636) }
token: ElementEnd { end: Open, span: StrSpan(">" 8636..8637) }
token: Text { text: StrSpan("Parlo infatti di te. Mieteremo, Litierse. Sono venuto dalla Grecia per quest‚Äôopera di sangue. Mieteremo. E stasera rientrerai nella grotta." 8637..8778) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8780..8781)), span: StrSpan("</p>" 8778..8782) }
token: Text { text: StrSpan("\n\n" 8782..8784) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8785..8786), span: StrSpan("<p" 8784..8786) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8787..8792), value: StrSpan("testo_personaggio testo_maiuscoletto" 8794..8830), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8787..8831) }
token: ElementEnd { end: Open, span: StrSpan(">" 8831..8832) }
token: Text { text: StrSpan("Litierse." 8832..8841) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8843..8844)), span: StrSpan("</p>" 8841..8845) }
token: Text { text: StrSpan("\n" 8845..8846) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8847..8848), span: StrSpan("<p" 8846..8848) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8849..8854), value: StrSpan("testo_dialogo" 8856..8869), span: StrSpan("class=\"testo_dialogo\"" 8849..8870) }
token: ElementEnd { end: Open, span: StrSpan(">" 8870..8871) }
token: Text { text: StrSpan("Vuoi uccidere me, sul mio campo?" 8871..8903) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8905..8906)), span: StrSpan("</p>" 8903..8907) }
token: Text { text: StrSpan("\n\n" 8907..8909) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8910..8911), span: StrSpan("<p" 8909..8911) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8912..8917), value: StrSpan("testo_personaggio testo_maiuscoletto" 8919..8955), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8912..8956) }
token: ElementEnd { end: Open, span: StrSpan(">" 8956..8957) }
token: Text { text: StrSpan("Eracle." 8957..8964) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8966..8967)), span: StrSpan("</p>" 8964..8968) }
token: Text { text: StrSpan("\n" 8968..8969) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8970..8971), span: StrSpan("<p" 8969..8971) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8972..8977), value: StrSpan("testo_dialogo" 8979..8992), span: StrSpan("class=\"testo_dialogo\"" 8972..8993) }
token: ElementEnd { end: Open, span: StrSpan(">" 8993..8994) }
token: Text { text: StrSpan("Voglio combattere con te fino alla morte." 8994..9035) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9037..9038)), span: StrSpan("</p>" 9035..9039) }
token: Text { text: StrSpan("\n\n" 9039..9041) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9042..9043), span: StrSpan("<p" 9041..9043) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9044..9049), value: StrSpan("testo_personaggio testo_maiuscoletto" 9051..9087), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9044..9088) }
token: ElementEnd { end: Open, span: StrSpan(">" 9088..9089) }
token: Text { text: StrSpan("Litierse." 9089..9098) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9100..9101)), span: StrSpan("</p>" 9098..9102) }
token: Text { text: StrSpan("\n" 9102..9103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9104..9105), span: StrSpan("<p" 9103..9105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9106..9111), value: StrSpan("testo_dialogo" 9113..9126), span: StrSpan("class=\"testo_dialogo\"" 9106..9127) }
token: ElementEnd { end: Open, span: StrSpan(">" 9127..9128) }
token: Text { text: StrSpan("Sai almeno menarla la falce, straniero?" 9128..9167) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9169..9170)), span: StrSpan("</p>" 9167..9171) }
token: Text { text: StrSpan("\n\n" 9171..9173) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9174..9175), span: StrSpan("<p" 9173..9175) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9176..9181), value: StrSpan("testo_personaggio testo_maiuscoletto" 9183..9219), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9176..9220) }
token: ElementEnd { end: Open, span: StrSpan(">" 9220..9221) }
token: Text { text: StrSpan("Eracle." 9221..9228) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9230..9231)), span: StrSpan("</p>" 9228..9232) }
token: Text { text: StrSpan("\n" 9232..9233) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9234..9235), span: StrSpan("<p" 9233..9235) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9236..9241), value: StrSpan("testo_dialogo" 9243..9256), span: StrSpan("class=\"testo_dialogo\"" 9236..9257) }
token: ElementEnd { end: Open, span: StrSpan(">" 9257..9258) }
token: Text { text: StrSpan("Stai tranquillo, Litierse. Fatti sotto." 9258..9297) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9299..9300)), span: StrSpan("</p>" 9297..9301) }
token: Text { text: StrSpan("\n\n" 9301..9303) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9304..9305), span: StrSpan("<p" 9303..9305) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9306..9311), value: StrSpan("testo_personaggio testo_maiuscoletto" 9313..9349), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9306..9350) }
token: ElementEnd { end: Open, span: StrSpan(">" 9350..9351) }
token: Text { text: StrSpan("Litierse." 9351..9360) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9362..9363)), span: StrSpan("</p>" 9360..9364) }
token: Text { text: StrSpan("\n" 9364..9365) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9366..9367), span: StrSpan("<p" 9365..9367) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9368..9373), value: StrSpan("testo_dialogo" 9375..9388), span: StrSpan("class=\"testo_dialogo\"" 9368..9389) }
token: ElementEnd { end: Open, span: StrSpan(">" 9389..9390) }
token: Text { text: StrSpan("Certo, le braccia le hai robuste." 9390..9423) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9425..9426)), span: StrSpan("</p>" 9423..9427) }
token: Text { text: StrSpan("\n\n" 9427..9429) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9430..9431), span: StrSpan("<p" 9429..9431) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9432..9437), value: StrSpan("testo_personaggio testo_maiuscoletto" 9439..9475), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9432..9476) }
token: ElementEnd { end: Open, span: StrSpan(">" 9476..9477) }
token: Text { text: StrSpan("Eracle." 9477..9484) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9486..9487)), span: StrSpan("</p>" 9484..9488) }
token: Text { text: StrSpan("\n" 9488..9489) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9490..9491), span: StrSpan("<p" 9489..9491) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9492..9497), value: StrSpan("testo_dialogo" 9499..9512), span: StrSpan("class=\"testo_dialogo\"" 9492..9513) }
token: ElementEnd { end: Open, span: StrSpan(">" 9513..9514) }
token: Text { text: StrSpan("Fatti sotto." 9514..9526) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9528..9529)), span: StrSpan("</p>" 9526..9530) }
token: Text { text: StrSpan("\n" 9530..9531) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 9533..9537)), span: StrSpan("</body>" 9531..9538) }
token: Text { text: StrSpan("\n" 9538..9539) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 9541..9545)), span: StrSpan("</html>" 9539..9546) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("I fuochi" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("Anche i Greci praticarono sacrifici umani. Ogni civilt√† contadina ha fatto questo. E tutte le civilt√† sono state contadine." 358..483) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 485..486)), span: StrSpan("</p>" 483..487) }
token: Text { text: StrSpan("\n\n" 487..489) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 490..491), span: StrSpan("<p" 489..491) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 492..497), value: StrSpan("testo_indicazioni_scena" 499..522), span: StrSpan("class=\"testo_indicazioni_scena\"" 492..523) }
token: ElementEnd { end: Open, span: StrSpan(">" 523..524) }
token: Text { text: StrSpan("(parlano due pastori)" 524..545) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 547..548)), span: StrSpan("</p>" 545..549) }
token: Text { text: StrSpan("\n\n\n" 549..552) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 553..554), span: StrSpan("<p" 552..554) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 555..560), value: StrSpan("testo_personaggio testo_maiuscoletto" 562..598), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 555..599) }
token: ElementEnd { end: Open, span: StrSpan(">" 599..600) }
token: Text { text: StrSpan("Figlio." 600..607) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 609..610)), span: StrSpan("</p>" 607..611) }
token: Text { text: StrSpan("\n" 611..612) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 613..614), span: StrSpan("<p" 612..614) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 615..620), value: StrSpan("testo_dialogo" 622..635), span: StrSpan("class=\"testo_dialogo\"" 615..636) }
token: ElementEnd { end: Open, span: StrSpan(">" 636..637) }
token: Text { text: StrSpan("Tutta la montagna brucia." 637..662) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 664..665)), span: StrSpan("</p>" 662..666) }
token: Text { text: StrSpan("\n\n" 666..668) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 669..670), span: StrSpan("<p" 668..670) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 671..676), value: StrSpan("testo_personaggio testo_maiuscoletto" 678..714), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 671..715) }
token: ElementEnd { end: Open, span: StrSpan(">" 715..716) }
token: Text { text: StrSpan("Padre." 716..722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 724..725)), span: StrSpan("</p>" 722..726) }
token: Text { text: StrSpan("\n" 726..727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 728..729), span: StrSpan("<p" 727..729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 730..735), value: StrSpan("testo_dialogo" 737..750), span: StrSpan("class=\"testo_dialogo\"" 730..751) }
token: ElementEnd { end: Open, span: StrSpan(">" 751..752) }
token: Text { text: StrSpan("Si fa tanto per fare. Certo stanotte il Citerone √® un‚Äôaltra cosa. Quest‚Äôanno pascoliamo troppo in alto. Hai raccolto le bestie?" 752..884) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 886..887)), span: StrSpan("</p>" 884..888) }
token: Text { text: StrSpan("\n\n" 888..890) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 891..892), span: StrSpan("<p" 890..892) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 893..898), value: StrSpan("testo_personaggio testo_maiuscoletto" 900..936), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 893..937) }
token: ElementEnd { end: Open, span: StrSpan(">" 937..938) }
token: Text { text: StrSpan("Figlio." 938..945) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 947..948)), span: StrSpan("</p>" 945..949) }
token: Text { text: StrSpan("\n" 949..950) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 951..952), span: StrSpan("<p" 950..952) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 953..958), value: StrSpan("testo_dialogo" 960..973), span: StrSpan("class=\"testo_dialogo\"" 953..974) }
token: ElementEnd { end: Open, span: StrSpan(">" 974..975) }
token: Text { text: StrSpan("Il nostro fal√≤ non lo vede nessuno." 975..1011) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1013..1014)), span: StrSpan("</p>" 1011..1015) }
token: Text { text: StrSpan("\n\n" 1015..1017) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1018..1019), span: StrSpan("<p" 1017..1019) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1020..1025), value: StrSpan("testo_personaggio testo_maiuscoletto" 1027..1063), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1020..1064) }
token: ElementEnd { end: Open, span: StrSpan(">" 1064..1065) }
token: Text { text: StrSpan("Padre." 1065..1071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1073..1074)), span: StrSpan("</p>" 1071..1075) }
token: Text { text: StrSpan("\n" 1075..1076) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1077..1078), span: StrSpan("<p" 1076..1078) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1079..1084), value: StrSpan("testo_dialogo" 1086..1099), span: StrSpan("class=\"testo_dialogo\"" 1079..1100) }
token: ElementEnd { end: Open, span: StrSpan(">" 1100..1101) }
token: Text { text: StrSpan("Noi lo facciamo, non importa." 1101..1130) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1132..1133)), span: StrSpan("</p>" 1130..1134) }
token: Text { text: StrSpan("\n\n" 1134..1136) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1137..1138), span: StrSpan("<p" 1136..1138) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1139..1144), value: StrSpan("testo_personaggio testo_maiuscoletto" 1146..1182), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1139..1183) }
token: ElementEnd { end: Open, span: StrSpan(">" 1183..1184) }
token: Text { text: StrSpan("Figlio." 1184..1191) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1193..1194)), span: StrSpan("</p>" 1191..1195) }
token: Text { text: StrSpan("\n" 1195..1196) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1197..1198), span: StrSpan("<p" 1196..1198) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1199..1204), value: StrSpan("testo_dialogo" 1206..1219), span: StrSpan("class=\"testo_dialogo\"" 1199..1220) }
token: ElementEnd { end: Open, span: StrSpan(">" 1220..1221) }
token: Text { text: StrSpan("Ci sono pi√∫ fuochi che stelle." 1221..1252) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1254..1255)), span: StrSpan("</p>" 1252..1256) }
token: Text { text: StrSpan("\n\n" 1256..1258) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1259..1260), span: StrSpan("<p" 1258..1260) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1261..1266), value: StrSpan("testo_personaggio testo_maiuscoletto" 1268..1304), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1261..1305) }
token: ElementEnd { end: Open, span: StrSpan(">" 1305..1306) }
token: Text { text: StrSpan("Padre." 1306..1312) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1314..1315)), span: StrSpan("</p>" 1312..1316) }
token: Text { text: StrSpan("\n" 1316..1317) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1318..1319), span: StrSpan("<p" 1317..1319) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1320..1325), value: StrSpan("testo_dialogo" 1327..1340), span: StrSpan("class=\"testo_dialogo\"" 1320..1341) }
token: ElementEnd { end: Open, span: StrSpan(">" 1341..1342) }
token: Text { text: StrSpan("Metti la brace." 1342..1357) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1359..1360)), span: StrSpan("</p>" 1357..1361) }
token: Text { text: StrSpan("\n\n" 1361..1363) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1364..1365), span: StrSpan("<p" 1363..1365) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1366..1371), value: StrSpan("testo_personaggio testo_maiuscoletto" 1373..1409), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1366..1410) }
token: ElementEnd { end: Open, span: StrSpan(">" 1410..1411) }
token: Text { text: StrSpan("Figlio." 1411..1418) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1420..1421)), span: StrSpan("</p>" 1418..1422) }
token: Text { text: StrSpan("\n" 1422..1423) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1424..1425), span: StrSpan("<p" 1423..1425) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1426..1431), value: StrSpan("testo_dialogo" 1433..1446), span: StrSpan("class=\"testo_dialogo\"" 1426..1447) }
token: ElementEnd { end: Open, span: StrSpan(">" 1447..1448) }
token: Text { text: StrSpan("√à fatto." 1448..1457) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1459..1460)), span: StrSpan("</p>" 1457..1461) }
token: Text { text: StrSpan("\n\n" 1461..1463) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1464..1465), span: StrSpan("<p" 1463..1465) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1466..1471), value: StrSpan("testo_personaggio testo_maiuscoletto" 1473..1509), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1466..1510) }
token: ElementEnd { end: Open, span: StrSpan(">" 1510..1511) }
token: Text { text: StrSpan("Padre." 1511..1517) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1519..1520)), span: StrSpan("</p>" 1517..1521) }
token: Text { text: StrSpan("\n" 1521..1522) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1523..1524), span: StrSpan("<p" 1522..1524) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1525..1530), value: StrSpan("testo_dialogo" 1532..1545), span: StrSpan("class=\"testo_dialogo\"" 1525..1546) }
token: ElementEnd { end: Open, span: StrSpan(">" 1546..1547) }
token: Text { text: StrSpan("O Zeus, accogli quest‚Äôofferta di latte e miele dolce; noi siamo poveri pastori e del gregge non nostro non possiamo disporre. Questo fuoco che brucia allontani i malanni e, come si copre di spire di fumo, ci copra di nubi‚Ä¶ Bagna e spruzza, ragazzo. Basta che uccidano il vitello nelle grosse masserie. Se piove, piove dappertutto." 1547..1881) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1883..1884)), span: StrSpan("</p>" 1881..1885) }
token: Text { text: StrSpan("\n\n" 1885..1887) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1888..1889), span: StrSpan("<p" 1887..1889) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1890..1895), value: StrSpan("testo_personaggio testo_maiuscoletto" 1897..1933), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1890..1934) }
token: ElementEnd { end: Open, span: StrSpan(">" 1934..1935) }
token: Text { text: StrSpan("Figlio." 1935..1942) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1944..1945)), span: StrSpan("</p>" 1942..1946) }
token: Text { text: StrSpan("\n" 1946..1947) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1948..1949), span: StrSpan("<p" 1947..1949) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1950..1955), value: StrSpan("testo_dialogo" 1957..1970), span: StrSpan("class=\"testo_dialogo\"" 1950..1971) }
token: ElementEnd { end: Open, span: StrSpan(">" 1971..1972) }
token: Text { text: StrSpan("Padre, laggi√∫ son fuochi o stelle?" 1972..2007) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2009..2010)), span: StrSpan("</p>" 2007..2011) }
token: Text { text: StrSpan("\n\n" 2011..2013) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2014..2015), span: StrSpan("<p" 2013..2015) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2016..2021), value: StrSpan("testo_personaggio testo_maiuscoletto" 2023..2059), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2016..2060) }
token: ElementEnd { end: Open, span: StrSpan(">" 2060..2061) }
token: Text { text: StrSpan("Padre." 2061..2067) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2069..2070)), span: StrSpan("</p>" 2067..2071) }
token: Text { text: StrSpan("\n" 2071..2072) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2073..2074), span: StrSpan("<p" 2072..2074) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2075..2080), value: StrSpan("testo_dialogo" 2082..2095), span: StrSpan("class=\"testo_dialogo\"" 2075..2096) }
token: ElementEnd { end: Open, span: StrSpan(">" 2096..2097) }
token: Text { text: StrSpan("Non guardare di l√†. Devi spruzzare verso il mare. Le piogge salgono dal mare." 2097..2175) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2177..2178)), span: StrSpan("</p>" 2175..2179) }
token: Text { text: StrSpan("\n\n" 2179..2181) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2182..2183), span: StrSpan("<p" 2181..2183) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2184..2189), value: StrSpan("testo_personaggio testo_maiuscoletto" 2191..2227), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2184..2228) }
token: ElementEnd { end: Open, span: StrSpan(">" 2228..2229) }
token: Text { text: StrSpan("Figlio." 2229..2236) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2238..2239)), span: StrSpan("</p>" 2236..2240) }
token: Text { text: StrSpan("\n" 2240..2241) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2242..2243), span: StrSpan("<p" 2241..2243) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2244..2249), value: StrSpan("testo_dialogo" 2251..2264), span: StrSpan("class=\"testo_dialogo\"" 2244..2265) }
token: ElementEnd { end: Open, span: StrSpan(">" 2265..2266) }
token: Text { text: StrSpan("Padre, la pioggia va lontano? Piove davvero dappertutto, quando piove? Anche a Tespie? Anche a Tebe? Lass√∫ il mare non l‚Äôhanno." 2266..2396) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2398..2399)), span: StrSpan("</p>" 2396..2400) }
token: Text { text: StrSpan("\n\n" 2400..2402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2403..2404), span: StrSpan("<p" 2402..2404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2405..2410), value: StrSpan("testo_personaggio testo_maiuscoletto" 2412..2448), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2405..2449) }
token: ElementEnd { end: Open, span: StrSpan(">" 2449..2450) }
token: Text { text: StrSpan("Padre." 2450..2456) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2458..2459)), span: StrSpan("</p>" 2456..2460) }
token: Text { text: StrSpan("\n" 2460..2461) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2462..2463), span: StrSpan("<p" 2461..2463) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2464..2469), value: StrSpan("testo_dialogo" 2471..2484), span: StrSpan("class=\"testo_dialogo\"" 2464..2485) }
token: ElementEnd { end: Open, span: StrSpan(">" 2485..2486) }
token: Text { text: StrSpan("Ma hanno i pascoli, sciocco. Han bisogno di pozzi. Anche loro stanotte hanno acceso i fal√≤." 2486..2578) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2580..2581)), span: StrSpan("</p>" 2578..2582) }
token: Text { text: StrSpan("\n\n" 2582..2584) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2585..2586), span: StrSpan("<p" 2584..2586) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2587..2592), value: StrSpan("testo_personaggio testo_maiuscoletto" 2594..2630), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2587..2631) }
token: ElementEnd { end: Open, span: StrSpan(">" 2631..2632) }
token: Text { text: StrSpan("Figlio." 2632..2639) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2641..2642)), span: StrSpan("</p>" 2639..2643) }
token: Text { text: StrSpan("\n" 2643..2644) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2645..2646), span: StrSpan("<p" 2644..2646) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2647..2652), value: StrSpan("testo_dialogo" 2654..2667), span: StrSpan("class=\"testo_dialogo\"" 2647..2668) }
token: ElementEnd { end: Open, span: StrSpan(">" 2668..2669) }
token: Text { text: StrSpan("Ma dopo Tespie? Pi√∫ lontano? Dove la gente che cammina giorno e notte √® sempre in mezzo alle montagne? A me hanno detto che lass√∫ non piove mai." 2669..2816) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2818..2819)), span: StrSpan("</p>" 2816..2820) }
token: Text { text: StrSpan("\n\n" 2820..2822) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2823..2824), span: StrSpan("<p" 2822..2824) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2825..2830), value: StrSpan("testo_personaggio testo_maiuscoletto" 2832..2868), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2825..2869) }
token: ElementEnd { end: Open, span: StrSpan(">" 2869..2870) }
token: Text { text: StrSpan("Padre." 2870..2876) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2878..2879)), span: StrSpan("</p>" 2876..2880) }
token: Text { text: StrSpan("\n" 2880..2881) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2882..2883), span: StrSpan("<p" 2881..2883) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2884..2889), value: StrSpan("testo_dialogo" 2891..2904), span: StrSpan("class=\"testo_dialogo\"" 2884..2905) }
token: ElementEnd { end: Open, span: StrSpan(">" 2905..2906) }
token: Text { text: StrSpan("Dappertutto stanotte ci sono i fal√≤." 2906..2943) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2945..2946)), span: StrSpan("</p>" 2943..2947) }
token: Text { text: StrSpan("\n\n" 2947..2949) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2950..2951), span: StrSpan("<p" 2949..2951) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2952..2957), value: StrSpan("testo_personaggio testo_maiuscoletto" 2959..2995), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2952..2996) }
token: ElementEnd { end: Open, span: StrSpan(">" 2996..2997) }
token: Text { text: StrSpan("Figlio." 2997..3004) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3006..3007)), span: StrSpan("</p>" 3004..3008) }
token: Text { text: StrSpan("\n" 3008..3009) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3010..3011), span: StrSpan("<p" 3009..3011) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3012..3017), value: StrSpan("testo_dialogo" 3019..3032), span: StrSpan("class=\"testo_dialogo\"" 3012..3033) }
token: ElementEnd { end: Open, span: StrSpan(">" 3033..3034) }
token: Text { text: StrSpan("Perch√© adesso non piove? I fal√≤ li hanno accesi." 3034..3084) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3086..3087)), span: StrSpan("</p>" 3084..3088) }
token: Text { text: StrSpan("\n\n" 3088..3090) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3091..3092), span: StrSpan("<p" 3090..3092) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3093..3098), value: StrSpan("testo_personaggio testo_maiuscoletto" 3100..3136), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3093..3137) }
token: ElementEnd { end: Open, span: StrSpan(">" 3137..3138) }
token: Text { text: StrSpan("Padre." 3138..3144) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3146..3147)), span: StrSpan("</p>" 3144..3148) }
token: Text { text: StrSpan("\n" 3148..3149) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3150..3151), span: StrSpan("<p" 3149..3151) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3152..3157), value: StrSpan("testo_dialogo" 3159..3172), span: StrSpan("class=\"testo_dialogo\"" 3152..3173) }
token: ElementEnd { end: Open, span: StrSpan(">" 3173..3174) }
token: Text { text: StrSpan("√à la festa, ragazzo. Se piovesse li spegnerebbe. A chi conviene? Piover√† domani." 3174..3256) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3258..3259)), span: StrSpan("</p>" 3256..3260) }
token: Text { text: StrSpan("\n\n" 3260..3262) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3263..3264), span: StrSpan("<p" 3262..3264) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3265..3270), value: StrSpan("testo_personaggio testo_maiuscoletto" 3272..3308), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3265..3309) }
token: ElementEnd { end: Open, span: StrSpan(">" 3309..3310) }
token: Text { text: StrSpan("Figlio." 3310..3317) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3319..3320)), span: StrSpan("</p>" 3317..3321) }
token: Text { text: StrSpan("\n" 3321..3322) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3323..3324), span: StrSpan("<p" 3322..3324) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3325..3330), value: StrSpan("testo_dialogo" 3332..3345), span: StrSpan("class=\"testo_dialogo\"" 3325..3346) }
token: ElementEnd { end: Open, span: StrSpan(">" 3346..3347) }
token: Text { text: StrSpan("E sui fal√≤ mentre ancora bruciavano non √® mai piovuto?" 3347..3403) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3405..3406)), span: StrSpan("</p>" 3403..3407) }
token: Text { text: StrSpan("\n\n" 3407..3409) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3410..3411), span: StrSpan("<p" 3409..3411) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3412..3417), value: StrSpan("testo_personaggio testo_maiuscoletto" 3419..3455), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3412..3456) }
token: ElementEnd { end: Open, span: StrSpan(">" 3456..3457) }
token: Text { text: StrSpan("Padre." 3457..3463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3465..3466)), span: StrSpan("</p>" 3463..3467) }
token: Text { text: StrSpan("\n" 3467..3468) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3469..3470), span: StrSpan("<p" 3468..3470) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3471..3476), value: StrSpan("testo_dialogo" 3478..3491), span: StrSpan("class=\"testo_dialogo\"" 3471..3492) }
token: ElementEnd { end: Open, span: StrSpan(">" 3492..3493) }
token: Text { text: StrSpan("Chi lo sa? Tu non eri ancor nato e io nemmeno, e gi√† accendevano i fal√≤. Sempre stanotte. Si dice che una volta √® piovuto, sul fal√≤." 3493..3629) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3631..3632)), span: StrSpan("</p>" 3629..3633) }
token: Text { text: StrSpan("\n\n" 3633..3635) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3636..3637), span: StrSpan("<p" 3635..3637) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3638..3643), value: StrSpan("testo_personaggio testo_maiuscoletto" 3645..3681), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3638..3682) }
token: ElementEnd { end: Open, span: StrSpan(">" 3682..3683) }
token: Text { text: StrSpan("Figlio." 3683..3690) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3692..3693)), span: StrSpan("</p>" 3690..3694) }
token: Text { text: StrSpan("\n" 3694..3695) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3696..3697), span: StrSpan("<p" 3695..3697) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3698..3703), value: StrSpan("testo_dialogo" 3705..3718), span: StrSpan("class=\"testo_dialogo\"" 3698..3719) }
token: ElementEnd { end: Open, span: StrSpan(">" 3719..3720) }
token: Text { text: StrSpan("S√≠?" 3720..3724) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3726..3727)), span: StrSpan("</p>" 3724..3728) }
token: Text { text: StrSpan("\n\n" 3728..3730) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3731..3732), span: StrSpan("<p" 3730..3732) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3733..3738), value: StrSpan("testo_personaggio testo_maiuscoletto" 3740..3776), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3733..3777) }
token: ElementEnd { end: Open, span: StrSpan(">" 3777..3778) }
token: Text { text: StrSpan("Padre." 3778..3784) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3786..3787)), span: StrSpan("</p>" 3784..3788) }
token: Text { text: StrSpan("\n" 3788..3789) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3790..3791), span: StrSpan("<p" 3789..3791) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3792..3797), value: StrSpan("testo_dialogo" 3799..3812), span: StrSpan("class=\"testo_dialogo\"" 3792..3813) }
token: ElementEnd { end: Open, span: StrSpan(">" 3813..3814) }
token: Text { text: StrSpan("Ma √® stato quando l‚Äôuomo viveva pi√∫ giusto che adesso, e anche i figli dei re eran pastori. Tutta questa terra era come l‚Äôaia, allora, pulita e battuta, e ubbidiva al re Atamante. Si lavorava e si viveva e non c‚Äôera bisogno di nascondere i capretti al padrone. Dicono che venne una tremenda canicola e cos√≠ i pascoli e i pozzi seccarono e la gente moriva. I fal√≤ non servivano a niente. Allora Atamante chiese consiglio. Ma era vecchio e aveva in casa da poco una sposa, giovane che comandava, e cominci√≤ a empirgli la testa che non era il momento di mostrarsi molle, di perdere il credito. Avevano pregato e spruzzato? S√≠. Avevano ucciso il vitello e il toro, molti tori? S√≠. Che cos‚Äôera seguito? Niente. Dunque offrissero i figli. Capisci? Ma non mica i suoi di lei, che non li aveva: figurarsi; i due figli gi√† grandi della prima moglie, due ragazzi che lavoravano in campagna tutto il giorno. E Atamante, balordo, si decise: li manda a chiamare. Quelli capiscono, si sa, i figli del re non sono scemi, e allora gambe. E con loro sparirono le prime nuvole, che appena saputa una cosa simile un dio aveva mandato sulla campagna. E subito quella strega a dire: ¬´" 3814..4994) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 4995..4996), span: StrSpan("<q" 4994..4996) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4997..5002), value: StrSpan("testo_no_virgolette" 5004..5023), span: StrSpan("class=\"testo_no_virgolette\"" 4997..5024) }
token: ElementEnd { end: Open, span: StrSpan(">" 5024..5025) }
token: Text { text: StrSpan("Vedete? l‚Äôidea era giusta, le nuvole gi√† c‚Äôerano; qui bisogna scannare qualcuno" 5025..5109) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 5111..5112)), span: StrSpan("</q>" 5109..5113) }
token: Text { text: StrSpan("¬ª. E tanto fa che la gente decide di pigliarsi Atamante e bruciarlo. Preparano il fuoco, lo accendono; conducono Atamante legato e infiorato come il bue, e quando stanno per buttarlo nel fal√≤ il tempo si guasta. Tuona, lampeggia e viene gi√π un‚Äôacqua da dio. La campagna rinasce. L‚Äôacqua spegne il fal√≤ e Atamante, buon uomo, perdona tutti, anche la moglie. Stai attento, ragazzo, alle donne. √à pi√∫ facile conoscere la serpe dal serpe." 5113..5557) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5559..5560)), span: StrSpan("</p>" 5557..5561) }
token: Text { text: StrSpan("\n\n" 5561..5563) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5564..5565), span: StrSpan("<p" 5563..5565) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5566..5571), value: StrSpan("testo_personaggio testo_maiuscoletto" 5573..5609), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5566..5610) }
token: ElementEnd { end: Open, span: StrSpan(">" 5610..5611) }
token: Text { text: StrSpan("Figlio." 5611..5618) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5620..5621)), span: StrSpan("</p>" 5618..5622) }
token: Text { text: StrSpan("\n" 5622..5623) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5624..5625), span: StrSpan("<p" 5623..5625) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5626..5631), value: StrSpan("testo_dialogo" 5633..5646), span: StrSpan("class=\"testo_dialogo\"" 5626..5647) }
token: ElementEnd { end: Open, span: StrSpan(">" 5647..5648) }
token: Text { text: StrSpan("E i figlioli del re?" 5648..5668) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5670..5671)), span: StrSpan("</p>" 5668..5672) }
token: Text { text: StrSpan("\n\n" 5672..5674) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5675..5676), span: StrSpan("<p" 5674..5676) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5677..5682), value: StrSpan("testo_personaggio testo_maiuscoletto" 5684..5720), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5677..5721) }
token: ElementEnd { end: Open, span: StrSpan(">" 5721..5722) }
token: Text { text: StrSpan("Padre." 5722..5728) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5730..5731)), span: StrSpan("</p>" 5728..5732) }
token: Text { text: StrSpan("\n" 5732..5733) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5734..5735), span: StrSpan("<p" 5733..5735) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5736..5741), value: StrSpan("testo_dialogo" 5743..5756), span: StrSpan("class=\"testo_dialogo\"" 5736..5757) }
token: ElementEnd { end: Open, span: StrSpan(">" 5757..5758) }
token: Text { text: StrSpan("Non se n‚Äô√® pi√∫ saputo niente. Ma due ragazzi come quelli avran trovato da far bene." 5758..5845) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5847..5848)), span: StrSpan("</p>" 5845..5849) }
token: Text { text: StrSpan("\n\n" 5849..5851) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5852..5853), span: StrSpan("<p" 5851..5853) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5854..5859), value: StrSpan("testo_personaggio testo_maiuscoletto" 5861..5897), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5854..5898) }
token: ElementEnd { end: Open, span: StrSpan(">" 5898..5899) }
token: Text { text: StrSpan("Figlio." 5899..5906) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5908..5909)), span: StrSpan("</p>" 5906..5910) }
token: Text { text: StrSpan("\n" 5910..5911) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5912..5913), span: StrSpan("<p" 5911..5913) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5914..5919), value: StrSpan("testo_dialogo" 5921..5934), span: StrSpan("class=\"testo_dialogo\"" 5914..5935) }
token: ElementEnd { end: Open, span: StrSpan(">" 5935..5936) }
token: Text { text: StrSpan("E se a quel tempo erano giusti, perch√© volevano bruciare due ragazzi?" 5936..6006) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6008..6009)), span: StrSpan("</p>" 6006..6010) }
token: Text { text: StrSpan("\n\n" 6010..6012) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6013..6014), span: StrSpan("<p" 6012..6014) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6015..6020), value: StrSpan("testo_personaggio testo_maiuscoletto" 6022..6058), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6015..6059) }
token: ElementEnd { end: Open, span: StrSpan(">" 6059..6060) }
token: Text { text: StrSpan("Padre." 6060..6066) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6068..6069)), span: StrSpan("</p>" 6066..6070) }
token: Text { text: StrSpan("\n" 6070..6071) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6072..6073), span: StrSpan("<p" 6071..6073) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6074..6079), value: StrSpan("testo_dialogo" 6081..6094), span: StrSpan("class=\"testo_dialogo\"" 6074..6095) }
token: ElementEnd { end: Open, span: StrSpan(">" 6095..6096) }
token: Text { text: StrSpan("Scemo, non sai cos‚Äô√® canicola. Io ne ho viste e tuo nonno ne ha viste. Non √® niente l‚Äôinverno. L‚Äôinverno si pena ma si sa che fa bene ai raccolti. La canicola no. La canicola brucia. Tutto muore, e la fame e la sete ti cambiano un uomo. Prendi uno che non abbia mangiato: √® attaccabriga. E tu pensa quella gente che andavano tutti d‚Äôaccordo e ognuno aveva la sua terra, abituati a far bene e a star bene. Si asciugano i pozzi, si bruciano i grani, hanno fame e hanno sete. Ma diventano bestie feroci." 6096..6607) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6609..6610)), span: StrSpan("</p>" 6607..6611) }
token: Text { text: StrSpan("\n\n" 6611..6613) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6614..6615), span: StrSpan("<p" 6613..6615) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6616..6621), value: StrSpan("testo_personaggio testo_maiuscoletto" 6623..6659), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6616..6660) }
token: ElementEnd { end: Open, span: StrSpan(">" 6660..6661) }
token: Text { text: StrSpan("Figlio." 6661..6668) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6670..6671)), span: StrSpan("</p>" 6668..6672) }
token: Text { text: StrSpan("\n" 6672..6673) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6674..6675), span: StrSpan("<p" 6673..6675) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6676..6681), value: StrSpan("testo_dialogo" 6683..6696), span: StrSpan("class=\"testo_dialogo\"" 6676..6697) }
token: ElementEnd { end: Open, span: StrSpan(">" 6697..6698) }
token: Text { text: StrSpan("Era gente cattiva." 6698..6716) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6718..6719)), span: StrSpan("</p>" 6716..6720) }
token: Text { text: StrSpan("\n\n" 6720..6722) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6723..6724), span: StrSpan("<p" 6722..6724) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6725..6730), value: StrSpan("testo_personaggio testo_maiuscoletto" 6732..6768), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6725..6769) }
token: ElementEnd { end: Open, span: StrSpan(">" 6769..6770) }
token: Text { text: StrSpan("Padre." 6770..6776) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6778..6779)), span: StrSpan("</p>" 6776..6780) }
token: Text { text: StrSpan("\n" 6780..6781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6782..6783), span: StrSpan("<p" 6781..6783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6784..6789), value: StrSpan("testo_dialogo" 6791..6804), span: StrSpan("class=\"testo_dialogo\"" 6784..6805) }
token: ElementEnd { end: Open, span: StrSpan(">" 6805..6806) }
token: Text { text: StrSpan("Non pi√∫ cattiva di noialtri. La nostra canicola sono i padroni. E non c‚Äô√® pioggia che ci possa liberare." 6806..6914) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6916..6917)), span: StrSpan("</p>" 6914..6918) }
token: Text { text: StrSpan("\n\n" 6918..6920) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6921..6922), span: StrSpan("<p" 6920..6922) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6923..6928), value: StrSpan("testo_personaggio testo_maiuscoletto" 6930..6966), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6923..6967) }
token: ElementEnd { end: Open, span: StrSpan(">" 6967..6968) }
token: Text { text: StrSpan("Figlio." 6968..6975) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6977..6978)), span: StrSpan("</p>" 6975..6979) }
token: Text { text: StrSpan("\n" 6979..6980) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6981..6982), span: StrSpan("<p" 6980..6982) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6983..6988), value: StrSpan("testo_dialogo" 6990..7003), span: StrSpan("class=\"testo_dialogo\"" 6983..7004) }
token: ElementEnd { end: Open, span: StrSpan(">" 7004..7005) }
token: Text { text: StrSpan("Non mi piacciono pi√∫ questi fuochi. Perch√© gli d√®i ne hanno bisogno? √à vero che una volta ci bruciavano sempre qualcuno?" 7005..7129) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7131..7132)), span: StrSpan("</p>" 7129..7133) }
token: Text { text: StrSpan("\n\n" 7133..7135) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7136..7137), span: StrSpan("<p" 7135..7137) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7138..7143), value: StrSpan("testo_personaggio testo_maiuscoletto" 7145..7181), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7138..7182) }
token: ElementEnd { end: Open, span: StrSpan(">" 7182..7183) }
token: Text { text: StrSpan("Padre." 7183..7189) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7191..7192)), span: StrSpan("</p>" 7189..7193) }
token: Text { text: StrSpan("\n" 7193..7194) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7195..7196), span: StrSpan("<p" 7194..7196) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7197..7202), value: StrSpan("testo_dialogo" 7204..7217), span: StrSpan("class=\"testo_dialogo\"" 7197..7218) }
token: ElementEnd { end: Open, span: StrSpan(">" 7218..7219) }
token: Text { text: StrSpan("Andavan piano. Ci bruciavano zoppi, fannulloni, e insensati. Ci bruciavano chi non serviva. Chi rubava sui campi. Tanto gli d√®i se ne accontentavano. Bene o male, pioveva." 7219..7391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7393..7394)), span: StrSpan("</p>" 7391..7395) }
token: Text { text: StrSpan("\n\n" 7395..7397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7398..7399), span: StrSpan("<p" 7397..7399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7400..7405), value: StrSpan("testo_personaggio testo_maiuscoletto" 7407..7443), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7400..7444) }
token: ElementEnd { end: Open, span: StrSpan(">" 7444..7445) }
token: Text { text: StrSpan("Figlio." 7445..7452) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7454..7455)), span: StrSpan("</p>" 7452..7456) }
token: Text { text: StrSpan("\n" 7456..7457) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7458..7459), span: StrSpan("<p" 7457..7459) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7460..7465), value: StrSpan("testo_dialogo" 7467..7480), span: StrSpan("class=\"testo_dialogo\"" 7460..7481) }
token: ElementEnd { end: Open, span: StrSpan(">" 7481..7482) }
token: Text { text: StrSpan("Non capisco che gusto gli d√®i ci trovassero. Se pioveva lo stesso. Anche Atamante. Han spento il rogo." 7482..7585) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7587..7588)), span: StrSpan("</p>" 7585..7589) }
token: Text { text: StrSpan("\n\n" 7589..7591) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7592..7593), span: StrSpan("<p" 7591..7593) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7594..7599), value: StrSpan("testo_personaggio testo_maiuscoletto" 7601..7637), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7594..7638) }
token: ElementEnd { end: Open, span: StrSpan(">" 7638..7639) }
token: Text { text: StrSpan("Padre." 7639..7645) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7647..7648)), span: StrSpan("</p>" 7645..7649) }
token: Text { text: StrSpan("\n" 7649..7650) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7651..7652), span: StrSpan("<p" 7650..7652) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7653..7658), value: StrSpan("testo_dialogo" 7660..7673), span: StrSpan("class=\"testo_dialogo\"" 7653..7674) }
token: ElementEnd { end: Open, span: StrSpan(">" 7674..7675) }
token: Text { text: StrSpan("Vedi, gli d√®i sono i padroni. Sono come i padroni. Vuoi che vedessero bruciare uno di loro? Tra loro si aiutano. Noi invece nessuno ci aiuta. Faccia pioggia o sereno, che cosa gl‚Äôimporta agli d√®i? Adesso s‚Äôaccendono i fuochi, e si dice che fa piovere. Che cosa gliene importa ai padroni? Li hai mai visti venire sul campo?" 7675..8003) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8005..8006)), span: StrSpan("</p>" 8003..8007) }
token: Text { text: StrSpan("\n\n" 8007..8009) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8010..8011), span: StrSpan("<p" 8009..8011) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8012..8017), value: StrSpan("testo_personaggio testo_maiuscoletto" 8019..8055), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8012..8056) }
token: ElementEnd { end: Open, span: StrSpan(">" 8056..8057) }
token: Text { text: StrSpan("Figlio." 8057..8064) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8066..8067)), span: StrSpan("</p>" 8064..8068) }
token: Text { text: StrSpan("\n" 8068..8069) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8070..8071), span: StrSpan("<p" 8069..8071) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8072..8077), value: StrSpan("testo_dialogo" 8079..8092), span: StrSpan("class=\"testo_dialogo\"" 8072..8093) }
token: ElementEnd { end: Open, span: StrSpan(">" 8093..8094) }
token: Text { text: StrSpan("Io no." 8094..8100) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8102..8103)), span: StrSpan("</p>" 8100..8104) }
token: Text { text: StrSpan("\n\n" 8104..8106) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8107..8108), span: StrSpan("<p" 8106..8108) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8109..8114), value: StrSpan("testo_personaggio testo_maiuscoletto" 8116..8152), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8109..8153) }
token: ElementEnd { end: Open, span: StrSpan(">" 8153..8154) }
token: Text { text: StrSpan("Padre." 8154..8160) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8162..8163)), span: StrSpan("</p>" 8160..8164) }
token: Text { text: StrSpan("\n" 8164..8165) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8166..8167), span: StrSpan("<p" 8165..8167) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8168..8173), value: StrSpan("testo_dialogo" 8175..8188), span: StrSpan("class=\"testo_dialogo\"" 8168..8189) }
token: ElementEnd { end: Open, span: StrSpan(">" 8189..8190) }
token: Text { text: StrSpan("E dunque. Se una volta bastava un fal√≤ per far piovere, bruciarci sopra un vagabondo per salvare un raccolto, quante case di padroni bisogna incendiare, quanti ammazzarne per le strade e per le piazze, prima che il mondo torni giusto e noi si possa dir la nostra?" 8190..8454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8456..8457)), span: StrSpan("</p>" 8454..8458) }
token: Text { text: StrSpan("\n\n" 8458..8460) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8461..8462), span: StrSpan("<p" 8460..8462) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8463..8468), value: StrSpan("testo_personaggio testo_maiuscoletto" 8470..8506), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8463..8507) }
token: ElementEnd { end: Open, span: StrSpan(">" 8507..8508) }
token: Text { text: StrSpan("Figlio." 8508..8515) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8517..8518)), span: StrSpan("</p>" 8515..8519) }
token: Text { text: StrSpan("\n" 8519..8520) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8521..8522), span: StrSpan("<p" 8520..8522) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8523..8528), value: StrSpan("testo_dialogo" 8530..8543), span: StrSpan("class=\"testo_dialogo\"" 8523..8544) }
token: ElementEnd { end: Open, span: StrSpan(">" 8544..8545) }
token: Text { text: StrSpan("E gli d√®i?" 8545..8556) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8558..8559)), span: StrSpan("</p>" 8556..8560) }
token: Text { text: StrSpan("\n\n" 8560..8562) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8563..8564), span: StrSpan("<p" 8562..8564) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8565..8570), value: StrSpan("testo_personaggio testo_maiuscoletto" 8572..8608), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8565..8609) }
token: ElementEnd { end: Open, span: StrSpan(">" 8609..8610) }
token: Text { text: StrSpan("Padre." 8610..8616) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8618..8619)), span: StrSpan("</p>" 8616..8620) }
token: Text { text: StrSpan("\n" 8620..8621) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8622..8623), span: StrSpan("<p" 8621..8623) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8624..8629), value: StrSpan("testo_dialogo" 8631..8644), span: StrSpan("class=\"testo_dialogo\"" 8624..8645) }
token: ElementEnd { end: Open, span: StrSpan(">" 8645..8646) }
token: Text { text: StrSpan("Cosa c‚Äôentrano?" 8646..8663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8665..8666)), span: StrSpan("</p>" 8663..8667) }
token: Text { text: StrSpan("\n\n" 8667..8669) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8670..8671), span: StrSpan("<p" 8669..8671) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8672..8677), value: StrSpan("testo_personaggio testo_maiuscoletto" 8679..8715), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8672..8716) }
token: ElementEnd { end: Open, span: StrSpan(">" 8716..8717) }
token: Text { text: StrSpan("Figlio." 8717..8724) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8726..8727)), span: StrSpan("</p>" 8724..8728) }
token: Text { text: StrSpan("\n" 8728..8729) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8730..8731), span: StrSpan("<p" 8729..8731) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8732..8737), value: StrSpan("testo_dialogo" 8739..8752), span: StrSpan("class=\"testo_dialogo\"" 8732..8753) }
token: ElementEnd { end: Open, span: StrSpan(">" 8753..8754) }
token: Text { text: StrSpan("Non hai detto che d√®i e padroni si tengono mano? Sono loro i padroni." 8754..8824) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8826..8827)), span: StrSpan("</p>" 8824..8828) }
token: Text { text: StrSpan("\n\n" 8828..8830) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8831..8832), span: StrSpan("<p" 8830..8832) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8833..8838), value: StrSpan("testo_personaggio testo_maiuscoletto" 8840..8876), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8833..8877) }
token: ElementEnd { end: Open, span: StrSpan(">" 8877..8878) }
token: Text { text: StrSpan("Padre." 8878..8884) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8886..8887)), span: StrSpan("</p>" 8884..8888) }
token: Text { text: StrSpan("\n" 8888..8889) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8890..8891), span: StrSpan("<p" 8889..8891) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8892..8897), value: StrSpan("testo_dialogo" 8899..8912), span: StrSpan("class=\"testo_dialogo\"" 8892..8913) }
token: ElementEnd { end: Open, span: StrSpan(">" 8913..8914) }
token: Text { text: StrSpan("Scanneremo un capretto. Che farci? Ammazzeremo i vagabondi e chi ci ruba. Bruceremo un fal√≤." 8914..9007) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9009..9010)), span: StrSpan("</p>" 9007..9011) }
token: Text { text: StrSpan("\n\n" 9011..9013) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9014..9015), span: StrSpan("<p" 9013..9015) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9016..9021), value: StrSpan("testo_personaggio testo_maiuscoletto" 9023..9059), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9016..9060) }
token: ElementEnd { end: Open, span: StrSpan(">" 9060..9061) }
token: Text { text: StrSpan("Figlio." 9061..9068) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9070..9071)), span: StrSpan("</p>" 9068..9072) }
token: Text { text: StrSpan("\n" 9072..9073) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9074..9075), span: StrSpan("<p" 9073..9075) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9076..9081), value: StrSpan("testo_dialogo" 9083..9096), span: StrSpan("class=\"testo_dialogo\"" 9076..9097) }
token: ElementEnd { end: Open, span: StrSpan(">" 9097..9098) }
token: Text { text: StrSpan("Vorrei che fosse gi√† mattino. A me gli d√®i fanno paura." 9098..9155) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9157..9158)), span: StrSpan("</p>" 9155..9159) }
token: Text { text: StrSpan("\n\n" 9159..9161) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9162..9163), span: StrSpan("<p" 9161..9163) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9164..9169), value: StrSpan("testo_personaggio testo_maiuscoletto" 9171..9207), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9164..9208) }
token: ElementEnd { end: Open, span: StrSpan(">" 9208..9209) }
token: Text { text: StrSpan("Padre." 9209..9215) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9217..9218)), span: StrSpan("</p>" 9215..9219) }
token: Text { text: StrSpan("\n" 9219..9220) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9221..9222), span: StrSpan("<p" 9220..9222) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9223..9228), value: StrSpan("testo_dialogo" 9230..9243), span: StrSpan("class=\"testo_dialogo\"" 9223..9244) }
token: ElementEnd { end: Open, span: StrSpan(">" 9244..9245) }
token: Text { text: StrSpan("E fai bene. Gli d√®i vanno tenuti dalla nostra. Alla tua et√† √® una brutta cosa non pensarci." 9245..9339) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9341..9342)), span: StrSpan("</p>" 9339..9343) }
token: Text { text: StrSpan("\n\n" 9343..9345) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9346..9347), span: StrSpan("<p" 9345..9347) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9348..9353), value: StrSpan("testo_personaggio testo_maiuscoletto" 9355..9391), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9348..9392) }
token: ElementEnd { end: Open, span: StrSpan(">" 9392..9393) }
token: Text { text: StrSpan("Figlio." 9393..9400) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9402..9403)), span: StrSpan("</p>" 9400..9404) }
token: Text { text: StrSpan("\n" 9404..9405) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9406..9407), span: StrSpan("<p" 9405..9407) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9408..9413), value: StrSpan("testo_dialogo" 9415..9428), span: StrSpan("class=\"testo_dialogo\"" 9408..9429) }
token: ElementEnd { end: Open, span: StrSpan(">" 9429..9430) }
token: Text { text: StrSpan("Io non voglio pensarci. Sono ingiusti, gli d√®i. Che bisogno hanno che si bruci gente viva?" 9430..9521) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9523..9524)), span: StrSpan("</p>" 9521..9525) }
token: Text { text: StrSpan("\n\n" 9525..9527) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9528..9529), span: StrSpan("<p" 9527..9529) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9530..9535), value: StrSpan("testo_personaggio testo_maiuscoletto" 9537..9573), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9530..9574) }
token: ElementEnd { end: Open, span: StrSpan(">" 9574..9575) }
token: Text { text: StrSpan("Padre." 9575..9581) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9583..9584)), span: StrSpan("</p>" 9581..9585) }
token: Text { text: StrSpan("\n" 9585..9586) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9587..9588), span: StrSpan("<p" 9586..9588) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9589..9594), value: StrSpan("testo_dialogo" 9596..9609), span: StrSpan("class=\"testo_dialogo\"" 9589..9610) }
token: ElementEnd { end: Open, span: StrSpan(">" 9610..9611) }
token: Text { text: StrSpan("Se non fosse cos√≠, non sarebbero d√®i. Chi non lavora come vuoi che passi il tempo? Quando non c‚Äôerano i padroni e si viveva con giustizia, bisognava ammazzare ogni tanto qualcuno per farli godere. Sono fatti cos√≠. Ma ai nostri tempi non ne han pi√∫ bisogno. Siamo in tanti a star male, che gli basta guardarci." 9611..9926) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9928..9929)), span: StrSpan("</p>" 9926..9930) }
token: Text { text: StrSpan("\n\n" 9930..9932) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9933..9934), span: StrSpan("<p" 9932..9934) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9935..9940), value: StrSpan("testo_personaggio testo_maiuscoletto" 9942..9978), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9935..9979) }
token: ElementEnd { end: Open, span: StrSpan(">" 9979..9980) }
token: Text { text: StrSpan("Figlio." 9980..9987) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9989..9990)), span: StrSpan("</p>" 9987..9991) }
token: Text { text: StrSpan("\n" 9991..9992) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9993..9994), span: StrSpan("<p" 9992..9994) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9995..10000), value: StrSpan("testo_dialogo" 10002..10015), span: StrSpan("class=\"testo_dialogo\"" 9995..10016) }
token: ElementEnd { end: Open, span: StrSpan(">" 10016..10017) }
token: Text { text: StrSpan("Vagabondi anche loro." 10017..10038) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10040..10041)), span: StrSpan("</p>" 10038..10042) }
token: Text { text: StrSpan("\n\n" 10042..10044) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10045..10046), span: StrSpan("<p" 10044..10046) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10047..10052), value: StrSpan("testo_personaggio testo_maiuscoletto" 10054..10090), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10047..10091) }
token: ElementEnd { end: Open, span: StrSpan(">" 10091..10092) }
token: Text { text: StrSpan("Padre." 10092..10098) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10100..10101)), span: StrSpan("</p>" 10098..10102) }
token: Text { text: StrSpan("\n" 10102..10103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10104..10105), span: StrSpan("<p" 10103..10105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10106..10111), value: StrSpan("testo_dialogo" 10113..10126), span: StrSpan("class=\"testo_dialogo\"" 10106..10127) }
token: ElementEnd { end: Open, span: StrSpan(">" 10127..10128) }
token: Text { text: StrSpan("Vagabondi. Ne hai detta una giusta." 10128..10163) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10165..10166)), span: StrSpan("</p>" 10163..10167) }
token: Text { text: StrSpan("\n\n" 10167..10169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10170..10171), span: StrSpan("<p" 10169..10171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10172..10177), value: StrSpan("testo_personaggio testo_maiuscoletto" 10179..10215), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10172..10216) }
token: ElementEnd { end: Open, span: StrSpan(">" 10216..10217) }
token: Text { text: StrSpan("Figlio." 10217..10224) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10226..10227)), span: StrSpan("</p>" 10224..10228) }
token: Text { text: StrSpan("\n" 10228..10229) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10230..10231), span: StrSpan("<p" 10229..10231) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10232..10237), value: StrSpan("testo_dialogo" 10239..10252), span: StrSpan("class=\"testo_dialogo\"" 10232..10253) }
token: ElementEnd { end: Open, span: StrSpan(">" 10253..10254) }
token: Text { text: StrSpan("Cosa dicevano bruciando sul fal√≤, i ragazzi storpi? Gridavano molto?" 10254..10323) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10325..10326)), span: StrSpan("</p>" 10323..10327) }
token: Text { text: StrSpan("\n\n" 10327..10329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10330..10331), span: StrSpan("<p" 10329..10331) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10332..10337), value: StrSpan("testo_personaggio testo_maiuscoletto" 10339..10375), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10332..10376) }
token: ElementEnd { end: Open, span: StrSpan(">" 10376..10377) }
token: Text { text: StrSpan("Padre." 10377..10383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10385..10386)), span: StrSpan("</p>" 10383..10387) }
token: Text { text: StrSpan("\n" 10387..10388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10389..10390), span: StrSpan("<p" 10388..10390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10391..10396), value: StrSpan("testo_dialogo" 10398..10411), span: StrSpan("class=\"testo_dialogo\"" 10391..10412) }
token: ElementEnd { end: Open, span: StrSpan(">" 10412..10413) }
token: Text { text: StrSpan("Non √® tanto il gridare. √à chi grida, che conta. Un storpio o un cattivo non fanno niente di bene. Ma √® un po‚Äô peggio quando un uomo che ha dei figli vede ingrassare i fannulloni. Questo √® ingiusto." 10413..10616) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10618..10619)), span: StrSpan("</p>" 10616..10620) }
token: Text { text: StrSpan("\n\n" 10620..10622) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10623..10624), span: StrSpan("<p" 10622..10624) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10625..10630), value: StrSpan("testo_personaggio testo_maiuscoletto" 10632..10668), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10625..10669) }
token: ElementEnd { end: Open, span: StrSpan(">" 10669..10670) }
token: Text { text: StrSpan("Figlio." 10670..10677) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10679..10680)), span: StrSpan("</p>" 10677..10681) }
token: Text { text: StrSpan("\n" 10681..10682) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10683..10684), span: StrSpan("<p" 10682..10684) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10685..10690), value: StrSpan("testo_dialogo" 10692..10705), span: StrSpan("class=\"testo_dialogo\"" 10685..10706) }
token: ElementEnd { end: Open, span: StrSpan(">" 10706..10707) }
token: Text { text: StrSpan("Io non posso star fermo pensando ai fal√≤ d‚Äôuna volta. Guarda laggi√∫ quanti ne accendono." 10707..10799) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10801..10802)), span: StrSpan("</p>" 10799..10803) }
token: Text { text: StrSpan("\n\n" 10803..10805) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10806..10807), span: StrSpan("<p" 10805..10807) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10808..10813), value: StrSpan("testo_personaggio testo_maiuscoletto" 10815..10851), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10808..10852) }
token: ElementEnd { end: Open, span: StrSpan(">" 10852..10853) }
token: Text { text: StrSpan("Padre." 10853..10859) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10861..10862)), span: StrSpan("</p>" 10859..10863) }
token: Text { text: StrSpan("\n" 10863..10864) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10865..10866), span: StrSpan("<p" 10864..10866) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10867..10872), value: StrSpan("testo_dialogo" 10874..10887), span: StrSpan("class=\"testo_dialogo\"" 10867..10888) }
token: ElementEnd { end: Open, span: StrSpan(">" 10888..10889) }
token: Text { text: StrSpan("Non bruciavano mica un ragazzo per ogni fuoco. √à come adesso col capretto. Figurarsi. Se uno fa piovere, piove per tutti. Bastava un uomo per montagna, per paese." 10889..11052) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11054..11055)), span: StrSpan("</p>" 11052..11056) }
token: Text { text: StrSpan("\n\n" 11056..11058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11059..11060), span: StrSpan("<p" 11058..11060) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11061..11066), value: StrSpan("testo_personaggio testo_maiuscoletto" 11068..11104), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11061..11105) }
token: ElementEnd { end: Open, span: StrSpan(">" 11105..11106) }
token: Text { text: StrSpan("Figlio." 11106..11113) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11115..11116)), span: StrSpan("</p>" 11113..11117) }
token: Text { text: StrSpan("\n" 11117..11118) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11119..11120), span: StrSpan("<p" 11118..11120) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11121..11126), value: StrSpan("testo_dialogo" 11128..11141), span: StrSpan("class=\"testo_dialogo\"" 11121..11142) }
token: ElementEnd { end: Open, span: StrSpan(">" 11142..11143) }
token: Text { text: StrSpan("Io non voglio, capisci, non voglio. Fanno bene i padroni a mangiarci il midollo, se siamo stati cos√≠ ingiusti tra noialtri. Fanno bene gli d√®i a guardarci patire. Siamo tutti cattivi." 11143..11328) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11330..11331)), span: StrSpan("</p>" 11328..11332) }
token: Text { text: StrSpan("\n\n" 11332..11334) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11335..11336), span: StrSpan("<p" 11334..11336) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11337..11342), value: StrSpan("testo_personaggio testo_maiuscoletto" 11344..11380), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11337..11381) }
token: ElementEnd { end: Open, span: StrSpan(">" 11381..11382) }
token: Text { text: StrSpan("Padre." 11382..11388) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11390..11391)), span: StrSpan("</p>" 11388..11392) }
token: Text { text: StrSpan("\n" 11392..11393) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11394..11395), span: StrSpan("<p" 11393..11395) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11396..11401), value: StrSpan("testo_dialogo" 11403..11416), span: StrSpan("class=\"testo_dialogo\"" 11396..11417) }
token: ElementEnd { end: Open, span: StrSpan(">" 11417..11418) }
token: Text { text: StrSpan("Bagna le frasche adesso e spruzza. Sei ancora ignorante. Proprio tu sai parlare di giusto e d‚Äôingiusto. Verso il mare, zuccone‚Ä¶ O Zeus, accogli quest‚Äôofferta‚Ä¶" 11418..11584) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11586..11587)), span: StrSpan("</p>" 11584..11588) }
token: Text { text: StrSpan("\n" 11588..11589) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 11591..11595)), span: StrSpan("</body>" 11589..11596) }
token: Text { text: StrSpan("\n" 11596..11597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 11599..11603)), span: StrSpan("</html>" 11597..11604) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("L‚Äôisola" 340..349) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 351..353)), span: StrSpan("</h1>" 349..354) }
token: Text { text: StrSpan("\n\n" 354..356) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 357..358), span: StrSpan("<p" 356..358) }
token: ElementEnd { end: Open, span: StrSpan(">" 358..359) }
token: Text { text: StrSpan("Tutti sanno che Odisseo naufrago, sulla via del ritorno, rest√≤ nove anni sull‚Äôisola Ogigia, dove non c‚Äôera che Calipso, antica dea." 359..495) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 497..498)), span: StrSpan("</p>" 495..499) }
token: Text { text: StrSpan("\n\n" 499..501) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 502..503), span: StrSpan("<p" 501..503) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 504..509), value: StrSpan("testo_indicazioni_scena" 511..534), span: StrSpan("class=\"testo_indicazioni_scena\"" 504..535) }
token: ElementEnd { end: Open, span: StrSpan(">" 535..536) }
token: Text { text: StrSpan("(parlano Calipso e Odisseo)" 536..563) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 565..566)), span: StrSpan("</p>" 563..567) }
token: Text { text: StrSpan("\n\n\n" 567..570) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 571..572), span: StrSpan("<p" 570..572) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 573..578), value: StrSpan("testo_personaggio testo_maiuscoletto" 580..616), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 573..617) }
token: ElementEnd { end: Open, span: StrSpan(">" 617..618) }
token: Text { text: StrSpan("Calipso." 618..626) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 628..629)), span: StrSpan("</p>" 626..630) }
token: Text { text: StrSpan("\n" 630..631) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 632..633), span: StrSpan("<p" 631..633) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 634..639), value: StrSpan("testo_dialogo" 641..654), span: StrSpan("class=\"testo_dialogo\"" 634..655) }
token: ElementEnd { end: Open, span: StrSpan(">" 655..656) }
token: Text { text: StrSpan("Odisseo, non c‚Äô√® nulla di molto diverso. Anche tu come me vuoi fermarti su un‚Äôisola. Hai veduto e patito ogni cosa. Io forse un giorno ti dir√≤ quel che ho patito. Tutti e due siamo stanchi di un grosso destino. Perch√© continuare? Che t‚Äôimporta che l‚Äôisola non sia quella che cercavi? Qui mai nulla succede. C‚Äô√® un po‚Äô di terra e un orizzonte. Qui puoi vivere sempre." 656..1038) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1040..1041)), span: StrSpan("</p>" 1038..1042) }
token: Text { text: StrSpan("\n\n" 1042..1044) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1045..1046), span: StrSpan("<p" 1044..1046) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1047..1052), value: StrSpan("testo_personaggio testo_maiuscoletto" 1054..1090), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1047..1091) }
token: ElementEnd { end: Open, span: StrSpan(">" 1091..1092) }
token: Text { text: StrSpan("Odisseo." 1092..1100) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1102..1103)), span: StrSpan("</p>" 1100..1104) }
token: Text { text: StrSpan("\n" 1104..1105) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1106..1107), span: StrSpan("<p" 1105..1107) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1108..1113), value: StrSpan("testo_dialogo" 1115..1128), span: StrSpan("class=\"testo_dialogo\"" 1108..1129) }
token: ElementEnd { end: Open, span: StrSpan(">" 1129..1130) }
token: Text { text: StrSpan("Una vita immortale." 1130..1149) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1151..1152)), span: StrSpan("</p>" 1149..1153) }
token: Text { text: StrSpan("\n\n" 1153..1155) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1156..1157), span: StrSpan("<p" 1155..1157) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1158..1163), value: StrSpan("testo_personaggio testo_maiuscoletto" 1165..1201), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1158..1202) }
token: ElementEnd { end: Open, span: StrSpan(">" 1202..1203) }
token: Text { text: StrSpan("Calipso." 1203..1211) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1213..1214)), span: StrSpan("</p>" 1211..1215) }
token: Text { text: StrSpan("\n" 1215..1216) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1217..1218), span: StrSpan("<p" 1216..1218) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1219..1224), value: StrSpan("testo_dialogo" 1226..1239), span: StrSpan("class=\"testo_dialogo\"" 1219..1240) }
token: ElementEnd { end: Open, span: StrSpan(">" 1240..1241) }
token: Text { text: StrSpan("Immortale √® chi accetta l‚Äôistante. Chi non conosce pi√∫ un domani. Ma se ti piace la parola, dilla. Tu sei davvero a questo punto?" 1241..1374) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1376..1377)), span: StrSpan("</p>" 1374..1378) }
token: Text { text: StrSpan("\n\n" 1378..1380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1381..1382), span: StrSpan("<p" 1380..1382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1383..1388), value: StrSpan("testo_personaggio testo_maiuscoletto" 1390..1426), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1383..1427) }
token: ElementEnd { end: Open, span: StrSpan(">" 1427..1428) }
token: Text { text: StrSpan("Odisseo." 1428..1436) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1438..1439)), span: StrSpan("</p>" 1436..1440) }
token: Text { text: StrSpan("\n" 1440..1441) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1442..1443), span: StrSpan("<p" 1441..1443) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1444..1449), value: StrSpan("testo_dialogo" 1451..1464), span: StrSpan("class=\"testo_dialogo\"" 1444..1465) }
token: ElementEnd { end: Open, span: StrSpan(">" 1465..1466) }
token: Text { text: StrSpan("Io credevo immortale chi non teme la morte." 1466..1509) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1511..1512)), span: StrSpan("</p>" 1509..1513) }
token: Text { text: StrSpan("\n\n" 1513..1515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1516..1517), span: StrSpan("<p" 1515..1517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1518..1523), value: StrSpan("testo_personaggio testo_maiuscoletto" 1525..1561), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1518..1562) }
token: ElementEnd { end: Open, span: StrSpan(">" 1562..1563) }
token: Text { text: StrSpan("Calipso." 1563..1571) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1573..1574)), span: StrSpan("</p>" 1571..1575) }
token: Text { text: StrSpan("\n" 1575..1576) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1577..1578), span: StrSpan("<p" 1576..1578) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1579..1584), value: StrSpan("testo_dialogo" 1586..1599), span: StrSpan("class=\"testo_dialogo\"" 1579..1600) }
token: ElementEnd { end: Open, span: StrSpan(">" 1600..1601) }
token: Text { text: StrSpan("Chi non spera di vivere. Certo, quasi lo sei. Hai patito molto anche tu. Ma perch√© questa smania di tornartene a casa? Sei ancora inquieto. Perch√© i discorsi che da solo vai facendo tra gli scogli?" 1601..1800) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1802..1803)), span: StrSpan("</p>" 1800..1804) }
token: Text { text: StrSpan("\n\n" 1804..1806) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1807..1808), span: StrSpan("<p" 1806..1808) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1809..1814), value: StrSpan("testo_personaggio testo_maiuscoletto" 1816..1852), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1809..1853) }
token: ElementEnd { end: Open, span: StrSpan(">" 1853..1854) }
token: Text { text: StrSpan("Odisseo." 1854..1862) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1864..1865)), span: StrSpan("</p>" 1862..1866) }
token: Text { text: StrSpan("\n" 1866..1867) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1868..1869), span: StrSpan("<p" 1867..1869) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1870..1875), value: StrSpan("testo_dialogo" 1877..1890), span: StrSpan("class=\"testo_dialogo\"" 1870..1891) }
token: ElementEnd { end: Open, span: StrSpan(">" 1891..1892) }
token: Text { text: StrSpan("Se domani io partissi tu saresti infelice?" 1892..1934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1936..1937)), span: StrSpan("</p>" 1934..1938) }
token: Text { text: StrSpan("\n\n" 1938..1940) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1941..1942), span: StrSpan("<p" 1940..1942) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1943..1948), value: StrSpan("testo_personaggio testo_maiuscoletto" 1950..1986), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1943..1987) }
token: ElementEnd { end: Open, span: StrSpan(">" 1987..1988) }
token: Text { text: StrSpan("Calipso." 1988..1996) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1998..1999)), span: StrSpan("</p>" 1996..2000) }
token: Text { text: StrSpan("\n" 2000..2001) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2002..2003), span: StrSpan("<p" 2001..2003) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2004..2009), value: StrSpan("testo_dialogo" 2011..2024), span: StrSpan("class=\"testo_dialogo\"" 2004..2025) }
token: ElementEnd { end: Open, span: StrSpan(">" 2025..2026) }
token: Text { text: StrSpan("Vuoi saper troppo, caro. Diciamo che sono immortale. Ma se tu non rinunci ai tuoi ricordi e ai sogni, se non deponi la smania e non accetti l‚Äôorizzonte, non uscirai da quel destino che conosci." 2026..2221) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2223..2224)), span: StrSpan("</p>" 2221..2225) }
token: Text { text: StrSpan("\n\n" 2225..2227) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2228..2229), span: StrSpan("<p" 2227..2229) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2230..2235), value: StrSpan("testo_personaggio testo_maiuscoletto" 2237..2273), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2230..2274) }
token: ElementEnd { end: Open, span: StrSpan(">" 2274..2275) }
token: Text { text: StrSpan("Odisseo." 2275..2283) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2285..2286)), span: StrSpan("</p>" 2283..2287) }
token: Text { text: StrSpan("\n" 2287..2288) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2289..2290), span: StrSpan("<p" 2288..2290) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2291..2296), value: StrSpan("testo_dialogo" 2298..2311), span: StrSpan("class=\"testo_dialogo\"" 2291..2312) }
token: ElementEnd { end: Open, span: StrSpan(">" 2312..2313) }
token: Text { text: StrSpan("Si tratta sempre di accettare un orizzonte. E ottenere che cosa?" 2313..2377) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2379..2380)), span: StrSpan("</p>" 2377..2381) }
token: Text { text: StrSpan("\n\n" 2381..2383) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2384..2385), span: StrSpan("<p" 2383..2385) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2386..2391), value: StrSpan("testo_personaggio testo_maiuscoletto" 2393..2429), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2386..2430) }
token: ElementEnd { end: Open, span: StrSpan(">" 2430..2431) }
token: Text { text: StrSpan("Calipso." 2431..2439) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2441..2442)), span: StrSpan("</p>" 2439..2443) }
token: Text { text: StrSpan("\n" 2443..2444) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2445..2446), span: StrSpan("<p" 2444..2446) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2447..2452), value: StrSpan("testo_dialogo" 2454..2467), span: StrSpan("class=\"testo_dialogo\"" 2447..2468) }
token: ElementEnd { end: Open, span: StrSpan(">" 2468..2469) }
token: Text { text: StrSpan("Ma posare la testa e tacere, Odisseo. Ti sei mai chiesto perch√© anche noi cerchiamo il sonno? Ti sei mai chiesto dove vanno i vecchi d√®i che il mondo ignora? perch√© sprofondano nel tempo, come le pietre nella terra, loro che pure sono eterni? E chi son io, chi √® Calipso?" 2469..2744) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2746..2747)), span: StrSpan("</p>" 2744..2748) }
token: Text { text: StrSpan("\n\n" 2748..2750) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2751..2752), span: StrSpan("<p" 2750..2752) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2753..2758), value: StrSpan("testo_personaggio testo_maiuscoletto" 2760..2796), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2753..2797) }
token: ElementEnd { end: Open, span: StrSpan(">" 2797..2798) }
token: Text { text: StrSpan("Odisseo." 2798..2806) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2808..2809)), span: StrSpan("</p>" 2806..2810) }
token: Text { text: StrSpan("\n" 2810..2811) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2812..2813), span: StrSpan("<p" 2811..2813) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2814..2819), value: StrSpan("testo_dialogo" 2821..2834), span: StrSpan("class=\"testo_dialogo\"" 2814..2835) }
token: ElementEnd { end: Open, span: StrSpan(">" 2835..2836) }
token: Text { text: StrSpan("Ti ho chiesto se tu sei felice." 2836..2867) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2869..2870)), span: StrSpan("</p>" 2867..2871) }
token: Text { text: StrSpan("\n\n" 2871..2873) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2874..2875), span: StrSpan("<p" 2873..2875) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2876..2881), value: StrSpan("testo_personaggio testo_maiuscoletto" 2883..2919), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2876..2920) }
token: ElementEnd { end: Open, span: StrSpan(">" 2920..2921) }
token: Text { text: StrSpan("Calipso." 2921..2929) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2931..2932)), span: StrSpan("</p>" 2929..2933) }
token: Text { text: StrSpan("\n" 2933..2934) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2935..2936), span: StrSpan("<p" 2934..2936) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2937..2942), value: StrSpan("testo_dialogo" 2944..2957), span: StrSpan("class=\"testo_dialogo\"" 2937..2958) }
token: ElementEnd { end: Open, span: StrSpan(">" 2958..2959) }
token: Text { text: StrSpan("Non √® questo, Odisseo. L‚Äôaria, anche l‚Äôaria di quest‚Äôisola deserta, che adesso vibra solamente dei rimbombi del mare e di stridi d‚Äôuccelli, √® troppo vuota. In questo vuoto non c‚Äô√® nulla da rimpiangere, bada. Ma non senti anche tu certi giorni un silenzio, un arresto, che √® come la traccia di un‚Äôantica tensione e presenza scomparse?" 2959..3308) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3310..3311)), span: StrSpan("</p>" 3308..3312) }
token: Text { text: StrSpan("\n\n" 3312..3314) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3315..3316), span: StrSpan("<p" 3314..3316) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3317..3322), value: StrSpan("testo_personaggio testo_maiuscoletto" 3324..3360), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3317..3361) }
token: ElementEnd { end: Open, span: StrSpan(">" 3361..3362) }
token: Text { text: StrSpan("Odisseo." 3362..3370) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3372..3373)), span: StrSpan("</p>" 3370..3374) }
token: Text { text: StrSpan("\n" 3374..3375) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3376..3377), span: StrSpan("<p" 3375..3377) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3378..3383), value: StrSpan("testo_dialogo" 3385..3398), span: StrSpan("class=\"testo_dialogo\"" 3378..3399) }
token: ElementEnd { end: Open, span: StrSpan(">" 3399..3400) }
token: Text { text: StrSpan("Dunque anche tu parli agli scogli?" 3400..3434) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3436..3437)), span: StrSpan("</p>" 3434..3438) }
token: Text { text: StrSpan("\n\n" 3438..3440) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3441..3442), span: StrSpan("<p" 3440..3442) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3443..3448), value: StrSpan("testo_personaggio testo_maiuscoletto" 3450..3486), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3443..3487) }
token: ElementEnd { end: Open, span: StrSpan(">" 3487..3488) }
token: Text { text: StrSpan("Calipso." 3488..3496) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3498..3499)), span: StrSpan("</p>" 3496..3500) }
token: Text { text: StrSpan("\n" 3500..3501) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3502..3503), span: StrSpan("<p" 3501..3503) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3504..3509), value: StrSpan("testo_dialogo" 3511..3524), span: StrSpan("class=\"testo_dialogo\"" 3504..3525) }
token: ElementEnd { end: Open, span: StrSpan(">" 3525..3526) }
token: Text { text: StrSpan("√à un silenzio, ti dico. Una cosa remota e quasi morta. Quello che √® stato e non sar√† mai pi√∫. Nel vecchio mondo degli d√®i quando un mio gesto era destino. Ebbi nomi paurosi, Odisseo. La terra e il mare mi obbedivano. Poi mi stancai; pass√≤ del tempo, non mi volli pi√∫ muovere. Qualcuna di noi resist√© ai nuovi d√®i; lasciai che i nomi sprofondassero nel tempo; tutto mut√≤ e rimase uguale; non valeva la pena di contendere ai nuovi il destino. Ormai sapevo il mio orizzonte e perch√© i vecchi non avevano conteso con noialtri." 3526..4059) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4061..4062)), span: StrSpan("</p>" 4059..4063) }
token: Text { text: StrSpan("\n\n" 4063..4065) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4066..4067), span: StrSpan("<p" 4065..4067) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4068..4073), value: StrSpan("testo_personaggio testo_maiuscoletto" 4075..4111), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4068..4112) }
token: ElementEnd { end: Open, span: StrSpan(">" 4112..4113) }
token: Text { text: StrSpan("Odisseo." 4113..4121) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4123..4124)), span: StrSpan("</p>" 4121..4125) }
token: Text { text: StrSpan("\n" 4125..4126) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4127..4128), span: StrSpan("<p" 4126..4128) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4129..4134), value: StrSpan("testo_dialogo" 4136..4149), span: StrSpan("class=\"testo_dialogo\"" 4129..4150) }
token: ElementEnd { end: Open, span: StrSpan(">" 4150..4151) }
token: Text { text: StrSpan("Ma non eri immortale?" 4151..4172) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4174..4175)), span: StrSpan("</p>" 4172..4176) }
token: Text { text: StrSpan("\n\n" 4176..4178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4179..4180), span: StrSpan("<p" 4178..4180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4181..4186), value: StrSpan("testo_personaggio testo_maiuscoletto" 4188..4224), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4181..4225) }
token: ElementEnd { end: Open, span: StrSpan(">" 4225..4226) }
token: Text { text: StrSpan("Calipso." 4226..4234) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4236..4237)), span: StrSpan("</p>" 4234..4238) }
token: Text { text: StrSpan("\n" 4238..4239) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4240..4241), span: StrSpan("<p" 4239..4241) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4242..4247), value: StrSpan("testo_dialogo" 4249..4262), span: StrSpan("class=\"testo_dialogo\"" 4242..4263) }
token: ElementEnd { end: Open, span: StrSpan(">" 4263..4264) }
token: Text { text: StrSpan("E lo sono, Odisseo. Di morire non spero. E non spero di vivere. Accetto l‚Äôistante. Voi mortali vi attende qualcosa di simile, la vecchiezza e il rimpianto. Perch√© non vuoi posare il capo come me, su quest‚Äôisola?" 4264..4480) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4482..4483)), span: StrSpan("</p>" 4480..4484) }
token: Text { text: StrSpan("\n\n" 4484..4486) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4487..4488), span: StrSpan("<p" 4486..4488) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4489..4494), value: StrSpan("testo_personaggio testo_maiuscoletto" 4496..4532), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4489..4533) }
token: ElementEnd { end: Open, span: StrSpan(">" 4533..4534) }
token: Text { text: StrSpan("Odisseo." 4534..4542) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4544..4545)), span: StrSpan("</p>" 4542..4546) }
token: Text { text: StrSpan("\n" 4546..4547) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4548..4549), span: StrSpan("<p" 4547..4549) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4550..4555), value: StrSpan("testo_dialogo" 4557..4570), span: StrSpan("class=\"testo_dialogo\"" 4550..4571) }
token: ElementEnd { end: Open, span: StrSpan(">" 4571..4572) }
token: Text { text: StrSpan("Lo farei, se credessi che sei rassegnata. Ma anche tu che sei stata signora di tutte le cose, hai bisogno di me, di un mortale, per aiutarti a sopportare." 4572..4726) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4728..4729)), span: StrSpan("</p>" 4726..4730) }
token: Text { text: StrSpan("\n\n" 4730..4732) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4733..4734), span: StrSpan("<p" 4732..4734) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4735..4740), value: StrSpan("testo_personaggio testo_maiuscoletto" 4742..4778), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4735..4779) }
token: ElementEnd { end: Open, span: StrSpan(">" 4779..4780) }
token: Text { text: StrSpan("Calipso." 4780..4788) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4790..4791)), span: StrSpan("</p>" 4788..4792) }
token: Text { text: StrSpan("\n" 4792..4793) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4794..4795), span: StrSpan("<p" 4793..4795) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4796..4801), value: StrSpan("testo_dialogo" 4803..4816), span: StrSpan("class=\"testo_dialogo\"" 4796..4817) }
token: ElementEnd { end: Open, span: StrSpan(">" 4817..4818) }
token: Text { text: StrSpan("√à un reciproco bene, Odisseo. Non c‚Äô√® vero silenzio se non condiviso." 4818..4891) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4893..4894)), span: StrSpan("</p>" 4891..4895) }
token: Text { text: StrSpan("\n\n" 4895..4897) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4898..4899), span: StrSpan("<p" 4897..4899) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4900..4905), value: StrSpan("testo_personaggio testo_maiuscoletto" 4907..4943), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4900..4944) }
token: ElementEnd { end: Open, span: StrSpan(">" 4944..4945) }
token: Text { text: StrSpan("Odisseo." 4945..4953) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4955..4956)), span: StrSpan("</p>" 4953..4957) }
token: Text { text: StrSpan("\n" 4957..4958) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4959..4960), span: StrSpan("<p" 4958..4960) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4961..4966), value: StrSpan("testo_dialogo" 4968..4981), span: StrSpan("class=\"testo_dialogo\"" 4961..4982) }
token: ElementEnd { end: Open, span: StrSpan(">" 4982..4983) }
token: Text { text: StrSpan("Non ti basta che sono con te quest‚Äôoggi?" 4983..5025) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5027..5028)), span: StrSpan("</p>" 5025..5029) }
token: Text { text: StrSpan("\n\n" 5029..5031) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5032..5033), span: StrSpan("<p" 5031..5033) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5034..5039), value: StrSpan("testo_personaggio testo_maiuscoletto" 5041..5077), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5034..5078) }
token: ElementEnd { end: Open, span: StrSpan(">" 5078..5079) }
token: Text { text: StrSpan("Calipso." 5079..5087) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5089..5090)), span: StrSpan("</p>" 5087..5091) }
token: Text { text: StrSpan("\n" 5091..5092) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5093..5094), span: StrSpan("<p" 5092..5094) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5095..5100), value: StrSpan("testo_dialogo" 5102..5115), span: StrSpan("class=\"testo_dialogo\"" 5095..5116) }
token: ElementEnd { end: Open, span: StrSpan(">" 5116..5117) }
token: Text { text: StrSpan("Non sei con me, Odisseo. Tu non accetti l‚Äôorizzonte di quest‚Äôisola. E non sfuggi al rimpianto." 5117..5215) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5217..5218)), span: StrSpan("</p>" 5215..5219) }
token: Text { text: StrSpan("\n\n" 5219..5221) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5222..5223), span: StrSpan("<p" 5221..5223) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5224..5229), value: StrSpan("testo_personaggio testo_maiuscoletto" 5231..5267), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5224..5268) }
token: ElementEnd { end: Open, span: StrSpan(">" 5268..5269) }
token: Text { text: StrSpan("Odisseo." 5269..5277) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5279..5280)), span: StrSpan("</p>" 5277..5281) }
token: Text { text: StrSpan("\n" 5281..5282) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5283..5284), span: StrSpan("<p" 5282..5284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5285..5290), value: StrSpan("testo_dialogo" 5292..5305), span: StrSpan("class=\"testo_dialogo\"" 5285..5306) }
token: ElementEnd { end: Open, span: StrSpan(">" 5306..5307) }
token: Text { text: StrSpan("Quel che rimpiango √® parte viva di me stesso come di te il tuo silenzio. Che cosa √® mutato per te da quel giorno che terra e mare ti obbedivano? Hai sentito ch‚Äôeri sola e ch‚Äôeri stanca e scordato i tuoi nomi. Nulla ti √® stato tolto. Quel che sei l‚Äôhai voluto." 5307..5575) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5577..5578)), span: StrSpan("</p>" 5575..5579) }
token: Text { text: StrSpan("\n\n" 5579..5581) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5582..5583), span: StrSpan("<p" 5581..5583) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5584..5589), value: StrSpan("testo_personaggio testo_maiuscoletto" 5591..5627), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5584..5628) }
token: ElementEnd { end: Open, span: StrSpan(">" 5628..5629) }
token: Text { text: StrSpan("Calipso." 5629..5637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5639..5640)), span: StrSpan("</p>" 5637..5641) }
token: Text { text: StrSpan("\n" 5641..5642) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5643..5644), span: StrSpan("<p" 5642..5644) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5645..5650), value: StrSpan("testo_dialogo" 5652..5665), span: StrSpan("class=\"testo_dialogo\"" 5645..5666) }
token: ElementEnd { end: Open, span: StrSpan(">" 5666..5667) }
token: Text { text: StrSpan("Quello che sono √® quasi nulla, caro. Quasi mortale, quasi un‚Äôombra come te. √à un lungo sonno cominciato chi sa quando e tu sei giunto in questo sonno come un sogno. Temo l‚Äôalba, il risveglio; se tu vai via, √® il risveglio." 5667..5896) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5898..5899)), span: StrSpan("</p>" 5896..5900) }
token: Text { text: StrSpan("\n\n" 5900..5902) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5903..5904), span: StrSpan("<p" 5902..5904) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5905..5910), value: StrSpan("testo_personaggio testo_maiuscoletto" 5912..5948), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5905..5949) }
token: ElementEnd { end: Open, span: StrSpan(">" 5949..5950) }
token: Text { text: StrSpan("Odisseo." 5950..5958) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5960..5961)), span: StrSpan("</p>" 5958..5962) }
token: Text { text: StrSpan("\n" 5962..5963) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5964..5965), span: StrSpan("<p" 5963..5965) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5966..5971), value: StrSpan("testo_dialogo" 5973..5986), span: StrSpan("class=\"testo_dialogo\"" 5966..5987) }
token: ElementEnd { end: Open, span: StrSpan(">" 5987..5988) }
token: Text { text: StrSpan("Sei tu, la signora, che parli?" 5988..6018) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6020..6021)), span: StrSpan("</p>" 6018..6022) }
token: Text { text: StrSpan("\n\n" 6022..6024) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6025..6026), span: StrSpan("<p" 6024..6026) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6027..6032), value: StrSpan("testo_personaggio testo_maiuscoletto" 6034..6070), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6027..6071) }
token: ElementEnd { end: Open, span: StrSpan(">" 6071..6072) }
token: Text { text: StrSpan("Calipso." 6072..6080) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6082..6083)), span: StrSpan("</p>" 6080..6084) }
token: Text { text: StrSpan("\n" 6084..6085) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6086..6087), span: StrSpan("<p" 6085..6087) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6088..6093), value: StrSpan("testo_dialogo" 6095..6108), span: StrSpan("class=\"testo_dialogo\"" 6088..6109) }
token: ElementEnd { end: Open, span: StrSpan(">" 6109..6110) }
token: Text { text: StrSpan("Temo il risveglio, come tu temi la morte. Ecco, prima ero morta, ora lo so. Non restava di me su quest‚Äôisola che la voce del mare e del vento. Oh non era un patire. Dormivo. Ma da quando sei giunto hai portato un‚Äôaltr‚Äôisola in te." 6110..6346) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6348..6349)), span: StrSpan("</p>" 6346..6350) }
token: Text { text: StrSpan("\n\n" 6350..6352) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6353..6354), span: StrSpan("<p" 6352..6354) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6355..6360), value: StrSpan("testo_personaggio testo_maiuscoletto" 6362..6398), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6355..6399) }
token: ElementEnd { end: Open, span: StrSpan(">" 6399..6400) }
token: Text { text: StrSpan("Odisseo." 6400..6408) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6410..6411)), span: StrSpan("</p>" 6408..6412) }
token: Text { text: StrSpan("\n" 6412..6413) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6414..6415), span: StrSpan("<p" 6413..6415) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6416..6421), value: StrSpan("testo_dialogo" 6423..6436), span: StrSpan("class=\"testo_dialogo\"" 6416..6437) }
token: ElementEnd { end: Open, span: StrSpan(">" 6437..6438) }
token: Text { text: StrSpan("Da troppo tempo la cerco. Tu non sai quel che sia avvistare una terra e socchiudere gli occhi ogni volta per illudersi. Io non posso accettare e tacere." 6438..6590) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6592..6593)), span: StrSpan("</p>" 6590..6594) }
token: Text { text: StrSpan("\n\n" 6594..6596) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6597..6598), span: StrSpan("<p" 6596..6598) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6599..6604), value: StrSpan("testo_personaggio testo_maiuscoletto" 6606..6642), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6599..6643) }
token: ElementEnd { end: Open, span: StrSpan(">" 6643..6644) }
token: Text { text: StrSpan("Calipso." 6644..6652) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6654..6655)), span: StrSpan("</p>" 6652..6656) }
token: Text { text: StrSpan("\n" 6656..6657) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6658..6659), span: StrSpan("<p" 6657..6659) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6660..6665), value: StrSpan("testo_dialogo" 6667..6680), span: StrSpan("class=\"testo_dialogo\"" 6660..6681) }
token: ElementEnd { end: Open, span: StrSpan(">" 6681..6682) }
token: Text { text: StrSpan("Eppure, Odisseo, voi uomini dite che ritrovare quel che si √® perduto √® sempre un male. Il passato non torna. Nulla regge all‚Äôandare del tempo. Tu che hai visto l‚Äôoceano, i mostri e l‚ÄôEliso, potrai ancora riconoscere le case, le tue case?" 6682..6927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6929..6930)), span: StrSpan("</p>" 6927..6931) }
token: Text { text: StrSpan("\n\n" 6931..6933) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6934..6935), span: StrSpan("<p" 6933..6935) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6936..6941), value: StrSpan("testo_personaggio testo_maiuscoletto" 6943..6979), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6936..6980) }
token: ElementEnd { end: Open, span: StrSpan(">" 6980..6981) }
token: Text { text: StrSpan("Odisseo." 6981..6989) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6991..6992)), span: StrSpan("</p>" 6989..6993) }
token: Text { text: StrSpan("\n" 6993..6994) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6995..6996), span: StrSpan("<p" 6994..6996) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6997..7002), value: StrSpan("testo_dialogo" 7004..7017), span: StrSpan("class=\"testo_dialogo\"" 6997..7018) }
token: ElementEnd { end: Open, span: StrSpan(">" 7018..7019) }
token: Text { text: StrSpan("Tu stessa hai detto che porto l‚Äôisola in me." 7019..7065) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7067..7068)), span: StrSpan("</p>" 7065..7069) }
token: Text { text: StrSpan("\n\n" 7069..7071) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7072..7073), span: StrSpan("<p" 7071..7073) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7074..7079), value: StrSpan("testo_personaggio testo_maiuscoletto" 7081..7117), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7074..7118) }
token: ElementEnd { end: Open, span: StrSpan(">" 7118..7119) }
token: Text { text: StrSpan("Calipso." 7119..7127) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7129..7130)), span: StrSpan("</p>" 7127..7131) }
token: Text { text: StrSpan("\n" 7131..7132) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7133..7134), span: StrSpan("<p" 7132..7134) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7135..7140), value: StrSpan("testo_dialogo" 7142..7155), span: StrSpan("class=\"testo_dialogo\"" 7135..7156) }
token: ElementEnd { end: Open, span: StrSpan(">" 7156..7157) }
token: Text { text: StrSpan("Oh mutata, perduta, un silenzio. L‚Äôeco di un mare tra gli scogli o un po‚Äô di fumo. Con te nessuno potr√† condividerla. Le case saranno come il viso di un vecchio. Le tue parole avranno un senso altro dal loro. Sarai pi√∫ solo che nel mare." 7157..7400) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7402..7403)), span: StrSpan("</p>" 7400..7404) }
token: Text { text: StrSpan("\n\n" 7404..7406) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7407..7408), span: StrSpan("<p" 7406..7408) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7409..7414), value: StrSpan("testo_personaggio testo_maiuscoletto" 7416..7452), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7409..7453) }
token: ElementEnd { end: Open, span: StrSpan(">" 7453..7454) }
token: Text { text: StrSpan("Odisseo." 7454..7462) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7464..7465)), span: StrSpan("</p>" 7462..7466) }
token: Text { text: StrSpan("\n" 7466..7467) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7468..7469), span: StrSpan("<p" 7467..7469) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7470..7475), value: StrSpan("testo_dialogo" 7477..7490), span: StrSpan("class=\"testo_dialogo\"" 7470..7491) }
token: ElementEnd { end: Open, span: StrSpan(">" 7491..7492) }
token: Text { text: StrSpan("Sapr√≤ almeno che devo fermarmi." 7492..7524) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7526..7527)), span: StrSpan("</p>" 7524..7528) }
token: Text { text: StrSpan("\n\n" 7528..7530) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7531..7532), span: StrSpan("<p" 7530..7532) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7533..7538), value: StrSpan("testo_personaggio testo_maiuscoletto" 7540..7576), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7533..7577) }
token: ElementEnd { end: Open, span: StrSpan(">" 7577..7578) }
token: Text { text: StrSpan("Calipso." 7578..7586) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7588..7589)), span: StrSpan("</p>" 7586..7590) }
token: Text { text: StrSpan("\n" 7590..7591) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7592..7593), span: StrSpan("<p" 7591..7593) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7594..7599), value: StrSpan("testo_dialogo" 7601..7614), span: StrSpan("class=\"testo_dialogo\"" 7594..7615) }
token: ElementEnd { end: Open, span: StrSpan(">" 7615..7616) }
token: Text { text: StrSpan("Non vale la pena, Odisseo. Chi non si ferma adesso, subito, non si ferma mai pi√∫. Quello che fai, lo farai sempre. Devi rompere una volta il destino, devi uscire di strada, e lasciarti affondare nel tempo‚Ä¶" 7616..7824) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7826..7827)), span: StrSpan("</p>" 7824..7828) }
token: Text { text: StrSpan("\n\n" 7828..7830) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7831..7832), span: StrSpan("<p" 7830..7832) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7833..7838), value: StrSpan("testo_personaggio testo_maiuscoletto" 7840..7876), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7833..7877) }
token: ElementEnd { end: Open, span: StrSpan(">" 7877..7878) }
token: Text { text: StrSpan("Odisseo." 7878..7886) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7888..7889)), span: StrSpan("</p>" 7886..7890) }
token: Text { text: StrSpan("\n" 7890..7891) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7892..7893), span: StrSpan("<p" 7891..7893) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7894..7899), value: StrSpan("testo_dialogo" 7901..7914), span: StrSpan("class=\"testo_dialogo\"" 7894..7915) }
token: ElementEnd { end: Open, span: StrSpan(">" 7915..7916) }
token: Text { text: StrSpan("Non sono immortale." 7916..7935) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7937..7938)), span: StrSpan("</p>" 7935..7939) }
token: Text { text: StrSpan("\n\n" 7939..7941) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7942..7943), span: StrSpan("<p" 7941..7943) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7944..7949), value: StrSpan("testo_personaggio testo_maiuscoletto" 7951..7987), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7944..7988) }
token: ElementEnd { end: Open, span: StrSpan(">" 7988..7989) }
token: Text { text: StrSpan("Calipso." 7989..7997) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7999..8000)), span: StrSpan("</p>" 7997..8001) }
token: Text { text: StrSpan("\n" 8001..8002) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8003..8004), span: StrSpan("<p" 8002..8004) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8005..8010), value: StrSpan("testo_dialogo" 8012..8025), span: StrSpan("class=\"testo_dialogo\"" 8005..8026) }
token: ElementEnd { end: Open, span: StrSpan(">" 8026..8027) }
token: Text { text: StrSpan("Lo sarai, se mi ascolti. Che cos‚Äô√® vita eterna se non questo accettare l‚Äôistante che viene e l‚Äôistante che va? L‚Äôebbrezza, il piacere, la morte non hanno altro scopo. Cos‚Äô√® stato finora il tuo errare inquieto?" 8027..8248) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8250..8251)), span: StrSpan("</p>" 8248..8252) }
token: Text { text: StrSpan("\n\n" 8252..8254) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8255..8256), span: StrSpan("<p" 8254..8256) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8257..8262), value: StrSpan("testo_personaggio testo_maiuscoletto" 8264..8300), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8257..8301) }
token: ElementEnd { end: Open, span: StrSpan(">" 8301..8302) }
token: Text { text: StrSpan("Odisseo." 8302..8310) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8312..8313)), span: StrSpan("</p>" 8310..8314) }
token: Text { text: StrSpan("\n" 8314..8315) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8316..8317), span: StrSpan("<p" 8315..8317) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8318..8323), value: StrSpan("testo_dialogo" 8325..8338), span: StrSpan("class=\"testo_dialogo\"" 8318..8339) }
token: ElementEnd { end: Open, span: StrSpan(">" 8339..8340) }
token: Text { text: StrSpan("Se lo sapessi avrei gi√† smesso. Ma tu dimentichi qualcosa." 8340..8399) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8401..8402)), span: StrSpan("</p>" 8399..8403) }
token: Text { text: StrSpan("\n\n" 8403..8405) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8406..8407), span: StrSpan("<p" 8405..8407) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8408..8413), value: StrSpan("testo_personaggio testo_maiuscoletto" 8415..8451), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8408..8452) }
token: ElementEnd { end: Open, span: StrSpan(">" 8452..8453) }
token: Text { text: StrSpan("Calipso." 8453..8461) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8463..8464)), span: StrSpan("</p>" 8461..8465) }
token: Text { text: StrSpan("\n" 8465..8466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8467..8468), span: StrSpan("<p" 8466..8468) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8469..8474), value: StrSpan("testo_dialogo" 8476..8489), span: StrSpan("class=\"testo_dialogo\"" 8469..8490) }
token: ElementEnd { end: Open, span: StrSpan(">" 8490..8491) }
token: Text { text: StrSpan("Dimmi." 8491..8497) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8499..8500)), span: StrSpan("</p>" 8497..8501) }
token: Text { text: StrSpan("\n\n" 8501..8503) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8504..8505), span: StrSpan("<p" 8503..8505) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8506..8511), value: StrSpan("testo_personaggio testo_maiuscoletto" 8513..8549), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8506..8550) }
token: ElementEnd { end: Open, span: StrSpan(">" 8550..8551) }
token: Text { text: StrSpan("Odisseo." 8551..8559) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8561..8562)), span: StrSpan("</p>" 8559..8563) }
token: Text { text: StrSpan("\n" 8563..8564) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8565..8566), span: StrSpan("<p" 8564..8566) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8567..8572), value: StrSpan("testo_dialogo" 8574..8587), span: StrSpan("class=\"testo_dialogo\"" 8567..8588) }
token: ElementEnd { end: Open, span: StrSpan(">" 8588..8589) }
token: Text { text: StrSpan("Quello che cerco l‚Äôho nel cuore, come te." 8589..8632) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8634..8635)), span: StrSpan("</p>" 8632..8636) }
token: Text { text: StrSpan("\n" 8636..8637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8639..8643)), span: StrSpan("</body>" 8637..8644) }
token: Text { text: StrSpan("\n" 8644..8645) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8647..8651)), span: StrSpan("</html>" 8645..8652) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Il lago" 340..347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 349..351)), span: StrSpan("</h1>" 347..352) }
token: Text { text: StrSpan("\n\n" 352..354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 355..356), span: StrSpan("<p" 354..356) }
token: ElementEnd { end: Open, span: StrSpan(">" 356..357) }
token: Text { text: StrSpan("Ippolito, cacciatore vergine di Trezene, mor√≠ di mala morte per dispetto di Afrodite. Ma Diana, resuscitatolo, lo trafug√≤ in Italia (l‚ÄôEsperia) sui monti Albani dove lo adib√≠ al suo culto, chiamandolo Virbio. Virbio ebbe figli dalla ninfa Aricia." 357..608) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 610..611)), span: StrSpan("</p>" 608..612) }
token: Text { text: StrSpan("\n\n" 612..614) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 615..616), span: StrSpan("<p" 614..616) }
token: ElementEnd { end: Open, span: StrSpan(">" 616..617) }
token: Text { text: StrSpan("Per gli antichi l‚ÄôOccidente ‚Äì si pensi all‚Äô" 617..666) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("span" 667..671), span: StrSpan("<span" 666..671) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 672..677), value: StrSpan("testo_corsivo" 679..692), span: StrSpan("class=\"testo_corsivo\"" 672..693) }
token: ElementEnd { end: Open, span: StrSpan(">" 693..694) }
token: Text { text: StrSpan("Odissea" 694..701) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("span" 703..707)), span: StrSpan("</span>" 701..708) }
token: Text { text: StrSpan(" ‚Äì era il paese dei morti." 708..736) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 738..739)), span: StrSpan("</p>" 736..740) }
token: Text { text: StrSpan("\n\n" 740..742) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 743..744), span: StrSpan("<p" 742..744) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 745..750), value: StrSpan("testo_indicazioni_scena" 752..775), span: StrSpan("class=\"testo_indicazioni_scena\"" 745..776) }
token: ElementEnd { end: Open, span: StrSpan(">" 776..777) }
token: Text { text: StrSpan("(parlano Virbio e Diana)" 777..801) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 803..804)), span: StrSpan("</p>" 801..805) }
token: Text { text: StrSpan("\n\n\n" 805..808) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 809..810), span: StrSpan("<p" 808..810) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 811..816), value: StrSpan("testo_personaggio testo_maiuscoletto" 818..854), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 811..855) }
token: ElementEnd { end: Open, span: StrSpan(">" 855..856) }
token: Text { text: StrSpan("Virbio." 856..863) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 865..866)), span: StrSpan("</p>" 863..867) }
token: Text { text: StrSpan("\n" 867..868) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 869..870), span: StrSpan("<p" 868..870) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 871..876), value: StrSpan("testo_dialogo" 878..891), span: StrSpan("class=\"testo_dialogo\"" 871..892) }
token: ElementEnd { end: Open, span: StrSpan(">" 892..893) }
token: Text { text: StrSpan("Ti dir√≤ che venendoci mi piacque. Questo lago mi parve il mare antico. E fui lieto di viver la tua vita, di esser morto per tutti, di servirti nel bosco e sui monti. Qui le belve, le vette, i villani non san nulla, non conoscono che te. √à un paese senza cose passate, un paese dei morti." 893..1182) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1184..1185)), span: StrSpan("</p>" 1182..1186) }
token: Text { text: StrSpan("\n\n" 1186..1188) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1189..1190), span: StrSpan("<p" 1188..1190) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1191..1196), value: StrSpan("testo_personaggio testo_maiuscoletto" 1198..1234), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1191..1235) }
token: ElementEnd { end: Open, span: StrSpan(">" 1235..1236) }
token: Text { text: StrSpan("Diana." 1236..1242) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1244..1245)), span: StrSpan("</p>" 1242..1246) }
token: Text { text: StrSpan("\n" 1246..1247) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1248..1249), span: StrSpan("<p" 1247..1249) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1250..1255), value: StrSpan("testo_dialogo" 1257..1270), span: StrSpan("class=\"testo_dialogo\"" 1250..1271) }
token: ElementEnd { end: Open, span: StrSpan(">" 1271..1272) }
token: Text { text: StrSpan("Ippolito‚Ä¶" 1272..1283) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1285..1286)), span: StrSpan("</p>" 1283..1287) }
token: Text { text: StrSpan("\n\n" 1287..1289) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1290..1291), span: StrSpan("<p" 1289..1291) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1292..1297), value: StrSpan("testo_personaggio testo_maiuscoletto" 1299..1335), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1292..1336) }
token: ElementEnd { end: Open, span: StrSpan(">" 1336..1337) }
token: Text { text: StrSpan("Virbio." 1337..1344) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1346..1347)), span: StrSpan("</p>" 1344..1348) }
token: Text { text: StrSpan("\n" 1348..1349) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1350..1351), span: StrSpan("<p" 1349..1351) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1352..1357), value: StrSpan("testo_dialogo" 1359..1372), span: StrSpan("class=\"testo_dialogo\"" 1352..1373) }
token: ElementEnd { end: Open, span: StrSpan(">" 1373..1374) }
token: Text { text: StrSpan("Ippolito √® morto, tu mi hai chiamato Virbio." 1374..1419) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1421..1422)), span: StrSpan("</p>" 1419..1423) }
token: Text { text: StrSpan("\n\n" 1423..1425) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1426..1427), span: StrSpan("<p" 1425..1427) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1428..1433), value: StrSpan("testo_personaggio testo_maiuscoletto" 1435..1471), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1428..1472) }
token: ElementEnd { end: Open, span: StrSpan(">" 1472..1473) }
token: Text { text: StrSpan("Diana." 1473..1479) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1481..1482)), span: StrSpan("</p>" 1479..1483) }
token: Text { text: StrSpan("\n" 1483..1484) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1485..1486), span: StrSpan("<p" 1484..1486) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1487..1492), value: StrSpan("testo_dialogo" 1494..1507), span: StrSpan("class=\"testo_dialogo\"" 1487..1508) }
token: ElementEnd { end: Open, span: StrSpan(">" 1508..1509) }
token: Text { text: StrSpan("Ippolito, nemmeno morendo voi mortali scordate la vita?" 1509..1564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1566..1567)), span: StrSpan("</p>" 1564..1568) }
token: Text { text: StrSpan("\n\n" 1568..1570) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1571..1572), span: StrSpan("<p" 1570..1572) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1573..1578), value: StrSpan("testo_personaggio testo_maiuscoletto" 1580..1616), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1573..1617) }
token: ElementEnd { end: Open, span: StrSpan(">" 1617..1618) }
token: Text { text: StrSpan("Virbio." 1618..1625) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1627..1628)), span: StrSpan("</p>" 1625..1629) }
token: Text { text: StrSpan("\n" 1629..1630) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1631..1632), span: StrSpan("<p" 1630..1632) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1633..1638), value: StrSpan("testo_dialogo" 1640..1653), span: StrSpan("class=\"testo_dialogo\"" 1633..1654) }
token: ElementEnd { end: Open, span: StrSpan(">" 1654..1655) }
token: Text { text: StrSpan("Senti. Per tutti sono morto e ti servo. Quando tu mi hai strappato all‚ÄôAde e ridato alla luce, non chiedevo che di muovermi, respirare e venerarti. Mi hai posto qui dove terra e cielo risplendono, dove tutto √® sapido e vigoroso, tutto √® nuovo. Anche la notte qui √® giovane e fonda, pi√∫ che in patria. Qui il tempo non passa. Non si fanno ricordi. E tu sola regni qui." 1655..2028) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2030..2031)), span: StrSpan("</p>" 2028..2032) }
token: Text { text: StrSpan("\n\n" 2032..2034) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2035..2036), span: StrSpan("<p" 2034..2036) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2037..2042), value: StrSpan("testo_personaggio testo_maiuscoletto" 2044..2080), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2037..2081) }
token: ElementEnd { end: Open, span: StrSpan(">" 2081..2082) }
token: Text { text: StrSpan("Diana." 2082..2088) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2090..2091)), span: StrSpan("</p>" 2088..2092) }
token: Text { text: StrSpan("\n" 2092..2093) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2094..2095), span: StrSpan("<p" 2093..2095) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2096..2101), value: StrSpan("testo_dialogo" 2103..2116), span: StrSpan("class=\"testo_dialogo\"" 2096..2117) }
token: ElementEnd { end: Open, span: StrSpan(">" 2117..2118) }
token: Text { text: StrSpan("Sei tutto intriso di ricordi, Ippolito. Ma voglio ammettere un istante che questa sia terra di morti: che altro si fa nell‚ÄôAde se non riandare il passato?" 2118..2274) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2276..2277)), span: StrSpan("</p>" 2274..2278) }
token: Text { text: StrSpan("\n\n" 2278..2280) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2281..2282), span: StrSpan("<p" 2280..2282) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2283..2288), value: StrSpan("testo_personaggio testo_maiuscoletto" 2290..2326), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2283..2327) }
token: ElementEnd { end: Open, span: StrSpan(">" 2327..2328) }
token: Text { text: StrSpan("Virbio." 2328..2335) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2337..2338)), span: StrSpan("</p>" 2335..2339) }
token: Text { text: StrSpan("\n" 2339..2340) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2341..2342), span: StrSpan("<p" 2340..2342) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2343..2348), value: StrSpan("testo_dialogo" 2350..2363), span: StrSpan("class=\"testo_dialogo\"" 2343..2364) }
token: ElementEnd { end: Open, span: StrSpan(">" 2364..2365) }
token: Text { text: StrSpan("Ippolito √® morto, ti dico. E questo lago che somiglia al cielo non sa nulla d‚ÄôIppolito. Se io non ci fossi, questa terra sarebbe ugualmente com‚Äô√®. Pare un paese immaginato, veduto di l√† dalle nubi. Una volta ‚Äì ero ancora ragazzo ‚Äì pensai che dietro i monti di casa, lontano, dove il sole calava ‚Äì bastava andare, andare sempre ‚Äì sarei giunto al paese infantile del mattino, della caccia, del gioco perenne. Uno schiavo mi disse: ¬´" 2365..2811) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 2812..2813), span: StrSpan("<q" 2811..2813) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2814..2819), value: StrSpan("testo_no_virgolette" 2821..2840), span: StrSpan("class=\"testo_no_virgolette\"" 2814..2841) }
token: ElementEnd { end: Open, span: StrSpan(">" 2841..2842) }
token: Text { text: StrSpan("Bada a quel che desideri, piccolo. Gli d√®i lo concedono sempre" 2842..2905) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2907..2908)), span: StrSpan("</q>" 2905..2909) }
token: Text { text: StrSpan("¬ª. Era questo. Non sapevo di volere la morte." 2909..2955) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2957..2958)), span: StrSpan("</p>" 2955..2959) }
token: Text { text: StrSpan("\n\n" 2959..2961) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2962..2963), span: StrSpan("<p" 2961..2963) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2964..2969), value: StrSpan("testo_personaggio testo_maiuscoletto" 2971..3007), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2964..3008) }
token: ElementEnd { end: Open, span: StrSpan(">" 3008..3009) }
token: Text { text: StrSpan("Diana." 3009..3015) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3017..3018)), span: StrSpan("</p>" 3015..3019) }
token: Text { text: StrSpan("\n" 3019..3020) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3021..3022), span: StrSpan("<p" 3020..3022) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3023..3028), value: StrSpan("testo_dialogo" 3030..3043), span: StrSpan("class=\"testo_dialogo\"" 3023..3044) }
token: ElementEnd { end: Open, span: StrSpan(">" 3044..3045) }
token: Text { text: StrSpan("Questo √® un altro ricordo. Di che cosa ti lagni?" 3045..3094) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3096..3097)), span: StrSpan("</p>" 3094..3098) }
token: Text { text: StrSpan("\n\n" 3098..3100) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3101..3102), span: StrSpan("<p" 3100..3102) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3103..3108), value: StrSpan("testo_personaggio testo_maiuscoletto" 3110..3146), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3103..3147) }
token: ElementEnd { end: Open, span: StrSpan(">" 3147..3148) }
token: Text { text: StrSpan("Virbio." 3148..3155) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3157..3158)), span: StrSpan("</p>" 3155..3159) }
token: Text { text: StrSpan("\n" 3159..3160) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3161..3162), span: StrSpan("<p" 3160..3162) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3163..3168), value: StrSpan("testo_dialogo" 3170..3183), span: StrSpan("class=\"testo_dialogo\"" 3163..3184) }
token: ElementEnd { end: Open, span: StrSpan(">" 3184..3185) }
token: Text { text: StrSpan("O selvaggia, non so. Sembra ieri che aprii gli occhi quaggi√∫. So che √® passato tanto tempo, e questi monti, quest‚Äôacqua, questi alberi grandi sono immobili e muti. Chi √® Virbio? Sono altra cosa da un ragazzo che ogni mattina si ridesta e torna al gioco come se il tempo non passasse?" 3185..3473) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3475..3476)), span: StrSpan("</p>" 3473..3477) }
token: Text { text: StrSpan("\n\n" 3477..3479) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3480..3481), span: StrSpan("<p" 3479..3481) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3482..3487), value: StrSpan("testo_personaggio testo_maiuscoletto" 3489..3525), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3482..3526) }
token: ElementEnd { end: Open, span: StrSpan(">" 3526..3527) }
token: Text { text: StrSpan("Diana." 3527..3533) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3535..3536)), span: StrSpan("</p>" 3533..3537) }
token: Text { text: StrSpan("\n" 3537..3538) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3539..3540), span: StrSpan("<p" 3538..3540) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3541..3546), value: StrSpan("testo_dialogo" 3548..3561), span: StrSpan("class=\"testo_dialogo\"" 3541..3562) }
token: ElementEnd { end: Open, span: StrSpan(">" 3562..3563) }
token: Text { text: StrSpan("Tu sei Ippolito, il ragazzo che mor√≠ per seguirmi. E ora vivi oltre il tempo. Non hai bisogno di ricordi. Con me si vive alla giornata, come la lepre, come il cervo, come il lupo. E si fugge, s‚Äôinsegue sempre. Questa non √® terra di morti, ma il vivo crepuscolo di un mattino perenne. Non hai bisogno di ricordi, perch√© questa vita l‚Äôhai sempre saputa." 3563..3921) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3923..3924)), span: StrSpan("</p>" 3921..3925) }
token: Text { text: StrSpan("\n\n" 3925..3927) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3928..3929), span: StrSpan("<p" 3927..3929) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3930..3935), value: StrSpan("testo_personaggio testo_maiuscoletto" 3937..3973), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3930..3974) }
token: ElementEnd { end: Open, span: StrSpan(">" 3974..3975) }
token: Text { text: StrSpan("Virbio." 3975..3982) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3984..3985)), span: StrSpan("</p>" 3982..3986) }
token: Text { text: StrSpan("\n" 3986..3987) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3988..3989), span: StrSpan("<p" 3987..3989) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3990..3995), value: StrSpan("testo_dialogo" 3997..4010), span: StrSpan("class=\"testo_dialogo\"" 3990..4011) }
token: ElementEnd { end: Open, span: StrSpan(">" 4011..4012) }
token: Text { text: StrSpan("Eppure il sito qui √® davvero pi√∫ vivo che in patria. C‚Äô√® in tutte le cose e nel sole una luce radiosa come venisse dall‚Äôinterno, un vigore che si direbbe non ancora intaccato dai giorni. Che cos‚Äô√® per voi d√®i questa terra d‚ÄôEsperia?" 4012..4257) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4259..4260)), span: StrSpan("</p>" 4257..4261) }
token: Text { text: StrSpan("\n\n" 4261..4263) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4264..4265), span: StrSpan("<p" 4263..4265) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4266..4271), value: StrSpan("testo_personaggio testo_maiuscoletto" 4273..4309), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4266..4310) }
token: ElementEnd { end: Open, span: StrSpan(">" 4310..4311) }
token: Text { text: StrSpan("Diana." 4311..4317) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4319..4320)), span: StrSpan("</p>" 4317..4321) }
token: Text { text: StrSpan("\n" 4321..4322) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4323..4324), span: StrSpan("<p" 4322..4324) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4325..4330), value: StrSpan("testo_dialogo" 4332..4345), span: StrSpan("class=\"testo_dialogo\"" 4325..4346) }
token: ElementEnd { end: Open, span: StrSpan(">" 4346..4347) }
token: Text { text: StrSpan("Non diversa dalle altre sotto il cielo. Noi non viviamo di passato o d‚Äôavvenire. Ogni giorno √® per noi come il primo. Quel che a te pare un gran silenzio √® il nostro cielo." 4347..4523) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4525..4526)), span: StrSpan("</p>" 4523..4527) }
token: Text { text: StrSpan("\n\n" 4527..4529) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4530..4531), span: StrSpan("<p" 4529..4531) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4532..4537), value: StrSpan("testo_personaggio testo_maiuscoletto" 4539..4575), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4532..4576) }
token: ElementEnd { end: Open, span: StrSpan(">" 4576..4577) }
token: Text { text: StrSpan("Virbio." 4577..4584) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4586..4587)), span: StrSpan("</p>" 4584..4588) }
token: Text { text: StrSpan("\n" 4588..4589) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4590..4591), span: StrSpan("<p" 4589..4591) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4592..4597), value: StrSpan("testo_dialogo" 4599..4612), span: StrSpan("class=\"testo_dialogo\"" 4592..4613) }
token: ElementEnd { end: Open, span: StrSpan(">" 4613..4614) }
token: Text { text: StrSpan("Pure ho vissuto in luoghi che ti sono pi√∫ cari. Ho cacciato sul D√≠dimo, corse le spiagge di Trezene, paesi poveri e selvaggi come me. Ma in questo inumano silenzio, in questa vita oltre la vita non avevo mai tratto il respiro. Cos‚Äô√® che la fa solitudine?" 4614..4873) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4875..4876)), span: StrSpan("</p>" 4873..4877) }
token: Text { text: StrSpan("\n\n" 4877..4879) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4880..4881), span: StrSpan("<p" 4879..4881) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4882..4887), value: StrSpan("testo_personaggio testo_maiuscoletto" 4889..4925), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4882..4926) }
token: ElementEnd { end: Open, span: StrSpan(">" 4926..4927) }
token: Text { text: StrSpan("Diana." 4927..4933) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4935..4936)), span: StrSpan("</p>" 4933..4937) }
token: Text { text: StrSpan("\n" 4937..4938) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4939..4940), span: StrSpan("<p" 4938..4940) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4941..4946), value: StrSpan("testo_dialogo" 4948..4961), span: StrSpan("class=\"testo_dialogo\"" 4941..4962) }
token: ElementEnd { end: Open, span: StrSpan(">" 4962..4963) }
token: Text { text: StrSpan("Ragazzo che sei. Un paese dove l‚Äôuomo non era mai stato, sar√† sempre una terra dei morti. Dal tuo mare e dalle isole ne verranno degli altri, e crederanno di varcare l‚ÄôAde. E ci sono altre terre pi√∫ remote‚Ä¶" 4963..5177) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5179..5180)), span: StrSpan("</p>" 5177..5181) }
token: Text { text: StrSpan("\n\n" 5181..5183) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5184..5185), span: StrSpan("<p" 5183..5185) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5186..5191), value: StrSpan("testo_personaggio testo_maiuscoletto" 5193..5229), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5186..5230) }
token: ElementEnd { end: Open, span: StrSpan(">" 5230..5231) }
token: Text { text: StrSpan("Virbio." 5231..5238) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5240..5241)), span: StrSpan("</p>" 5238..5242) }
token: Text { text: StrSpan("\n" 5242..5243) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5244..5245), span: StrSpan("<p" 5243..5245) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5246..5251), value: StrSpan("testo_dialogo" 5253..5266), span: StrSpan("class=\"testo_dialogo\"" 5246..5267) }
token: ElementEnd { end: Open, span: StrSpan(">" 5267..5268) }
token: Text { text: StrSpan("Altri laghi, altri mattini come questi. L‚Äôacqua √® pi√∫ azzurra delle pr√∫gnole tra il verde. Mi par di essere un‚Äôombra tra le ombre degli alberi. Pi√∫ mi scaldo a questo sole e mi nutro a questa terra, pi√∫ mi pare di sciogliermi in stille e brusii, nella voce del lago, nei ringhi del bosco. C‚Äô√® qualcosa di remoto dietro ai tronchi, nei sassi, nel mio stesso sudore." 5268..5644) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5646..5647)), span: StrSpan("</p>" 5644..5648) }
token: Text { text: StrSpan("\n\n" 5648..5650) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5651..5652), span: StrSpan("<p" 5650..5652) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5653..5658), value: StrSpan("testo_personaggio testo_maiuscoletto" 5660..5696), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5653..5697) }
token: ElementEnd { end: Open, span: StrSpan(">" 5697..5698) }
token: Text { text: StrSpan("Diana." 5698..5704) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5706..5707)), span: StrSpan("</p>" 5704..5708) }
token: Text { text: StrSpan("\n" 5708..5709) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5710..5711), span: StrSpan("<p" 5709..5711) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5712..5717), value: StrSpan("testo_dialogo" 5719..5732), span: StrSpan("class=\"testo_dialogo\"" 5712..5733) }
token: ElementEnd { end: Open, span: StrSpan(">" 5733..5734) }
token: Text { text: StrSpan("Queste sono le smanie di quand‚Äôeri ragazzo." 5734..5779) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5781..5782)), span: StrSpan("</p>" 5779..5783) }
token: Text { text: StrSpan("\n\n" 5783..5785) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5786..5787), span: StrSpan("<p" 5785..5787) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5788..5793), value: StrSpan("testo_personaggio testo_maiuscoletto" 5795..5831), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5788..5832) }
token: ElementEnd { end: Open, span: StrSpan(">" 5832..5833) }
token: Text { text: StrSpan("Virbio." 5833..5840) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5842..5843)), span: StrSpan("</p>" 5840..5844) }
token: Text { text: StrSpan("\n" 5844..5845) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5846..5847), span: StrSpan("<p" 5845..5847) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5848..5853), value: StrSpan("testo_dialogo" 5855..5868), span: StrSpan("class=\"testo_dialogo\"" 5848..5869) }
token: ElementEnd { end: Open, span: StrSpan(">" 5869..5870) }
token: Text { text: StrSpan("Non sono pi√∫ un ragazzo. Conosco te e vengo dall‚ÄôAde. La mia terra √® lontana come le nuvole lass√∫. Ecco, passo fra i tronchi e le cose come fossi una nuvola." 5870..6032) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6034..6035)), span: StrSpan("</p>" 6032..6036) }
token: Text { text: StrSpan("\n\n" 6036..6038) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6039..6040), span: StrSpan("<p" 6038..6040) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6041..6046), value: StrSpan("testo_personaggio testo_maiuscoletto" 6048..6084), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6041..6085) }
token: ElementEnd { end: Open, span: StrSpan(">" 6085..6086) }
token: Text { text: StrSpan("Diana." 6086..6092) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6094..6095)), span: StrSpan("</p>" 6092..6096) }
token: Text { text: StrSpan("\n" 6096..6097) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6098..6099), span: StrSpan("<p" 6097..6099) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6100..6105), value: StrSpan("testo_dialogo" 6107..6120), span: StrSpan("class=\"testo_dialogo\"" 6100..6121) }
token: ElementEnd { end: Open, span: StrSpan(">" 6121..6122) }
token: Text { text: StrSpan("Tu sei felice, Ippolito. Se all‚Äôuomo √® dato esser felice, tu lo sei." 6122..6193) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6195..6196)), span: StrSpan("</p>" 6193..6197) }
token: Text { text: StrSpan("\n\n" 6197..6199) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6200..6201), span: StrSpan("<p" 6199..6201) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6202..6207), value: StrSpan("testo_personaggio testo_maiuscoletto" 6209..6245), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6202..6246) }
token: ElementEnd { end: Open, span: StrSpan(">" 6246..6247) }
token: Text { text: StrSpan("Virbio." 6247..6254) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6256..6257)), span: StrSpan("</p>" 6254..6258) }
token: Text { text: StrSpan("\n" 6258..6259) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6260..6261), span: StrSpan("<p" 6259..6261) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6262..6267), value: StrSpan("testo_dialogo" 6269..6282), span: StrSpan("class=\"testo_dialogo\"" 6262..6283) }
token: ElementEnd { end: Open, span: StrSpan(">" 6283..6284) }
token: Text { text: StrSpan("√à felice il ragazzo che fui, quello che √® morto. Tu l‚Äôhai salvato, e ti ringrazio. Ma il rinato, il tuo servo, il fuggiasco che guarda la quercia e i tuoi boschi, quello non √® felice, perch√© nemmeno sa se esiste. Chi gli risponde? chi gli parla? l‚Äôoggi aggiunge qualcosa al suo ieri?" 6284..6575) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6577..6578)), span: StrSpan("</p>" 6575..6579) }
token: Text { text: StrSpan("\n\n" 6579..6581) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6582..6583), span: StrSpan("<p" 6581..6583) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6584..6589), value: StrSpan("testo_personaggio testo_maiuscoletto" 6591..6627), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6584..6628) }
token: ElementEnd { end: Open, span: StrSpan(">" 6628..6629) }
token: Text { text: StrSpan("Diana." 6629..6635) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6637..6638)), span: StrSpan("</p>" 6635..6639) }
token: Text { text: StrSpan("\n" 6639..6640) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6641..6642), span: StrSpan("<p" 6640..6642) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6643..6648), value: StrSpan("testo_dialogo" 6650..6663), span: StrSpan("class=\"testo_dialogo\"" 6643..6664) }
token: ElementEnd { end: Open, span: StrSpan(">" 6664..6665) }
token: Text { text: StrSpan("Dunque, Virbio, √® tutto qui? Vuoi compagnia?" 6665..6710) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6712..6713)), span: StrSpan("</p>" 6710..6714) }
token: Text { text: StrSpan("\n\n" 6714..6716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6717..6718), span: StrSpan("<p" 6716..6718) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6719..6724), value: StrSpan("testo_personaggio testo_maiuscoletto" 6726..6762), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6719..6763) }
token: ElementEnd { end: Open, span: StrSpan(">" 6763..6764) }
token: Text { text: StrSpan("Virbio." 6764..6771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6773..6774)), span: StrSpan("</p>" 6771..6775) }
token: Text { text: StrSpan("\n" 6775..6776) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6777..6778), span: StrSpan("<p" 6776..6778) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6779..6784), value: StrSpan("testo_dialogo" 6786..6799), span: StrSpan("class=\"testo_dialogo\"" 6779..6800) }
token: ElementEnd { end: Open, span: StrSpan(">" 6800..6801) }
token: Text { text: StrSpan("Tu lo sai ci√≤ che voglio." 6801..6827) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6829..6830)), span: StrSpan("</p>" 6827..6831) }
token: Text { text: StrSpan("\n\n" 6831..6833) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6834..6835), span: StrSpan("<p" 6833..6835) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6836..6841), value: StrSpan("testo_personaggio testo_maiuscoletto" 6843..6879), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6836..6880) }
token: ElementEnd { end: Open, span: StrSpan(">" 6880..6881) }
token: Text { text: StrSpan("Diana." 6881..6887) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6889..6890)), span: StrSpan("</p>" 6887..6891) }
token: Text { text: StrSpan("\n" 6891..6892) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6893..6894), span: StrSpan("<p" 6892..6894) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6895..6900), value: StrSpan("testo_dialogo" 6902..6915), span: StrSpan("class=\"testo_dialogo\"" 6895..6916) }
token: ElementEnd { end: Open, span: StrSpan(">" 6916..6917) }
token: Text { text: StrSpan("I mortali finiscono sempre per chiedere questo. Ma che avete nel sangue?" 6917..6989) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6991..6992)), span: StrSpan("</p>" 6989..6993) }
token: Text { text: StrSpan("\n\n" 6993..6995) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6996..6997), span: StrSpan("<p" 6995..6997) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6998..7003), value: StrSpan("testo_personaggio testo_maiuscoletto" 7005..7041), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6998..7042) }
token: ElementEnd { end: Open, span: StrSpan(">" 7042..7043) }
token: Text { text: StrSpan("Virbio." 7043..7050) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7052..7053)), span: StrSpan("</p>" 7050..7054) }
token: Text { text: StrSpan("\n" 7054..7055) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7056..7057), span: StrSpan("<p" 7055..7057) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7058..7063), value: StrSpan("testo_dialogo" 7065..7078), span: StrSpan("class=\"testo_dialogo\"" 7058..7079) }
token: ElementEnd { end: Open, span: StrSpan(">" 7079..7080) }
token: Text { text: StrSpan("Tu chiedi a me che cosa √® il sangue?" 7080..7117) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7119..7120)), span: StrSpan("</p>" 7117..7121) }
token: Text { text: StrSpan("\n\n" 7121..7123) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7124..7125), span: StrSpan("<p" 7123..7125) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7126..7131), value: StrSpan("testo_personaggio testo_maiuscoletto" 7133..7169), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7126..7170) }
token: ElementEnd { end: Open, span: StrSpan(">" 7170..7171) }
token: Text { text: StrSpan("Diana." 7171..7177) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7179..7180)), span: StrSpan("</p>" 7177..7181) }
token: Text { text: StrSpan("\n" 7181..7182) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7183..7184), span: StrSpan("<p" 7182..7184) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7185..7190), value: StrSpan("testo_dialogo" 7192..7205), span: StrSpan("class=\"testo_dialogo\"" 7185..7206) }
token: ElementEnd { end: Open, span: StrSpan(">" 7206..7207) }
token: Text { text: StrSpan("C‚Äô√® un divino sapore nel sangue versato. Quante volte ti ho visto rovesciare il capriolo o la lupa, e tagliargli la gola e tuffarci le mani. Mi piacevi per questo. Ma l‚Äôaltro sangue, il sangue vostro, quel che vi gonfia le vene e accende gli occhi, non lo conosco cos√≠ bene. So che √® per voi vita e destino." 7207..7521) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7523..7524)), span: StrSpan("</p>" 7521..7525) }
token: Text { text: StrSpan("\n\n" 7525..7527) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7528..7529), span: StrSpan("<p" 7527..7529) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7530..7535), value: StrSpan("testo_personaggio testo_maiuscoletto" 7537..7573), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7530..7574) }
token: ElementEnd { end: Open, span: StrSpan(">" 7574..7575) }
token: Text { text: StrSpan("Virbio." 7575..7582) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7584..7585)), span: StrSpan("</p>" 7582..7586) }
token: Text { text: StrSpan("\n" 7586..7587) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7588..7589), span: StrSpan("<p" 7587..7589) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7590..7595), value: StrSpan("testo_dialogo" 7597..7610), span: StrSpan("class=\"testo_dialogo\"" 7590..7611) }
token: ElementEnd { end: Open, span: StrSpan(">" 7611..7612) }
token: Text { text: StrSpan("Gi√† una volta l‚Äôho sparso. E sentirlo inquieto e smarrito quest‚Äôoggi, mi d√† la prova che son vivo. N√© il vigore delle piante n√© la luce del lago mi bastano. Queste cose son come le nuvole, erranti eterne del mattino e della sera, guardiane degli orizzonti, le figure dell‚ÄôAde. Solamente altro sangue pu√≤ calmare il mio. E che scorra inquieto, e poi sazio." 7612..7978) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7980..7981)), span: StrSpan("</p>" 7978..7982) }
token: Text { text: StrSpan("\n\n" 7982..7984) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7985..7986), span: StrSpan("<p" 7984..7986) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7987..7992), value: StrSpan("testo_personaggio testo_maiuscoletto" 7994..8030), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7987..8031) }
token: ElementEnd { end: Open, span: StrSpan(">" 8031..8032) }
token: Text { text: StrSpan("Diana." 8032..8038) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8040..8041)), span: StrSpan("</p>" 8038..8042) }
token: Text { text: StrSpan("\n" 8042..8043) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8044..8045), span: StrSpan("<p" 8043..8045) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8046..8051), value: StrSpan("testo_dialogo" 8053..8066), span: StrSpan("class=\"testo_dialogo\"" 8046..8067) }
token: ElementEnd { end: Open, span: StrSpan(">" 8067..8068) }
token: Text { text: StrSpan("A pigliarti in parola, tu vorresti sgozzare." 8068..8112) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8114..8115)), span: StrSpan("</p>" 8112..8116) }
token: Text { text: StrSpan("\n\n" 8116..8118) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8119..8120), span: StrSpan("<p" 8118..8120) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8121..8126), value: StrSpan("testo_personaggio testo_maiuscoletto" 8128..8164), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8121..8165) }
token: ElementEnd { end: Open, span: StrSpan(">" 8165..8166) }
token: Text { text: StrSpan("Virbio." 8166..8173) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8175..8176)), span: StrSpan("</p>" 8173..8177) }
token: Text { text: StrSpan("\n" 8177..8178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8179..8180), span: StrSpan("<p" 8178..8180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8181..8186), value: StrSpan("testo_dialogo" 8188..8201), span: StrSpan("class=\"testo_dialogo\"" 8181..8202) }
token: ElementEnd { end: Open, span: StrSpan(">" 8202..8203) }
token: Text { text: StrSpan("Non hai torto, selvaggia. Prima, quando ero Ippolito, sgozzavo le belve. Mi bastava. Ora qui, in questa terra dei morti, anche le belve mi dileguano tra mano come nubi. La colpa √® mia, credo. Ma ho bisogno di stringere a me un sangue caldo e fraterno. Ho bisogno di avere una voce e un destino. O selvaggia, concedimi questo." 8203..8529) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8531..8532)), span: StrSpan("</p>" 8529..8533) }
token: Text { text: StrSpan("\n\n" 8533..8535) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8536..8537), span: StrSpan("<p" 8535..8537) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8538..8543), value: StrSpan("testo_personaggio testo_maiuscoletto" 8545..8581), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8538..8582) }
token: ElementEnd { end: Open, span: StrSpan(">" 8582..8583) }
token: Text { text: StrSpan("Diana." 8583..8589) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8591..8592)), span: StrSpan("</p>" 8589..8593) }
token: Text { text: StrSpan("\n" 8593..8594) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8595..8596), span: StrSpan("<p" 8594..8596) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8597..8602), value: StrSpan("testo_dialogo" 8604..8617), span: StrSpan("class=\"testo_dialogo\"" 8597..8618) }
token: ElementEnd { end: Open, span: StrSpan(">" 8618..8619) }
token: Text { text: StrSpan("Pensaci bene, Virbio-Ippolito. Tu sei stato felice." 8619..8670) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8672..8673)), span: StrSpan("</p>" 8670..8674) }
token: Text { text: StrSpan("\n\n" 8674..8676) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8677..8678), span: StrSpan("<p" 8676..8678) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8679..8684), value: StrSpan("testo_personaggio testo_maiuscoletto" 8686..8722), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8679..8723) }
token: ElementEnd { end: Open, span: StrSpan(">" 8723..8724) }
token: Text { text: StrSpan("Virbio." 8724..8731) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8733..8734)), span: StrSpan("</p>" 8731..8735) }
token: Text { text: StrSpan("\n" 8735..8736) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8737..8738), span: StrSpan("<p" 8736..8738) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8739..8744), value: StrSpan("testo_dialogo" 8746..8759), span: StrSpan("class=\"testo_dialogo\"" 8739..8760) }
token: ElementEnd { end: Open, span: StrSpan(">" 8760..8761) }
token: Text { text: StrSpan("Non importa, signora. Troppe volte mi sono specchiato nel lago. Chiedo di vivere, non di essere felice." 8761..8864) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8866..8867)), span: StrSpan("</p>" 8864..8868) }
token: Text { text: StrSpan("\n" 8868..8869) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8871..8875)), span: StrSpan("</body>" 8869..8876) }
token: Text { text: StrSpan("\n" 8876..8877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8879..8883)), span: StrSpan("</html>" 8877..8884) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Le streghe" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Odisseo giunse da Circe, avvertito del pericolo e immunizzato magicamente contro gli incanti. Di qui, l‚Äôinutilit√† del colpo di bacchetta della maga. Ma la maga ‚Äì antica dea mediterranea scaduta di rango ‚Äì sapeva da tempo che nel suo destino sarebbe entrato un Odisseo. Di ci√≤ Omero non ha tenuto quel conto che si vorrebbe." 360..691) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 693..694)), span: StrSpan("</p>" 691..695) }
token: Text { text: StrSpan("\n\n" 695..697) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 698..699), span: StrSpan("<p" 697..699) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 700..705), value: StrSpan("testo_indicazioni_scena" 707..730), span: StrSpan("class=\"testo_indicazioni_scena\"" 700..731) }
token: ElementEnd { end: Open, span: StrSpan(">" 731..732) }
token: Text { text: StrSpan("(parlano Circe e Leucotea)" 732..758) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 760..761)), span: StrSpan("</p>" 758..762) }
token: Text { text: StrSpan("\n\n\n" 762..765) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 766..767), span: StrSpan("<p" 765..767) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 768..773), value: StrSpan("testo_personaggio testo_maiuscoletto" 775..811), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 768..812) }
token: ElementEnd { end: Open, span: StrSpan(">" 812..813) }
token: Text { text: StrSpan("Circe." 813..819) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 821..822)), span: StrSpan("</p>" 819..823) }
token: Text { text: StrSpan("\n" 823..824) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 825..826), span: StrSpan("<p" 824..826) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 827..832), value: StrSpan("testo_dialogo" 834..847), span: StrSpan("class=\"testo_dialogo\"" 827..848) }
token: ElementEnd { end: Open, span: StrSpan(">" 848..849) }
token: Text { text: StrSpan("Credimi, Leuc√≤, l√≠ per l√≠ non capii. Succede a volte di sbagliare la formula, succede un‚Äôamnesia. Eppure l‚Äôavevo toccato. La verit√† √® che l‚Äôaspettavo da tanto tempo che non ci pensavo pi√∫. Appena capii tutto ‚Äì lui aveva fatto un balzo e messo mano alla spada ‚Äì mi venne da sorridere ‚Äì tanta fu la contentezza e insieme la delusione. Pensai perfino di poterne fare a meno, di sfuggire alla sorte. ¬´" 849..1265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1266..1267), span: StrSpan("<q" 1265..1267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1268..1273), value: StrSpan("testo_no_virgolette" 1275..1294), span: StrSpan("class=\"testo_no_virgolette\"" 1268..1295) }
token: ElementEnd { end: Open, span: StrSpan(">" 1295..1296) }
token: Text { text: StrSpan("Dopotutto √® Odisseo" 1296..1316) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1318..1319)), span: StrSpan("</q>" 1316..1320) }
token: Text { text: StrSpan("¬ª pensai, ¬´" 1320..1333) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1334..1335), span: StrSpan("<q" 1333..1335) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1336..1341), value: StrSpan("testo_no_virgolette" 1343..1362), span: StrSpan("class=\"testo_no_virgolette\"" 1336..1363) }
token: ElementEnd { end: Open, span: StrSpan(">" 1363..1364) }
token: Text { text: StrSpan("uno che vuol tornare a casa" 1364..1391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1393..1394)), span: StrSpan("</q>" 1391..1395) }
token: Text { text: StrSpan("¬ª. Pensavo gi√† d‚Äôimbarcarlo. Cara Leuc√≤. Lui dimenava quella spada ‚Äì ridicolo e bravo come solo un uomo sa essere ‚Äì e io dovevo sorridere e squadrarlo come faccio con loro, e stupirmi e scostarmi. Mi sentivo come una ragazza, come quando eravamo ragazze e ci dicevano che cosa avremmo fatto da grandi e noi gi√π a ridere. Tutto si svolse come un ballo. Lui mi prese per i polsi, alz√≤ la voce, io divenni di tutti i colori ‚Äì per√≤ ero pallida, Leuc√≤ ‚Äì gli abbracciai le ginocchia e cominciai la mia battuta: ¬´" 1395..1919) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1920..1921), span: StrSpan("<q" 1919..1921) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1922..1927), value: StrSpan("testo_no_virgolette" 1929..1948), span: StrSpan("class=\"testo_no_virgolette\"" 1922..1949) }
token: ElementEnd { end: Open, span: StrSpan(">" 1949..1950) }
token: Text { text: StrSpan("Chi sei tu? da quale terra generato‚Ä¶" 1950..1988) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1990..1991)), span: StrSpan("</q>" 1988..1992) }
token: Text { text: StrSpan("¬ª Poveretto, pensavo, lui non sa quel che gli tocca. Era grande, ricciuto, un bell‚Äôuomo, Leuc√≤. Che stupendo maiale, che lupo, avrebbe fatto." 1992..2137) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2139..2140)), span: StrSpan("</p>" 2137..2141) }
token: Text { text: StrSpan("\n\n" 2141..2143) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2144..2145), span: StrSpan("<p" 2143..2145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2146..2151), value: StrSpan("testo_personaggio testo_maiuscoletto" 2153..2189), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2146..2190) }
token: ElementEnd { end: Open, span: StrSpan(">" 2190..2191) }
token: Text { text: StrSpan("Leucotea." 2191..2200) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2202..2203)), span: StrSpan("</p>" 2200..2204) }
token: Text { text: StrSpan("\n" 2204..2205) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2206..2207), span: StrSpan("<p" 2205..2207) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2208..2213), value: StrSpan("testo_dialogo" 2215..2228), span: StrSpan("class=\"testo_dialogo\"" 2208..2229) }
token: ElementEnd { end: Open, span: StrSpan(">" 2229..2230) }
token: Text { text: StrSpan("Ma queste cose gliele hai dette, nell‚Äôanno che ha passato con te?" 2230..2297) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2299..2300)), span: StrSpan("</p>" 2297..2301) }
token: Text { text: StrSpan("\n\n" 2301..2303) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2304..2305), span: StrSpan("<p" 2303..2305) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2306..2311), value: StrSpan("testo_personaggio testo_maiuscoletto" 2313..2349), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2306..2350) }
token: ElementEnd { end: Open, span: StrSpan(">" 2350..2351) }
token: Text { text: StrSpan("Circe." 2351..2357) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2359..2360)), span: StrSpan("</p>" 2357..2361) }
token: Text { text: StrSpan("\n" 2361..2362) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2363..2364), span: StrSpan("<p" 2362..2364) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2365..2370), value: StrSpan("testo_dialogo" 2372..2385), span: StrSpan("class=\"testo_dialogo\"" 2365..2386) }
token: ElementEnd { end: Open, span: StrSpan(">" 2386..2387) }
token: Text { text: StrSpan("Oh ragazza, non parlare delle cose del destino con un uomo. Loro credono di aver detto tutto quando l‚Äôhanno chiamato la catena di ferro, il decreto fatale. Noi ci chiamano le signore fatali, lo sai." 2387..2587) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2589..2590)), span: StrSpan("</p>" 2587..2591) }
token: Text { text: StrSpan("\n\n" 2591..2593) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2594..2595), span: StrSpan("<p" 2593..2595) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2596..2601), value: StrSpan("testo_personaggio testo_maiuscoletto" 2603..2639), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2596..2640) }
token: ElementEnd { end: Open, span: StrSpan(">" 2640..2641) }
token: Text { text: StrSpan("Leucotea." 2641..2650) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2652..2653)), span: StrSpan("</p>" 2650..2654) }
token: Text { text: StrSpan("\n" 2654..2655) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2656..2657), span: StrSpan("<p" 2655..2657) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2658..2663), value: StrSpan("testo_dialogo" 2665..2678), span: StrSpan("class=\"testo_dialogo\"" 2658..2679) }
token: ElementEnd { end: Open, span: StrSpan(">" 2679..2680) }
token: Text { text: StrSpan("Non sanno sorridere." 2680..2700) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2702..2703)), span: StrSpan("</p>" 2700..2704) }
token: Text { text: StrSpan("\n\n" 2704..2706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2707..2708), span: StrSpan("<p" 2706..2708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2709..2714), value: StrSpan("testo_personaggio testo_maiuscoletto" 2716..2752), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2709..2753) }
token: ElementEnd { end: Open, span: StrSpan(">" 2753..2754) }
token: Text { text: StrSpan("Circe." 2754..2760) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2762..2763)), span: StrSpan("</p>" 2760..2764) }
token: Text { text: StrSpan("\n" 2764..2765) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2766..2767), span: StrSpan("<p" 2765..2767) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2768..2773), value: StrSpan("testo_dialogo" 2775..2788), span: StrSpan("class=\"testo_dialogo\"" 2768..2789) }
token: ElementEnd { end: Open, span: StrSpan(">" 2789..2790) }
token: Text { text: StrSpan("S√≠. Qualcuno di loro sa ridere davanti al destino, sa ridere dopo, ma durante bisogna che faccia sul serio o che muoia. Non sanno scherzare sulle cose divine, non sanno sentirsi recitare come noi. La loro vita √® cos√≠ breve che non possono accettare di far cose gi√† fatte o sapute. Anche lui, l‚ÄôOdisseo, il coraggioso, se gli dicevo una parola in questo senso, smetteva di capirmi e pensava a Penelope." 2790..3197) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3199..3200)), span: StrSpan("</p>" 3197..3201) }
token: Text { text: StrSpan("\n\n" 3201..3203) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3204..3205), span: StrSpan("<p" 3203..3205) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3206..3211), value: StrSpan("testo_personaggio testo_maiuscoletto" 3213..3249), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3206..3250) }
token: ElementEnd { end: Open, span: StrSpan(">" 3250..3251) }
token: Text { text: StrSpan("Leucotea." 3251..3260) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3262..3263)), span: StrSpan("</p>" 3260..3264) }
token: Text { text: StrSpan("\n" 3264..3265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3266..3267), span: StrSpan("<p" 3265..3267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3268..3273), value: StrSpan("testo_dialogo" 3275..3288), span: StrSpan("class=\"testo_dialogo\"" 3268..3289) }
token: ElementEnd { end: Open, span: StrSpan(">" 3289..3290) }
token: Text { text: StrSpan("Che noia." 3290..3299) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3301..3302)), span: StrSpan("</p>" 3299..3303) }
token: Text { text: StrSpan("\n\n" 3303..3305) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3306..3307), span: StrSpan("<p" 3305..3307) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3308..3313), value: StrSpan("testo_personaggio testo_maiuscoletto" 3315..3351), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3308..3352) }
token: ElementEnd { end: Open, span: StrSpan(">" 3352..3353) }
token: Text { text: StrSpan("Circe." 3353..3359) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3361..3362)), span: StrSpan("</p>" 3359..3363) }
token: Text { text: StrSpan("\n" 3363..3364) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3365..3366), span: StrSpan("<p" 3364..3366) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3367..3372), value: StrSpan("testo_dialogo" 3374..3387), span: StrSpan("class=\"testo_dialogo\"" 3367..3388) }
token: ElementEnd { end: Open, span: StrSpan(">" 3388..3389) }
token: Text { text: StrSpan("S√≠ ma vedi, io lo capisco. Con Penelope non doveva sorridere, con lei tutto, anche il pasto quotidiano, era serio e inedito ‚Äì potevano prepararsi alla morte. Tu non sai quanto la morte li attiri. Morire √® s√≠ un destino per loro, una ripetizione, una cosa saputa, ma s‚Äôilludono che cambi qualcosa." 3389..3692) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3694..3695)), span: StrSpan("</p>" 3692..3696) }
token: Text { text: StrSpan("\n\n" 3696..3698) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3699..3700), span: StrSpan("<p" 3698..3700) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3701..3706), value: StrSpan("testo_personaggio testo_maiuscoletto" 3708..3744), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3701..3745) }
token: ElementEnd { end: Open, span: StrSpan(">" 3745..3746) }
token: Text { text: StrSpan("Leucotea." 3746..3755) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3757..3758)), span: StrSpan("</p>" 3755..3759) }
token: Text { text: StrSpan("\n" 3759..3760) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3761..3762), span: StrSpan("<p" 3760..3762) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3763..3768), value: StrSpan("testo_dialogo" 3770..3783), span: StrSpan("class=\"testo_dialogo\"" 3763..3784) }
token: ElementEnd { end: Open, span: StrSpan(">" 3784..3785) }
token: Text { text: StrSpan("Perch√© allora non volle diventare un maiale?" 3785..3830) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3832..3833)), span: StrSpan("</p>" 3830..3834) }
token: Text { text: StrSpan("\n\n" 3834..3836) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3837..3838), span: StrSpan("<p" 3836..3838) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3839..3844), value: StrSpan("testo_personaggio testo_maiuscoletto" 3846..3882), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3839..3883) }
token: ElementEnd { end: Open, span: StrSpan(">" 3883..3884) }
token: Text { text: StrSpan("Circe." 3884..3890) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3892..3893)), span: StrSpan("</p>" 3890..3894) }
token: Text { text: StrSpan("\n" 3894..3895) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3896..3897), span: StrSpan("<p" 3895..3897) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3898..3903), value: StrSpan("testo_dialogo" 3905..3918), span: StrSpan("class=\"testo_dialogo\"" 3898..3919) }
token: ElementEnd { end: Open, span: StrSpan(">" 3919..3920) }
token: Text { text: StrSpan("Ah Leuc√≤, non volle nemmeno diventare un dio, e sai quanto Calipso lo pregasse, quella sciocca. Odisseo era cos√≠, n√© maiale n√© dio, un uomo solo, estremamente intelligente, e bravo davanti al destino." 3920..4124) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4126..4127)), span: StrSpan("</p>" 4124..4128) }
token: Text { text: StrSpan("\n\n" 4128..4130) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4131..4132), span: StrSpan("<p" 4130..4132) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4133..4138), value: StrSpan("testo_personaggio testo_maiuscoletto" 4140..4176), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4133..4177) }
token: ElementEnd { end: Open, span: StrSpan(">" 4177..4178) }
token: Text { text: StrSpan("Leucotea." 4178..4187) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4189..4190)), span: StrSpan("</p>" 4187..4191) }
token: Text { text: StrSpan("\n" 4191..4192) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4193..4194), span: StrSpan("<p" 4192..4194) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4195..4200), value: StrSpan("testo_dialogo" 4202..4215), span: StrSpan("class=\"testo_dialogo\"" 4195..4216) }
token: ElementEnd { end: Open, span: StrSpan(">" 4216..4217) }
token: Text { text: StrSpan("Dimmi, cara, ti √® molto piaciuto con lui?" 4217..4259) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4261..4262)), span: StrSpan("</p>" 4259..4263) }
token: Text { text: StrSpan("\n\n" 4263..4265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4266..4267), span: StrSpan("<p" 4265..4267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4268..4273), value: StrSpan("testo_personaggio testo_maiuscoletto" 4275..4311), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4268..4312) }
token: ElementEnd { end: Open, span: StrSpan(">" 4312..4313) }
token: Text { text: StrSpan("Circe." 4313..4319) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4321..4322)), span: StrSpan("</p>" 4319..4323) }
token: Text { text: StrSpan("\n" 4323..4324) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4325..4326), span: StrSpan("<p" 4324..4326) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4327..4332), value: StrSpan("testo_dialogo" 4334..4347), span: StrSpan("class=\"testo_dialogo\"" 4327..4348) }
token: ElementEnd { end: Open, span: StrSpan(">" 4348..4349) }
token: Text { text: StrSpan("Penso una cosa, Leuc√≤. Nessuna di noi dee ha mai voluto farsi mortale, nessuna l‚Äôha mai desiderato. Eppure qui sarebbe il nuovo, che spezzerebbe la catena." 4349..4507) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4509..4510)), span: StrSpan("</p>" 4507..4511) }
token: Text { text: StrSpan("\n\n" 4511..4513) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4514..4515), span: StrSpan("<p" 4513..4515) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4516..4521), value: StrSpan("testo_personaggio testo_maiuscoletto" 4523..4559), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4516..4560) }
token: ElementEnd { end: Open, span: StrSpan(">" 4560..4561) }
token: Text { text: StrSpan("Leucotea." 4561..4570) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4572..4573)), span: StrSpan("</p>" 4570..4574) }
token: Text { text: StrSpan("\n" 4574..4575) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4576..4577), span: StrSpan("<p" 4575..4577) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4578..4583), value: StrSpan("testo_dialogo" 4585..4598), span: StrSpan("class=\"testo_dialogo\"" 4578..4599) }
token: ElementEnd { end: Open, span: StrSpan(">" 4599..4600) }
token: Text { text: StrSpan("Tu vorresti?" 4600..4612) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4614..4615)), span: StrSpan("</p>" 4612..4616) }
token: Text { text: StrSpan("\n\n" 4616..4618) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4619..4620), span: StrSpan("<p" 4618..4620) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4621..4626), value: StrSpan("testo_personaggio testo_maiuscoletto" 4628..4664), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4621..4665) }
token: ElementEnd { end: Open, span: StrSpan(">" 4665..4666) }
token: Text { text: StrSpan("Circe." 4666..4672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4674..4675)), span: StrSpan("</p>" 4672..4676) }
token: Text { text: StrSpan("\n" 4676..4677) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4678..4679), span: StrSpan("<p" 4677..4679) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4680..4685), value: StrSpan("testo_dialogo" 4687..4700), span: StrSpan("class=\"testo_dialogo\"" 4680..4701) }
token: ElementEnd { end: Open, span: StrSpan(">" 4701..4702) }
token: Text { text: StrSpan("Che dici, Leuc√≤‚Ä¶ Odisseo non capiva perch√© sorridevo. Non capiva sovente nemmeno che sorridevo. Una volta credetti di avergli spiegato perch√© la bestia √® pi√∫ vicina a noialtri immortali che non l‚Äôuomo intelligente e coraggioso. La bestia che mangia, che monta, e non ha memoria. Lui mi rispose che in patria lo attendeva un cane, un povero cane che forse era morto, e mi disse il suo nome. Capisci, Leuc√≤, quel cane aveva un nome." 4702..5142) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5144..5145)), span: StrSpan("</p>" 5142..5146) }
token: Text { text: StrSpan("\n\n" 5146..5148) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5149..5150), span: StrSpan("<p" 5148..5150) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5151..5156), value: StrSpan("testo_personaggio testo_maiuscoletto" 5158..5194), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5151..5195) }
token: ElementEnd { end: Open, span: StrSpan(">" 5195..5196) }
token: Text { text: StrSpan("Leucotea." 5196..5205) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5207..5208)), span: StrSpan("</p>" 5205..5209) }
token: Text { text: StrSpan("\n" 5209..5210) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5211..5212), span: StrSpan("<p" 5210..5212) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5213..5218), value: StrSpan("testo_dialogo" 5220..5233), span: StrSpan("class=\"testo_dialogo\"" 5213..5234) }
token: ElementEnd { end: Open, span: StrSpan(">" 5234..5235) }
token: Text { text: StrSpan("Anche a noialtre d√†nno un nome, gli uomini." 5235..5279) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5281..5282)), span: StrSpan("</p>" 5279..5283) }
token: Text { text: StrSpan("\n\n" 5283..5285) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5286..5287), span: StrSpan("<p" 5285..5287) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5288..5293), value: StrSpan("testo_personaggio testo_maiuscoletto" 5295..5331), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5288..5332) }
token: ElementEnd { end: Open, span: StrSpan(">" 5332..5333) }
token: Text { text: StrSpan("Circe." 5333..5339) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5341..5342)), span: StrSpan("</p>" 5339..5343) }
token: Text { text: StrSpan("\n" 5343..5344) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5345..5346), span: StrSpan("<p" 5344..5346) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5347..5352), value: StrSpan("testo_dialogo" 5354..5367), span: StrSpan("class=\"testo_dialogo\"" 5347..5368) }
token: ElementEnd { end: Open, span: StrSpan(">" 5368..5369) }
token: Text { text: StrSpan("Molti nomi mi diede Odisseo stando sul mio letto. Ogni volta era un nome. Dapprincipio fu come il grido della bestia, di un maiale o del lupo, ma lui stesso a poco a poco si accorse ch‚Äôeran sillabe di una sola parola. Mi ha chiamata coi nomi di tutte le dee, delle nostre sorelle, coi nomi della madre, delle cose della vita. Era come una lotta con me, con la sorte. Voleva chiamarmi, tenermi, farmi mortale. Voleva spezzare qualcosa. Intelligenza e coraggio ci mise ‚Äì ne aveva ‚Äì ma non seppe sorridere mai. Non seppe mai cos‚Äô√® il sorriso degli d√®i ‚Äì di noi che sappiamo il destino." 5369..5963) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5965..5966)), span: StrSpan("</p>" 5963..5967) }
token: Text { text: StrSpan("\n\n" 5967..5969) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5970..5971), span: StrSpan("<p" 5969..5971) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5972..5977), value: StrSpan("testo_personaggio testo_maiuscoletto" 5979..6015), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5972..6016) }
token: ElementEnd { end: Open, span: StrSpan(">" 6016..6017) }
token: Text { text: StrSpan("Leucotea." 6017..6026) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6028..6029)), span: StrSpan("</p>" 6026..6030) }
token: Text { text: StrSpan("\n" 6030..6031) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6032..6033), span: StrSpan("<p" 6031..6033) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6034..6039), value: StrSpan("testo_dialogo" 6041..6054), span: StrSpan("class=\"testo_dialogo\"" 6034..6055) }
token: ElementEnd { end: Open, span: StrSpan(">" 6055..6056) }
token: Text { text: StrSpan("Nessun uomo capisce noialtre, e la bestia. Li ho veduti i tuoi uomini. Fatti lupi o maiali, ruggiscono ancora come uomini interi. √à uno strazio. Nella loro intelligenza sono ben rozzi. Tu hai molto giocato con loro?" 6056..6272) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6274..6275)), span: StrSpan("</p>" 6272..6276) }
token: Text { text: StrSpan("\n\n" 6276..6278) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6279..6280), span: StrSpan("<p" 6278..6280) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6281..6286), value: StrSpan("testo_personaggio testo_maiuscoletto" 6288..6324), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6281..6325) }
token: ElementEnd { end: Open, span: StrSpan(">" 6325..6326) }
token: Text { text: StrSpan("Circe." 6326..6332) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6334..6335)), span: StrSpan("</p>" 6332..6336) }
token: Text { text: StrSpan("\n" 6336..6337) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6338..6339), span: StrSpan("<p" 6337..6339) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6340..6345), value: StrSpan("testo_dialogo" 6347..6360), span: StrSpan("class=\"testo_dialogo\"" 6340..6361) }
token: ElementEnd { end: Open, span: StrSpan(">" 6361..6362) }
token: Text { text: StrSpan("Me li godo, Leuc√≤. Me li godo come posso. Non mi fu dato avere un dio nel mio letto, e di uomini soltanto Odisseo. Tutti gli altri che tocco diventano bestia e s‚Äôinfuriano, e mi cercano cos√≠, come bestie. Io li prendo, Leuc√≤: la loro furia non √® meglio n√© peggio dell‚Äôamore di un dio. Ma con loro non devo nemmeno sorridere; li sento coprirmi e poi scappare a rintanarsi. Non mi succede di abbassare gli occhi." 6362..6781) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6783..6784)), span: StrSpan("</p>" 6781..6785) }
token: Text { text: StrSpan("\n\n" 6785..6787) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6788..6789), span: StrSpan("<p" 6787..6789) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6790..6795), value: StrSpan("testo_personaggio testo_maiuscoletto" 6797..6833), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6790..6834) }
token: ElementEnd { end: Open, span: StrSpan(">" 6834..6835) }
token: Text { text: StrSpan("Leucotea." 6835..6844) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6846..6847)), span: StrSpan("</p>" 6844..6848) }
token: Text { text: StrSpan("\n" 6848..6849) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6850..6851), span: StrSpan("<p" 6849..6851) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6852..6857), value: StrSpan("testo_dialogo" 6859..6872), span: StrSpan("class=\"testo_dialogo\"" 6852..6873) }
token: ElementEnd { end: Open, span: StrSpan(">" 6873..6874) }
token: Text { text: StrSpan("E Odisseo‚Ä¶" 6874..6886) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6888..6889)), span: StrSpan("</p>" 6886..6890) }
token: Text { text: StrSpan("\n\n" 6890..6892) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6893..6894), span: StrSpan("<p" 6892..6894) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6895..6900), value: StrSpan("testo_personaggio testo_maiuscoletto" 6902..6938), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6895..6939) }
token: ElementEnd { end: Open, span: StrSpan(">" 6939..6940) }
token: Text { text: StrSpan("Circe." 6940..6946) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6948..6949)), span: StrSpan("</p>" 6946..6950) }
token: Text { text: StrSpan("\n" 6950..6951) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6952..6953), span: StrSpan("<p" 6951..6953) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6954..6959), value: StrSpan("testo_dialogo" 6961..6974), span: StrSpan("class=\"testo_dialogo\"" 6954..6975) }
token: ElementEnd { end: Open, span: StrSpan(">" 6975..6976) }
token: Text { text: StrSpan("Non mi chiedo chi siano‚Ä¶ Vuoi sapere chi fosse Odisseo?" 6976..7033) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7035..7036)), span: StrSpan("</p>" 7033..7037) }
token: Text { text: StrSpan("\n\n" 7037..7039) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7040..7041), span: StrSpan("<p" 7039..7041) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7042..7047), value: StrSpan("testo_personaggio testo_maiuscoletto" 7049..7085), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7042..7086) }
token: ElementEnd { end: Open, span: StrSpan(">" 7086..7087) }
token: Text { text: StrSpan("Leucotea." 7087..7096) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7098..7099)), span: StrSpan("</p>" 7096..7100) }
token: Text { text: StrSpan("\n" 7100..7101) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7102..7103), span: StrSpan("<p" 7101..7103) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7104..7109), value: StrSpan("testo_dialogo" 7111..7124), span: StrSpan("class=\"testo_dialogo\"" 7104..7125) }
token: ElementEnd { end: Open, span: StrSpan(">" 7125..7126) }
token: Text { text: StrSpan("Dimmi, Circe." 7126..7139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7141..7142)), span: StrSpan("</p>" 7139..7143) }
token: Text { text: StrSpan("\n\n" 7143..7145) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7146..7147), span: StrSpan("<p" 7145..7147) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7148..7153), value: StrSpan("testo_personaggio testo_maiuscoletto" 7155..7191), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7148..7192) }
token: ElementEnd { end: Open, span: StrSpan(">" 7192..7193) }
token: Text { text: StrSpan("Circe." 7193..7199) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7201..7202)), span: StrSpan("</p>" 7199..7203) }
token: Text { text: StrSpan("\n" 7203..7204) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7205..7206), span: StrSpan("<p" 7204..7206) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7207..7212), value: StrSpan("testo_dialogo" 7214..7227), span: StrSpan("class=\"testo_dialogo\"" 7207..7228) }
token: ElementEnd { end: Open, span: StrSpan(">" 7228..7229) }
token: Text { text: StrSpan("Una sera mi descrisse il suo arrivo in Eea, la paura dei compagni, le sentinelle poste alle navi. Mi disse che tutta la notte ascoltarono i ringhi e i ruggiti, distesi nei mantelli sulla spiaggia del mare. E poi che, apparso il giorno, videro di l√† dalla selva levarsi una spira e che gridarono di gioia, riconoscendo la patria e le case. Queste cose mi disse sorridendo ‚Äì come sorridono gli uomini ‚Äì seduto al mio fianco davanti al camino. Disse che voleva scordarsi chi ero e dov‚Äôera, e quella sera mi chiam√≤ Penelope." 7229..7757) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7759..7760)), span: StrSpan("</p>" 7757..7761) }
token: Text { text: StrSpan("\n\n" 7761..7763) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7764..7765), span: StrSpan("<p" 7763..7765) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7766..7771), value: StrSpan("testo_personaggio testo_maiuscoletto" 7773..7809), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7766..7810) }
token: ElementEnd { end: Open, span: StrSpan(">" 7810..7811) }
token: Text { text: StrSpan("Leucotea." 7811..7820) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7822..7823)), span: StrSpan("</p>" 7820..7824) }
token: Text { text: StrSpan("\n" 7824..7825) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7826..7827), span: StrSpan("<p" 7825..7827) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7828..7833), value: StrSpan("testo_dialogo" 7835..7848), span: StrSpan("class=\"testo_dialogo\"" 7828..7849) }
token: ElementEnd { end: Open, span: StrSpan(">" 7849..7850) }
token: Text { text: StrSpan("O Circe, cos√≠ sciocco √® stato?" 7850..7882) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7884..7885)), span: StrSpan("</p>" 7882..7886) }
token: Text { text: StrSpan("\n\n" 7886..7888) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7889..7890), span: StrSpan("<p" 7888..7890) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7891..7896), value: StrSpan("testo_personaggio testo_maiuscoletto" 7898..7934), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7891..7935) }
token: ElementEnd { end: Open, span: StrSpan(">" 7935..7936) }
token: Text { text: StrSpan("Circe." 7936..7942) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7944..7945)), span: StrSpan("</p>" 7942..7946) }
token: Text { text: StrSpan("\n" 7946..7947) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7948..7949), span: StrSpan("<p" 7947..7949) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7950..7955), value: StrSpan("testo_dialogo" 7957..7970), span: StrSpan("class=\"testo_dialogo\"" 7950..7971) }
token: ElementEnd { end: Open, span: StrSpan(">" 7971..7972) }
token: Text { text: StrSpan("Leucina, anch‚Äôio fui sciocca e gli dissi di piangere." 7972..8027) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8029..8030)), span: StrSpan("</p>" 8027..8031) }
token: Text { text: StrSpan("\n\n" 8031..8033) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8034..8035), span: StrSpan("<p" 8033..8035) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8036..8041), value: StrSpan("testo_personaggio testo_maiuscoletto" 8043..8079), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8036..8080) }
token: ElementEnd { end: Open, span: StrSpan(">" 8080..8081) }
token: Text { text: StrSpan("Leucotea." 8081..8090) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8092..8093)), span: StrSpan("</p>" 8090..8094) }
token: Text { text: StrSpan("\n" 8094..8095) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8096..8097), span: StrSpan("<p" 8095..8097) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8098..8103), value: StrSpan("testo_dialogo" 8105..8118), span: StrSpan("class=\"testo_dialogo\"" 8098..8119) }
token: ElementEnd { end: Open, span: StrSpan(">" 8119..8120) }
token: Text { text: StrSpan("Fig√∫rati." 8120..8130) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8132..8133)), span: StrSpan("</p>" 8130..8134) }
token: Text { text: StrSpan("\n\n" 8134..8136) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8137..8138), span: StrSpan("<p" 8136..8138) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8139..8144), value: StrSpan("testo_personaggio testo_maiuscoletto" 8146..8182), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8139..8183) }
token: ElementEnd { end: Open, span: StrSpan(">" 8183..8184) }
token: Text { text: StrSpan("Circe." 8184..8190) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8192..8193)), span: StrSpan("</p>" 8190..8194) }
token: Text { text: StrSpan("\n" 8194..8195) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8196..8197), span: StrSpan("<p" 8195..8197) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8198..8203), value: StrSpan("testo_dialogo" 8205..8218), span: StrSpan("class=\"testo_dialogo\"" 8198..8219) }
token: ElementEnd { end: Open, span: StrSpan(">" 8219..8220) }
token: Text { text: StrSpan("No, che non pianse. Sapeva che Circe ama le bestie, che non piangono. Pianse pi√∫ tardi, pianse il giorno che gli dissi il lungo viaggio che restava e la discesa nell‚ÄôAverno e il buio pesto dell‚ÄôOceano. Questo pianto che pulisce lo sguardo e d√† forza, lo capisco anch‚Äôio Circe. Ma quella sera mi parl√≤ ‚Äì ridendo ambiguo ‚Äì della sua infanzia e del destino, e mi chiese di me. Ridendo parlava, capisci." 8220..8632) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8634..8635)), span: StrSpan("</p>" 8632..8636) }
token: Text { text: StrSpan("\n\n" 8636..8638) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8639..8640), span: StrSpan("<p" 8638..8640) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8641..8646), value: StrSpan("testo_personaggio testo_maiuscoletto" 8648..8684), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8641..8685) }
token: ElementEnd { end: Open, span: StrSpan(">" 8685..8686) }
token: Text { text: StrSpan("Leucotea." 8686..8695) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8697..8698)), span: StrSpan("</p>" 8695..8699) }
token: Text { text: StrSpan("\n" 8699..8700) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8701..8702), span: StrSpan("<p" 8700..8702) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8703..8708), value: StrSpan("testo_dialogo" 8710..8723), span: StrSpan("class=\"testo_dialogo\"" 8703..8724) }
token: ElementEnd { end: Open, span: StrSpan(">" 8724..8725) }
token: Text { text: StrSpan("Non capisco." 8725..8737) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8739..8740)), span: StrSpan("</p>" 8737..8741) }
token: Text { text: StrSpan("\n\n" 8741..8743) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8744..8745), span: StrSpan("<p" 8743..8745) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8746..8751), value: StrSpan("testo_personaggio testo_maiuscoletto" 8753..8789), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8746..8790) }
token: ElementEnd { end: Open, span: StrSpan(">" 8790..8791) }
token: Text { text: StrSpan("Circe." 8791..8797) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8799..8800)), span: StrSpan("</p>" 8797..8801) }
token: Text { text: StrSpan("\n" 8801..8802) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8803..8804), span: StrSpan("<p" 8802..8804) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8805..8810), value: StrSpan("testo_dialogo" 8812..8825), span: StrSpan("class=\"testo_dialogo\"" 8805..8826) }
token: ElementEnd { end: Open, span: StrSpan(">" 8826..8827) }
token: Text { text: StrSpan("Ridendo. Con la bocca e la voce. Ma gli occhi pieni di ricordi. E poi mi disse di cantare. E cantando mi misi al telaio e la mia voce rauca la feci voce della casa e dell‚Äôinfanzia, la raddolcii, gli fui Penelope. Si prese il capo fra le mani." 8827..9071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9073..9074)), span: StrSpan("</p>" 9071..9075) }
token: Text { text: StrSpan("\n\n" 9075..9077) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9078..9079), span: StrSpan("<p" 9077..9079) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9080..9085), value: StrSpan("testo_personaggio testo_maiuscoletto" 9087..9123), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9080..9124) }
token: ElementEnd { end: Open, span: StrSpan(">" 9124..9125) }
token: Text { text: StrSpan("Leucotea." 9125..9134) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9136..9137)), span: StrSpan("</p>" 9134..9138) }
token: Text { text: StrSpan("\n" 9138..9139) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9140..9141), span: StrSpan("<p" 9139..9141) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9142..9147), value: StrSpan("testo_dialogo" 9149..9162), span: StrSpan("class=\"testo_dialogo\"" 9142..9163) }
token: ElementEnd { end: Open, span: StrSpan(">" 9163..9164) }
token: Text { text: StrSpan("Chi rideva alla fine?" 9164..9185) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9187..9188)), span: StrSpan("</p>" 9185..9189) }
token: Text { text: StrSpan("\n\n" 9189..9191) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9192..9193), span: StrSpan("<p" 9191..9193) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9194..9199), value: StrSpan("testo_personaggio testo_maiuscoletto" 9201..9237), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9194..9238) }
token: ElementEnd { end: Open, span: StrSpan(">" 9238..9239) }
token: Text { text: StrSpan("Circe." 9239..9245) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9247..9248)), span: StrSpan("</p>" 9245..9249) }
token: Text { text: StrSpan("\n" 9249..9250) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9251..9252), span: StrSpan("<p" 9250..9252) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9253..9258), value: StrSpan("testo_dialogo" 9260..9273), span: StrSpan("class=\"testo_dialogo\"" 9253..9274) }
token: ElementEnd { end: Open, span: StrSpan(">" 9274..9275) }
token: Text { text: StrSpan("Nessuno, Leuc√≤. Anch‚Äôio quella sera fui mortale. Ebbi un nome: Penelope. Quella fu l‚Äôunica volta che senza sorridere fissai in faccia la mia sorte e abbassai gli occhi." 9275..9448) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9450..9451)), span: StrSpan("</p>" 9448..9452) }
token: Text { text: StrSpan("\n\n" 9452..9454) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9455..9456), span: StrSpan("<p" 9454..9456) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9457..9462), value: StrSpan("testo_personaggio testo_maiuscoletto" 9464..9500), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9457..9501) }
token: ElementEnd { end: Open, span: StrSpan(">" 9501..9502) }
token: Text { text: StrSpan("Leucotea." 9502..9511) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9513..9514)), span: StrSpan("</p>" 9511..9515) }
token: Text { text: StrSpan("\n" 9515..9516) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9517..9518), span: StrSpan("<p" 9516..9518) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9519..9524), value: StrSpan("testo_dialogo" 9526..9539), span: StrSpan("class=\"testo_dialogo\"" 9519..9540) }
token: ElementEnd { end: Open, span: StrSpan(">" 9540..9541) }
token: Text { text: StrSpan("E quest‚Äôuomo amava un cane?" 9541..9570) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9572..9573)), span: StrSpan("</p>" 9570..9574) }
token: Text { text: StrSpan("\n\n" 9574..9576) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9577..9578), span: StrSpan("<p" 9576..9578) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9579..9584), value: StrSpan("testo_personaggio testo_maiuscoletto" 9586..9622), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9579..9623) }
token: ElementEnd { end: Open, span: StrSpan(">" 9623..9624) }
token: Text { text: StrSpan("Circe." 9624..9630) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9632..9633)), span: StrSpan("</p>" 9630..9634) }
token: Text { text: StrSpan("\n" 9634..9635) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9636..9637), span: StrSpan("<p" 9635..9637) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9638..9643), value: StrSpan("testo_dialogo" 9645..9658), span: StrSpan("class=\"testo_dialogo\"" 9638..9659) }
token: ElementEnd { end: Open, span: StrSpan(">" 9659..9660) }
token: Text { text: StrSpan("Un cane, una donna, suo figlio, e una nave per correre il mare. E il ritorno innumerevole dei giorni non gli parve mai destino, e correva alla morte sapendo cos‚Äôera, e arricchiva la terra di parole e di fatti." 9660..9871) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9873..9874)), span: StrSpan("</p>" 9871..9875) }
token: Text { text: StrSpan("\n\n" 9875..9877) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9878..9879), span: StrSpan("<p" 9877..9879) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9880..9885), value: StrSpan("testo_personaggio testo_maiuscoletto" 9887..9923), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9880..9924) }
token: ElementEnd { end: Open, span: StrSpan(">" 9924..9925) }
token: Text { text: StrSpan("Leucotea." 9925..9934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9936..9937)), span: StrSpan("</p>" 9934..9938) }
token: Text { text: StrSpan("\n" 9938..9939) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9940..9941), span: StrSpan("<p" 9939..9941) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9942..9947), value: StrSpan("testo_dialogo" 9949..9962), span: StrSpan("class=\"testo_dialogo\"" 9942..9963) }
token: ElementEnd { end: Open, span: StrSpan(">" 9963..9964) }
token: Text { text: StrSpan("Oh Circe, non ho i tuoi occhi ma qui voglio sorridere anch‚Äôio. Fosti ingenua. Gli avessi detto che il lupo e il maiale ti coprivano come una bestia, sarebbe caduto, si sarebbe imbestiato anche lui." 9964..10163) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10165..10166)), span: StrSpan("</p>" 10163..10167) }
token: Text { text: StrSpan("\n\n" 10167..10169) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10170..10171), span: StrSpan("<p" 10169..10171) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10172..10177), value: StrSpan("testo_personaggio testo_maiuscoletto" 10179..10215), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10172..10216) }
token: ElementEnd { end: Open, span: StrSpan(">" 10216..10217) }
token: Text { text: StrSpan("Circe." 10217..10223) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10225..10226)), span: StrSpan("</p>" 10223..10227) }
token: Text { text: StrSpan("\n" 10227..10228) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10229..10230), span: StrSpan("<p" 10228..10230) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10231..10236), value: StrSpan("testo_dialogo" 10238..10251), span: StrSpan("class=\"testo_dialogo\"" 10231..10252) }
token: ElementEnd { end: Open, span: StrSpan(">" 10252..10253) }
token: Text { text: StrSpan("Gliel‚Äôho detto. Storse appena la bocca. Dopo un poco mi disse: ¬´" 10253..10320) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 10321..10322), span: StrSpan("<q" 10320..10322) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10323..10328), value: StrSpan("testo_no_virgolette" 10330..10349), span: StrSpan("class=\"testo_no_virgolette\"" 10323..10350) }
token: ElementEnd { end: Open, span: StrSpan(">" 10350..10351) }
token: Text { text: StrSpan("Purch√© non siano i miei compagni" 10351..10384) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 10386..10387)), span: StrSpan("</q>" 10384..10388) }
token: Text { text: StrSpan("¬ª." 10388..10391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10393..10394)), span: StrSpan("</p>" 10391..10395) }
token: Text { text: StrSpan("\n\n" 10395..10397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10398..10399), span: StrSpan("<p" 10397..10399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10400..10405), value: StrSpan("testo_personaggio testo_maiuscoletto" 10407..10443), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10400..10444) }
token: ElementEnd { end: Open, span: StrSpan(">" 10444..10445) }
token: Text { text: StrSpan("Leucotea." 10445..10454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10456..10457)), span: StrSpan("</p>" 10454..10458) }
token: Text { text: StrSpan("\n" 10458..10459) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10460..10461), span: StrSpan("<p" 10459..10461) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10462..10467), value: StrSpan("testo_dialogo" 10469..10482), span: StrSpan("class=\"testo_dialogo\"" 10462..10483) }
token: ElementEnd { end: Open, span: StrSpan(">" 10483..10484) }
token: Text { text: StrSpan("Dunque geloso." 10484..10498) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10500..10501)), span: StrSpan("</p>" 10498..10502) }
token: Text { text: StrSpan("\n\n" 10502..10504) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10505..10506), span: StrSpan("<p" 10504..10506) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10507..10512), value: StrSpan("testo_personaggio testo_maiuscoletto" 10514..10550), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10507..10551) }
token: ElementEnd { end: Open, span: StrSpan(">" 10551..10552) }
token: Text { text: StrSpan("Circe." 10552..10558) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10560..10561)), span: StrSpan("</p>" 10558..10562) }
token: Text { text: StrSpan("\n" 10562..10563) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10564..10565), span: StrSpan("<p" 10563..10565) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10566..10571), value: StrSpan("testo_dialogo" 10573..10586), span: StrSpan("class=\"testo_dialogo\"" 10566..10587) }
token: ElementEnd { end: Open, span: StrSpan(">" 10587..10588) }
token: Text { text: StrSpan("Non geloso. Teneva a loro. Capiva ogni cosa. Tranne il sorriso di noi d√®i. Quel giorno che pianse sul mio letto non pianse per la paura, ma perch√© l‚Äôultimo viaggio gli era imposto dal fato, era una cosa gi√† saputa. ¬´" 10588..10810) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 10811..10812), span: StrSpan("<q" 10810..10812) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10813..10818), value: StrSpan("testo_no_virgolette" 10820..10839), span: StrSpan("class=\"testo_no_virgolette\"" 10813..10840) }
token: ElementEnd { end: Open, span: StrSpan(">" 10840..10841) }
token: Text { text: StrSpan("E allora perch√© farlo?" 10841..10864) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 10866..10867)), span: StrSpan("</q>" 10864..10868) }
token: Text { text: StrSpan("¬ª mi chiese cingendosi la spada e camminando verso il mare. Io gli portai l‚Äôagnella nera e, mentre i compagni piangevano, lui avvist√≤ un volo di rondini sul tetto e mi disse: ¬´" 10868..11049) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 11050..11051), span: StrSpan("<q" 11049..11051) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11052..11057), value: StrSpan("testo_no_virgolette" 11059..11078), span: StrSpan("class=\"testo_no_virgolette\"" 11052..11079) }
token: ElementEnd { end: Open, span: StrSpan(">" 11079..11080) }
token: Text { text: StrSpan("Se ne vanno anche loro. Ma loro non san quel che fanno. Tu, signora, lo sai" 11080..11155) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 11157..11158)), span: StrSpan("</q>" 11155..11159) }
token: Text { text: StrSpan("¬ª." 11159..11162) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11164..11165)), span: StrSpan("</p>" 11162..11166) }
token: Text { text: StrSpan("\n\n" 11166..11168) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11169..11170), span: StrSpan("<p" 11168..11170) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11171..11176), value: StrSpan("testo_personaggio testo_maiuscoletto" 11178..11214), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11171..11215) }
token: ElementEnd { end: Open, span: StrSpan(">" 11215..11216) }
token: Text { text: StrSpan("Leucotea." 11216..11225) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11227..11228)), span: StrSpan("</p>" 11225..11229) }
token: Text { text: StrSpan("\n" 11229..11230) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11231..11232), span: StrSpan("<p" 11230..11232) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11233..11238), value: StrSpan("testo_dialogo" 11240..11253), span: StrSpan("class=\"testo_dialogo\"" 11233..11254) }
token: ElementEnd { end: Open, span: StrSpan(">" 11254..11255) }
token: Text { text: StrSpan("Nient‚Äôaltro ti ha detto?" 11255..11281) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11283..11284)), span: StrSpan("</p>" 11281..11285) }
token: Text { text: StrSpan("\n\n" 11285..11287) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11288..11289), span: StrSpan("<p" 11287..11289) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11290..11295), value: StrSpan("testo_personaggio testo_maiuscoletto" 11297..11333), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11290..11334) }
token: ElementEnd { end: Open, span: StrSpan(">" 11334..11335) }
token: Text { text: StrSpan("Circe." 11335..11341) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11343..11344)), span: StrSpan("</p>" 11341..11345) }
token: Text { text: StrSpan("\n" 11345..11346) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11347..11348), span: StrSpan("<p" 11346..11348) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11349..11354), value: StrSpan("testo_dialogo" 11356..11369), span: StrSpan("class=\"testo_dialogo\"" 11349..11370) }
token: ElementEnd { end: Open, span: StrSpan(">" 11370..11371) }
token: Text { text: StrSpan("Nient‚Äôaltro." 11371..11385) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11387..11388)), span: StrSpan("</p>" 11385..11389) }
token: Text { text: StrSpan("\n\n" 11389..11391) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11392..11393), span: StrSpan("<p" 11391..11393) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11394..11399), value: StrSpan("testo_personaggio testo_maiuscoletto" 11401..11437), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11394..11438) }
token: ElementEnd { end: Open, span: StrSpan(">" 11438..11439) }
token: Text { text: StrSpan("Leucotea." 11439..11448) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11450..11451)), span: StrSpan("</p>" 11448..11452) }
token: Text { text: StrSpan("\n" 11452..11453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11454..11455), span: StrSpan("<p" 11453..11455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11456..11461), value: StrSpan("testo_dialogo" 11463..11476), span: StrSpan("class=\"testo_dialogo\"" 11456..11477) }
token: ElementEnd { end: Open, span: StrSpan(">" 11477..11478) }
token: Text { text: StrSpan("Circe, perch√© non l‚Äôhai ucciso?" 11478..11512) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11514..11515)), span: StrSpan("</p>" 11512..11516) }
token: Text { text: StrSpan("\n\n" 11516..11518) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11519..11520), span: StrSpan("<p" 11518..11520) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11521..11526), value: StrSpan("testo_personaggio testo_maiuscoletto" 11528..11564), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11521..11565) }
token: ElementEnd { end: Open, span: StrSpan(">" 11565..11566) }
token: Text { text: StrSpan("Circe." 11566..11572) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11574..11575)), span: StrSpan("</p>" 11572..11576) }
token: Text { text: StrSpan("\n" 11576..11577) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11578..11579), span: StrSpan("<p" 11577..11579) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11580..11585), value: StrSpan("testo_dialogo" 11587..11600), span: StrSpan("class=\"testo_dialogo\"" 11580..11601) }
token: ElementEnd { end: Open, span: StrSpan(">" 11601..11602) }
token: Text { text: StrSpan("Ah sono davvero una stupida. Qualche volta dimentico che noialtre sappiamo. E allora mi diverto come fossi ragazza. Come se tutte queste cose avvenissero ai grandi, agli Olimpici, e avvenissero cos√≠, inesorabili ma fatte di assurdo, d‚Äôimprovviso. Quello che mai prevedo √® appunto di aver preveduto, di sapere ogni volta quel che far√≤ e quel che dir√≤ ‚Äì e quello che faccio e che dico diventa cos√≠ sempre nuovo, sorprendente, come un gioco, come quel gioco degli scacchi che Odisseo m‚Äôinsegn√≤, tutto regole e norme ma cos√≠ bello e imprevisto, coi suoi pezzi d‚Äôavorio. Lui mi diceva sempre che quel gioco √® la vita. Mi diceva che √® un modo di vincere il tempo." 11602..12276) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12278..12279)), span: StrSpan("</p>" 12276..12280) }
token: Text { text: StrSpan("\n\n" 12280..12282) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12283..12284), span: StrSpan("<p" 12282..12284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12285..12290), value: StrSpan("testo_personaggio testo_maiuscoletto" 12292..12328), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12285..12329) }
token: ElementEnd { end: Open, span: StrSpan(">" 12329..12330) }
token: Text { text: StrSpan("Leucotea." 12330..12339) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12341..12342)), span: StrSpan("</p>" 12339..12343) }
token: Text { text: StrSpan("\n" 12343..12344) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12345..12346), span: StrSpan("<p" 12344..12346) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12347..12352), value: StrSpan("testo_dialogo" 12354..12367), span: StrSpan("class=\"testo_dialogo\"" 12347..12368) }
token: ElementEnd { end: Open, span: StrSpan(">" 12368..12369) }
token: Text { text: StrSpan("Troppe cose ricordi di lui. Non l‚Äôhai fatto maiale n√© lupo, e l‚Äôhai fatto ricordo." 12369..12456) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12458..12459)), span: StrSpan("</p>" 12456..12460) }
token: Text { text: StrSpan("\n\n" 12460..12462) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12463..12464), span: StrSpan("<p" 12462..12464) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12465..12470), value: StrSpan("testo_personaggio testo_maiuscoletto" 12472..12508), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12465..12509) }
token: ElementEnd { end: Open, span: StrSpan(">" 12509..12510) }
token: Text { text: StrSpan("Circe." 12510..12516) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12518..12519)), span: StrSpan("</p>" 12516..12520) }
token: Text { text: StrSpan("\n" 12520..12521) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12522..12523), span: StrSpan("<p" 12521..12523) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12524..12529), value: StrSpan("testo_dialogo" 12531..12544), span: StrSpan("class=\"testo_dialogo\"" 12524..12545) }
token: ElementEnd { end: Open, span: StrSpan(">" 12545..12546) }
token: Text { text: StrSpan("L‚Äôuomo mortale, Leuc√≤, non ha che questo d‚Äôimmortale. Il ricordo che porta e il ricordo che lascia. Nomi e parole sono questo. Davanti al ricordo sorridono anche loro, rassegn√†ti." 12546..12731) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12733..12734)), span: StrSpan("</p>" 12731..12735) }
token: Text { text: StrSpan("\n\n" 12735..12737) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12738..12739), span: StrSpan("<p" 12737..12739) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12740..12745), value: StrSpan("testo_personaggio testo_maiuscoletto" 12747..12783), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12740..12784) }
token: ElementEnd { end: Open, span: StrSpan(">" 12784..12785) }
token: Text { text: StrSpan("Leucotea." 12785..12794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12796..12797)), span: StrSpan("</p>" 12794..12798) }
token: Text { text: StrSpan("\n" 12798..12799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12800..12801), span: StrSpan("<p" 12799..12801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12802..12807), value: StrSpan("testo_dialogo" 12809..12822), span: StrSpan("class=\"testo_dialogo\"" 12802..12823) }
token: ElementEnd { end: Open, span: StrSpan(">" 12823..12824) }
token: Text { text: StrSpan("Circe, anche tu dici parole." 12824..12852) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12854..12855)), span: StrSpan("</p>" 12852..12856) }
token: Text { text: StrSpan("\n\n" 12856..12858) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12859..12860), span: StrSpan("<p" 12858..12860) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12861..12866), value: StrSpan("testo_personaggio testo_maiuscoletto" 12868..12904), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12861..12905) }
token: ElementEnd { end: Open, span: StrSpan(">" 12905..12906) }
token: Text { text: StrSpan("Circe." 12906..12912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12914..12915)), span: StrSpan("</p>" 12912..12916) }
token: Text { text: StrSpan("\n" 12916..12917) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12918..12919), span: StrSpan("<p" 12917..12919) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12920..12925), value: StrSpan("testo_dialogo" 12927..12940), span: StrSpan("class=\"testo_dialogo\"" 12920..12941) }
token: ElementEnd { end: Open, span: StrSpan(">" 12941..12942) }
token: Text { text: StrSpan("So il mio destino, Leuc√≤. Non temere." 12942..12980) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12982..12983)), span: StrSpan("</p>" 12980..12984) }
token: Text { text: StrSpan("\n" 12984..12985) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 12987..12991)), span: StrSpan("</body>" 12985..12992) }
token: Text { text: StrSpan("\n" 12992..12993) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 12995..12999)), span: StrSpan("</html>" 12993..13000) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Il toro" 340..347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 349..351)), span: StrSpan("</h1>" 347..352) }
token: Text { text: StrSpan("\n\n" 352..354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 355..356), span: StrSpan("<p" 354..356) }
token: ElementEnd { end: Open, span: StrSpan(">" 356..357) }
token: Text { text: StrSpan("Tutti sanno che Teseo, di ritorno da Creta, finse di dimenticare sull‚Äôalbero le nere vele segno di lutto, e cos√≠ suo padre credendolo morto si precipit√≤ in mare e gli lasci√≤ il regno. Ci√≤ √® molto greco, altrettanto greco come la ripugnanza per ogni mistico culto di mostri." 357..637) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 639..640)), span: StrSpan("</p>" 637..641) }
token: Text { text: StrSpan("\n\n" 641..643) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 644..645), span: StrSpan("<p" 643..645) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 646..651), value: StrSpan("testo_indicazioni_scena" 653..676), span: StrSpan("class=\"testo_indicazioni_scena\"" 646..677) }
token: ElementEnd { end: Open, span: StrSpan(">" 677..678) }
token: Text { text: StrSpan("(parlano Lelego e Teseo)" 678..702) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 704..705)), span: StrSpan("</p>" 702..706) }
token: Text { text: StrSpan("\n\n\n" 706..709) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 710..711), span: StrSpan("<p" 709..711) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 712..717), value: StrSpan("testo_personaggio testo_maiuscoletto" 719..755), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 712..756) }
token: ElementEnd { end: Open, span: StrSpan(">" 756..757) }
token: Text { text: StrSpan("Lelego." 757..764) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 766..767)), span: StrSpan("</p>" 764..768) }
token: Text { text: StrSpan("\n" 768..769) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 770..771), span: StrSpan("<p" 769..771) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 772..777), value: StrSpan("testo_dialogo" 779..792), span: StrSpan("class=\"testo_dialogo\"" 772..793) }
token: ElementEnd { end: Open, span: StrSpan(">" 793..794) }
token: Text { text: StrSpan("Quel colle √® la patria, signore." 794..827) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 829..830)), span: StrSpan("</p>" 827..831) }
token: Text { text: StrSpan("\n\n" 831..833) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 834..835), span: StrSpan("<p" 833..835) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 836..841), value: StrSpan("testo_personaggio testo_maiuscoletto" 843..879), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 836..880) }
token: ElementEnd { end: Open, span: StrSpan(">" 880..881) }
token: Text { text: StrSpan("Teseo." 881..887) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 889..890)), span: StrSpan("</p>" 887..891) }
token: Text { text: StrSpan("\n" 891..892) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 893..894), span: StrSpan("<p" 892..894) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 895..900), value: StrSpan("testo_dialogo" 902..915), span: StrSpan("class=\"testo_dialogo\"" 895..916) }
token: ElementEnd { end: Open, span: StrSpan(">" 916..917) }
token: Text { text: StrSpan("Non c‚Äô√® terra oltremare, avvistata nella luce del crepuscolo, che non sembri la vecchia collina." 917..1016) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1018..1019)), span: StrSpan("</p>" 1016..1020) }
token: Text { text: StrSpan("\n\n" 1020..1022) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1023..1024), span: StrSpan("<p" 1022..1024) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1025..1030), value: StrSpan("testo_personaggio testo_maiuscoletto" 1032..1068), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1025..1069) }
token: ElementEnd { end: Open, span: StrSpan(">" 1069..1070) }
token: Text { text: StrSpan("Lelego." 1070..1077) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1079..1080)), span: StrSpan("</p>" 1077..1081) }
token: Text { text: StrSpan("\n" 1081..1082) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1083..1084), span: StrSpan("<p" 1082..1084) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1085..1090), value: StrSpan("testo_dialogo" 1092..1105), span: StrSpan("class=\"testo_dialogo\"" 1085..1106) }
token: ElementEnd { end: Open, span: StrSpan(">" 1106..1107) }
token: Text { text: StrSpan("Vedendo il sole tramontare dietro l‚ÄôIda, un tempo brindammo anche noi." 1107..1179) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1181..1182)), span: StrSpan("</p>" 1179..1183) }
token: Text { text: StrSpan("\n\n" 1183..1185) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1186..1187), span: StrSpan("<p" 1185..1187) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1188..1193), value: StrSpan("testo_personaggio testo_maiuscoletto" 1195..1231), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1188..1232) }
token: ElementEnd { end: Open, span: StrSpan(">" 1232..1233) }
token: Text { text: StrSpan("Teseo." 1233..1239) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1241..1242)), span: StrSpan("</p>" 1239..1243) }
token: Text { text: StrSpan("\n" 1243..1244) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1245..1246), span: StrSpan("<p" 1244..1246) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1247..1252), value: StrSpan("testo_dialogo" 1254..1267), span: StrSpan("class=\"testo_dialogo\"" 1247..1268) }
token: ElementEnd { end: Open, span: StrSpan(">" 1268..1269) }
token: Text { text: StrSpan("Bello √® tornare e bello andare, Lelego. Beviamo ancora. Beviamo al passato. Bella √® ogni cosa abbandonata e ritrovata." 1269..1389) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1391..1392)), span: StrSpan("</p>" 1389..1393) }
token: Text { text: StrSpan("\n\n" 1393..1395) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1396..1397), span: StrSpan("<p" 1395..1397) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1398..1403), value: StrSpan("testo_personaggio testo_maiuscoletto" 1405..1441), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1398..1442) }
token: ElementEnd { end: Open, span: StrSpan(">" 1442..1443) }
token: Text { text: StrSpan("Lelego." 1443..1450) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1452..1453)), span: StrSpan("</p>" 1450..1454) }
token: Text { text: StrSpan("\n" 1454..1455) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1456..1457), span: StrSpan("<p" 1455..1457) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1458..1463), value: StrSpan("testo_dialogo" 1465..1478), span: StrSpan("class=\"testo_dialogo\"" 1458..1479) }
token: ElementEnd { end: Open, span: StrSpan(">" 1479..1480) }
token: Text { text: StrSpan("Finch√© fummo nell‚Äôisola, tu non parlavi della patria. Non ripensavi a molte cose abbandonate. Vivevi anche tu alla giornata. E ti ho visto lasciar quella terra come avevi lasciato le case, senza volgerti indietro. Questa sera, ripensi al passato?" 1480..1729) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1731..1732)), span: StrSpan("</p>" 1729..1733) }
token: Text { text: StrSpan("\n\n" 1733..1735) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1736..1737), span: StrSpan("<p" 1735..1737) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1738..1743), value: StrSpan("testo_personaggio testo_maiuscoletto" 1745..1781), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1738..1782) }
token: ElementEnd { end: Open, span: StrSpan(">" 1782..1783) }
token: Text { text: StrSpan("Teseo." 1783..1789) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1791..1792)), span: StrSpan("</p>" 1789..1793) }
token: Text { text: StrSpan("\n" 1793..1794) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1795..1796), span: StrSpan("<p" 1794..1796) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1797..1802), value: StrSpan("testo_dialogo" 1804..1817), span: StrSpan("class=\"testo_dialogo\"" 1797..1818) }
token: ElementEnd { end: Open, span: StrSpan(">" 1818..1819) }
token: Text { text: StrSpan("Noi siamo vivi, Lelego, e davanti a questo vino, sul mare di casa. A molte cose si ripensa in una simile sera, se anche domani il vino e il mare non basteranno a darci pace." 1819..1992) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1994..1995)), span: StrSpan("</p>" 1992..1996) }
token: Text { text: StrSpan("\n\n" 1996..1998) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1999..2000), span: StrSpan("<p" 1998..2000) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2001..2006), value: StrSpan("testo_personaggio testo_maiuscoletto" 2008..2044), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2001..2045) }
token: ElementEnd { end: Open, span: StrSpan(">" 2045..2046) }
token: Text { text: StrSpan("Lelego." 2046..2053) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2055..2056)), span: StrSpan("</p>" 2053..2057) }
token: Text { text: StrSpan("\n" 2057..2058) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2059..2060), span: StrSpan("<p" 2058..2060) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2061..2066), value: StrSpan("testo_dialogo" 2068..2081), span: StrSpan("class=\"testo_dialogo\"" 2061..2082) }
token: ElementEnd { end: Open, span: StrSpan(">" 2082..2083) }
token: Text { text: StrSpan("Che cosa temi? si direbbe che non credi al tuo ritorno. Perch√© non d√†i ordine di calare le vele tenebrose e vestire di bianco la nave? L‚Äôhai promesso a tuo padre." 2083..2249) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2251..2252)), span: StrSpan("</p>" 2249..2253) }
token: Text { text: StrSpan("\n\n" 2253..2255) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2256..2257), span: StrSpan("<p" 2255..2257) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2258..2263), value: StrSpan("testo_personaggio testo_maiuscoletto" 2265..2301), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2258..2302) }
token: ElementEnd { end: Open, span: StrSpan(">" 2302..2303) }
token: Text { text: StrSpan("Teseo." 2303..2309) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2311..2312)), span: StrSpan("</p>" 2309..2313) }
token: Text { text: StrSpan("\n" 2313..2314) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2315..2316), span: StrSpan("<p" 2314..2316) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2317..2322), value: StrSpan("testo_dialogo" 2324..2337), span: StrSpan("class=\"testo_dialogo\"" 2317..2338) }
token: ElementEnd { end: Open, span: StrSpan(">" 2338..2339) }
token: Text { text: StrSpan("Abbiamo tempo, Lelego. Tempo domani. Mi piace sentirmi schioccare sul capo gli stessi teli di quando correvamo al pericolo e nessuno di voialtri sapeva se saremmo ritornati." 2339..2512) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2514..2515)), span: StrSpan("</p>" 2512..2516) }
token: Text { text: StrSpan("\n\n" 2516..2518) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2519..2520), span: StrSpan("<p" 2518..2520) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2521..2526), value: StrSpan("testo_personaggio testo_maiuscoletto" 2528..2564), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2521..2565) }
token: ElementEnd { end: Open, span: StrSpan(">" 2565..2566) }
token: Text { text: StrSpan("Lelego." 2566..2573) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2575..2576)), span: StrSpan("</p>" 2573..2577) }
token: Text { text: StrSpan("\n" 2577..2578) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2579..2580), span: StrSpan("<p" 2578..2580) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2581..2586), value: StrSpan("testo_dialogo" 2588..2601), span: StrSpan("class=\"testo_dialogo\"" 2581..2602) }
token: ElementEnd { end: Open, span: StrSpan(">" 2602..2603) }
token: Text { text: StrSpan("Tu lo sapevi, Teseo?" 2603..2623) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2625..2626)), span: StrSpan("</p>" 2623..2627) }
token: Text { text: StrSpan("\n\n" 2627..2629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2630..2631), span: StrSpan("<p" 2629..2631) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2632..2637), value: StrSpan("testo_personaggio testo_maiuscoletto" 2639..2675), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2632..2676) }
token: ElementEnd { end: Open, span: StrSpan(">" 2676..2677) }
token: Text { text: StrSpan("Teseo." 2677..2683) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2685..2686)), span: StrSpan("</p>" 2683..2687) }
token: Text { text: StrSpan("\n" 2687..2688) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2689..2690), span: StrSpan("<p" 2688..2690) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2691..2696), value: StrSpan("testo_dialogo" 2698..2711), span: StrSpan("class=\"testo_dialogo\"" 2691..2712) }
token: ElementEnd { end: Open, span: StrSpan(">" 2712..2713) }
token: Text { text: StrSpan("Press‚Äôa poco‚Ä¶ La mia scure non falla." 2713..2754) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2756..2757)), span: StrSpan("</p>" 2754..2758) }
token: Text { text: StrSpan("\n\n" 2758..2760) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2761..2762), span: StrSpan("<p" 2760..2762) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2763..2768), value: StrSpan("testo_personaggio testo_maiuscoletto" 2770..2806), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2763..2807) }
token: ElementEnd { end: Open, span: StrSpan(">" 2807..2808) }
token: Text { text: StrSpan("Lelego." 2808..2815) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2817..2818)), span: StrSpan("</p>" 2815..2819) }
token: Text { text: StrSpan("\n" 2819..2820) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2821..2822), span: StrSpan("<p" 2820..2822) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2823..2828), value: StrSpan("testo_dialogo" 2830..2843), span: StrSpan("class=\"testo_dialogo\"" 2823..2844) }
token: ElementEnd { end: Open, span: StrSpan(">" 2844..2845) }
token: Text { text: StrSpan("Perch√© parli esitando?" 2845..2868) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2870..2871)), span: StrSpan("</p>" 2868..2872) }
token: Text { text: StrSpan("\n\n" 2872..2874) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2875..2876), span: StrSpan("<p" 2874..2876) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2877..2882), value: StrSpan("testo_personaggio testo_maiuscoletto" 2884..2920), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2877..2921) }
token: ElementEnd { end: Open, span: StrSpan(">" 2921..2922) }
token: Text { text: StrSpan("Teseo." 2922..2928) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2930..2931)), span: StrSpan("</p>" 2928..2932) }
token: Text { text: StrSpan("\n" 2932..2933) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2934..2935), span: StrSpan("<p" 2933..2935) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2936..2941), value: StrSpan("testo_dialogo" 2943..2956), span: StrSpan("class=\"testo_dialogo\"" 2936..2957) }
token: ElementEnd { end: Open, span: StrSpan(">" 2957..2958) }
token: Text { text: StrSpan("Non parlo esitando. Penso alla gente che ignoravo e al grande monte e a quello che noi fummo nell‚Äôisola. Penso agli ultimi giorni nella reggia, quella casa tutta fatta di piazze, e i soldati mi chiamavano il re-toro, ricordi? Quel che si uccide si diventa, nell‚Äôisola. Cominciavo a capirli. Poi ci dissero che nei boschi dell‚ÄôIda c‚Äôeran le grotte degli d√®i, dove nascevano e morivano gli d√®i. Capisci, Lelego? in quell‚Äôisola si uccidono gli d√®i, come le bestie. E chi li uccide si fa dio. Noi allora tentammo di salire sull‚ÄôIda‚Ä¶" 2958..3503) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3505..3506)), span: StrSpan("</p>" 3503..3507) }
token: Text { text: StrSpan("\n\n" 3507..3509) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3510..3511), span: StrSpan("<p" 3509..3511) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3512..3517), value: StrSpan("testo_personaggio testo_maiuscoletto" 3519..3555), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3512..3556) }
token: ElementEnd { end: Open, span: StrSpan(">" 3556..3557) }
token: Text { text: StrSpan("Lelego." 3557..3564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3566..3567)), span: StrSpan("</p>" 3564..3568) }
token: Text { text: StrSpan("\n" 3568..3569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3570..3571), span: StrSpan("<p" 3569..3571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3572..3577), value: StrSpan("testo_dialogo" 3579..3592), span: StrSpan("class=\"testo_dialogo\"" 3572..3593) }
token: ElementEnd { end: Open, span: StrSpan(">" 3593..3594) }
token: Text { text: StrSpan("Si ha coraggio, lontano da casa." 3594..3626) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3628..3629)), span: StrSpan("</p>" 3626..3630) }
token: Text { text: StrSpan("\n\n" 3630..3632) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3633..3634), span: StrSpan("<p" 3632..3634) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3635..3640), value: StrSpan("testo_personaggio testo_maiuscoletto" 3642..3678), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3635..3679) }
token: ElementEnd { end: Open, span: StrSpan(">" 3679..3680) }
token: Text { text: StrSpan("Teseo." 3680..3686) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3688..3689)), span: StrSpan("</p>" 3686..3690) }
token: Text { text: StrSpan("\n" 3690..3691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3692..3693), span: StrSpan("<p" 3691..3693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3694..3699), value: StrSpan("testo_dialogo" 3701..3714), span: StrSpan("class=\"testo_dialogo\"" 3694..3715) }
token: ElementEnd { end: Open, span: StrSpan(">" 3715..3716) }
token: Text { text: StrSpan("E ci dissero cose incredibili. Le loro donne, quelle grandi donne bionde che passavano il mattino stese al sole sui terrazzi della reggia, salgono a notte sui prati dell‚ÄôIda e abbraccian gli alberi e le bestie. Ci restavano, a volte." 3716..3951) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3953..3954)), span: StrSpan("</p>" 3951..3955) }
token: Text { text: StrSpan("\n\n" 3955..3957) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3958..3959), span: StrSpan("<p" 3957..3959) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3960..3965), value: StrSpan("testo_personaggio testo_maiuscoletto" 3967..4003), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3960..4004) }
token: ElementEnd { end: Open, span: StrSpan(">" 4004..4005) }
token: Text { text: StrSpan("Lelego." 4005..4012) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4014..4015)), span: StrSpan("</p>" 4012..4016) }
token: Text { text: StrSpan("\n" 4016..4017) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4018..4019), span: StrSpan("<p" 4017..4019) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4020..4025), value: StrSpan("testo_dialogo" 4027..4040), span: StrSpan("class=\"testo_dialogo\"" 4020..4041) }
token: ElementEnd { end: Open, span: StrSpan(">" 4041..4042) }
token: Text { text: StrSpan("Solamente le donne han coraggio nell‚Äôisola. Tu lo sai, Teseo." 4042..4105) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4107..4108)), span: StrSpan("</p>" 4105..4109) }
token: Text { text: StrSpan("\n\n" 4109..4111) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4112..4113), span: StrSpan("<p" 4111..4113) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4114..4119), value: StrSpan("testo_personaggio testo_maiuscoletto" 4121..4157), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4114..4158) }
token: ElementEnd { end: Open, span: StrSpan(">" 4158..4159) }
token: Text { text: StrSpan("Teseo." 4159..4165) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4167..4168)), span: StrSpan("</p>" 4165..4169) }
token: Text { text: StrSpan("\n" 4169..4170) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4171..4172), span: StrSpan("<p" 4170..4172) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4173..4178), value: StrSpan("testo_dialogo" 4180..4193), span: StrSpan("class=\"testo_dialogo\"" 4173..4194) }
token: ElementEnd { end: Open, span: StrSpan(">" 4194..4195) }
token: Text { text: StrSpan("C‚Äô√® una cosa, che so. Preferisco le donne che stanno al telaio." 4195..4261) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4263..4264)), span: StrSpan("</p>" 4261..4265) }
token: Text { text: StrSpan("\n\n" 4265..4267) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4268..4269), span: StrSpan("<p" 4267..4269) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4270..4275), value: StrSpan("testo_personaggio testo_maiuscoletto" 4277..4313), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4270..4314) }
token: ElementEnd { end: Open, span: StrSpan(">" 4314..4315) }
token: Text { text: StrSpan("Lelego." 4315..4322) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4324..4325)), span: StrSpan("</p>" 4322..4326) }
token: Text { text: StrSpan("\n" 4326..4327) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4328..4329), span: StrSpan("<p" 4327..4329) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4330..4335), value: StrSpan("testo_dialogo" 4337..4350), span: StrSpan("class=\"testo_dialogo\"" 4330..4351) }
token: ElementEnd { end: Open, span: StrSpan(">" 4351..4352) }
token: Text { text: StrSpan("Ma nell‚Äôisola non hanno telai. Compran tutto sul mare. Che vuoi che facciano le donne?" 4352..4440) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4442..4443)), span: StrSpan("</p>" 4440..4444) }
token: Text { text: StrSpan("\n\n" 4444..4446) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4447..4448), span: StrSpan("<p" 4446..4448) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4449..4454), value: StrSpan("testo_personaggio testo_maiuscoletto" 4456..4492), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4449..4493) }
token: ElementEnd { end: Open, span: StrSpan(">" 4493..4494) }
token: Text { text: StrSpan("Teseo." 4494..4500) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4502..4503)), span: StrSpan("</p>" 4500..4504) }
token: Text { text: StrSpan("\n" 4504..4505) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4506..4507), span: StrSpan("<p" 4505..4507) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4508..4513), value: StrSpan("testo_dialogo" 4515..4528), span: StrSpan("class=\"testo_dialogo\"" 4508..4529) }
token: ElementEnd { end: Open, span: StrSpan(">" 4529..4530) }
token: Text { text: StrSpan("Non pensare agli d√®i maturandosi al sole. Non cercare il divino nei tronchi e nel mare. Non rincorrere i tori. Prima ho creduto che la colpa ce l‚Äôavessero i padri, quei mercanti ingegnosi che si vestono come le donne e gli piace vedere i ragazzi volteggiare sui tori. Ma non √® questo, non √® tutto. √à un altro sangue. Ci fu un tempo che l‚ÄôIda non conobbe che dee. Che una dea. Era il sole, era i tronchi, era il mare. E davanti alla dea gli d√®i e gli uomini si sono schiacciati. Quando una donna sfugge l‚Äôuomo, e si ritrova dentro al sole e alla bestia, non √® colpa dell‚Äôuomo. √à il sangue guasto, √® il caos." 4530..5152) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5154..5155)), span: StrSpan("</p>" 5152..5156) }
token: Text { text: StrSpan("\n\n" 5156..5158) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5159..5160), span: StrSpan("<p" 5158..5160) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5161..5166), value: StrSpan("testo_personaggio testo_maiuscoletto" 5168..5204), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5161..5205) }
token: ElementEnd { end: Open, span: StrSpan(">" 5205..5206) }
token: Text { text: StrSpan("Lelego." 5206..5213) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5215..5216)), span: StrSpan("</p>" 5213..5217) }
token: Text { text: StrSpan("\n" 5217..5218) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5219..5220), span: StrSpan("<p" 5218..5220) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5221..5226), value: StrSpan("testo_dialogo" 5228..5241), span: StrSpan("class=\"testo_dialogo\"" 5221..5242) }
token: ElementEnd { end: Open, span: StrSpan(">" 5242..5243) }
token: Text { text: StrSpan("Lo puoi dire tu solo. Parli della straniera?" 5243..5287) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5289..5290)), span: StrSpan("</p>" 5287..5291) }
token: Text { text: StrSpan("\n\n" 5291..5293) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5294..5295), span: StrSpan("<p" 5293..5295) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5296..5301), value: StrSpan("testo_personaggio testo_maiuscoletto" 5303..5339), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5296..5340) }
token: ElementEnd { end: Open, span: StrSpan(">" 5340..5341) }
token: Text { text: StrSpan("Teseo." 5341..5347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5349..5350)), span: StrSpan("</p>" 5347..5351) }
token: Text { text: StrSpan("\n" 5351..5352) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5353..5354), span: StrSpan("<p" 5352..5354) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5355..5360), value: StrSpan("testo_dialogo" 5362..5375), span: StrSpan("class=\"testo_dialogo\"" 5355..5376) }
token: ElementEnd { end: Open, span: StrSpan(">" 5376..5377) }
token: Text { text: StrSpan("Anche di lei." 5377..5390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5392..5393)), span: StrSpan("</p>" 5390..5394) }
token: Text { text: StrSpan("\n\n" 5394..5396) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5397..5398), span: StrSpan("<p" 5396..5398) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5399..5404), value: StrSpan("testo_personaggio testo_maiuscoletto" 5406..5442), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5399..5443) }
token: ElementEnd { end: Open, span: StrSpan(">" 5443..5444) }
token: Text { text: StrSpan("Lelego." 5444..5451) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5453..5454)), span: StrSpan("</p>" 5451..5455) }
token: Text { text: StrSpan("\n" 5455..5456) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5457..5458), span: StrSpan("<p" 5456..5458) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5459..5464), value: StrSpan("testo_dialogo" 5466..5479), span: StrSpan("class=\"testo_dialogo\"" 5459..5480) }
token: ElementEnd { end: Open, span: StrSpan(">" 5480..5481) }
token: Text { text: StrSpan("Tu sei signore e quel che fai ci sembra giusto. Ma a noi pareva assoggettata e docile." 5481..5567) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5569..5570)), span: StrSpan("</p>" 5567..5571) }
token: Text { text: StrSpan("\n\n" 5571..5573) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5574..5575), span: StrSpan("<p" 5573..5575) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5576..5581), value: StrSpan("testo_personaggio testo_maiuscoletto" 5583..5619), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5576..5620) }
token: ElementEnd { end: Open, span: StrSpan(">" 5620..5621) }
token: Text { text: StrSpan("Teseo." 5621..5627) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5629..5630)), span: StrSpan("</p>" 5627..5631) }
token: Text { text: StrSpan("\n" 5631..5632) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5633..5634), span: StrSpan("<p" 5632..5634) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5635..5640), value: StrSpan("testo_dialogo" 5642..5655), span: StrSpan("class=\"testo_dialogo\"" 5635..5656) }
token: ElementEnd { end: Open, span: StrSpan(">" 5656..5657) }
token: Text { text: StrSpan("Troppo docile, Lelego. Docile come l‚Äôerba o come il mare. Tu la guardi e capisci che cede e nemmeno ti sente. Come i prati dell‚ÄôIda, dove ci s‚Äôinoltra con la mano sulla scure ma viene il momento che il silenzio ti soffoca e devi fermarti. Era un ansito come di belva acquattata. Anche il sole pareva all‚Äôagguato, anche l‚Äôaria. Con la gran Dea non si combatte. Non si combatte con la terra, col suo silenzio." 5657..6074) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6076..6077)), span: StrSpan("</p>" 6074..6078) }
token: Text { text: StrSpan("\n\n" 6078..6080) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6081..6082), span: StrSpan("<p" 6080..6082) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6083..6088), value: StrSpan("testo_personaggio testo_maiuscoletto" 6090..6126), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6083..6127) }
token: ElementEnd { end: Open, span: StrSpan(">" 6127..6128) }
token: Text { text: StrSpan("Lelego." 6128..6135) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6137..6138)), span: StrSpan("</p>" 6135..6139) }
token: Text { text: StrSpan("\n" 6139..6140) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6141..6142), span: StrSpan("<p" 6140..6142) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6143..6148), value: StrSpan("testo_dialogo" 6150..6163), span: StrSpan("class=\"testo_dialogo\"" 6143..6164) }
token: ElementEnd { end: Open, span: StrSpan(">" 6164..6165) }
token: Text { text: StrSpan("So queste cose, come te. Ma la straniera ti ha fatto uscire dalla fossa. La straniera ha lasciato le case. Ci√≤ non si fa tra sangue vivo e sangue guasto. La straniera seguendoti aveva lasciato i suoi d√®i." 6165..6371) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6373..6374)), span: StrSpan("</p>" 6371..6375) }
token: Text { text: StrSpan("\n\n" 6375..6377) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6378..6379), span: StrSpan("<p" 6377..6379) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6380..6385), value: StrSpan("testo_personaggio testo_maiuscoletto" 6387..6423), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6380..6424) }
token: ElementEnd { end: Open, span: StrSpan(">" 6424..6425) }
token: Text { text: StrSpan("Teseo." 6425..6431) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6433..6434)), span: StrSpan("</p>" 6431..6435) }
token: Text { text: StrSpan("\n" 6435..6436) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6437..6438), span: StrSpan("<p" 6436..6438) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6439..6444), value: StrSpan("testo_dialogo" 6446..6459), span: StrSpan("class=\"testo_dialogo\"" 6439..6460) }
token: ElementEnd { end: Open, span: StrSpan(">" 6460..6461) }
token: Text { text: StrSpan("Ma non l‚Äôhanno lasciata gli d√®i." 6461..6496) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6498..6499)), span: StrSpan("</p>" 6496..6500) }
token: Text { text: StrSpan("\n\n" 6500..6502) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6503..6504), span: StrSpan("<p" 6502..6504) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6505..6510), value: StrSpan("testo_personaggio testo_maiuscoletto" 6512..6548), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6505..6549) }
token: ElementEnd { end: Open, span: StrSpan(">" 6549..6550) }
token: Text { text: StrSpan("Lelego." 6550..6557) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6559..6560)), span: StrSpan("</p>" 6557..6561) }
token: Text { text: StrSpan("\n" 6561..6562) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6563..6564), span: StrSpan("<p" 6562..6564) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6565..6570), value: StrSpan("testo_dialogo" 6572..6585), span: StrSpan("class=\"testo_dialogo\"" 6565..6586) }
token: ElementEnd { end: Open, span: StrSpan(">" 6586..6587) }
token: Text { text: StrSpan("Dicevi pure che li scannano sull‚ÄôIda." 6587..6626) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6628..6629)), span: StrSpan("</p>" 6626..6630) }
token: Text { text: StrSpan("\n\n" 6630..6632) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6633..6634), span: StrSpan("<p" 6632..6634) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6635..6640), value: StrSpan("testo_personaggio testo_maiuscoletto" 6642..6678), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6635..6679) }
token: ElementEnd { end: Open, span: StrSpan(">" 6679..6680) }
token: Text { text: StrSpan("Teseo." 6680..6686) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6688..6689)), span: StrSpan("</p>" 6686..6690) }
token: Text { text: StrSpan("\n" 6690..6691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6692..6693), span: StrSpan("<p" 6691..6693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6694..6699), value: StrSpan("testo_dialogo" 6701..6714), span: StrSpan("class=\"testo_dialogo\"" 6694..6715) }
token: ElementEnd { end: Open, span: StrSpan(">" 6715..6716) }
token: Text { text: StrSpan("E l‚Äôuccisore √® nuovo dio. O Lelego, si pu√≤ scannare d√®i e tori nella grotta, ma quel divino che hai nel sangue non si uccide. Anche Ariadne era sangue dell‚Äôisola. Io la conobbi come il toro." 6716..6913) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6915..6916)), span: StrSpan("</p>" 6913..6917) }
token: Text { text: StrSpan("\n\n" 6917..6919) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6920..6921), span: StrSpan("<p" 6919..6921) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6922..6927), value: StrSpan("testo_personaggio testo_maiuscoletto" 6929..6965), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6922..6966) }
token: ElementEnd { end: Open, span: StrSpan(">" 6966..6967) }
token: Text { text: StrSpan("Lelego." 6967..6974) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6976..6977)), span: StrSpan("</p>" 6974..6978) }
token: Text { text: StrSpan("\n" 6978..6979) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6980..6981), span: StrSpan("<p" 6979..6981) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6982..6987), value: StrSpan("testo_dialogo" 6989..7002), span: StrSpan("class=\"testo_dialogo\"" 6982..7003) }
token: ElementEnd { end: Open, span: StrSpan(">" 7003..7004) }
token: Text { text: StrSpan("Fosti crudele, Teseo. Che avr√† detto, infelice, svegliandosi?" 7004..7066) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7068..7069)), span: StrSpan("</p>" 7066..7070) }
token: Text { text: StrSpan("\n\n" 7070..7072) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7073..7074), span: StrSpan("<p" 7072..7074) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7075..7080), value: StrSpan("testo_personaggio testo_maiuscoletto" 7082..7118), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7075..7119) }
token: ElementEnd { end: Open, span: StrSpan(">" 7119..7120) }
token: Text { text: StrSpan("Teseo." 7120..7126) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7128..7129)), span: StrSpan("</p>" 7126..7130) }
token: Text { text: StrSpan("\n" 7130..7131) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7132..7133), span: StrSpan("<p" 7131..7133) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7134..7139), value: StrSpan("testo_dialogo" 7141..7154), span: StrSpan("class=\"testo_dialogo\"" 7134..7155) }
token: ElementEnd { end: Open, span: StrSpan(">" 7155..7156) }
token: Text { text: StrSpan("Oh lo so. Forse avr√† urlato. Ma non conta. Invocato la patria, le sue case e i suoi d√®i. La terra e il sole non le mancano. Noi stranieri per lei non siamo pi√∫ nulla." 7156..7325) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7327..7328)), span: StrSpan("</p>" 7325..7329) }
token: Text { text: StrSpan("\n\n" 7329..7331) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7332..7333), span: StrSpan("<p" 7331..7333) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7334..7339), value: StrSpan("testo_personaggio testo_maiuscoletto" 7341..7377), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7334..7378) }
token: ElementEnd { end: Open, span: StrSpan(">" 7378..7379) }
token: Text { text: StrSpan("Lelego." 7379..7386) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7388..7389)), span: StrSpan("</p>" 7386..7390) }
token: Text { text: StrSpan("\n" 7390..7391) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7392..7393), span: StrSpan("<p" 7391..7393) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7394..7399), value: StrSpan("testo_dialogo" 7401..7414), span: StrSpan("class=\"testo_dialogo\"" 7394..7415) }
token: ElementEnd { end: Open, span: StrSpan(">" 7415..7416) }
token: Text { text: StrSpan("Era bella, signore, era fatta di terra e di sole." 7416..7465) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7467..7468)), span: StrSpan("</p>" 7465..7469) }
token: Text { text: StrSpan("\n\n" 7469..7471) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7472..7473), span: StrSpan("<p" 7471..7473) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7474..7479), value: StrSpan("testo_personaggio testo_maiuscoletto" 7481..7517), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7474..7518) }
token: ElementEnd { end: Open, span: StrSpan(">" 7518..7519) }
token: Text { text: StrSpan("Teseo." 7519..7525) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7527..7528)), span: StrSpan("</p>" 7525..7529) }
token: Text { text: StrSpan("\n" 7529..7530) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7531..7532), span: StrSpan("<p" 7530..7532) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7533..7538), value: StrSpan("testo_dialogo" 7540..7553), span: StrSpan("class=\"testo_dialogo\"" 7533..7554) }
token: ElementEnd { end: Open, span: StrSpan(">" 7554..7555) }
token: Text { text: StrSpan("Noi invece non siamo che uomini. Sono certo che un dio, qualche dio dolce e ambiguo e dolente, di quei d√®i che hanno gustato gi√† la morte e la gran Dea porta nel grembo, le sar√† inviato a consolarla. Sar√† un tronco, un cavallo, un montone? sar√† un lago o una nuvola? Tutto pu√≤ darsi, sul suo mare." 7555..7858) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7860..7861)), span: StrSpan("</p>" 7858..7862) }
token: Text { text: StrSpan("\n\n" 7862..7864) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7865..7866), span: StrSpan("<p" 7864..7866) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7867..7872), value: StrSpan("testo_personaggio testo_maiuscoletto" 7874..7910), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7867..7911) }
token: ElementEnd { end: Open, span: StrSpan(">" 7911..7912) }
token: Text { text: StrSpan("Lelego." 7912..7919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7921..7922)), span: StrSpan("</p>" 7919..7923) }
token: Text { text: StrSpan("\n" 7923..7924) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7925..7926), span: StrSpan("<p" 7924..7926) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7927..7932), value: StrSpan("testo_dialogo" 7934..7947), span: StrSpan("class=\"testo_dialogo\"" 7927..7948) }
token: ElementEnd { end: Open, span: StrSpan(">" 7948..7949) }
token: Text { text: StrSpan("Io non so, qualche volta tu parli come fossi un ragazzo che gioca. Sei il signore e ti ascoltiamo. Altre volte sei vecchio e crudele. Si direbbe che l‚Äôisola ti ha lasciato qualcosa di s√©." 7949..8139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8141..8142)), span: StrSpan("</p>" 8139..8143) }
token: Text { text: StrSpan("\n\n" 8143..8145) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8146..8147), span: StrSpan("<p" 8145..8147) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8148..8153), value: StrSpan("testo_personaggio testo_maiuscoletto" 8155..8191), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8148..8192) }
token: ElementEnd { end: Open, span: StrSpan(">" 8192..8193) }
token: Text { text: StrSpan("Teseo." 8193..8199) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8201..8202)), span: StrSpan("</p>" 8199..8203) }
token: Text { text: StrSpan("\n" 8203..8204) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8205..8206), span: StrSpan("<p" 8204..8206) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8207..8212), value: StrSpan("testo_dialogo" 8214..8227), span: StrSpan("class=\"testo_dialogo\"" 8207..8228) }
token: ElementEnd { end: Open, span: StrSpan(">" 8228..8229) }
token: Text { text: StrSpan("Anche questo pu√≤ darsi. Quel che si uccide si diventa, Lelego. Tu non ci pensi ma veniamo da lontano." 8229..8331) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8333..8334)), span: StrSpan("</p>" 8331..8335) }
token: Text { text: StrSpan("\n\n" 8335..8337) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8338..8339), span: StrSpan("<p" 8337..8339) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8340..8345), value: StrSpan("testo_personaggio testo_maiuscoletto" 8347..8383), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8340..8384) }
token: ElementEnd { end: Open, span: StrSpan(">" 8384..8385) }
token: Text { text: StrSpan("Lelego." 8385..8392) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8394..8395)), span: StrSpan("</p>" 8392..8396) }
token: Text { text: StrSpan("\n" 8396..8397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8398..8399), span: StrSpan("<p" 8397..8399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8400..8405), value: StrSpan("testo_dialogo" 8407..8420), span: StrSpan("class=\"testo_dialogo\"" 8400..8421) }
token: ElementEnd { end: Open, span: StrSpan(">" 8421..8422) }
token: Text { text: StrSpan("Nemmeno il vino della patria ti riscalda?" 8422..8463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8465..8466)), span: StrSpan("</p>" 8463..8467) }
token: Text { text: StrSpan("\n\n" 8467..8469) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8470..8471), span: StrSpan("<p" 8469..8471) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8472..8477), value: StrSpan("testo_personaggio testo_maiuscoletto" 8479..8515), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8472..8516) }
token: ElementEnd { end: Open, span: StrSpan(">" 8516..8517) }
token: Text { text: StrSpan("Teseo." 8517..8523) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8525..8526)), span: StrSpan("</p>" 8523..8527) }
token: Text { text: StrSpan("\n" 8527..8528) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8529..8530), span: StrSpan("<p" 8528..8530) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8531..8536), value: StrSpan("testo_dialogo" 8538..8551), span: StrSpan("class=\"testo_dialogo\"" 8531..8552) }
token: ElementEnd { end: Open, span: StrSpan(">" 8552..8553) }
token: Text { text: StrSpan("Non siamo ancora giunti in patria." 8553..8587) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8589..8590)), span: StrSpan("</p>" 8587..8591) }
token: Text { text: StrSpan("\n" 8591..8592) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8594..8598)), span: StrSpan("</body>" 8592..8599) }
token: Text { text: StrSpan("\n" 8599..8600) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8602..8606)), span: StrSpan("</html>" 8600..8607) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("In famiglia" 340..351) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 353..355)), span: StrSpan("</h1>" 351..356) }
token: Text { text: StrSpan("\n\n" 356..358) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 359..360), span: StrSpan("<p" 358..360) }
token: ElementEnd { end: Open, span: StrSpan(">" 360..361) }
token: Text { text: StrSpan("Sono noti i luttuosi incidenti che hanno funestato la casa degli Atridi. Qui baster√† ricordare alcune successioni. Da Tantalo nacque P√©lope; da P√©lope, Tieste e Atreo; da Atreo, Menelao e Agamennone; da quest‚Äôultimo Oreste che uccise la madre. Che Artemide arcadica e marina godesse di uno speciale culto in questa famiglia (si pensi al sacrificio dell‚Äôatride Ifigenia, tentato dal padre), chi scrive ne √® convinto e non da ieri." 361..798) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 800..801)), span: StrSpan("</p>" 798..802) }
token: Text { text: StrSpan("\n\n" 802..804) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 805..806), span: StrSpan("<p" 804..806) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 807..812), value: StrSpan("testo_indicazioni_scena" 814..837), span: StrSpan("class=\"testo_indicazioni_scena\"" 807..838) }
token: ElementEnd { end: Open, span: StrSpan(">" 838..839) }
token: Text { text: StrSpan("(parlano Castore e Polideute)" 839..868) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 870..871)), span: StrSpan("</p>" 868..872) }
token: Text { text: StrSpan("\n\n\n" 872..875) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 876..877), span: StrSpan("<p" 875..877) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 878..883), value: StrSpan("testo_personaggio testo_maiuscoletto" 885..921), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 878..922) }
token: ElementEnd { end: Open, span: StrSpan(">" 922..923) }
token: Text { text: StrSpan("Castore." 923..931) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 933..934)), span: StrSpan("</p>" 931..935) }
token: Text { text: StrSpan("\n" 935..936) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 937..938), span: StrSpan("<p" 936..938) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 939..944), value: StrSpan("testo_dialogo" 946..959), span: StrSpan("class=\"testo_dialogo\"" 939..960) }
token: ElementEnd { end: Open, span: StrSpan(">" 960..961) }
token: Text { text: StrSpan("Ricordi, Poli, quando l‚Äôabbiamo tolta dalle mani di Teseo?" 961..1021) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1023..1024)), span: StrSpan("</p>" 1021..1025) }
token: Text { text: StrSpan("\n\n" 1025..1027) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1028..1029), span: StrSpan("<p" 1027..1029) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1030..1035), value: StrSpan("testo_personaggio testo_maiuscoletto" 1037..1073), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1030..1074) }
token: ElementEnd { end: Open, span: StrSpan(">" 1074..1075) }
token: Text { text: StrSpan("Polideute." 1075..1085) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1087..1088)), span: StrSpan("</p>" 1085..1089) }
token: Text { text: StrSpan("\n" 1089..1090) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1091..1092), span: StrSpan("<p" 1090..1092) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1093..1098), value: StrSpan("testo_dialogo" 1100..1113), span: StrSpan("class=\"testo_dialogo\"" 1093..1114) }
token: ElementEnd { end: Open, span: StrSpan(">" 1114..1115) }
token: Text { text: StrSpan("Valeva la pena‚Ä¶" 1115..1132) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1134..1135)), span: StrSpan("</p>" 1132..1136) }
token: Text { text: StrSpan("\n\n" 1136..1138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1139..1140), span: StrSpan("<p" 1138..1140) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1141..1146), value: StrSpan("testo_personaggio testo_maiuscoletto" 1148..1184), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1141..1185) }
token: ElementEnd { end: Open, span: StrSpan(">" 1185..1186) }
token: Text { text: StrSpan("Castore." 1186..1194) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1196..1197)), span: StrSpan("</p>" 1194..1198) }
token: Text { text: StrSpan("\n" 1198..1199) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1200..1201), span: StrSpan("<p" 1199..1201) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1202..1207), value: StrSpan("testo_dialogo" 1209..1222), span: StrSpan("class=\"testo_dialogo\"" 1202..1223) }
token: ElementEnd { end: Open, span: StrSpan(">" 1223..1224) }
token: Text { text: StrSpan("Allora era una bambina, e mi ricordo che correndo nella notte pensavo allo spavento che doveva provare in quel bosco sul cavallo di Teseo, inseguita da noi‚Ä¶ Eravamo ingenui." 1224..1399) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1401..1402)), span: StrSpan("</p>" 1399..1403) }
token: Text { text: StrSpan("\n\n" 1403..1405) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1406..1407), span: StrSpan("<p" 1405..1407) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1408..1413), value: StrSpan("testo_personaggio testo_maiuscoletto" 1415..1451), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1408..1452) }
token: ElementEnd { end: Open, span: StrSpan(">" 1452..1453) }
token: Text { text: StrSpan("Polideute." 1453..1463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1465..1466)), span: StrSpan("</p>" 1463..1467) }
token: Text { text: StrSpan("\n" 1467..1468) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1469..1470), span: StrSpan("<p" 1468..1470) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1471..1476), value: StrSpan("testo_dialogo" 1478..1491), span: StrSpan("class=\"testo_dialogo\"" 1471..1492) }
token: ElementEnd { end: Open, span: StrSpan(">" 1492..1493) }
token: Text { text: StrSpan("Adesso si √® messa al sicuro." 1493..1522) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1524..1525)), span: StrSpan("</p>" 1522..1526) }
token: Text { text: StrSpan("\n\n" 1526..1528) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1529..1530), span: StrSpan("<p" 1528..1530) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1531..1536), value: StrSpan("testo_personaggio testo_maiuscoletto" 1538..1574), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1531..1575) }
token: ElementEnd { end: Open, span: StrSpan(">" 1575..1576) }
token: Text { text: StrSpan("Castore." 1576..1584) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1586..1587)), span: StrSpan("</p>" 1584..1588) }
token: Text { text: StrSpan("\n" 1588..1589) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1590..1591), span: StrSpan("<p" 1589..1591) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1592..1597), value: StrSpan("testo_dialogo" 1599..1612), span: StrSpan("class=\"testo_dialogo\"" 1592..1613) }
token: ElementEnd { end: Open, span: StrSpan(">" 1613..1614) }
token: Text { text: StrSpan("Adesso ha la forza dei Frigi e dei D√†rdani. Ha messo il mare tra s√© e noi." 1614..1690) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1692..1693)), span: StrSpan("</p>" 1690..1694) }
token: Text { text: StrSpan("\n\n" 1694..1696) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1697..1698), span: StrSpan("<p" 1696..1698) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1699..1704), value: StrSpan("testo_personaggio testo_maiuscoletto" 1706..1742), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1699..1743) }
token: ElementEnd { end: Open, span: StrSpan(">" 1743..1744) }
token: Text { text: StrSpan("Polideute." 1744..1754) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1756..1757)), span: StrSpan("</p>" 1754..1758) }
token: Text { text: StrSpan("\n" 1758..1759) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1760..1761), span: StrSpan("<p" 1759..1761) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1762..1767), value: StrSpan("testo_dialogo" 1769..1782), span: StrSpan("class=\"testo_dialogo\"" 1762..1783) }
token: ElementEnd { end: Open, span: StrSpan(">" 1783..1784) }
token: Text { text: StrSpan("Passeremo anche il mare." 1784..1808) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1810..1811)), span: StrSpan("</p>" 1808..1812) }
token: Text { text: StrSpan("\n\n" 1812..1814) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1815..1816), span: StrSpan("<p" 1814..1816) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1817..1822), value: StrSpan("testo_personaggio testo_maiuscoletto" 1824..1860), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1817..1861) }
token: ElementEnd { end: Open, span: StrSpan(">" 1861..1862) }
token: Text { text: StrSpan("Castore." 1862..1870) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1872..1873)), span: StrSpan("</p>" 1870..1874) }
token: Text { text: StrSpan("\n" 1874..1875) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1876..1877), span: StrSpan("<p" 1875..1877) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1878..1883), value: StrSpan("testo_dialogo" 1885..1898), span: StrSpan("class=\"testo_dialogo\"" 1878..1899) }
token: ElementEnd { end: Open, span: StrSpan(">" 1899..1900) }
token: Text { text: StrSpan("Io ne ho abbastanza, Polideute. Non tocca pi√∫ a noi. Ora √® faccenda degli Atridi." 1900..1983) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1985..1986)), span: StrSpan("</p>" 1983..1987) }
token: Text { text: StrSpan("\n\n" 1987..1989) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1990..1991), span: StrSpan("<p" 1989..1991) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1992..1997), value: StrSpan("testo_personaggio testo_maiuscoletto" 1999..2035), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1992..2036) }
token: ElementEnd { end: Open, span: StrSpan(">" 2036..2037) }
token: Text { text: StrSpan("Polideute." 2037..2047) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2049..2050)), span: StrSpan("</p>" 2047..2051) }
token: Text { text: StrSpan("\n" 2051..2052) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2053..2054), span: StrSpan("<p" 2052..2054) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2055..2060), value: StrSpan("testo_dialogo" 2062..2075), span: StrSpan("class=\"testo_dialogo\"" 2055..2076) }
token: ElementEnd { end: Open, span: StrSpan(">" 2076..2077) }
token: Text { text: StrSpan("Passeremo il mare." 2077..2095) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2097..2098)), span: StrSpan("</p>" 2095..2099) }
token: Text { text: StrSpan("\n\n" 2099..2101) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2102..2103), span: StrSpan("<p" 2101..2103) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2104..2109), value: StrSpan("testo_personaggio testo_maiuscoletto" 2111..2147), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2104..2148) }
token: ElementEnd { end: Open, span: StrSpan(">" 2148..2149) }
token: Text { text: StrSpan("Castore." 2149..2157) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2159..2160)), span: StrSpan("</p>" 2157..2161) }
token: Text { text: StrSpan("\n" 2161..2162) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2163..2164), span: StrSpan("<p" 2162..2164) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2165..2170), value: StrSpan("testo_dialogo" 2172..2185), span: StrSpan("class=\"testo_dialogo\"" 2165..2186) }
token: ElementEnd { end: Open, span: StrSpan(">" 2186..2187) }
token: Text { text: StrSpan("Conv√≠nciti, Poli. Non vale la pena. Non essere ingenuo. Lascia fare agli Atridi ‚Äì l‚Äôavvenire li riguarda." 2187..2297) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2299..2300)), span: StrSpan("</p>" 2297..2301) }
token: Text { text: StrSpan("\n\n" 2301..2303) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2304..2305), span: StrSpan("<p" 2303..2305) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2306..2311), value: StrSpan("testo_personaggio testo_maiuscoletto" 2313..2349), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2306..2350) }
token: ElementEnd { end: Open, span: StrSpan(">" 2350..2351) }
token: Text { text: StrSpan("Polideute." 2351..2361) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2363..2364)), span: StrSpan("</p>" 2361..2365) }
token: Text { text: StrSpan("\n" 2365..2366) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2367..2368), span: StrSpan("<p" 2366..2368) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2369..2374), value: StrSpan("testo_dialogo" 2376..2389), span: StrSpan("class=\"testo_dialogo\"" 2369..2390) }
token: ElementEnd { end: Open, span: StrSpan(">" 2390..2391) }
token: Text { text: StrSpan("Ma √® nostra sorella." 2391..2412) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2414..2415)), span: StrSpan("</p>" 2412..2416) }
token: Text { text: StrSpan("\n\n" 2416..2418) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2419..2420), span: StrSpan("<p" 2418..2420) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2421..2426), value: StrSpan("testo_personaggio testo_maiuscoletto" 2428..2464), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2421..2465) }
token: ElementEnd { end: Open, span: StrSpan(">" 2465..2466) }
token: Text { text: StrSpan("Castore." 2466..2474) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2476..2477)), span: StrSpan("</p>" 2474..2478) }
token: Text { text: StrSpan("\n" 2478..2479) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2480..2481), span: StrSpan("<p" 2479..2481) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2482..2487), value: StrSpan("testo_dialogo" 2489..2502), span: StrSpan("class=\"testo_dialogo\"" 2482..2503) }
token: ElementEnd { end: Open, span: StrSpan(">" 2503..2504) }
token: Text { text: StrSpan("Dovevamo saperlo che a Sparta non sarebbe rimasta. Non √® donna da vivere in fondo a una reggia." 2504..2600) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2602..2603)), span: StrSpan("</p>" 2600..2604) }
token: Text { text: StrSpan("\n\n" 2604..2606) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2607..2608), span: StrSpan("<p" 2606..2608) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2609..2614), value: StrSpan("testo_personaggio testo_maiuscoletto" 2616..2652), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2609..2653) }
token: ElementEnd { end: Open, span: StrSpan(">" 2653..2654) }
token: Text { text: StrSpan("Polideute." 2654..2664) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2666..2667)), span: StrSpan("</p>" 2664..2668) }
token: Text { text: StrSpan("\n" 2668..2669) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2670..2671), span: StrSpan("<p" 2669..2671) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2672..2677), value: StrSpan("testo_dialogo" 2679..2692), span: StrSpan("class=\"testo_dialogo\"" 2672..2693) }
token: ElementEnd { end: Open, span: StrSpan(">" 2693..2694) }
token: Text { text: StrSpan("E che altro vuole, Castore?" 2694..2721) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2723..2724)), span: StrSpan("</p>" 2721..2725) }
token: Text { text: StrSpan("\n\n" 2725..2727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2728..2729), span: StrSpan("<p" 2727..2729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2730..2735), value: StrSpan("testo_personaggio testo_maiuscoletto" 2737..2773), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2730..2774) }
token: ElementEnd { end: Open, span: StrSpan(">" 2774..2775) }
token: Text { text: StrSpan("Castore." 2775..2783) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2785..2786)), span: StrSpan("</p>" 2783..2787) }
token: Text { text: StrSpan("\n" 2787..2788) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2789..2790), span: StrSpan("<p" 2788..2790) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2791..2796), value: StrSpan("testo_dialogo" 2798..2811), span: StrSpan("class=\"testo_dialogo\"" 2791..2812) }
token: ElementEnd { end: Open, span: StrSpan(">" 2812..2813) }
token: Text { text: StrSpan("Non vuole nulla. √à proprio questo. √à la bambina ch‚Äôera allora. √à incapace di prender sul serio un marito o una casa. Ma non serve rincorrerla. Vedrai che un giorno torner√† con noi." 2813..2999) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3001..3002)), span: StrSpan("</p>" 2999..3003) }
token: Text { text: StrSpan("\n\n" 3003..3005) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3006..3007), span: StrSpan("<p" 3005..3007) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3008..3013), value: StrSpan("testo_personaggio testo_maiuscoletto" 3015..3051), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3008..3052) }
token: ElementEnd { end: Open, span: StrSpan(">" 3052..3053) }
token: Text { text: StrSpan("Polideute." 3053..3063) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3065..3066)), span: StrSpan("</p>" 3063..3067) }
token: Text { text: StrSpan("\n" 3067..3068) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3069..3070), span: StrSpan("<p" 3068..3070) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3071..3076), value: StrSpan("testo_dialogo" 3078..3091), span: StrSpan("class=\"testo_dialogo\"" 3071..3092) }
token: ElementEnd { end: Open, span: StrSpan(">" 3092..3093) }
token: Text { text: StrSpan("Chi sa che faranno adesso gli Atridi per riscatto del sangue. Non √® gente che sopporti un‚Äôingiuria. Il loro onore √® come quello degli d√®i." 3093..3236) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3238..3239)), span: StrSpan("</p>" 3236..3240) }
token: Text { text: StrSpan("\n\n" 3240..3242) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3243..3244), span: StrSpan("<p" 3242..3244) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3245..3250), value: StrSpan("testo_personaggio testo_maiuscoletto" 3252..3288), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3245..3289) }
token: ElementEnd { end: Open, span: StrSpan(">" 3289..3290) }
token: Text { text: StrSpan("Castore." 3290..3298) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3300..3301)), span: StrSpan("</p>" 3298..3302) }
token: Text { text: StrSpan("\n" 3302..3303) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3304..3305), span: StrSpan("<p" 3303..3305) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3306..3311), value: StrSpan("testo_dialogo" 3313..3326), span: StrSpan("class=\"testo_dialogo\"" 3306..3327) }
token: ElementEnd { end: Open, span: StrSpan(">" 3327..3328) }
token: Text { text: StrSpan("Lascia stare gli d√®i. √à una famiglia che in passato si mangiavano tra loro. Cominciando da Tantalo che ha imbandito il figliolo‚Ä¶" 3328..3460) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3462..3463)), span: StrSpan("</p>" 3460..3464) }
token: Text { text: StrSpan("\n\n" 3464..3466) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3467..3468), span: StrSpan("<p" 3466..3468) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3469..3474), value: StrSpan("testo_personaggio testo_maiuscoletto" 3476..3512), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3469..3513) }
token: ElementEnd { end: Open, span: StrSpan(">" 3513..3514) }
token: Text { text: StrSpan("Polideute." 3514..3524) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3526..3527)), span: StrSpan("</p>" 3524..3528) }
token: Text { text: StrSpan("\n" 3528..3529) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3530..3531), span: StrSpan("<p" 3529..3531) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3532..3537), value: StrSpan("testo_dialogo" 3539..3552), span: StrSpan("class=\"testo_dialogo\"" 3532..3553) }
token: ElementEnd { end: Open, span: StrSpan(">" 3553..3554) }
token: Text { text: StrSpan("Sono poi vere queste storie che raccontano?" 3554..3597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3599..3600)), span: StrSpan("</p>" 3597..3601) }
token: Text { text: StrSpan("\n\n" 3601..3603) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3604..3605), span: StrSpan("<p" 3603..3605) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3606..3611), value: StrSpan("testo_personaggio testo_maiuscoletto" 3613..3649), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3606..3650) }
token: ElementEnd { end: Open, span: StrSpan(">" 3650..3651) }
token: Text { text: StrSpan("Castore." 3651..3659) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3661..3662)), span: StrSpan("</p>" 3659..3663) }
token: Text { text: StrSpan("\n" 3663..3664) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3665..3666), span: StrSpan("<p" 3664..3666) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3667..3672), value: StrSpan("testo_dialogo" 3674..3687), span: StrSpan("class=\"testo_dialogo\"" 3667..3688) }
token: ElementEnd { end: Open, span: StrSpan(">" 3688..3689) }
token: Text { text: StrSpan("Sono degne di loro. Gente che vive nelle rocche di Micene e di Sparta e si mette una maschera d‚Äôoro; che √® padrona del mare e lo vede solamente per le buche feritoie, √® capace di tutto. Ti sei mai chiesto, Polideute, perch√© le loro donne ‚Äì anche nostra sorella ‚Äì dopo un po‚Äô inferociscono e smaniano, versano sangue e ne fanno versare? Le migliori non reggono. Non c‚Äô√® un solo Pelopida ‚Äì non uno ‚Äì cui la sposa abbia chiuso gli occhi. Se questo √® un onore di d√®i‚Ä¶" 3689..4174) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4176..4177)), span: StrSpan("</p>" 4174..4178) }
token: Text { text: StrSpan("\n\n" 4178..4180) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4181..4182), span: StrSpan("<p" 4180..4182) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4183..4188), value: StrSpan("testo_personaggio testo_maiuscoletto" 4190..4226), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4183..4227) }
token: ElementEnd { end: Open, span: StrSpan(">" 4227..4228) }
token: Text { text: StrSpan("Polideute." 4228..4238) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4240..4241)), span: StrSpan("</p>" 4238..4242) }
token: Text { text: StrSpan("\n" 4242..4243) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4244..4245), span: StrSpan("<p" 4243..4245) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4246..4251), value: StrSpan("testo_dialogo" 4253..4266), span: StrSpan("class=\"testo_dialogo\"" 4246..4267) }
token: ElementEnd { end: Open, span: StrSpan(">" 4267..4268) }
token: Text { text: StrSpan("L‚Äôaltra nostra sorellina, Clitennestra, ci resiste." 4268..4321) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4323..4324)), span: StrSpan("</p>" 4321..4325) }
token: Text { text: StrSpan("\n\n" 4325..4327) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4328..4329), span: StrSpan("<p" 4327..4329) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4330..4335), value: StrSpan("testo_personaggio testo_maiuscoletto" 4337..4373), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4330..4374) }
token: ElementEnd { end: Open, span: StrSpan(">" 4374..4375) }
token: Text { text: StrSpan("Castore." 4375..4383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4385..4386)), span: StrSpan("</p>" 4383..4387) }
token: Text { text: StrSpan("\n" 4387..4388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4389..4390), span: StrSpan("<p" 4388..4390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4391..4396), value: StrSpan("testo_dialogo" 4398..4411), span: StrSpan("class=\"testo_dialogo\"" 4391..4412) }
token: ElementEnd { end: Open, span: StrSpan(">" 4412..4413) }
token: Text { text: StrSpan("‚Ä¶ Aspettiamo la fine, a dire evviva." 4413..4451) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4453..4454)), span: StrSpan("</p>" 4451..4455) }
token: Text { text: StrSpan("\n\n" 4455..4457) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4458..4459), span: StrSpan("<p" 4457..4459) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4460..4465), value: StrSpan("testo_personaggio testo_maiuscoletto" 4467..4503), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4460..4504) }
token: ElementEnd { end: Open, span: StrSpan(">" 4504..4505) }
token: Text { text: StrSpan("Polideute." 4505..4515) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4517..4518)), span: StrSpan("</p>" 4515..4519) }
token: Text { text: StrSpan("\n" 4519..4520) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4521..4522), span: StrSpan("<p" 4520..4522) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4523..4528), value: StrSpan("testo_dialogo" 4530..4543), span: StrSpan("class=\"testo_dialogo\"" 4523..4544) }
token: ElementEnd { end: Open, span: StrSpan(">" 4544..4545) }
token: Text { text: StrSpan("Se tu sapevi tutto ci√≤, come hai potuto consentire a queste nozze?" 4545..4612) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4614..4615)), span: StrSpan("</p>" 4612..4616) }
token: Text { text: StrSpan("\n\n" 4616..4618) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4619..4620), span: StrSpan("<p" 4618..4620) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4621..4626), value: StrSpan("testo_personaggio testo_maiuscoletto" 4628..4664), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4621..4665) }
token: ElementEnd { end: Open, span: StrSpan(">" 4665..4666) }
token: Text { text: StrSpan("Castore." 4666..4674) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4676..4677)), span: StrSpan("</p>" 4674..4678) }
token: Text { text: StrSpan("\n" 4678..4679) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4680..4681), span: StrSpan("<p" 4679..4681) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4682..4687), value: StrSpan("testo_dialogo" 4689..4702), span: StrSpan("class=\"testo_dialogo\"" 4682..4703) }
token: ElementEnd { end: Open, span: StrSpan(">" 4703..4704) }
token: Text { text: StrSpan("Io non ho consentito. Queste cose succedono. Ciascuno si trova la moglie che merita." 4704..4788) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4790..4791)), span: StrSpan("</p>" 4788..4792) }
token: Text { text: StrSpan("\n\n" 4792..4794) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4795..4796), span: StrSpan("<p" 4794..4796) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4797..4802), value: StrSpan("testo_personaggio testo_maiuscoletto" 4804..4840), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4797..4841) }
token: ElementEnd { end: Open, span: StrSpan(">" 4841..4842) }
token: Text { text: StrSpan("Polideute." 4842..4852) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4854..4855)), span: StrSpan("</p>" 4852..4856) }
token: Text { text: StrSpan("\n" 4856..4857) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4858..4859), span: StrSpan("<p" 4857..4859) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4860..4865), value: StrSpan("testo_dialogo" 4867..4880), span: StrSpan("class=\"testo_dialogo\"" 4860..4881) }
token: ElementEnd { end: Open, span: StrSpan(">" 4881..4882) }
token: Text { text: StrSpan("Che vuoi dire? che le donne sono degne di loro? nostra sorella avrebbe colpa?" 4882..4959) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4961..4962)), span: StrSpan("</p>" 4959..4963) }
token: Text { text: StrSpan("\n\n" 4963..4965) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4966..4967), span: StrSpan("<p" 4965..4967) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4968..4973), value: StrSpan("testo_personaggio testo_maiuscoletto" 4975..5011), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4968..5012) }
token: ElementEnd { end: Open, span: StrSpan(">" 5012..5013) }
token: Text { text: StrSpan("Castore." 5013..5021) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5023..5024)), span: StrSpan("</p>" 5021..5025) }
token: Text { text: StrSpan("\n" 5025..5026) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5027..5028), span: StrSpan("<p" 5026..5028) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5029..5034), value: StrSpan("testo_dialogo" 5036..5049), span: StrSpan("class=\"testo_dialogo\"" 5029..5050) }
token: ElementEnd { end: Open, span: StrSpan(">" 5050..5051) }
token: Text { text: StrSpan("Smettila, Polideute. Nessuno ci ascolta. √à evidente che gli Atridi e i loro padri hanno sempre sposato la medesima donna. Forse noi suoi fratelli non sappiamo ancor bene chi Elena sia. C‚Äô√® voluto Teseo per darcene un saggio. Dopo di lui l‚ÄôAtride. Ora Paride frigio. Io domando: possibile che sia tutto casuale? Sempre lei deve imbattersi in simili tipi? √à evidente che √® fatta per loro, come loro per lei." 5051..5464) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5466..5467)), span: StrSpan("</p>" 5464..5468) }
token: Text { text: StrSpan("\n\n" 5468..5470) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5471..5472), span: StrSpan("<p" 5470..5472) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5473..5478), value: StrSpan("testo_personaggio testo_maiuscoletto" 5480..5516), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5473..5517) }
token: ElementEnd { end: Open, span: StrSpan(">" 5517..5518) }
token: Text { text: StrSpan("Polideute." 5518..5528) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5530..5531)), span: StrSpan("</p>" 5528..5532) }
token: Text { text: StrSpan("\n" 5532..5533) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5534..5535), span: StrSpan("<p" 5533..5535) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5536..5541), value: StrSpan("testo_dialogo" 5543..5556), span: StrSpan("class=\"testo_dialogo\"" 5536..5557) }
token: ElementEnd { end: Open, span: StrSpan(">" 5557..5558) }
token: Text { text: StrSpan("Ma sei folle." 5558..5571) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5573..5574)), span: StrSpan("</p>" 5571..5575) }
token: Text { text: StrSpan("\n\n" 5575..5577) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5578..5579), span: StrSpan("<p" 5577..5579) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5580..5585), value: StrSpan("testo_personaggio testo_maiuscoletto" 5587..5623), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5580..5624) }
token: ElementEnd { end: Open, span: StrSpan(">" 5624..5625) }
token: Text { text: StrSpan("Castore." 5625..5633) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5635..5636)), span: StrSpan("</p>" 5633..5637) }
token: Text { text: StrSpan("\n" 5637..5638) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5639..5640), span: StrSpan("<p" 5638..5640) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5641..5646), value: StrSpan("testo_dialogo" 5648..5661), span: StrSpan("class=\"testo_dialogo\"" 5641..5662) }
token: ElementEnd { end: Open, span: StrSpan(">" 5662..5663) }
token: Text { text: StrSpan("Non c‚Äô√® niente di folle. Se i Pelopidi han persa la testa ‚Äì e qualcuno anche il collo ‚Äì ci pensino loro. Sono stirpe di re marini che non escon di casa e amano comandare dalle alture. Forse un giorno hanno veduto il mondo. Tantalo, il primo, certo. Ma poi vissero chiusi con le donne e i mucchi d‚Äôoro, sospettosi e scontenti, incapaci di un gesto valido, nutriti dal mare su una povera terra, banchettatori, grassi. Ti stupisce che cercassero qualcosa di forte, di quasi selvaggio, da rinchiudere sul monte con s√©? L‚Äôhan sempre trovato." 5663..6211) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6213..6214)), span: StrSpan("</p>" 6211..6215) }
token: Text { text: StrSpan("\n\n" 6215..6217) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6218..6219), span: StrSpan("<p" 6217..6219) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6220..6225), value: StrSpan("testo_personaggio testo_maiuscoletto" 6227..6263), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6220..6264) }
token: ElementEnd { end: Open, span: StrSpan(">" 6264..6265) }
token: Text { text: StrSpan("Polideute." 6265..6275) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6277..6278)), span: StrSpan("</p>" 6275..6279) }
token: Text { text: StrSpan("\n" 6279..6280) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6281..6282), span: StrSpan("<p" 6280..6282) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6283..6288), value: StrSpan("testo_dialogo" 6290..6303), span: StrSpan("class=\"testo_dialogo\"" 6283..6304) }
token: ElementEnd { end: Open, span: StrSpan(">" 6304..6305) }
token: Text { text: StrSpan("Non capisco cosa c‚Äôentri la nostra sorella n√© perch√© dici ch‚Äôera fatta per Paride e Teseo." 6305..6401) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6403..6404)), span: StrSpan("</p>" 6401..6405) }
token: Text { text: StrSpan("\n\n" 6405..6407) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6408..6409), span: StrSpan("<p" 6407..6409) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6410..6415), value: StrSpan("testo_personaggio testo_maiuscoletto" 6417..6453), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6410..6454) }
token: ElementEnd { end: Open, span: StrSpan(">" 6454..6455) }
token: Text { text: StrSpan("Castore." 6455..6463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6465..6466)), span: StrSpan("</p>" 6463..6467) }
token: Text { text: StrSpan("\n" 6467..6468) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6469..6470), span: StrSpan("<p" 6468..6470) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6471..6476), value: StrSpan("testo_dialogo" 6478..6491), span: StrSpan("class=\"testo_dialogo\"" 6471..6492) }
token: ElementEnd { end: Open, span: StrSpan(">" 6492..6493) }
token: Text { text: StrSpan("Per loro o per altri, Poli, non importa. √à del destino degli Atridi che si parla. N√© l‚Äôantica Ippodamia n√© le nuore hanno colpa se tutte quante si somigliano come una torma di cavalle. Si direbbe che nei tempi in quella famiglia lo stesso uomo ha ricercato sempre la stessa creatura. E l‚Äôha trovata. Da Ippodamia di Enom√†o alle nostre sorelle tutte quante sono state costrette a lottare e difendersi. √à evidente che questo ai Pelopidi piace. Non lo sapranno ma gli piace. Sono gente d‚Äôastuzia e di sangue. Sono grassi tiranni. Hanno bisogno di una donna che li frusti." 6493..7072) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7074..7075)), span: StrSpan("</p>" 7072..7076) }
token: Text { text: StrSpan("\n\n" 7076..7078) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7079..7080), span: StrSpan("<p" 7078..7080) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7081..7086), value: StrSpan("testo_personaggio testo_maiuscoletto" 7088..7124), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7081..7125) }
token: ElementEnd { end: Open, span: StrSpan(">" 7125..7126) }
token: Text { text: StrSpan("Polideute." 7126..7136) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7138..7139)), span: StrSpan("</p>" 7136..7140) }
token: Text { text: StrSpan("\n" 7140..7141) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7142..7143), span: StrSpan("<p" 7141..7143) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7144..7149), value: StrSpan("testo_dialogo" 7151..7164), span: StrSpan("class=\"testo_dialogo\"" 7144..7165) }
token: ElementEnd { end: Open, span: StrSpan(">" 7165..7166) }
token: Text { text: StrSpan("Dici sempre Ippodamia Ippodamia. Lo so anch‚Äôio che Ippodamia agitava i cavalli. Ma le nostre sorelle non c‚Äôentrano. La mano d‚ÄôElena √® una mano di bambina che non ha mai stretto la sferza. Come pu√≤ somigliarle?" 7166..7383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7385..7386)), span: StrSpan("</p>" 7383..7387) }
token: Text { text: StrSpan("\n\n" 7387..7389) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7390..7391), span: StrSpan("<p" 7389..7391) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7392..7397), value: StrSpan("testo_personaggio testo_maiuscoletto" 7399..7435), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7392..7436) }
token: ElementEnd { end: Open, span: StrSpan(">" 7436..7437) }
token: Text { text: StrSpan("Castore." 7437..7445) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7447..7448)), span: StrSpan("</p>" 7445..7449) }
token: Text { text: StrSpan("\n" 7449..7450) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7451..7452), span: StrSpan("<p" 7450..7452) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7453..7458), value: StrSpan("testo_dialogo" 7460..7473), span: StrSpan("class=\"testo_dialogo\"" 7453..7474) }
token: ElementEnd { end: Open, span: StrSpan(">" 7474..7475) }
token: Text { text: StrSpan("Noi delle donne, Polideute, non sappiamo gran cosa. Siamo cresciuti su con lei. Ci pare sempre la bambina che giocava alla palla. Ma per sentirsi selvagge e smaniose non √® necessario agitare cavalli. Basta piacere a un Menelao, a un re del mare." 7475..7721) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7723..7724)), span: StrSpan("</p>" 7721..7725) }
token: Text { text: StrSpan("\n\n" 7725..7727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7728..7729), span: StrSpan("<p" 7727..7729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7730..7735), value: StrSpan("testo_personaggio testo_maiuscoletto" 7737..7773), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7730..7774) }
token: ElementEnd { end: Open, span: StrSpan(">" 7774..7775) }
token: Text { text: StrSpan("Polideute." 7775..7785) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7787..7788)), span: StrSpan("</p>" 7785..7789) }
token: Text { text: StrSpan("\n" 7789..7790) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7791..7792), span: StrSpan("<p" 7790..7792) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7793..7798), value: StrSpan("testo_dialogo" 7800..7813), span: StrSpan("class=\"testo_dialogo\"" 7793..7814) }
token: ElementEnd { end: Open, span: StrSpan(">" 7814..7815) }
token: Text { text: StrSpan("E che ha poi fatto di terribile Ippodamia?" 7815..7857) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7859..7860)), span: StrSpan("</p>" 7857..7861) }
token: Text { text: StrSpan("\n\n" 7861..7863) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7864..7865), span: StrSpan("<p" 7863..7865) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7866..7871), value: StrSpan("testo_personaggio testo_maiuscoletto" 7873..7909), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7866..7910) }
token: ElementEnd { end: Open, span: StrSpan(">" 7910..7911) }
token: Text { text: StrSpan("Castore." 7911..7919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7921..7922)), span: StrSpan("</p>" 7919..7923) }
token: Text { text: StrSpan("\n" 7923..7924) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7925..7926), span: StrSpan("<p" 7924..7926) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7927..7932), value: StrSpan("testo_dialogo" 7934..7947), span: StrSpan("class=\"testo_dialogo\"" 7927..7948) }
token: ElementEnd { end: Open, span: StrSpan(">" 7948..7949) }
token: Text { text: StrSpan("Trattava gli uomini come i cavalli. Convinse l‚Äôauriga ad ucciderle il padre. Fece uccidere da P√©lope l‚Äôauriga. Mise al mondo i fratelli omicidi. Diede il via a un torrente di sangue. Non fugg√≠ dalle case, questo s√≠." 7949..8171) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8173..8174)), span: StrSpan("</p>" 8171..8175) }
token: Text { text: StrSpan("\n\n" 8175..8177) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8178..8179), span: StrSpan("<p" 8177..8179) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8180..8185), value: StrSpan("testo_personaggio testo_maiuscoletto" 8187..8223), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8180..8224) }
token: ElementEnd { end: Open, span: StrSpan(">" 8224..8225) }
token: Text { text: StrSpan("Polideute." 8225..8235) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8237..8238)), span: StrSpan("</p>" 8235..8239) }
token: Text { text: StrSpan("\n" 8239..8240) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8241..8242), span: StrSpan("<p" 8240..8242) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8243..8248), value: StrSpan("testo_dialogo" 8250..8263), span: StrSpan("class=\"testo_dialogo\"" 8243..8264) }
token: ElementEnd { end: Open, span: StrSpan(">" 8264..8265) }
token: Text { text: StrSpan("Ma non dicevi che la colpa fu di P√©lope?" 8265..8306) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8308..8309)), span: StrSpan("</p>" 8306..8310) }
token: Text { text: StrSpan("\n\n" 8310..8312) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8313..8314), span: StrSpan("<p" 8312..8314) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8315..8320), value: StrSpan("testo_personaggio testo_maiuscoletto" 8322..8358), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8315..8359) }
token: ElementEnd { end: Open, span: StrSpan(">" 8359..8360) }
token: Text { text: StrSpan("Castore." 8360..8368) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8370..8371)), span: StrSpan("</p>" 8368..8372) }
token: Text { text: StrSpan("\n" 8372..8373) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8374..8375), span: StrSpan("<p" 8373..8375) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8376..8381), value: StrSpan("testo_dialogo" 8383..8396), span: StrSpan("class=\"testo_dialogo\"" 8376..8397) }
token: ElementEnd { end: Open, span: StrSpan(">" 8397..8398) }
token: Text { text: StrSpan("Dicevo che a P√©lope e ai suoi sono piaciute donne simili. Ch‚Äôeran fatte per loro." 8398..8482) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8484..8485)), span: StrSpan("</p>" 8482..8486) }
token: Text { text: StrSpan("\n\n" 8486..8488) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8489..8490), span: StrSpan("<p" 8488..8490) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8491..8496), value: StrSpan("testo_personaggio testo_maiuscoletto" 8498..8534), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8491..8535) }
token: ElementEnd { end: Open, span: StrSpan(">" 8535..8536) }
token: Text { text: StrSpan("Polideute." 8536..8546) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8548..8549)), span: StrSpan("</p>" 8546..8550) }
token: Text { text: StrSpan("\n" 8550..8551) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8552..8553), span: StrSpan("<p" 8551..8553) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8554..8559), value: StrSpan("testo_dialogo" 8561..8574), span: StrSpan("class=\"testo_dialogo\"" 8554..8575) }
token: ElementEnd { end: Open, span: StrSpan(">" 8575..8576) }
token: Text { text: StrSpan("Elena non uccide, e non fa uccidere." 8576..8612) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8614..8615)), span: StrSpan("</p>" 8612..8616) }
token: Text { text: StrSpan("\n\n" 8616..8618) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8619..8620), span: StrSpan("<p" 8618..8620) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8621..8626), value: StrSpan("testo_personaggio testo_maiuscoletto" 8628..8664), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8621..8665) }
token: ElementEnd { end: Open, span: StrSpan(">" 8665..8666) }
token: Text { text: StrSpan("Castore." 8666..8674) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8676..8677)), span: StrSpan("</p>" 8674..8678) }
token: Text { text: StrSpan("\n" 8678..8679) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8680..8681), span: StrSpan("<p" 8679..8681) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8682..8687), value: StrSpan("testo_dialogo" 8689..8702), span: StrSpan("class=\"testo_dialogo\"" 8682..8703) }
token: ElementEnd { end: Open, span: StrSpan(">" 8703..8704) }
token: Text { text: StrSpan("Ne sei certo, fratello? Ric√≤rdati quando l‚Äôabbiamo ritolta a Teseo ‚Äì tre cavalli che correvano il bosco. Se non ci uccidemmo, fu perch√© come a ragazzi ci parve quasi di giocare. E, adesso, tu stesso ti chiedi quanto sangue verseranno gli Atridi." 8704..8955) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8957..8958)), span: StrSpan("</p>" 8955..8959) }
token: Text { text: StrSpan("\n\n" 8959..8961) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8962..8963), span: StrSpan("<p" 8961..8963) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8964..8969), value: StrSpan("testo_personaggio testo_maiuscoletto" 8971..9007), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8964..9008) }
token: ElementEnd { end: Open, span: StrSpan(">" 9008..9009) }
token: Text { text: StrSpan("Polideute." 9009..9019) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9021..9022)), span: StrSpan("</p>" 9019..9023) }
token: Text { text: StrSpan("\n" 9023..9024) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9025..9026), span: StrSpan("<p" 9024..9026) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9027..9032), value: StrSpan("testo_dialogo" 9034..9047), span: StrSpan("class=\"testo_dialogo\"" 9027..9048) }
token: ElementEnd { end: Open, span: StrSpan(">" 9048..9049) }
token: Text { text: StrSpan("Ma lei non istiga nessuno‚Ä¶" 9049..9077) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9079..9080)), span: StrSpan("</p>" 9077..9081) }
token: Text { text: StrSpan("\n\n" 9081..9083) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9084..9085), span: StrSpan("<p" 9083..9085) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9086..9091), value: StrSpan("testo_personaggio testo_maiuscoletto" 9093..9129), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9086..9130) }
token: ElementEnd { end: Open, span: StrSpan(">" 9130..9131) }
token: Text { text: StrSpan("Castore." 9131..9139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9141..9142)), span: StrSpan("</p>" 9139..9143) }
token: Text { text: StrSpan("\n" 9143..9144) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9145..9146), span: StrSpan("<p" 9144..9146) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9147..9152), value: StrSpan("testo_dialogo" 9154..9167), span: StrSpan("class=\"testo_dialogo\"" 9147..9168) }
token: ElementEnd { end: Open, span: StrSpan(">" 9168..9169) }
token: Text { text: StrSpan("Credi tu che Ippodamia istigasse l‚Äôauriga? Lei sorrise al suo servo e gli disse che il padre la voleva per s√©. E non disse nemmeno che a lei dispiaceva‚Ä¶ Per uccidere basta uno sguardo. Poi quando M√≠rtilo si vide giocato dal figlio di Tantalo e volle gridare, bast√≤ che Ippodamia dicesse al marito: ¬´" 9169..9476) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 9477..9478), span: StrSpan("<q" 9476..9478) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9479..9484), value: StrSpan("testo_no_virgolette" 9486..9505), span: StrSpan("class=\"testo_no_virgolette\"" 9479..9506) }
token: ElementEnd { end: Open, span: StrSpan(">" 9506..9507) }
token: Text { text: StrSpan("Lui sa ogni cosa di Enom√†o. Stacci attento" 9507..9550) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 9552..9553)), span: StrSpan("</q>" 9550..9554) }
token: Text { text: StrSpan("¬ª. I Pelopidi godono di parole simili." 9554..9593) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9595..9596)), span: StrSpan("</p>" 9593..9597) }
token: Text { text: StrSpan("\n\n" 9597..9599) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9600..9601), span: StrSpan("<p" 9599..9601) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9602..9607), value: StrSpan("testo_personaggio testo_maiuscoletto" 9609..9645), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9602..9646) }
token: ElementEnd { end: Open, span: StrSpan(">" 9646..9647) }
token: Text { text: StrSpan("Polideute." 9647..9657) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9659..9660)), span: StrSpan("</p>" 9657..9661) }
token: Text { text: StrSpan("\n" 9661..9662) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9663..9664), span: StrSpan("<p" 9662..9664) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9665..9670), value: StrSpan("testo_dialogo" 9672..9685), span: StrSpan("class=\"testo_dialogo\"" 9665..9686) }
token: ElementEnd { end: Open, span: StrSpan(">" 9686..9687) }
token: Text { text: StrSpan("Tutte le donne dunque uccidono?" 9687..9718) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9720..9721)), span: StrSpan("</p>" 9718..9722) }
token: Text { text: StrSpan("\n\n" 9722..9724) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9725..9726), span: StrSpan("<p" 9724..9726) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9727..9732), value: StrSpan("testo_personaggio testo_maiuscoletto" 9734..9770), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9727..9771) }
token: ElementEnd { end: Open, span: StrSpan(">" 9771..9772) }
token: Text { text: StrSpan("Castore." 9772..9780) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9782..9783)), span: StrSpan("</p>" 9780..9784) }
token: Text { text: StrSpan("\n" 9784..9785) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9786..9787), span: StrSpan("<p" 9785..9787) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9788..9793), value: StrSpan("testo_dialogo" 9795..9808), span: StrSpan("class=\"testo_dialogo\"" 9788..9809) }
token: ElementEnd { end: Open, span: StrSpan(">" 9809..9810) }
token: Text { text: StrSpan("Non tutte. Ce ne sono che chinano il capo, e la vita asservisce. Ma la rocca scatena anche queste. I Pelopidi uccidono e vengono uccisi. Hanno bisogno di frustare o esser frustati." 9810..9990) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9992..9993)), span: StrSpan("</p>" 9990..9994) }
token: Text { text: StrSpan("\n\n" 9994..9996) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9997..9998), span: StrSpan("<p" 9996..9998) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9999..10004), value: StrSpan("testo_personaggio testo_maiuscoletto" 10006..10042), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9999..10043) }
token: ElementEnd { end: Open, span: StrSpan(">" 10043..10044) }
token: Text { text: StrSpan("Polideute." 10044..10054) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10056..10057)), span: StrSpan("</p>" 10054..10058) }
token: Text { text: StrSpan("\n" 10058..10059) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10060..10061), span: StrSpan("<p" 10059..10061) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10062..10067), value: StrSpan("testo_dialogo" 10069..10082), span: StrSpan("class=\"testo_dialogo\"" 10062..10083) }
token: ElementEnd { end: Open, span: StrSpan(">" 10083..10084) }
token: Text { text: StrSpan("Nostra sorella si accontenta di fuggire." 10084..10124) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10126..10127)), span: StrSpan("</p>" 10124..10128) }
token: Text { text: StrSpan("\n\n" 10128..10130) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10131..10132), span: StrSpan("<p" 10130..10132) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10133..10138), value: StrSpan("testo_personaggio testo_maiuscoletto" 10140..10176), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10133..10177) }
token: ElementEnd { end: Open, span: StrSpan(">" 10177..10178) }
token: Text { text: StrSpan("Castore." 10178..10186) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10188..10189)), span: StrSpan("</p>" 10186..10190) }
token: Text { text: StrSpan("\n" 10190..10191) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10192..10193), span: StrSpan("<p" 10191..10193) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10194..10199), value: StrSpan("testo_dialogo" 10201..10214), span: StrSpan("class=\"testo_dialogo\"" 10194..10215) }
token: ElementEnd { end: Open, span: StrSpan(">" 10215..10216) }
token: Text { text: StrSpan("Tu lo credi, fratello? Ricorda Aer√≤pe, la moglie di Atreo‚Ä¶" 10216..10277) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10279..10280)), span: StrSpan("</p>" 10277..10281) }
token: Text { text: StrSpan("\n\n" 10281..10283) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10284..10285), span: StrSpan("<p" 10283..10285) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10286..10291), value: StrSpan("testo_personaggio testo_maiuscoletto" 10293..10329), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10286..10330) }
token: ElementEnd { end: Open, span: StrSpan(">" 10330..10331) }
token: Text { text: StrSpan("Polideute." 10331..10341) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10343..10344)), span: StrSpan("</p>" 10341..10345) }
token: Text { text: StrSpan("\n" 10345..10346) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10347..10348), span: StrSpan("<p" 10346..10348) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10349..10354), value: StrSpan("testo_dialogo" 10356..10369), span: StrSpan("class=\"testo_dialogo\"" 10349..10370) }
token: ElementEnd { end: Open, span: StrSpan(">" 10370..10371) }
token: Text { text: StrSpan("Ma Aer√≤pe fu uccisa nel mare." 10371..10401) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10403..10404)), span: StrSpan("</p>" 10401..10405) }
token: Text { text: StrSpan("\n\n" 10405..10407) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10408..10409), span: StrSpan("<p" 10407..10409) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10410..10415), value: StrSpan("testo_personaggio testo_maiuscoletto" 10417..10453), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10410..10454) }
token: ElementEnd { end: Open, span: StrSpan(">" 10454..10455) }
token: Text { text: StrSpan("Castore." 10455..10463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10465..10466)), span: StrSpan("</p>" 10463..10467) }
token: Text { text: StrSpan("\n" 10467..10468) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10469..10470), span: StrSpan("<p" 10468..10470) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10471..10476), value: StrSpan("testo_dialogo" 10478..10491), span: StrSpan("class=\"testo_dialogo\"" 10471..10492) }
token: ElementEnd { end: Open, span: StrSpan(">" 10492..10493) }
token: Text { text: StrSpan("Non senza aver prima istigato l‚Äôamante a rubare i tesori. Ecco una donna che la rocca rese folle. Una donna che avrebbe potuto passare la vita in tranquilla lussuria, ingrassando anche lei con l‚Äôamante. Ma l‚Äôamante era Tieste, e il marito era Atreo. Se l‚Äôerano scelta. Non la lasciarono salvarsi. La scatenarono anche lei. I Pelopidi han sete di furia." 10493..10853) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10855..10856)), span: StrSpan("</p>" 10853..10857) }
token: Text { text: StrSpan("\n\n" 10857..10859) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10860..10861), span: StrSpan("<p" 10859..10861) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10862..10867), value: StrSpan("testo_personaggio testo_maiuscoletto" 10869..10905), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10862..10906) }
token: ElementEnd { end: Open, span: StrSpan(">" 10906..10907) }
token: Text { text: StrSpan("Polideute." 10907..10917) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10919..10920)), span: StrSpan("</p>" 10917..10921) }
token: Text { text: StrSpan("\n" 10921..10922) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10923..10924), span: StrSpan("<p" 10922..10924) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10925..10930), value: StrSpan("testo_dialogo" 10932..10945), span: StrSpan("class=\"testo_dialogo\"" 10925..10946) }
token: ElementEnd { end: Open, span: StrSpan(">" 10946..10947) }
token: Text { text: StrSpan("Vuoi dire che nostra sorella l‚Äôuccideranno come adultera? che √® anche lei lussuriosa?" 10947..11035) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11037..11038)), span: StrSpan("</p>" 11035..11039) }
token: Text { text: StrSpan("\n\n" 11039..11041) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11042..11043), span: StrSpan("<p" 11041..11043) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11044..11049), value: StrSpan("testo_personaggio testo_maiuscoletto" 11051..11087), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11044..11088) }
token: ElementEnd { end: Open, span: StrSpan(">" 11088..11089) }
token: Text { text: StrSpan("Castore." 11089..11097) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11099..11100)), span: StrSpan("</p>" 11097..11101) }
token: Text { text: StrSpan("\n" 11101..11102) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11103..11104), span: StrSpan("<p" 11102..11104) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11105..11110), value: StrSpan("testo_dialogo" 11112..11125), span: StrSpan("class=\"testo_dialogo\"" 11105..11126) }
token: ElementEnd { end: Open, span: StrSpan(">" 11126..11127) }
token: Text { text: StrSpan("Lo fosse, Polideute, lo fosse. Ma non √® lussurioso chi vuole. Non chi sposa un Atride. Non capisci, fratello, che costoro hanno posto la loro lussuria nell‚Äôabbraccio violento, nello schiaffo e nel sangue? Di una donna che √® docile e vile non sanno che farsene. Hanno bisogno d‚Äôincontrare occhi freddi e omicidi, occhi che non s‚Äôabbassino. Come le buche feritoie. Come li ebbe Ippodamia." 11127..11521) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11523..11524)), span: StrSpan("</p>" 11521..11525) }
token: Text { text: StrSpan("\n\n" 11525..11527) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11528..11529), span: StrSpan("<p" 11527..11529) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11530..11535), value: StrSpan("testo_personaggio testo_maiuscoletto" 11537..11573), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11530..11574) }
token: ElementEnd { end: Open, span: StrSpan(">" 11574..11575) }
token: Text { text: StrSpan("Polideute." 11575..11585) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11587..11588)), span: StrSpan("</p>" 11585..11589) }
token: Text { text: StrSpan("\n" 11589..11590) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11591..11592), span: StrSpan("<p" 11590..11592) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11593..11598), value: StrSpan("testo_dialogo" 11600..11613), span: StrSpan("class=\"testo_dialogo\"" 11593..11614) }
token: ElementEnd { end: Open, span: StrSpan(">" 11614..11615) }
token: Text { text: StrSpan("Nostra sorella ha questo sguardo‚Ä¶" 11615..11650) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11652..11653)), span: StrSpan("</p>" 11650..11654) }
token: Text { text: StrSpan("\n\n" 11654..11656) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11657..11658), span: StrSpan("<p" 11656..11658) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11659..11664), value: StrSpan("testo_personaggio testo_maiuscoletto" 11666..11702), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11659..11703) }
token: ElementEnd { end: Open, span: StrSpan(">" 11703..11704) }
token: Text { text: StrSpan("Castore." 11704..11712) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11714..11715)), span: StrSpan("</p>" 11712..11716) }
token: Text { text: StrSpan("\n" 11716..11717) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11718..11719), span: StrSpan("<p" 11717..11719) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11720..11725), value: StrSpan("testo_dialogo" 11727..11740), span: StrSpan("class=\"testo_dialogo\"" 11720..11741) }
token: ElementEnd { end: Open, span: StrSpan(">" 11741..11742) }
token: Text { text: StrSpan("Hanno bisogno della vergine crudele. Di quella che passa sui monti. Ogni donna che sposano √® questo, per loro. Le imbandivano i figli, le scannavano figlie‚Ä¶" 11742..11901) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11903..11904)), span: StrSpan("</p>" 11901..11905) }
token: Text { text: StrSpan("\n\n" 11905..11907) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11908..11909), span: StrSpan("<p" 11907..11909) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11910..11915), value: StrSpan("testo_personaggio testo_maiuscoletto" 11917..11953), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11910..11954) }
token: ElementEnd { end: Open, span: StrSpan(">" 11954..11955) }
token: Text { text: StrSpan("Polideute." 11955..11965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11967..11968)), span: StrSpan("</p>" 11965..11969) }
token: Text { text: StrSpan("\n" 11969..11970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11971..11972), span: StrSpan("<p" 11970..11972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11973..11978), value: StrSpan("testo_dialogo" 11980..11993), span: StrSpan("class=\"testo_dialogo\"" 11973..11994) }
token: ElementEnd { end: Open, span: StrSpan(">" 11994..11995) }
token: Text { text: StrSpan("Sono cose passate." 11995..12013) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12015..12016)), span: StrSpan("</p>" 12013..12017) }
token: Text { text: StrSpan("\n\n" 12017..12019) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12020..12021), span: StrSpan("<p" 12019..12021) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12022..12027), value: StrSpan("testo_personaggio testo_maiuscoletto" 12029..12065), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12022..12066) }
token: ElementEnd { end: Open, span: StrSpan(">" 12066..12067) }
token: Text { text: StrSpan("Castore." 12067..12075) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12077..12078)), span: StrSpan("</p>" 12075..12079) }
token: Text { text: StrSpan("\n" 12079..12080) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12081..12082), span: StrSpan("<p" 12080..12082) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12083..12088), value: StrSpan("testo_dialogo" 12090..12103), span: StrSpan("class=\"testo_dialogo\"" 12083..12104) }
token: ElementEnd { end: Open, span: StrSpan(">" 12104..12105) }
token: Text { text: StrSpan("Le faranno ancora, Polideute." 12105..12134) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12136..12137)), span: StrSpan("</p>" 12134..12138) }
token: Text { text: StrSpan("\n" 12138..12139) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 12141..12145)), span: StrSpan("</body>" 12139..12146) }
token: Text { text: StrSpan("\n" 12146..12147) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 12149..12153)), span: StrSpan("</html>" 12147..12154) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Gli Argonauti" 340..353) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 355..357)), span: StrSpan("</h1>" 353..358) }
token: Text { text: StrSpan("\n\n" 358..360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 361..362), span: StrSpan("<p" 360..362) }
token: ElementEnd { end: Open, span: StrSpan(">" 362..363) }
token: Text { text: StrSpan("Il tempio sull‚ÄôAcrocorinto, officiato da Ierodule, ci √® ricordato anche da Pindaro. Che i giovani uccisori di mostri ‚Äì compreso Teseo di Atene ‚Äì abbiano tutti avuto guai da donne, si potrebbe supporlo se gi√† la tradizione non lo suggerisse concorde. Di una delle pi√∫ atroci, Medea ‚Äì maga e gelosa e infanticida ‚Äì ci parla a lungo e con calore Euripide in una cara tragedia." 363..749) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 751..752)), span: StrSpan("</p>" 749..753) }
token: Text { text: StrSpan("\n\n" 753..755) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 756..757), span: StrSpan("<p" 755..757) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 758..763), value: StrSpan("testo_indicazioni_scena" 765..788), span: StrSpan("class=\"testo_indicazioni_scena\"" 758..789) }
token: ElementEnd { end: Open, span: StrSpan(">" 789..790) }
token: Text { text: StrSpan("(parlano Iasone e M√©lita)" 790..816) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 818..819)), span: StrSpan("</p>" 816..820) }
token: Text { text: StrSpan("\n\n\n" 820..823) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 824..825), span: StrSpan("<p" 823..825) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 826..831), value: StrSpan("testo_personaggio testo_maiuscoletto" 833..869), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 826..870) }
token: ElementEnd { end: Open, span: StrSpan(">" 870..871) }
token: Text { text: StrSpan("Iasone." 871..878) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 880..881)), span: StrSpan("</p>" 878..882) }
token: Text { text: StrSpan("\n" 882..883) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 884..885), span: StrSpan("<p" 883..885) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 886..891), value: StrSpan("testo_dialogo" 893..906), span: StrSpan("class=\"testo_dialogo\"" 886..907) }
token: ElementEnd { end: Open, span: StrSpan(">" 907..908) }
token: Text { text: StrSpan("Spalanca pure la cortina, M√©lita; sento la brezza che la gonfia. In un mattino come questo anche Iasone vuol vedere il cielo. Dimmi il mare com‚Äô√®; dimmi che accade sull‚Äôacqua del porto." 908..1099) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1101..1102)), span: StrSpan("</p>" 1099..1103) }
token: Text { text: StrSpan("\n\n" 1103..1105) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1106..1107), span: StrSpan("<p" 1105..1107) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1108..1113), value: StrSpan("testo_personaggio testo_maiuscoletto" 1115..1151), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1108..1152) }
token: ElementEnd { end: Open, span: StrSpan(">" 1152..1153) }
token: Text { text: StrSpan("M√©lita." 1153..1161) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1163..1164)), span: StrSpan("</p>" 1161..1165) }
token: Text { text: StrSpan("\n" 1165..1166) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1167..1168), span: StrSpan("<p" 1166..1168) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1169..1174), value: StrSpan("testo_dialogo" 1176..1189), span: StrSpan("class=\"testo_dialogo\"" 1169..1190) }
token: ElementEnd { end: Open, span: StrSpan(">" 1190..1191) }
token: Text { text: StrSpan("O re Iasone, com‚Äô√® bello di quass√∫. Le banchine sono fitte di gente: una nave s‚Äôallontana in mezzo alle barche. √à cos√≠ limpido che si riflette capovolta. Tu vedessi le bandiere e le corone; quanta gente. Stanno perfino arrampicati sulle statue. Ho il sole negli occhi." 1191..1467) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1469..1470)), span: StrSpan("</p>" 1467..1471) }
token: Text { text: StrSpan("\n\n" 1471..1473) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1474..1475), span: StrSpan("<p" 1473..1475) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1476..1481), value: StrSpan("testo_personaggio testo_maiuscoletto" 1483..1519), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1476..1520) }
token: ElementEnd { end: Open, span: StrSpan(">" 1520..1521) }
token: Text { text: StrSpan("Iasone." 1521..1528) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1530..1531)), span: StrSpan("</p>" 1528..1532) }
token: Text { text: StrSpan("\n" 1532..1533) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1534..1535), span: StrSpan("<p" 1533..1535) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1536..1541), value: StrSpan("testo_dialogo" 1543..1556), span: StrSpan("class=\"testo_dialogo\"" 1536..1557) }
token: ElementEnd { end: Open, span: StrSpan(">" 1557..1558) }
token: Text { text: StrSpan("Saran venute anche le tue compagne, a salutarli. Le vedi, M√©lita?" 1558..1624) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1626..1627)), span: StrSpan("</p>" 1624..1628) }
token: Text { text: StrSpan("\n\n" 1628..1630) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1631..1632), span: StrSpan("<p" 1630..1632) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1633..1638), value: StrSpan("testo_personaggio testo_maiuscoletto" 1640..1676), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1633..1677) }
token: ElementEnd { end: Open, span: StrSpan(">" 1677..1678) }
token: Text { text: StrSpan("M√©lita." 1678..1686) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1688..1689)), span: StrSpan("</p>" 1686..1690) }
token: Text { text: StrSpan("\n" 1690..1691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1692..1693), span: StrSpan("<p" 1691..1693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1694..1699), value: StrSpan("testo_dialogo" 1701..1714), span: StrSpan("class=\"testo_dialogo\"" 1694..1715) }
token: ElementEnd { end: Open, span: StrSpan(">" 1715..1716) }
token: Text { text: StrSpan("Non so, vedo tanti. E i marinai che ci salutano, piccini, attaccati alle funi." 1716..1794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1796..1797)), span: StrSpan("</p>" 1794..1798) }
token: Text { text: StrSpan("\n\n" 1798..1800) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1801..1802), span: StrSpan("<p" 1800..1802) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1803..1808), value: StrSpan("testo_personaggio testo_maiuscoletto" 1810..1846), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1803..1847) }
token: ElementEnd { end: Open, span: StrSpan(">" 1847..1848) }
token: Text { text: StrSpan("Iasone." 1848..1855) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1857..1858)), span: StrSpan("</p>" 1855..1859) }
token: Text { text: StrSpan("\n" 1859..1860) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1861..1862), span: StrSpan("<p" 1860..1862) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1863..1868), value: StrSpan("testo_dialogo" 1870..1883), span: StrSpan("class=\"testo_dialogo\"" 1863..1884) }
token: ElementEnd { end: Open, span: StrSpan(">" 1884..1885) }
token: Text { text: StrSpan("Salutali, M√©lita, dev‚Äôessere la nave di Cipro. Passeranno dalle tue isole. E con la fama di Corinto e del suo tempio, parleranno anche di te." 1885..2029) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2031..2032)), span: StrSpan("</p>" 2029..2033) }
token: Text { text: StrSpan("\n\n" 2033..2035) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2036..2037), span: StrSpan("<p" 2035..2037) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2038..2043), value: StrSpan("testo_personaggio testo_maiuscoletto" 2045..2081), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2038..2082) }
token: ElementEnd { end: Open, span: StrSpan(">" 2082..2083) }
token: Text { text: StrSpan("M√©lita." 2083..2091) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2093..2094)), span: StrSpan("</p>" 2091..2095) }
token: Text { text: StrSpan("\n" 2095..2096) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2097..2098), span: StrSpan("<p" 2096..2098) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2099..2104), value: StrSpan("testo_dialogo" 2106..2119), span: StrSpan("class=\"testo_dialogo\"" 2099..2120) }
token: ElementEnd { end: Open, span: StrSpan(">" 2120..2121) }
token: Text { text: StrSpan("Che vuoi che dicano di me, signore? Chi vuoi che nelle isole si ricordi di me?" 2121..2199) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2201..2202)), span: StrSpan("</p>" 2199..2203) }
token: Text { text: StrSpan("\n\n" 2203..2205) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2206..2207), span: StrSpan("<p" 2205..2207) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2208..2213), value: StrSpan("testo_personaggio testo_maiuscoletto" 2215..2251), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2208..2252) }
token: ElementEnd { end: Open, span: StrSpan(">" 2252..2253) }
token: Text { text: StrSpan("Iasone." 2253..2260) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2262..2263)), span: StrSpan("</p>" 2260..2264) }
token: Text { text: StrSpan("\n" 2264..2265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2266..2267), span: StrSpan("<p" 2265..2267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2268..2273), value: StrSpan("testo_dialogo" 2275..2288), span: StrSpan("class=\"testo_dialogo\"" 2268..2289) }
token: ElementEnd { end: Open, span: StrSpan(">" 2289..2290) }
token: Text { text: StrSpan("I giovani hanno sempre chi li ricorda. Si ripensa volentieri a chi √® giovane. E gli d√®i, non sono giovani? Per questo tutti li ricordiamo e li invidiamo." 2290..2445) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2447..2448)), span: StrSpan("</p>" 2445..2449) }
token: Text { text: StrSpan("\n\n" 2449..2451) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2452..2453), span: StrSpan("<p" 2451..2453) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2454..2459), value: StrSpan("testo_personaggio testo_maiuscoletto" 2461..2497), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2454..2498) }
token: ElementEnd { end: Open, span: StrSpan(">" 2498..2499) }
token: Text { text: StrSpan("M√©lita." 2499..2507) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2509..2510)), span: StrSpan("</p>" 2507..2511) }
token: Text { text: StrSpan("\n" 2511..2512) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2513..2514), span: StrSpan("<p" 2512..2514) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2515..2520), value: StrSpan("testo_dialogo" 2522..2535), span: StrSpan("class=\"testo_dialogo\"" 2515..2536) }
token: ElementEnd { end: Open, span: StrSpan(">" 2536..2537) }
token: Text { text: StrSpan("Li serviamo, re Iasone. E anch‚Äôio servo la dea." 2537..2586) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2588..2589)), span: StrSpan("</p>" 2586..2590) }
token: Text { text: StrSpan("\n\n" 2590..2592) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2593..2594), span: StrSpan("<p" 2592..2594) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2595..2600), value: StrSpan("testo_personaggio testo_maiuscoletto" 2602..2638), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2595..2639) }
token: ElementEnd { end: Open, span: StrSpan(">" 2639..2640) }
token: Text { text: StrSpan("Iasone." 2640..2647) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2649..2650)), span: StrSpan("</p>" 2647..2651) }
token: Text { text: StrSpan("\n" 2651..2652) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2653..2654), span: StrSpan("<p" 2652..2654) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2655..2660), value: StrSpan("testo_dialogo" 2662..2675), span: StrSpan("class=\"testo_dialogo\"" 2655..2676) }
token: ElementEnd { end: Open, span: StrSpan(">" 2676..2677) }
token: Text { text: StrSpan("Ci sar√† pure qualcuno, M√©lita, un ospite, un marinaio, che sale al tempio per giacersi con te, non con altre. Qualcuno che parte del dono lo lascia a te sola. Io sono vecchio, M√©lita, e non posso salire lass√∫, ma un tempo in Iolco ‚Äì tu non eri ancor nata ‚Äì avrei salito altro che un monte per trovarmi con te." 2677..2994) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2996..2997)), span: StrSpan("</p>" 2994..2998) }
token: Text { text: StrSpan("\n\n" 2998..3000) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3001..3002), span: StrSpan("<p" 3000..3002) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3003..3008), value: StrSpan("testo_personaggio testo_maiuscoletto" 3010..3046), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3003..3047) }
token: ElementEnd { end: Open, span: StrSpan(">" 3047..3048) }
token: Text { text: StrSpan("M√©lita." 3048..3056) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3058..3059)), span: StrSpan("</p>" 3056..3060) }
token: Text { text: StrSpan("\n" 3060..3061) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3062..3063), span: StrSpan("<p" 3061..3063) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3064..3069), value: StrSpan("testo_dialogo" 3071..3084), span: StrSpan("class=\"testo_dialogo\"" 3064..3085) }
token: ElementEnd { end: Open, span: StrSpan(">" 3085..3086) }
token: Text { text: StrSpan("Tu comandi e noialtre ubbidiamo‚Ä¶ Oh, la nave apre le vele. √à tutta bianca. Vieni a vederla, re Iasone." 3086..3191) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3193..3194)), span: StrSpan("</p>" 3191..3195) }
token: Text { text: StrSpan("\n\n" 3195..3197) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3198..3199), span: StrSpan("<p" 3197..3199) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3200..3205), value: StrSpan("testo_personaggio testo_maiuscoletto" 3207..3243), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3200..3244) }
token: ElementEnd { end: Open, span: StrSpan(">" 3244..3245) }
token: Text { text: StrSpan("Iasone." 3245..3252) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3254..3255)), span: StrSpan("</p>" 3252..3256) }
token: Text { text: StrSpan("\n" 3256..3257) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3258..3259), span: StrSpan("<p" 3257..3259) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3260..3265), value: StrSpan("testo_dialogo" 3267..3280), span: StrSpan("class=\"testo_dialogo\"" 3260..3281) }
token: ElementEnd { end: Open, span: StrSpan(">" 3281..3282) }
token: Text { text: StrSpan("Resta tu alla finestra, M√©lita. Io ti guardo mentre guardi la nave. √à come se vi vedessi prendere il vento insieme. Io tremerei nella mattina. Sono vecchio. Vedrei troppe cose se guardassi laggi√∫." 3282..3481) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3483..3484)), span: StrSpan("</p>" 3481..3485) }
token: Text { text: StrSpan("\n\n" 3485..3487) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3488..3489), span: StrSpan("<p" 3487..3489) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3490..3495), value: StrSpan("testo_personaggio testo_maiuscoletto" 3497..3533), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3490..3534) }
token: ElementEnd { end: Open, span: StrSpan(">" 3534..3535) }
token: Text { text: StrSpan("M√©lita." 3535..3543) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3545..3546)), span: StrSpan("</p>" 3543..3547) }
token: Text { text: StrSpan("\n" 3547..3548) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3549..3550), span: StrSpan("<p" 3548..3550) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3551..3556), value: StrSpan("testo_dialogo" 3558..3571), span: StrSpan("class=\"testo_dialogo\"" 3551..3572) }
token: ElementEnd { end: Open, span: StrSpan(">" 3572..3573) }
token: Text { text: StrSpan("La nave si piega nel sole. Come vola adesso! pare un colombo." 3573..3634) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3636..3637)), span: StrSpan("</p>" 3634..3638) }
token: Text { text: StrSpan("\n\n" 3638..3640) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3641..3642), span: StrSpan("<p" 3640..3642) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3643..3648), value: StrSpan("testo_personaggio testo_maiuscoletto" 3650..3686), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3643..3687) }
token: ElementEnd { end: Open, span: StrSpan(">" 3687..3688) }
token: Text { text: StrSpan("Iasone." 3688..3695) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3697..3698)), span: StrSpan("</p>" 3695..3699) }
token: Text { text: StrSpan("\n" 3699..3700) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3701..3702), span: StrSpan("<p" 3700..3702) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3703..3708), value: StrSpan("testo_dialogo" 3710..3723), span: StrSpan("class=\"testo_dialogo\"" 3703..3724) }
token: ElementEnd { end: Open, span: StrSpan(">" 3724..3725) }
token: Text { text: StrSpan("E va soltanto fino a Cipro. Da Corinto, dalle isole, ora salpano navi che solcano il mare. C‚Äôera un tempo che questo mare era tutto deserto. Noi per primi l‚Äôabbiamo violato. Tu non eri ancora nata. Quanto sembra lontano." 3725..3949) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3951..3952)), span: StrSpan("</p>" 3949..3953) }
token: Text { text: StrSpan("\n\n" 3953..3955) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3956..3957), span: StrSpan("<p" 3955..3957) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3958..3963), value: StrSpan("testo_personaggio testo_maiuscoletto" 3965..4001), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3958..4002) }
token: ElementEnd { end: Open, span: StrSpan(">" 4002..4003) }
token: Text { text: StrSpan("M√©lita." 4003..4011) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4013..4014)), span: StrSpan("</p>" 4011..4015) }
token: Text { text: StrSpan("\n" 4015..4016) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4017..4018), span: StrSpan("<p" 4016..4018) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4019..4024), value: StrSpan("testo_dialogo" 4026..4039), span: StrSpan("class=\"testo_dialogo\"" 4019..4040) }
token: ElementEnd { end: Open, span: StrSpan(">" 4040..4041) }
token: Text { text: StrSpan("Ma √® credibile, signore, che nessuno avesse osato attraversarlo?" 4041..4106) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4108..4109)), span: StrSpan("</p>" 4106..4110) }
token: Text { text: StrSpan("\n\n" 4110..4112) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4113..4114), span: StrSpan("<p" 4112..4114) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4115..4120), value: StrSpan("testo_personaggio testo_maiuscoletto" 4122..4158), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4115..4159) }
token: ElementEnd { end: Open, span: StrSpan(">" 4159..4160) }
token: Text { text: StrSpan("Iasone." 4160..4167) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4169..4170)), span: StrSpan("</p>" 4167..4171) }
token: Text { text: StrSpan("\n" 4171..4172) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4173..4174), span: StrSpan("<p" 4172..4174) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4175..4180), value: StrSpan("testo_dialogo" 4182..4195), span: StrSpan("class=\"testo_dialogo\"" 4175..4196) }
token: ElementEnd { end: Open, span: StrSpan(">" 4196..4197) }
token: Text { text: StrSpan("C‚Äô√® una verginit√† delle cose, M√©lita, che fa paura pi√∫ del rischio. Pensa all‚Äôorrore delle vette dei monti, pensa all‚Äôeco." 4197..4329) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4331..4332)), span: StrSpan("</p>" 4329..4333) }
token: Text { text: StrSpan("\n\n" 4333..4335) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4336..4337), span: StrSpan("<p" 4335..4337) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4338..4343), value: StrSpan("testo_personaggio testo_maiuscoletto" 4345..4381), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4338..4382) }
token: ElementEnd { end: Open, span: StrSpan(">" 4382..4383) }
token: Text { text: StrSpan("M√©lita." 4383..4391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4393..4394)), span: StrSpan("</p>" 4391..4395) }
token: Text { text: StrSpan("\n" 4395..4396) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4397..4398), span: StrSpan("<p" 4396..4398) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4399..4404), value: StrSpan("testo_dialogo" 4406..4419), span: StrSpan("class=\"testo_dialogo\"" 4399..4420) }
token: ElementEnd { end: Open, span: StrSpan(">" 4420..4421) }
token: Text { text: StrSpan("Non andr√≤ mai sulle montagne. Ma non ci credo che il mare facesse paura a qualcuno." 4421..4505) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4507..4508)), span: StrSpan("</p>" 4505..4509) }
token: Text { text: StrSpan("\n\n" 4509..4511) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4512..4513), span: StrSpan("<p" 4511..4513) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4514..4519), value: StrSpan("testo_personaggio testo_maiuscoletto" 4521..4557), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4514..4558) }
token: ElementEnd { end: Open, span: StrSpan(">" 4558..4559) }
token: Text { text: StrSpan("Iasone." 4559..4566) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4568..4569)), span: StrSpan("</p>" 4566..4570) }
token: Text { text: StrSpan("\n" 4570..4571) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4572..4573), span: StrSpan("<p" 4571..4573) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4574..4579), value: StrSpan("testo_dialogo" 4581..4594), span: StrSpan("class=\"testo_dialogo\"" 4574..4595) }
token: ElementEnd { end: Open, span: StrSpan(">" 4595..4596) }
token: Text { text: StrSpan("Non ce la fece, infatti. Noi partimmo da Iolco una mattina come questa, ed eravamo tutti giovani e avevamo gli d√®i dalla nostra. Era bello varcare, senza pensare all‚Äôindomani. Poi cominciarono i prodigi. Era un mondo pi√∫ giovane, M√©lita, i giorni come chiare mattine, le notti di tenebra spessa ‚Äì dove tutto poteva succedere. Di volta in volta i prodigi erano fonti, erano mostri, erano uomini o rupi. Di noi ne scomparvero, qualcuno mor√≠. Ogni approdo era un lutto. Ogni mattina il mare era pi√∫ bello, pi√∫ vergine. La giornata passava nell‚Äôattesa. Poi vennero piogge, vennero nebbie e schiume nere." 4596..5207) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5209..5210)), span: StrSpan("</p>" 5207..5211) }
token: Text { text: StrSpan("\n\n" 5211..5213) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5214..5215), span: StrSpan("<p" 5213..5215) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5216..5221), value: StrSpan("testo_personaggio testo_maiuscoletto" 5223..5259), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5216..5260) }
token: ElementEnd { end: Open, span: StrSpan(">" 5260..5261) }
token: Text { text: StrSpan("M√©lita." 5261..5269) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5271..5272)), span: StrSpan("</p>" 5269..5273) }
token: Text { text: StrSpan("\n" 5273..5274) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5275..5276), span: StrSpan("<p" 5274..5276) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5277..5282), value: StrSpan("testo_dialogo" 5284..5297), span: StrSpan("class=\"testo_dialogo\"" 5277..5298) }
token: ElementEnd { end: Open, span: StrSpan(">" 5298..5299) }
token: Text { text: StrSpan("Queste cose si sanno." 5299..5320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5322..5323)), span: StrSpan("</p>" 5320..5324) }
token: Text { text: StrSpan("\n\n" 5324..5326) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5327..5328), span: StrSpan("<p" 5326..5328) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5329..5334), value: StrSpan("testo_personaggio testo_maiuscoletto" 5336..5372), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5329..5373) }
token: ElementEnd { end: Open, span: StrSpan(">" 5373..5374) }
token: Text { text: StrSpan("Iasone." 5374..5381) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5383..5384)), span: StrSpan("</p>" 5381..5385) }
token: Text { text: StrSpan("\n" 5385..5386) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5387..5388), span: StrSpan("<p" 5386..5388) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5389..5394), value: StrSpan("testo_dialogo" 5396..5409), span: StrSpan("class=\"testo_dialogo\"" 5389..5410) }
token: ElementEnd { end: Open, span: StrSpan(">" 5410..5411) }
token: Text { text: StrSpan("Non era il mare il rischio. Noi s‚Äôera capito, d‚Äôapprodo in approdo, che quel lungo cammino ci aveva cresciuti. Eravamo pi√∫ forti e staccati da tutto ‚Äì eravamo come d√®i, M√©lita ‚Äì ma appunto questo ci attirava a far cose mortali. Sbarcammo al Fasi, su prati di c√≤lchici. Ah ero giovane allora, e guardavo la sorte." 5411..5735) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5737..5738)), span: StrSpan("</p>" 5735..5739) }
token: Text { text: StrSpan("\n\n" 5739..5741) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5742..5743), span: StrSpan("<p" 5741..5743) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5744..5749), value: StrSpan("testo_personaggio testo_maiuscoletto" 5751..5787), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5744..5788) }
token: ElementEnd { end: Open, span: StrSpan(">" 5788..5789) }
token: Text { text: StrSpan("M√©lita." 5789..5797) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5799..5800)), span: StrSpan("</p>" 5797..5801) }
token: Text { text: StrSpan("\n" 5801..5802) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5803..5804), span: StrSpan("<p" 5802..5804) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5805..5810), value: StrSpan("testo_dialogo" 5812..5825), span: StrSpan("class=\"testo_dialogo\"" 5805..5826) }
token: ElementEnd { end: Open, span: StrSpan(">" 5826..5827) }
token: Text { text: StrSpan("Quando si parla di voialtri, dentro il tempio, si abbassa la voce." 5827..5893) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5895..5896)), span: StrSpan("</p>" 5893..5897) }
token: Text { text: StrSpan("\n\n" 5897..5899) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5900..5901), span: StrSpan("<p" 5899..5901) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5902..5907), value: StrSpan("testo_personaggio testo_maiuscoletto" 5909..5945), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5902..5946) }
token: ElementEnd { end: Open, span: StrSpan(">" 5946..5947) }
token: Text { text: StrSpan("Iasone." 5947..5954) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5956..5957)), span: StrSpan("</p>" 5954..5958) }
token: Text { text: StrSpan("\n" 5958..5959) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5960..5961), span: StrSpan("<p" 5959..5961) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5962..5967), value: StrSpan("testo_dialogo" 5969..5982), span: StrSpan("class=\"testo_dialogo\"" 5962..5983) }
token: ElementEnd { end: Open, span: StrSpan(">" 5983..5984) }
token: Text { text: StrSpan("Qualche volta si ride, lo so, M√©lita. Corinto √® un‚Äôallegra citt√†. E si dice, lo so: ¬´" 5984..6075) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 6076..6077), span: StrSpan("<q" 6075..6077) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6078..6083), value: StrSpan("testo_no_virgolette" 6085..6104), span: StrSpan("class=\"testo_no_virgolette\"" 6078..6105) }
token: ElementEnd { end: Open, span: StrSpan(">" 6105..6106) }
token: Text { text: StrSpan("Quando quel vecchio smetter√† di chiacchierare dei suoi d√®i? Tanto son morti come gli altri" 6106..6198) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 6200..6201)), span: StrSpan("</q>" 6198..6202) }
token: Text { text: StrSpan("¬ª. E Corinto vuol vivere." 6202..6228) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6230..6231)), span: StrSpan("</p>" 6228..6232) }
token: Text { text: StrSpan("\n\n" 6232..6234) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6235..6236), span: StrSpan("<p" 6234..6236) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6237..6242), value: StrSpan("testo_personaggio testo_maiuscoletto" 6244..6280), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6237..6281) }
token: ElementEnd { end: Open, span: StrSpan(">" 6281..6282) }
token: Text { text: StrSpan("M√©lita." 6282..6290) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6292..6293)), span: StrSpan("</p>" 6290..6294) }
token: Text { text: StrSpan("\n" 6294..6295) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6296..6297), span: StrSpan("<p" 6295..6297) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6298..6303), value: StrSpan("testo_dialogo" 6305..6318), span: StrSpan("class=\"testo_dialogo\"" 6298..6319) }
token: ElementEnd { end: Open, span: StrSpan(">" 6319..6320) }
token: Text { text: StrSpan("Noi si parla della maga, re Iasone, di quella donna che qualcuno ha conosciuto. Oh dimmi com‚Äôera." 6320..6419) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6421..6422)), span: StrSpan("</p>" 6419..6423) }
token: Text { text: StrSpan("\n\n" 6423..6425) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6426..6427), span: StrSpan("<p" 6425..6427) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6428..6433), value: StrSpan("testo_personaggio testo_maiuscoletto" 6435..6471), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6428..6472) }
token: ElementEnd { end: Open, span: StrSpan(">" 6472..6473) }
token: Text { text: StrSpan("Iasone." 6473..6480) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6482..6483)), span: StrSpan("</p>" 6480..6484) }
token: Text { text: StrSpan("\n" 6484..6485) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6486..6487), span: StrSpan("<p" 6485..6487) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6488..6493), value: StrSpan("testo_dialogo" 6495..6508), span: StrSpan("class=\"testo_dialogo\"" 6488..6509) }
token: ElementEnd { end: Open, span: StrSpan(">" 6509..6510) }
token: Text { text: StrSpan("Tutti conoscono una maga, M√®lita, tranne a Corinto dove il tempio insegna a ridere. Tutti noialtri, vecchi o morti, conoscemmo una maga." 6510..6647) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6649..6650)), span: StrSpan("</p>" 6647..6651) }
token: Text { text: StrSpan("\n\n" 6651..6653) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6654..6655), span: StrSpan("<p" 6653..6655) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6656..6661), value: StrSpan("testo_personaggio testo_maiuscoletto" 6663..6699), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6656..6700) }
token: ElementEnd { end: Open, span: StrSpan(">" 6700..6701) }
token: Text { text: StrSpan("M√©lita." 6701..6709) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6711..6712)), span: StrSpan("</p>" 6709..6713) }
token: Text { text: StrSpan("\n" 6713..6714) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6715..6716), span: StrSpan("<p" 6714..6716) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6717..6722), value: StrSpan("testo_dialogo" 6724..6737), span: StrSpan("class=\"testo_dialogo\"" 6717..6738) }
token: ElementEnd { end: Open, span: StrSpan(">" 6738..6739) }
token: Text { text: StrSpan("Ma la tua, re Iasone?" 6739..6760) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6762..6763)), span: StrSpan("</p>" 6760..6764) }
token: Text { text: StrSpan("\n\n" 6764..6766) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6767..6768), span: StrSpan("<p" 6766..6768) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6769..6774), value: StrSpan("testo_personaggio testo_maiuscoletto" 6776..6812), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6769..6813) }
token: ElementEnd { end: Open, span: StrSpan(">" 6813..6814) }
token: Text { text: StrSpan("Iasone." 6814..6821) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6823..6824)), span: StrSpan("</p>" 6821..6825) }
token: Text { text: StrSpan("\n" 6825..6826) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6827..6828), span: StrSpan("<p" 6826..6828) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6829..6834), value: StrSpan("testo_dialogo" 6836..6849), span: StrSpan("class=\"testo_dialogo\"" 6829..6850) }
token: ElementEnd { end: Open, span: StrSpan(">" 6850..6851) }
token: Text { text: StrSpan("Violammo il mare, distruggemmo mostri, mettemmo piede sui prati del c√≤lchico ‚Äì una nube d‚Äôoro sfavillava nella selva ‚Äì eppure morimmo ciascuno di un‚Äôarte di maga, ciascuno per l‚Äôincanto o la passione di una maga. La testa di uno di noialtri fin√≠ lacerata e stroncata in un fiume. E qualcuno ora √® vecchio ‚Äì e ti parla ‚Äì che vide i suoi figli sacrificati dalla madre furente." 6851..7242) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7244..7245)), span: StrSpan("</p>" 7242..7246) }
token: Text { text: StrSpan("\n\n" 7246..7248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7249..7250), span: StrSpan("<p" 7248..7250) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7251..7256), value: StrSpan("testo_personaggio testo_maiuscoletto" 7258..7294), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7251..7295) }
token: ElementEnd { end: Open, span: StrSpan(">" 7295..7296) }
token: Text { text: StrSpan("M√©lita." 7296..7304) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7306..7307)), span: StrSpan("</p>" 7304..7308) }
token: Text { text: StrSpan("\n" 7308..7309) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7310..7311), span: StrSpan("<p" 7309..7311) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7312..7317), value: StrSpan("testo_dialogo" 7319..7332), span: StrSpan("class=\"testo_dialogo\"" 7312..7333) }
token: ElementEnd { end: Open, span: StrSpan(">" 7333..7334) }
token: Text { text: StrSpan("Dicono che non √® morta, signore, che i suoi incanti hanno vinto la morte." 7334..7408) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7410..7411)), span: StrSpan("</p>" 7408..7412) }
token: Text { text: StrSpan("\n\n" 7412..7414) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7415..7416), span: StrSpan("<p" 7414..7416) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7417..7422), value: StrSpan("testo_personaggio testo_maiuscoletto" 7424..7460), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7417..7461) }
token: ElementEnd { end: Open, span: StrSpan(">" 7461..7462) }
token: Text { text: StrSpan("Iasone." 7462..7469) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7471..7472)), span: StrSpan("</p>" 7469..7473) }
token: Text { text: StrSpan("\n" 7473..7474) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7475..7476), span: StrSpan("<p" 7474..7476) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7477..7482), value: StrSpan("testo_dialogo" 7484..7497), span: StrSpan("class=\"testo_dialogo\"" 7477..7498) }
token: ElementEnd { end: Open, span: StrSpan(">" 7498..7499) }
token: Text { text: StrSpan("√à il suo destino, e non l‚Äôinvidio. Respirava la morte e la spargeva. Forse √® tornata alle sue case." 7499..7602) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7604..7605)), span: StrSpan("</p>" 7602..7606) }
token: Text { text: StrSpan("\n\n" 7606..7608) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7609..7610), span: StrSpan("<p" 7608..7610) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7611..7616), value: StrSpan("testo_personaggio testo_maiuscoletto" 7618..7654), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7611..7655) }
token: ElementEnd { end: Open, span: StrSpan(">" 7655..7656) }
token: Text { text: StrSpan("M√©lita." 7656..7664) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7666..7667)), span: StrSpan("</p>" 7664..7668) }
token: Text { text: StrSpan("\n" 7668..7669) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7670..7671), span: StrSpan("<p" 7669..7671) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7672..7677), value: StrSpan("testo_dialogo" 7679..7692), span: StrSpan("class=\"testo_dialogo\"" 7672..7693) }
token: ElementEnd { end: Open, span: StrSpan(">" 7693..7694) }
token: Text { text: StrSpan("Ma come ha potuto toccare i suoi figli? Deve aver pianto molto‚Ä¶" 7694..7759) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7761..7762)), span: StrSpan("</p>" 7759..7763) }
token: Text { text: StrSpan("\n\n" 7763..7765) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7766..7767), span: StrSpan("<p" 7765..7767) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7768..7773), value: StrSpan("testo_personaggio testo_maiuscoletto" 7775..7811), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7768..7812) }
token: ElementEnd { end: Open, span: StrSpan(">" 7812..7813) }
token: Text { text: StrSpan("Iasone." 7813..7820) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7822..7823)), span: StrSpan("</p>" 7820..7824) }
token: Text { text: StrSpan("\n" 7824..7825) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7826..7827), span: StrSpan("<p" 7825..7827) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7828..7833), value: StrSpan("testo_dialogo" 7835..7848), span: StrSpan("class=\"testo_dialogo\"" 7828..7849) }
token: ElementEnd { end: Open, span: StrSpan(">" 7849..7850) }
token: Text { text: StrSpan("Non l‚Äôho mai vista piangere. Medea non piangeva. E sorrise soltanto quel giorno quando disse che mi avrebbe seguito." 7850..7968) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7970..7971)), span: StrSpan("</p>" 7968..7972) }
token: Text { text: StrSpan("\n\n" 7972..7974) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7975..7976), span: StrSpan("<p" 7974..7976) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7977..7982), value: StrSpan("testo_personaggio testo_maiuscoletto" 7984..8020), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7977..8021) }
token: ElementEnd { end: Open, span: StrSpan(">" 8021..8022) }
token: Text { text: StrSpan("M√©lita." 8022..8030) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8032..8033)), span: StrSpan("</p>" 8030..8034) }
token: Text { text: StrSpan("\n" 8034..8035) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8036..8037), span: StrSpan("<p" 8035..8037) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8038..8043), value: StrSpan("testo_dialogo" 8045..8058), span: StrSpan("class=\"testo_dialogo\"" 8038..8059) }
token: ElementEnd { end: Open, span: StrSpan(">" 8059..8060) }
token: Text { text: StrSpan("Eppure ti ha seguito, re Iasone, ha lasciato la patria e le case, e accettato la sorte. Fosti crudele come un giovane, anche tu." 8060..8188) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8190..8191)), span: StrSpan("</p>" 8188..8192) }
token: Text { text: StrSpan("\n\n" 8192..8194) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8195..8196), span: StrSpan("<p" 8194..8196) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8197..8202), value: StrSpan("testo_personaggio testo_maiuscoletto" 8204..8240), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8197..8241) }
token: ElementEnd { end: Open, span: StrSpan(">" 8241..8242) }
token: Text { text: StrSpan("Iasone." 8242..8249) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8251..8252)), span: StrSpan("</p>" 8249..8253) }
token: Text { text: StrSpan("\n" 8253..8254) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8255..8256), span: StrSpan("<p" 8254..8256) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8257..8262), value: StrSpan("testo_dialogo" 8264..8277), span: StrSpan("class=\"testo_dialogo\"" 8257..8278) }
token: ElementEnd { end: Open, span: StrSpan(">" 8278..8279) }
token: Text { text: StrSpan("Ero giovane, M√©lita. E a quei tempi nessuno rideva di me. Ma ancora non sapevo che la saggezza √® la vostra, quella del tempio, e chiedevo alla dea le cose impossibili. E cos‚Äôera impossibile per noi, distruttori del drago, signori della nuvola d‚Äôoro? Si fa il male per essere grandi, per essere d√®i." 8279..8584) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8586..8587)), span: StrSpan("</p>" 8584..8588) }
token: Text { text: StrSpan("\n\n" 8588..8590) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8591..8592), span: StrSpan("<p" 8590..8592) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8593..8598), value: StrSpan("testo_personaggio testo_maiuscoletto" 8600..8636), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8593..8637) }
token: ElementEnd { end: Open, span: StrSpan(">" 8637..8638) }
token: Text { text: StrSpan("M√©lita." 8638..8646) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8648..8649)), span: StrSpan("</p>" 8646..8650) }
token: Text { text: StrSpan("\n" 8650..8651) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8652..8653), span: StrSpan("<p" 8651..8653) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8654..8659), value: StrSpan("testo_dialogo" 8661..8674), span: StrSpan("class=\"testo_dialogo\"" 8654..8675) }
token: ElementEnd { end: Open, span: StrSpan(">" 8675..8676) }
token: Text { text: StrSpan("E perch√© vostra vittima √® sempre una donna?" 8676..8721) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8723..8724)), span: StrSpan("</p>" 8721..8725) }
token: Text { text: StrSpan("\n\n" 8725..8727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8728..8729), span: StrSpan("<p" 8727..8729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8730..8735), value: StrSpan("testo_personaggio testo_maiuscoletto" 8737..8773), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8730..8774) }
token: ElementEnd { end: Open, span: StrSpan(">" 8774..8775) }
token: Text { text: StrSpan("Iasone." 8775..8782) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8784..8785)), span: StrSpan("</p>" 8782..8786) }
token: Text { text: StrSpan("\n" 8786..8787) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8788..8789), span: StrSpan("<p" 8787..8789) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8790..8795), value: StrSpan("testo_dialogo" 8797..8810), span: StrSpan("class=\"testo_dialogo\"" 8790..8811) }
token: ElementEnd { end: Open, span: StrSpan(">" 8811..8812) }
token: Text { text: StrSpan("Piccola M√©lita, tu sei del tempio. E non sapete che nel tempio ‚Äì nel vostro ‚Äì l‚Äôuomo sale per essere dio almeno un giorno, almeno un‚Äôora, per giacere con voi come foste la dea? Sempre l‚Äôuomo pretende di giacere con lei ‚Äì poi s‚Äôaccorge che aveva a che fare con carne mortale, con la povera donna che voi siete e che son tutte. E allora s‚Äôinfuria ‚Äì cerca altrove di esser dio." 8812..9205) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9207..9208)), span: StrSpan("</p>" 9205..9209) }
token: Text { text: StrSpan("\n\n" 9209..9211) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9212..9213), span: StrSpan("<p" 9211..9213) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9214..9219), value: StrSpan("testo_personaggio testo_maiuscoletto" 9221..9257), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9214..9258) }
token: ElementEnd { end: Open, span: StrSpan(">" 9258..9259) }
token: Text { text: StrSpan("M√©lita." 9259..9267) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9269..9270)), span: StrSpan("</p>" 9267..9271) }
token: Text { text: StrSpan("\n" 9271..9272) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9273..9274), span: StrSpan("<p" 9272..9274) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9275..9280), value: StrSpan("testo_dialogo" 9282..9295), span: StrSpan("class=\"testo_dialogo\"" 9275..9296) }
token: ElementEnd { end: Open, span: StrSpan(">" 9296..9297) }
token: Text { text: StrSpan("Eppure c‚Äô√® chi si contenta, signore." 9297..9336) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9338..9339)), span: StrSpan("</p>" 9336..9340) }
token: Text { text: StrSpan("\n\n" 9340..9342) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9343..9344), span: StrSpan("<p" 9342..9344) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9345..9350), value: StrSpan("testo_personaggio testo_maiuscoletto" 9352..9388), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9345..9389) }
token: ElementEnd { end: Open, span: StrSpan(">" 9389..9390) }
token: Text { text: StrSpan("Iasone." 9390..9397) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9399..9400)), span: StrSpan("</p>" 9397..9401) }
token: Text { text: StrSpan("\n" 9401..9402) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9403..9404), span: StrSpan("<p" 9402..9404) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9405..9410), value: StrSpan("testo_dialogo" 9412..9425), span: StrSpan("class=\"testo_dialogo\"" 9405..9426) }
token: ElementEnd { end: Open, span: StrSpan(">" 9426..9427) }
token: Text { text: StrSpan("S√≠, chi √® vecchio anzitempo o chi sale da voi. Ma non prima di aver tutto tentato. Non chi ha visto altri giorni. Hai sentito parlare del figlio d‚ÄôEgeo, che discese nell‚ÄôAde a rapir Persef√≤ne ‚Äì il re d‚ÄôAtene che mor√≠ scagliato in mare?" 9427..9674) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9676..9677)), span: StrSpan("</p>" 9674..9678) }
token: Text { text: StrSpan("\n\n" 9678..9680) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9681..9682), span: StrSpan("<p" 9680..9682) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9683..9688), value: StrSpan("testo_personaggio testo_maiuscoletto" 9690..9726), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9683..9727) }
token: ElementEnd { end: Open, span: StrSpan(">" 9727..9728) }
token: Text { text: StrSpan("M√©lita." 9728..9736) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9738..9739)), span: StrSpan("</p>" 9736..9740) }
token: Text { text: StrSpan("\n" 9740..9741) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9742..9743), span: StrSpan("<p" 9741..9743) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9744..9749), value: StrSpan("testo_dialogo" 9751..9764), span: StrSpan("class=\"testo_dialogo\"" 9744..9765) }
token: ElementEnd { end: Open, span: StrSpan(">" 9765..9766) }
token: Text { text: StrSpan("Ne parlano quelli del F√†lero. Fu anche lui navigatore come te." 9766..9829) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9831..9832)), span: StrSpan("</p>" 9829..9833) }
token: Text { text: StrSpan("\n\n" 9833..9835) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9836..9837), span: StrSpan("<p" 9835..9837) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9838..9843), value: StrSpan("testo_personaggio testo_maiuscoletto" 9845..9881), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9838..9882) }
token: ElementEnd { end: Open, span: StrSpan(">" 9882..9883) }
token: Text { text: StrSpan("Iasone." 9883..9890) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9892..9893)), span: StrSpan("</p>" 9890..9894) }
token: Text { text: StrSpan("\n" 9894..9895) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9896..9897), span: StrSpan("<p" 9895..9897) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9898..9903), value: StrSpan("testo_dialogo" 9905..9918), span: StrSpan("class=\"testo_dialogo\"" 9898..9919) }
token: ElementEnd { end: Open, span: StrSpan(">" 9919..9920) }
token: Text { text: StrSpan("Piccola M√©lita, fu quasi un dio. E trov√≤ la sua donna oltremare, una donna che ‚Äì come la maga ‚Äì l‚Äôaiut√≤ nell‚Äôimpresa mortale. L‚Äôabbandon√≤ su un‚Äôisola, un mattino. Poi vinse altre imprese e altri cieli, ed ebbe Antiope, la lunare, un‚Äôamazzone indocile. E poi Fedra, luce del giorno, e anche questa si uccise. E poi Elena, figlia di Leda. E altre ancora. Fin che tent√≤ di conquistare Persef√≤ne dalle fauci dell‚ÄôAde. Una soltanto non ne volle, che fugg√≠ da Corinto ‚Äì l‚Äôassassina dei figli ‚Äì la maga, lo sai." 9920..10453) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10455..10456)), span: StrSpan("</p>" 10453..10457) }
token: Text { text: StrSpan("\n\n" 10457..10459) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10460..10461), span: StrSpan("<p" 10459..10461) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10462..10467), value: StrSpan("testo_personaggio testo_maiuscoletto" 10469..10505), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10462..10506) }
token: ElementEnd { end: Open, span: StrSpan(">" 10506..10507) }
token: Text { text: StrSpan("M√©lita." 10507..10515) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10517..10518)), span: StrSpan("</p>" 10515..10519) }
token: Text { text: StrSpan("\n" 10519..10520) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10521..10522), span: StrSpan("<p" 10520..10522) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10523..10528), value: StrSpan("testo_dialogo" 10530..10543), span: StrSpan("class=\"testo_dialogo\"" 10523..10544) }
token: ElementEnd { end: Open, span: StrSpan(">" 10544..10545) }
token: Text { text: StrSpan("Ma tu, signore, la ricordi. Tu sei pi√∫ buono di quel re. Tu da allora non hai pi√∫ fatto piangere." 10545..10644) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10646..10647)), span: StrSpan("</p>" 10644..10648) }
token: Text { text: StrSpan("\n\n" 10648..10650) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10651..10652), span: StrSpan("<p" 10650..10652) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10653..10658), value: StrSpan("testo_personaggio testo_maiuscoletto" 10660..10696), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10653..10697) }
token: ElementEnd { end: Open, span: StrSpan(">" 10697..10698) }
token: Text { text: StrSpan("Iasone." 10698..10705) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10707..10708)), span: StrSpan("</p>" 10705..10709) }
token: Text { text: StrSpan("\n" 10709..10710) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10711..10712), span: StrSpan("<p" 10710..10712) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10713..10718), value: StrSpan("testo_dialogo" 10720..10733), span: StrSpan("class=\"testo_dialogo\"" 10713..10734) }
token: ElementEnd { end: Open, span: StrSpan(">" 10734..10735) }
token: Text { text: StrSpan("Ho imparato a Corinto, a non essere un dio. E conosco te, M√©lita." 10735..10801) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10803..10804)), span: StrSpan("</p>" 10801..10805) }
token: Text { text: StrSpan("\n\n" 10805..10807) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10808..10809), span: StrSpan("<p" 10807..10809) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10810..10815), value: StrSpan("testo_personaggio testo_maiuscoletto" 10817..10853), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10810..10854) }
token: ElementEnd { end: Open, span: StrSpan(">" 10854..10855) }
token: Text { text: StrSpan("M√©lita." 10855..10863) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10865..10866)), span: StrSpan("</p>" 10863..10867) }
token: Text { text: StrSpan("\n" 10867..10868) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10869..10870), span: StrSpan("<p" 10868..10870) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10871..10876), value: StrSpan("testo_dialogo" 10878..10891), span: StrSpan("class=\"testo_dialogo\"" 10871..10892) }
token: ElementEnd { end: Open, span: StrSpan(">" 10892..10893) }
token: Text { text: StrSpan("O Iasone, che cosa son io?" 10893..10919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10921..10922)), span: StrSpan("</p>" 10919..10923) }
token: Text { text: StrSpan("\n\n" 10923..10925) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10926..10927), span: StrSpan("<p" 10925..10927) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10928..10933), value: StrSpan("testo_personaggio testo_maiuscoletto" 10935..10971), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10928..10972) }
token: ElementEnd { end: Open, span: StrSpan(">" 10972..10973) }
token: Text { text: StrSpan("Iasone." 10973..10980) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10982..10983)), span: StrSpan("</p>" 10980..10984) }
token: Text { text: StrSpan("\n" 10984..10985) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10986..10987), span: StrSpan("<p" 10985..10987) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10988..10993), value: StrSpan("testo_dialogo" 10995..11008), span: StrSpan("class=\"testo_dialogo\"" 10988..11009) }
token: ElementEnd { end: Open, span: StrSpan(">" 11009..11010) }
token: Text { text: StrSpan("Una piccola donna marina, che discende dal tempio quando il vecchio la chiama. E anche tu sei la dea." 11010..11111) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11113..11114)), span: StrSpan("</p>" 11111..11115) }
token: Text { text: StrSpan("\n\n" 11115..11117) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11118..11119), span: StrSpan("<p" 11117..11119) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11120..11125), value: StrSpan("testo_personaggio testo_maiuscoletto" 11127..11163), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11120..11164) }
token: ElementEnd { end: Open, span: StrSpan(">" 11164..11165) }
token: Text { text: StrSpan("M√©lita." 11165..11173) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11175..11176)), span: StrSpan("</p>" 11173..11177) }
token: Text { text: StrSpan("\n" 11177..11178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11179..11180), span: StrSpan("<p" 11178..11180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11181..11186), value: StrSpan("testo_dialogo" 11188..11201), span: StrSpan("class=\"testo_dialogo\"" 11181..11202) }
token: ElementEnd { end: Open, span: StrSpan(">" 11202..11203) }
token: Text { text: StrSpan("Io la servo." 11203..11215) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11217..11218)), span: StrSpan("</p>" 11215..11219) }
token: Text { text: StrSpan("\n\n" 11219..11221) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11222..11223), span: StrSpan("<p" 11221..11223) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11224..11229), value: StrSpan("testo_personaggio testo_maiuscoletto" 11231..11267), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11224..11268) }
token: ElementEnd { end: Open, span: StrSpan(">" 11268..11269) }
token: Text { text: StrSpan("Iasone." 11269..11276) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11278..11279)), span: StrSpan("</p>" 11276..11280) }
token: Text { text: StrSpan("\n" 11280..11281) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11282..11283), span: StrSpan("<p" 11281..11283) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11284..11289), value: StrSpan("testo_dialogo" 11291..11304), span: StrSpan("class=\"testo_dialogo\"" 11284..11305) }
token: ElementEnd { end: Open, span: StrSpan(">" 11305..11306) }
token: Text { text: StrSpan("L‚Äôisola del tuo nome, in occidente, √® un gran santuario della dea. Tu lo sai?" 11306..11386) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11388..11389)), span: StrSpan("</p>" 11386..11390) }
token: Text { text: StrSpan("\n\n" 11390..11392) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11393..11394), span: StrSpan("<p" 11392..11394) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11395..11400), value: StrSpan("testo_personaggio testo_maiuscoletto" 11402..11438), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11395..11439) }
token: ElementEnd { end: Open, span: StrSpan(">" 11439..11440) }
token: Text { text: StrSpan("M√©lita." 11440..11448) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11450..11451)), span: StrSpan("</p>" 11448..11452) }
token: Text { text: StrSpan("\n" 11452..11453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11454..11455), span: StrSpan("<p" 11453..11455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11456..11461), value: StrSpan("testo_dialogo" 11463..11476), span: StrSpan("class=\"testo_dialogo\"" 11456..11477) }
token: ElementEnd { end: Open, span: StrSpan(">" 11477..11478) }
token: Text { text: StrSpan("√à un nome piccolo, signore, che mi han dato per gioco. A volte penso a quei bei nomi delle maghe, delle donne infelici che han pianto per voi‚Ä¶" 11478..11623) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11625..11626)), span: StrSpan("</p>" 11623..11627) }
token: Text { text: StrSpan("\n\n" 11627..11629) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11630..11631), span: StrSpan("<p" 11629..11631) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11632..11637), value: StrSpan("testo_personaggio testo_maiuscoletto" 11639..11675), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11632..11676) }
token: ElementEnd { end: Open, span: StrSpan(">" 11676..11677) }
token: Text { text: StrSpan("Iasone." 11677..11684) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11686..11687)), span: StrSpan("</p>" 11684..11688) }
token: Text { text: StrSpan("\n" 11688..11689) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11690..11691), span: StrSpan("<p" 11689..11691) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11692..11697), value: StrSpan("testo_dialogo" 11699..11712), span: StrSpan("class=\"testo_dialogo\"" 11692..11713) }
token: ElementEnd { end: Open, span: StrSpan(">" 11713..11714) }
token: Text { text: StrSpan("Meg√†ra Iole Auge Ipp√≤lita Onf√†le Dei√†neira‚Ä¶ Sai chi fecero piangere?" 11714..11788) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11790..11791)), span: StrSpan("</p>" 11788..11792) }
token: Text { text: StrSpan("\n\n" 11792..11794) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11795..11796), span: StrSpan("<p" 11794..11796) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11797..11802), value: StrSpan("testo_personaggio testo_maiuscoletto" 11804..11840), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11797..11841) }
token: ElementEnd { end: Open, span: StrSpan(">" 11841..11842) }
token: Text { text: StrSpan("M√©lita." 11842..11850) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11852..11853)), span: StrSpan("</p>" 11850..11854) }
token: Text { text: StrSpan("\n" 11854..11855) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11856..11857), span: StrSpan("<p" 11855..11857) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11858..11863), value: StrSpan("testo_dialogo" 11865..11878), span: StrSpan("class=\"testo_dialogo\"" 11858..11879) }
token: ElementEnd { end: Open, span: StrSpan(">" 11879..11880) }
token: Text { text: StrSpan("Oh ma quello fu un dio. E adesso vive fra gli d√®i." 11880..11931) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11933..11934)), span: StrSpan("</p>" 11931..11935) }
token: Text { text: StrSpan("\n\n" 11935..11937) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11938..11939), span: StrSpan("<p" 11937..11939) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11940..11945), value: StrSpan("testo_personaggio testo_maiuscoletto" 11947..11983), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11940..11984) }
token: ElementEnd { end: Open, span: StrSpan(">" 11984..11985) }
token: Text { text: StrSpan("Iasone." 11985..11992) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11994..11995)), span: StrSpan("</p>" 11992..11996) }
token: Text { text: StrSpan("\n" 11996..11997) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11998..11999), span: StrSpan("<p" 11997..11999) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12000..12005), value: StrSpan("testo_dialogo" 12007..12020), span: StrSpan("class=\"testo_dialogo\"" 12000..12021) }
token: ElementEnd { end: Open, span: StrSpan(">" 12021..12022) }
token: Text { text: StrSpan("Cos√≠ si racconta. Povero Eracle. Era anche lui con noi. Non lo invidio." 12022..12094) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12096..12097)), span: StrSpan("</p>" 12094..12098) }
token: Text { text: StrSpan("\n" 12098..12099) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 12101..12105)), span: StrSpan("</body>" 12099..12106) }
token: Text { text: StrSpan("\n" 12106..12107) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 12109..12113)), span: StrSpan("</html>" 12107..12114) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("La vigna" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 356..357), span: StrSpan("<p" 355..357) }
token: ElementEnd { end: Open, span: StrSpan(">" 357..358) }
token: Text { text: StrSpan("Ariadne, abbandonata da Teseo dopo l‚Äôavventura del labirinto, venne raccolta sull‚Äôisola di Nasso da Dioniso di ritorno dall‚ÄôIndia, e fin√≠ in cielo tra le costellazioni." 358..533) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 535..536)), span: StrSpan("</p>" 533..537) }
token: Text { text: StrSpan("\n\n" 537..539) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 540..541), span: StrSpan("<p" 539..541) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 542..547), value: StrSpan("testo_indicazioni_scena" 549..572), span: StrSpan("class=\"testo_indicazioni_scena\"" 542..573) }
token: ElementEnd { end: Open, span: StrSpan(">" 573..574) }
token: Text { text: StrSpan("(parlano Leucotea e Ariadne)" 574..602) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 604..605)), span: StrSpan("</p>" 602..606) }
token: Text { text: StrSpan("\n\n\n" 606..609) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 610..611), span: StrSpan("<p" 609..611) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 612..617), value: StrSpan("testo_personaggio testo_maiuscoletto" 619..655), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 612..656) }
token: ElementEnd { end: Open, span: StrSpan(">" 656..657) }
token: Text { text: StrSpan("Leucotea." 657..666) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 668..669)), span: StrSpan("</p>" 666..670) }
token: Text { text: StrSpan("\n" 670..671) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 672..673), span: StrSpan("<p" 671..673) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 674..679), value: StrSpan("testo_dialogo" 681..694), span: StrSpan("class=\"testo_dialogo\"" 674..695) }
token: ElementEnd { end: Open, span: StrSpan(">" 695..696) }
token: Text { text: StrSpan("Piangerai per molto tempo ancora, Ariadne?" 696..738) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 740..741)), span: StrSpan("</p>" 738..742) }
token: Text { text: StrSpan("\n\n" 742..744) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 745..746), span: StrSpan("<p" 744..746) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 747..752), value: StrSpan("testo_personaggio testo_maiuscoletto" 754..790), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 747..791) }
token: ElementEnd { end: Open, span: StrSpan(">" 791..792) }
token: Text { text: StrSpan("Ariadne." 792..800) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 802..803)), span: StrSpan("</p>" 800..804) }
token: Text { text: StrSpan("\n" 804..805) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 806..807), span: StrSpan("<p" 805..807) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 808..813), value: StrSpan("testo_dialogo" 815..828), span: StrSpan("class=\"testo_dialogo\"" 808..829) }
token: ElementEnd { end: Open, span: StrSpan(">" 829..830) }
token: Text { text: StrSpan("O tu di dove vieni?" 830..849) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 851..852)), span: StrSpan("</p>" 849..853) }
token: Text { text: StrSpan("\n\n" 853..855) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 856..857), span: StrSpan("<p" 855..857) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 858..863), value: StrSpan("testo_personaggio testo_maiuscoletto" 865..901), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 858..902) }
token: ElementEnd { end: Open, span: StrSpan(">" 902..903) }
token: Text { text: StrSpan("Leucotea." 903..912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 914..915)), span: StrSpan("</p>" 912..916) }
token: Text { text: StrSpan("\n" 916..917) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 918..919), span: StrSpan("<p" 917..919) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 920..925), value: StrSpan("testo_dialogo" 927..940), span: StrSpan("class=\"testo_dialogo\"" 920..941) }
token: ElementEnd { end: Open, span: StrSpan(">" 941..942) }
token: Text { text: StrSpan("Dal mare, come te. Dunque, hai smesso di piangere?" 942..992) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 994..995)), span: StrSpan("</p>" 992..996) }
token: Text { text: StrSpan("\n\n" 996..998) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 999..1000), span: StrSpan("<p" 998..1000) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1001..1006), value: StrSpan("testo_personaggio testo_maiuscoletto" 1008..1044), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1001..1045) }
token: ElementEnd { end: Open, span: StrSpan(">" 1045..1046) }
token: Text { text: StrSpan("Ariadne." 1046..1054) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1056..1057)), span: StrSpan("</p>" 1054..1058) }
token: Text { text: StrSpan("\n" 1058..1059) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1060..1061), span: StrSpan("<p" 1059..1061) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1062..1067), value: StrSpan("testo_dialogo" 1069..1082), span: StrSpan("class=\"testo_dialogo\"" 1062..1083) }
token: ElementEnd { end: Open, span: StrSpan(">" 1083..1084) }
token: Text { text: StrSpan("Non sono pi√∫ sola." 1084..1103) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1105..1106)), span: StrSpan("</p>" 1103..1107) }
token: Text { text: StrSpan("\n\n" 1107..1109) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1110..1111), span: StrSpan("<p" 1109..1111) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1112..1117), value: StrSpan("testo_personaggio testo_maiuscoletto" 1119..1155), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1112..1156) }
token: ElementEnd { end: Open, span: StrSpan(">" 1156..1157) }
token: Text { text: StrSpan("Leucotea." 1157..1166) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1168..1169)), span: StrSpan("</p>" 1166..1170) }
token: Text { text: StrSpan("\n" 1170..1171) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1172..1173), span: StrSpan("<p" 1171..1173) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1174..1179), value: StrSpan("testo_dialogo" 1181..1194), span: StrSpan("class=\"testo_dialogo\"" 1174..1195) }
token: ElementEnd { end: Open, span: StrSpan(">" 1195..1196) }
token: Text { text: StrSpan("Credevo che voi donne mortali piangeste soltanto quando qualcuno vi ascolta." 1196..1272) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1274..1275)), span: StrSpan("</p>" 1272..1276) }
token: Text { text: StrSpan("\n\n" 1276..1278) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1279..1280), span: StrSpan("<p" 1278..1280) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1281..1286), value: StrSpan("testo_personaggio testo_maiuscoletto" 1288..1324), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1281..1325) }
token: ElementEnd { end: Open, span: StrSpan(">" 1325..1326) }
token: Text { text: StrSpan("Ariadne." 1326..1334) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1336..1337)), span: StrSpan("</p>" 1334..1338) }
token: Text { text: StrSpan("\n" 1338..1339) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1340..1341), span: StrSpan("<p" 1339..1341) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1342..1347), value: StrSpan("testo_dialogo" 1349..1362), span: StrSpan("class=\"testo_dialogo\"" 1342..1363) }
token: ElementEnd { end: Open, span: StrSpan(">" 1363..1364) }
token: Text { text: StrSpan("Per una ninfa, sei cattiva." 1364..1391) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1393..1394)), span: StrSpan("</p>" 1391..1395) }
token: Text { text: StrSpan("\n\n" 1395..1397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1398..1399), span: StrSpan("<p" 1397..1399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1400..1405), value: StrSpan("testo_personaggio testo_maiuscoletto" 1407..1443), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1400..1444) }
token: ElementEnd { end: Open, span: StrSpan(">" 1444..1445) }
token: Text { text: StrSpan("Leucotea." 1445..1454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1456..1457)), span: StrSpan("</p>" 1454..1458) }
token: Text { text: StrSpan("\n" 1458..1459) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1460..1461), span: StrSpan("<p" 1459..1461) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1462..1467), value: StrSpan("testo_dialogo" 1469..1482), span: StrSpan("class=\"testo_dialogo\"" 1462..1483) }
token: ElementEnd { end: Open, span: StrSpan(">" 1483..1484) }
token: Text { text: StrSpan("Cos√≠, se n‚Äô√® andato anche lui? Perch√© credi che ti abbia lasciata?" 1484..1555) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1557..1558)), span: StrSpan("</p>" 1555..1559) }
token: Text { text: StrSpan("\n\n" 1559..1561) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1562..1563), span: StrSpan("<p" 1561..1563) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1564..1569), value: StrSpan("testo_personaggio testo_maiuscoletto" 1571..1607), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1564..1608) }
token: ElementEnd { end: Open, span: StrSpan(">" 1608..1609) }
token: Text { text: StrSpan("Ariadne." 1609..1617) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1619..1620)), span: StrSpan("</p>" 1617..1621) }
token: Text { text: StrSpan("\n" 1621..1622) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1623..1624), span: StrSpan("<p" 1622..1624) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1625..1630), value: StrSpan("testo_dialogo" 1632..1645), span: StrSpan("class=\"testo_dialogo\"" 1625..1646) }
token: ElementEnd { end: Open, span: StrSpan(">" 1646..1647) }
token: Text { text: StrSpan("Non mi hai detto chi sei." 1647..1672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1674..1675)), span: StrSpan("</p>" 1672..1676) }
token: Text { text: StrSpan("\n\n" 1676..1678) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1679..1680), span: StrSpan("<p" 1678..1680) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1681..1686), value: StrSpan("testo_personaggio testo_maiuscoletto" 1688..1724), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1681..1725) }
token: ElementEnd { end: Open, span: StrSpan(">" 1725..1726) }
token: Text { text: StrSpan("Leucotea." 1726..1735) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1737..1738)), span: StrSpan("</p>" 1735..1739) }
token: Text { text: StrSpan("\n" 1739..1740) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1741..1742), span: StrSpan("<p" 1740..1742) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1743..1748), value: StrSpan("testo_dialogo" 1750..1763), span: StrSpan("class=\"testo_dialogo\"" 1743..1764) }
token: ElementEnd { end: Open, span: StrSpan(">" 1764..1765) }
token: Text { text: StrSpan("Una donna che ha fatto quel che tu non hai fatto. Ho tentato di uccidermi in mare. Mi chiamavano Ino. Una dea mi ha salvata. Ora sono la ninfa dell‚Äôisola." 1765..1921) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1923..1924)), span: StrSpan("</p>" 1921..1925) }
token: Text { text: StrSpan("\n\n" 1925..1927) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1928..1929), span: StrSpan("<p" 1927..1929) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1930..1935), value: StrSpan("testo_personaggio testo_maiuscoletto" 1937..1973), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1930..1974) }
token: ElementEnd { end: Open, span: StrSpan(">" 1974..1975) }
token: Text { text: StrSpan("Ariadne." 1975..1983) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1985..1986)), span: StrSpan("</p>" 1983..1987) }
token: Text { text: StrSpan("\n" 1987..1988) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1989..1990), span: StrSpan("<p" 1988..1990) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1991..1996), value: StrSpan("testo_dialogo" 1998..2011), span: StrSpan("class=\"testo_dialogo\"" 1991..2012) }
token: ElementEnd { end: Open, span: StrSpan(">" 2012..2013) }
token: Text { text: StrSpan("Che vuoi da me?" 2013..2028) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2030..2031)), span: StrSpan("</p>" 2028..2032) }
token: Text { text: StrSpan("\n\n" 2032..2034) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2035..2036), span: StrSpan("<p" 2034..2036) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2037..2042), value: StrSpan("testo_personaggio testo_maiuscoletto" 2044..2080), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2037..2081) }
token: ElementEnd { end: Open, span: StrSpan(">" 2081..2082) }
token: Text { text: StrSpan("Leucotea." 2082..2091) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2093..2094)), span: StrSpan("</p>" 2091..2095) }
token: Text { text: StrSpan("\n" 2095..2096) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2097..2098), span: StrSpan("<p" 2096..2098) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2099..2104), value: StrSpan("testo_dialogo" 2106..2119), span: StrSpan("class=\"testo_dialogo\"" 2099..2120) }
token: ElementEnd { end: Open, span: StrSpan(">" 2120..2121) }
token: Text { text: StrSpan("Se mi parli cos√≠, gi√† lo sai. Vengo a dirti che il tuo caro ragazzo dalle belle parole e dai ricci violetti, se n‚Äô√® andato per sempre. Ti ha piantata. La vela nera che √® scomparsa sar√† l‚Äôultimo ricordo che ti lascia. Corri, strilla, dibattiti, √® fatta." 2121..2383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2385..2386)), span: StrSpan("</p>" 2383..2387) }
token: Text { text: StrSpan("\n\n" 2387..2389) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2390..2391), span: StrSpan("<p" 2389..2391) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2392..2397), value: StrSpan("testo_personaggio testo_maiuscoletto" 2399..2435), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2392..2436) }
token: ElementEnd { end: Open, span: StrSpan(">" 2436..2437) }
token: Text { text: StrSpan("Ariadne." 2437..2445) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2447..2448)), span: StrSpan("</p>" 2445..2449) }
token: Text { text: StrSpan("\n" 2449..2450) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2451..2452), span: StrSpan("<p" 2450..2452) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2453..2458), value: StrSpan("testo_dialogo" 2460..2473), span: StrSpan("class=\"testo_dialogo\"" 2453..2474) }
token: ElementEnd { end: Open, span: StrSpan(">" 2474..2475) }
token: Text { text: StrSpan("Anche te hanno piantato, ch√© hai cercato di ucciderti?" 2475..2530) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2532..2533)), span: StrSpan("</p>" 2530..2534) }
token: Text { text: StrSpan("\n\n" 2534..2536) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2537..2538), span: StrSpan("<p" 2536..2538) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2539..2544), value: StrSpan("testo_personaggio testo_maiuscoletto" 2546..2582), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2539..2583) }
token: ElementEnd { end: Open, span: StrSpan(">" 2583..2584) }
token: Text { text: StrSpan("Leucotea." 2584..2593) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2595..2596)), span: StrSpan("</p>" 2593..2597) }
token: Text { text: StrSpan("\n" 2597..2598) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2599..2600), span: StrSpan("<p" 2598..2600) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2601..2606), value: StrSpan("testo_dialogo" 2608..2621), span: StrSpan("class=\"testo_dialogo\"" 2601..2622) }
token: ElementEnd { end: Open, span: StrSpan(">" 2622..2623) }
token: Text { text: StrSpan("Non si tratta di me. Ma non meriti il discorso che ti faccio. Tu sei sciocca e testarda." 2623..2711) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2713..2714)), span: StrSpan("</p>" 2711..2715) }
token: Text { text: StrSpan("\n\n" 2715..2717) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2718..2719), span: StrSpan("<p" 2717..2719) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2720..2725), value: StrSpan("testo_personaggio testo_maiuscoletto" 2727..2763), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2720..2764) }
token: ElementEnd { end: Open, span: StrSpan(">" 2764..2765) }
token: Text { text: StrSpan("Ariadne." 2765..2773) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2775..2776)), span: StrSpan("</p>" 2773..2777) }
token: Text { text: StrSpan("\n" 2777..2778) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2779..2780), span: StrSpan("<p" 2778..2780) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2781..2786), value: StrSpan("testo_dialogo" 2788..2801), span: StrSpan("class=\"testo_dialogo\"" 2781..2802) }
token: ElementEnd { end: Open, span: StrSpan(">" 2802..2803) }
token: Text { text: StrSpan("Senti, ninfa del mare, che tu deva parlarmi, non so. Quello che dici √® poco o troppo. Se vorr√≤ uccidermi, sapr√≤ farlo da sola." 2803..2932) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2934..2935)), span: StrSpan("</p>" 2932..2936) }
token: Text { text: StrSpan("\n\n" 2936..2938) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2939..2940), span: StrSpan("<p" 2938..2940) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2941..2946), value: StrSpan("testo_personaggio testo_maiuscoletto" 2948..2984), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2941..2985) }
token: ElementEnd { end: Open, span: StrSpan(">" 2985..2986) }
token: Text { text: StrSpan("Leucotea." 2986..2995) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2997..2998)), span: StrSpan("</p>" 2995..2999) }
token: Text { text: StrSpan("\n" 2999..3000) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3001..3002), span: StrSpan("<p" 3000..3002) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3003..3008), value: StrSpan("testo_dialogo" 3010..3023), span: StrSpan("class=\"testo_dialogo\"" 3003..3024) }
token: ElementEnd { end: Open, span: StrSpan(">" 3024..3025) }
token: Text { text: StrSpan("Credi a me, scioccherella. Il tuo dolore non √® nulla." 3025..3079) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3081..3082)), span: StrSpan("</p>" 3079..3083) }
token: Text { text: StrSpan("\n\n" 3083..3085) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3086..3087), span: StrSpan("<p" 3085..3087) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3088..3093), value: StrSpan("testo_personaggio testo_maiuscoletto" 3095..3131), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3088..3132) }
token: ElementEnd { end: Open, span: StrSpan(">" 3132..3133) }
token: Text { text: StrSpan("Ariadne." 3133..3141) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3143..3144)), span: StrSpan("</p>" 3141..3145) }
token: Text { text: StrSpan("\n" 3145..3146) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3147..3148), span: StrSpan("<p" 3146..3148) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3149..3154), value: StrSpan("testo_dialogo" 3156..3169), span: StrSpan("class=\"testo_dialogo\"" 3149..3170) }
token: ElementEnd { end: Open, span: StrSpan(">" 3170..3171) }
token: Text { text: StrSpan("E perch√© vieni a dirmelo?" 3171..3197) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3199..3200)), span: StrSpan("</p>" 3197..3201) }
token: Text { text: StrSpan("\n\n" 3201..3203) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3204..3205), span: StrSpan("<p" 3203..3205) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3206..3211), value: StrSpan("testo_personaggio testo_maiuscoletto" 3213..3249), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3206..3250) }
token: ElementEnd { end: Open, span: StrSpan(">" 3250..3251) }
token: Text { text: StrSpan("Leucotea." 3251..3260) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3262..3263)), span: StrSpan("</p>" 3260..3264) }
token: Text { text: StrSpan("\n" 3264..3265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3266..3267), span: StrSpan("<p" 3265..3267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3268..3273), value: StrSpan("testo_dialogo" 3275..3288), span: StrSpan("class=\"testo_dialogo\"" 3268..3289) }
token: ElementEnd { end: Open, span: StrSpan(">" 3289..3290) }
token: Text { text: StrSpan("Per che credi che lui ti abbia lasciata?" 3290..3330) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3332..3333)), span: StrSpan("</p>" 3330..3334) }
token: Text { text: StrSpan("\n\n" 3334..3336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3337..3338), span: StrSpan("<p" 3336..3338) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3339..3344), value: StrSpan("testo_personaggio testo_maiuscoletto" 3346..3382), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3339..3383) }
token: ElementEnd { end: Open, span: StrSpan(">" 3383..3384) }
token: Text { text: StrSpan("Ariadne." 3384..3392) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3394..3395)), span: StrSpan("</p>" 3392..3396) }
token: Text { text: StrSpan("\n" 3396..3397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3398..3399), span: StrSpan("<p" 3397..3399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3400..3405), value: StrSpan("testo_dialogo" 3407..3420), span: StrSpan("class=\"testo_dialogo\"" 3400..3421) }
token: ElementEnd { end: Open, span: StrSpan(">" 3421..3422) }
token: Text { text: StrSpan("O ninfa, smettila‚Ä¶" 3422..3442) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3444..3445)), span: StrSpan("</p>" 3442..3446) }
token: Text { text: StrSpan("\n\n" 3446..3448) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3449..3450), span: StrSpan("<p" 3448..3450) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3451..3456), value: StrSpan("testo_personaggio testo_maiuscoletto" 3458..3494), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3451..3495) }
token: ElementEnd { end: Open, span: StrSpan(">" 3495..3496) }
token: Text { text: StrSpan("Leucotea." 3496..3505) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3507..3508)), span: StrSpan("</p>" 3505..3509) }
token: Text { text: StrSpan("\n" 3509..3510) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3511..3512), span: StrSpan("<p" 3510..3512) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3513..3518), value: StrSpan("testo_dialogo" 3520..3533), span: StrSpan("class=\"testo_dialogo\"" 3513..3534) }
token: ElementEnd { end: Open, span: StrSpan(">" 3534..3535) }
token: Text { text: StrSpan("Ecco, piangi. Cos√≠ almeno √® pi√∫ facile. Non parlare, non serve. Cos√≠ se ne vanno sciocchezza e superbia. Cos√≠ il tuo dolore compare per quello che √®. Ma finch√© il cuore non ti scoppier√†, finch√© non latrerai come una cagna e vorrai spegnerti nel mare come un tizzo, non potrai dire di conoscere il dolore." 3535..3848) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3850..3851)), span: StrSpan("</p>" 3848..3852) }
token: Text { text: StrSpan("\n\n" 3852..3854) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3855..3856), span: StrSpan("<p" 3854..3856) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3857..3862), value: StrSpan("testo_personaggio testo_maiuscoletto" 3864..3900), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3857..3901) }
token: ElementEnd { end: Open, span: StrSpan(">" 3901..3902) }
token: Text { text: StrSpan("Ariadne." 3902..3910) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3912..3913)), span: StrSpan("</p>" 3910..3914) }
token: Text { text: StrSpan("\n" 3914..3915) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3916..3917), span: StrSpan("<p" 3915..3917) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3918..3923), value: StrSpan("testo_dialogo" 3925..3938), span: StrSpan("class=\"testo_dialogo\"" 3918..3939) }
token: ElementEnd { end: Open, span: StrSpan(">" 3939..3940) }
token: Text { text: StrSpan("M‚Äô√® gi√† scoppiato‚Ä¶ il cuore‚Ä¶" 3940..3976) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3978..3979)), span: StrSpan("</p>" 3976..3980) }
token: Text { text: StrSpan("\n\n" 3980..3982) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3983..3984), span: StrSpan("<p" 3982..3984) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3985..3990), value: StrSpan("testo_personaggio testo_maiuscoletto" 3992..4028), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3985..4029) }
token: ElementEnd { end: Open, span: StrSpan(">" 4029..4030) }
token: Text { text: StrSpan("Leucotea." 4030..4039) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4041..4042)), span: StrSpan("</p>" 4039..4043) }
token: Text { text: StrSpan("\n" 4043..4044) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4045..4046), span: StrSpan("<p" 4044..4046) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4047..4052), value: StrSpan("testo_dialogo" 4054..4067), span: StrSpan("class=\"testo_dialogo\"" 4047..4068) }
token: ElementEnd { end: Open, span: StrSpan(">" 4068..4069) }
token: Text { text: StrSpan("Piangi soltanto, non parlare‚Ä¶ Tu non sai nulla. Altro ti attende." 4069..4136) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4138..4139)), span: StrSpan("</p>" 4136..4140) }
token: Text { text: StrSpan("\n\n" 4140..4142) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4143..4144), span: StrSpan("<p" 4142..4144) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4145..4150), value: StrSpan("testo_personaggio testo_maiuscoletto" 4152..4188), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4145..4189) }
token: ElementEnd { end: Open, span: StrSpan(">" 4189..4190) }
token: Text { text: StrSpan("Ariadne." 4190..4198) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4200..4201)), span: StrSpan("</p>" 4198..4202) }
token: Text { text: StrSpan("\n" 4202..4203) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4204..4205), span: StrSpan("<p" 4203..4205) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4206..4211), value: StrSpan("testo_dialogo" 4213..4226), span: StrSpan("class=\"testo_dialogo\"" 4206..4227) }
token: ElementEnd { end: Open, span: StrSpan(">" 4227..4228) }
token: Text { text: StrSpan("Come ti chiami adesso, ninfa?" 4228..4257) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4259..4260)), span: StrSpan("</p>" 4257..4261) }
token: Text { text: StrSpan("\n\n" 4261..4263) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4264..4265), span: StrSpan("<p" 4263..4265) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4266..4271), value: StrSpan("testo_personaggio testo_maiuscoletto" 4273..4309), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4266..4310) }
token: ElementEnd { end: Open, span: StrSpan(">" 4310..4311) }
token: Text { text: StrSpan("Leucotea." 4311..4320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4322..4323)), span: StrSpan("</p>" 4320..4324) }
token: Text { text: StrSpan("\n" 4324..4325) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4326..4327), span: StrSpan("<p" 4325..4327) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4328..4333), value: StrSpan("testo_dialogo" 4335..4348), span: StrSpan("class=\"testo_dialogo\"" 4328..4349) }
token: ElementEnd { end: Open, span: StrSpan(">" 4349..4350) }
token: Text { text: StrSpan("Leucotea. Capiscimi, Ariadne. La vela nera se n‚Äô√® andata per sempre. Questa storia √® finita." 4350..4446) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4448..4449)), span: StrSpan("</p>" 4446..4450) }
token: Text { text: StrSpan("\n\n" 4450..4452) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4453..4454), span: StrSpan("<p" 4452..4454) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4455..4460), value: StrSpan("testo_personaggio testo_maiuscoletto" 4462..4498), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4455..4499) }
token: ElementEnd { end: Open, span: StrSpan(">" 4499..4500) }
token: Text { text: StrSpan("Ariadne." 4500..4508) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4510..4511)), span: StrSpan("</p>" 4508..4512) }
token: Text { text: StrSpan("\n" 4512..4513) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4514..4515), span: StrSpan("<p" 4513..4515) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4516..4521), value: StrSpan("testo_dialogo" 4523..4536), span: StrSpan("class=\"testo_dialogo\"" 4516..4537) }
token: ElementEnd { end: Open, span: StrSpan(">" 4537..4538) }
token: Text { text: StrSpan("√à la mia vita che finisce." 4538..4565) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4567..4568)), span: StrSpan("</p>" 4565..4569) }
token: Text { text: StrSpan("\n\n" 4569..4571) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4572..4573), span: StrSpan("<p" 4571..4573) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4574..4579), value: StrSpan("testo_personaggio testo_maiuscoletto" 4581..4617), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4574..4618) }
token: ElementEnd { end: Open, span: StrSpan(">" 4618..4619) }
token: Text { text: StrSpan("Leucotea." 4619..4628) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4630..4631)), span: StrSpan("</p>" 4628..4632) }
token: Text { text: StrSpan("\n" 4632..4633) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4634..4635), span: StrSpan("<p" 4633..4635) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4636..4641), value: StrSpan("testo_dialogo" 4643..4656), span: StrSpan("class=\"testo_dialogo\"" 4636..4657) }
token: ElementEnd { end: Open, span: StrSpan(">" 4657..4658) }
token: Text { text: StrSpan("Altro ti attende. Tu sei sciocca. Non veneravi nessun dio nella tua terra?" 4658..4732) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4734..4735)), span: StrSpan("</p>" 4732..4736) }
token: Text { text: StrSpan("\n\n" 4736..4738) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4739..4740), span: StrSpan("<p" 4738..4740) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4741..4746), value: StrSpan("testo_personaggio testo_maiuscoletto" 4748..4784), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4741..4785) }
token: ElementEnd { end: Open, span: StrSpan(">" 4785..4786) }
token: Text { text: StrSpan("Ariadne." 4786..4794) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4796..4797)), span: StrSpan("</p>" 4794..4798) }
token: Text { text: StrSpan("\n" 4798..4799) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4800..4801), span: StrSpan("<p" 4799..4801) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4802..4807), value: StrSpan("testo_dialogo" 4809..4822), span: StrSpan("class=\"testo_dialogo\"" 4802..4823) }
token: ElementEnd { end: Open, span: StrSpan(">" 4823..4824) }
token: Text { text: StrSpan("Quale dio pu√≤ ridarmi la nave?" 4824..4855) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4857..4858)), span: StrSpan("</p>" 4855..4859) }
token: Text { text: StrSpan("\n\n" 4859..4861) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4862..4863), span: StrSpan("<p" 4861..4863) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4864..4869), value: StrSpan("testo_personaggio testo_maiuscoletto" 4871..4907), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4864..4908) }
token: ElementEnd { end: Open, span: StrSpan(">" 4908..4909) }
token: Text { text: StrSpan("Leucotea." 4909..4918) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4920..4921)), span: StrSpan("</p>" 4918..4922) }
token: Text { text: StrSpan("\n" 4922..4923) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4924..4925), span: StrSpan("<p" 4923..4925) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4926..4931), value: StrSpan("testo_dialogo" 4933..4946), span: StrSpan("class=\"testo_dialogo\"" 4926..4947) }
token: ElementEnd { end: Open, span: StrSpan(">" 4947..4948) }
token: Text { text: StrSpan("Ti domando che dio conoscevi." 4948..4977) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4979..4980)), span: StrSpan("</p>" 4977..4981) }
token: Text { text: StrSpan("\n\n" 4981..4983) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4984..4985), span: StrSpan("<p" 4983..4985) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4986..4991), value: StrSpan("testo_personaggio testo_maiuscoletto" 4993..5029), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4986..5030) }
token: ElementEnd { end: Open, span: StrSpan(">" 5030..5031) }
token: Text { text: StrSpan("Ariadne." 5031..5039) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5041..5042)), span: StrSpan("</p>" 5039..5043) }
token: Text { text: StrSpan("\n" 5043..5044) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5045..5046), span: StrSpan("<p" 5044..5046) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5047..5052), value: StrSpan("testo_dialogo" 5054..5067), span: StrSpan("class=\"testo_dialogo\"" 5047..5068) }
token: ElementEnd { end: Open, span: StrSpan(">" 5068..5069) }
token: Text { text: StrSpan("C‚Äô√® un monte in patria che incuteva spavento anche a quelli della nave. L√† sono nati grandi d√®i. Li adoriamo. Li ho gi√† tutti invocati, ma nessuno mi aiuta. Che far√≤? dimmi tu." 5069..5252) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5254..5255)), span: StrSpan("</p>" 5252..5256) }
token: Text { text: StrSpan("\n\n" 5256..5258) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5259..5260), span: StrSpan("<p" 5258..5260) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5261..5266), value: StrSpan("testo_personaggio testo_maiuscoletto" 5268..5304), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5261..5305) }
token: ElementEnd { end: Open, span: StrSpan(">" 5305..5306) }
token: Text { text: StrSpan("Leucotea." 5306..5315) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5317..5318)), span: StrSpan("</p>" 5315..5319) }
token: Text { text: StrSpan("\n" 5319..5320) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5321..5322), span: StrSpan("<p" 5320..5322) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5323..5328), value: StrSpan("testo_dialogo" 5330..5343), span: StrSpan("class=\"testo_dialogo\"" 5323..5344) }
token: ElementEnd { end: Open, span: StrSpan(">" 5344..5345) }
token: Text { text: StrSpan("Che cosa attendi dagli d√®i?" 5345..5373) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5375..5376)), span: StrSpan("</p>" 5373..5377) }
token: Text { text: StrSpan("\n\n" 5377..5379) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5380..5381), span: StrSpan("<p" 5379..5381) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5382..5387), value: StrSpan("testo_personaggio testo_maiuscoletto" 5389..5425), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5382..5426) }
token: ElementEnd { end: Open, span: StrSpan(">" 5426..5427) }
token: Text { text: StrSpan("Ariadne." 5427..5435) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5437..5438)), span: StrSpan("</p>" 5435..5439) }
token: Text { text: StrSpan("\n" 5439..5440) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5441..5442), span: StrSpan("<p" 5440..5442) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5443..5448), value: StrSpan("testo_dialogo" 5450..5463), span: StrSpan("class=\"testo_dialogo\"" 5443..5464) }
token: ElementEnd { end: Open, span: StrSpan(">" 5464..5465) }
token: Text { text: StrSpan("Non attendo pi√∫ nulla." 5465..5488) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5490..5491)), span: StrSpan("</p>" 5488..5492) }
token: Text { text: StrSpan("\n\n" 5492..5494) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5495..5496), span: StrSpan("<p" 5494..5496) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5497..5502), value: StrSpan("testo_personaggio testo_maiuscoletto" 5504..5540), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5497..5541) }
token: ElementEnd { end: Open, span: StrSpan(">" 5541..5542) }
token: Text { text: StrSpan("Leucotea." 5542..5551) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5553..5554)), span: StrSpan("</p>" 5551..5555) }
token: Text { text: StrSpan("\n" 5555..5556) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5557..5558), span: StrSpan("<p" 5556..5558) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5559..5564), value: StrSpan("testo_dialogo" 5566..5579), span: StrSpan("class=\"testo_dialogo\"" 5559..5580) }
token: ElementEnd { end: Open, span: StrSpan(">" 5580..5581) }
token: Text { text: StrSpan("E allora ascolta. Qualcuno si √® mosso." 5581..5620) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5622..5623)), span: StrSpan("</p>" 5620..5624) }
token: Text { text: StrSpan("\n\n" 5624..5626) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5627..5628), span: StrSpan("<p" 5626..5628) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5629..5634), value: StrSpan("testo_personaggio testo_maiuscoletto" 5636..5672), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5629..5673) }
token: ElementEnd { end: Open, span: StrSpan(">" 5673..5674) }
token: Text { text: StrSpan("Ariadne." 5674..5682) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5684..5685)), span: StrSpan("</p>" 5682..5686) }
token: Text { text: StrSpan("\n" 5686..5687) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5688..5689), span: StrSpan("<p" 5687..5689) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5690..5695), value: StrSpan("testo_dialogo" 5697..5710), span: StrSpan("class=\"testo_dialogo\"" 5690..5711) }
token: ElementEnd { end: Open, span: StrSpan(">" 5711..5712) }
token: Text { text: StrSpan("Che vuoi dire?" 5712..5726) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5728..5729)), span: StrSpan("</p>" 5726..5730) }
token: Text { text: StrSpan("\n\n" 5730..5732) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5733..5734), span: StrSpan("<p" 5732..5734) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5735..5740), value: StrSpan("testo_personaggio testo_maiuscoletto" 5742..5778), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5735..5779) }
token: ElementEnd { end: Open, span: StrSpan(">" 5779..5780) }
token: Text { text: StrSpan("Leucotea." 5780..5789) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5791..5792)), span: StrSpan("</p>" 5789..5793) }
token: Text { text: StrSpan("\n" 5793..5794) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5795..5796), span: StrSpan("<p" 5794..5796) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5797..5802), value: StrSpan("testo_dialogo" 5804..5817), span: StrSpan("class=\"testo_dialogo\"" 5797..5818) }
token: ElementEnd { end: Open, span: StrSpan(">" 5818..5819) }
token: Text { text: StrSpan("Se ti parlo, qualcuno si √® mosso." 5819..5853) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5855..5856)), span: StrSpan("</p>" 5853..5857) }
token: Text { text: StrSpan("\n\n" 5857..5859) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5860..5861), span: StrSpan("<p" 5859..5861) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5862..5867), value: StrSpan("testo_personaggio testo_maiuscoletto" 5869..5905), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5862..5906) }
token: ElementEnd { end: Open, span: StrSpan(">" 5906..5907) }
token: Text { text: StrSpan("Ariadne." 5907..5915) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5917..5918)), span: StrSpan("</p>" 5915..5919) }
token: Text { text: StrSpan("\n" 5919..5920) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5921..5922), span: StrSpan("<p" 5920..5922) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5923..5928), value: StrSpan("testo_dialogo" 5930..5943), span: StrSpan("class=\"testo_dialogo\"" 5923..5944) }
token: ElementEnd { end: Open, span: StrSpan(">" 5944..5945) }
token: Text { text: StrSpan("Tu sei solo una ninfa." 5945..5967) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5969..5970)), span: StrSpan("</p>" 5967..5971) }
token: Text { text: StrSpan("\n\n" 5971..5973) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5974..5975), span: StrSpan("<p" 5973..5975) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5976..5981), value: StrSpan("testo_personaggio testo_maiuscoletto" 5983..6019), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5976..6020) }
token: ElementEnd { end: Open, span: StrSpan(">" 6020..6021) }
token: Text { text: StrSpan("Leucotea." 6021..6030) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6032..6033)), span: StrSpan("</p>" 6030..6034) }
token: Text { text: StrSpan("\n" 6034..6035) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6036..6037), span: StrSpan("<p" 6035..6037) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6038..6043), value: StrSpan("testo_dialogo" 6045..6058), span: StrSpan("class=\"testo_dialogo\"" 6038..6059) }
token: ElementEnd { end: Open, span: StrSpan(">" 6059..6060) }
token: Text { text: StrSpan("Pu√≤ darsi che una ninfa annunci un gran dio." 6060..6105) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6107..6108)), span: StrSpan("</p>" 6105..6109) }
token: Text { text: StrSpan("\n\n" 6109..6111) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6112..6113), span: StrSpan("<p" 6111..6113) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6114..6119), value: StrSpan("testo_personaggio testo_maiuscoletto" 6121..6157), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6114..6158) }
token: ElementEnd { end: Open, span: StrSpan(">" 6158..6159) }
token: Text { text: StrSpan("Ariadne." 6159..6167) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6169..6170)), span: StrSpan("</p>" 6167..6171) }
token: Text { text: StrSpan("\n" 6171..6172) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6173..6174), span: StrSpan("<p" 6172..6174) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6175..6180), value: StrSpan("testo_dialogo" 6182..6195), span: StrSpan("class=\"testo_dialogo\"" 6175..6196) }
token: ElementEnd { end: Open, span: StrSpan(">" 6196..6197) }
token: Text { text: StrSpan("Chi, Leucotea, chi mai?" 6197..6220) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6222..6223)), span: StrSpan("</p>" 6220..6224) }
token: Text { text: StrSpan("\n\n" 6224..6226) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6227..6228), span: StrSpan("<p" 6226..6228) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6229..6234), value: StrSpan("testo_personaggio testo_maiuscoletto" 6236..6272), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6229..6273) }
token: ElementEnd { end: Open, span: StrSpan(">" 6273..6274) }
token: Text { text: StrSpan("Leucotea." 6274..6283) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6285..6286)), span: StrSpan("</p>" 6283..6287) }
token: Text { text: StrSpan("\n" 6287..6288) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6289..6290), span: StrSpan("<p" 6288..6290) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6291..6296), value: StrSpan("testo_dialogo" 6298..6311), span: StrSpan("class=\"testo_dialogo\"" 6291..6312) }
token: ElementEnd { end: Open, span: StrSpan(">" 6312..6313) }
token: Text { text: StrSpan("Pensi al dio o al bel ragazzo?" 6313..6343) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6345..6346)), span: StrSpan("</p>" 6343..6347) }
token: Text { text: StrSpan("\n\n" 6347..6349) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6350..6351), span: StrSpan("<p" 6349..6351) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6352..6357), value: StrSpan("testo_personaggio testo_maiuscoletto" 6359..6395), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6352..6396) }
token: ElementEnd { end: Open, span: StrSpan(">" 6396..6397) }
token: Text { text: StrSpan("Ariadne." 6397..6405) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6407..6408)), span: StrSpan("</p>" 6405..6409) }
token: Text { text: StrSpan("\n" 6409..6410) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6411..6412), span: StrSpan("<p" 6410..6412) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6413..6418), value: StrSpan("testo_dialogo" 6420..6433), span: StrSpan("class=\"testo_dialogo\"" 6413..6434) }
token: ElementEnd { end: Open, span: StrSpan(">" 6434..6435) }
token: Text { text: StrSpan("Non lo so. Come dici? Io mi prostro agli d√®i." 6435..6481) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6483..6484)), span: StrSpan("</p>" 6481..6485) }
token: Text { text: StrSpan("\n\n" 6485..6487) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6488..6489), span: StrSpan("<p" 6487..6489) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6490..6495), value: StrSpan("testo_personaggio testo_maiuscoletto" 6497..6533), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6490..6534) }
token: ElementEnd { end: Open, span: StrSpan(">" 6534..6535) }
token: Text { text: StrSpan("Leucotea." 6535..6544) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6546..6547)), span: StrSpan("</p>" 6544..6548) }
token: Text { text: StrSpan("\n" 6548..6549) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6550..6551), span: StrSpan("<p" 6549..6551) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6552..6557), value: StrSpan("testo_dialogo" 6559..6572), span: StrSpan("class=\"testo_dialogo\"" 6552..6573) }
token: ElementEnd { end: Open, span: StrSpan(">" 6573..6574) }
token: Text { text: StrSpan("Dunque hai capito. √à un nuovo dio. √à il pi√∫ giovane di tutti gli d√®i. Ti ha veduta e gli piaci. Lo chiamano Dioniso." 6574..6694) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6696..6697)), span: StrSpan("</p>" 6694..6698) }
token: Text { text: StrSpan("\n\n" 6698..6700) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6701..6702), span: StrSpan("<p" 6700..6702) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6703..6708), value: StrSpan("testo_personaggio testo_maiuscoletto" 6710..6746), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6703..6747) }
token: ElementEnd { end: Open, span: StrSpan(">" 6747..6748) }
token: Text { text: StrSpan("Ariadne." 6748..6756) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6758..6759)), span: StrSpan("</p>" 6756..6760) }
token: Text { text: StrSpan("\n" 6760..6761) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6762..6763), span: StrSpan("<p" 6761..6763) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6764..6769), value: StrSpan("testo_dialogo" 6771..6784), span: StrSpan("class=\"testo_dialogo\"" 6764..6785) }
token: ElementEnd { end: Open, span: StrSpan(">" 6785..6786) }
token: Text { text: StrSpan("Non lo conosco." 6786..6801) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6803..6804)), span: StrSpan("</p>" 6801..6805) }
token: Text { text: StrSpan("\n\n" 6805..6807) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6808..6809), span: StrSpan("<p" 6807..6809) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6810..6815), value: StrSpan("testo_personaggio testo_maiuscoletto" 6817..6853), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6810..6854) }
token: ElementEnd { end: Open, span: StrSpan(">" 6854..6855) }
token: Text { text: StrSpan("Leucotea." 6855..6864) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6866..6867)), span: StrSpan("</p>" 6864..6868) }
token: Text { text: StrSpan("\n" 6868..6869) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6870..6871), span: StrSpan("<p" 6869..6871) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6872..6877), value: StrSpan("testo_dialogo" 6879..6892), span: StrSpan("class=\"testo_dialogo\"" 6872..6893) }
token: ElementEnd { end: Open, span: StrSpan(">" 6893..6894) }
token: Text { text: StrSpan("√à nato a Tebe e corre il mondo. √à un dio di gioia. Tutti lo seguono e lo acclamano." 6894..6979) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6981..6982)), span: StrSpan("</p>" 6979..6983) }
token: Text { text: StrSpan("\n\n" 6983..6985) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6986..6987), span: StrSpan("<p" 6985..6987) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6988..6993), value: StrSpan("testo_personaggio testo_maiuscoletto" 6995..7031), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6988..7032) }
token: ElementEnd { end: Open, span: StrSpan(">" 7032..7033) }
token: Text { text: StrSpan("Ariadne." 7033..7041) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7043..7044)), span: StrSpan("</p>" 7041..7045) }
token: Text { text: StrSpan("\n" 7045..7046) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7047..7048), span: StrSpan("<p" 7046..7048) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7049..7054), value: StrSpan("testo_dialogo" 7056..7069), span: StrSpan("class=\"testo_dialogo\"" 7049..7070) }
token: ElementEnd { end: Open, span: StrSpan(">" 7070..7071) }
token: Text { text: StrSpan("√à potente?" 7071..7082) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7084..7085)), span: StrSpan("</p>" 7082..7086) }
token: Text { text: StrSpan("\n\n" 7086..7088) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7089..7090), span: StrSpan("<p" 7088..7090) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7091..7096), value: StrSpan("testo_personaggio testo_maiuscoletto" 7098..7134), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7091..7135) }
token: ElementEnd { end: Open, span: StrSpan(">" 7135..7136) }
token: Text { text: StrSpan("Leucotea." 7136..7145) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7147..7148)), span: StrSpan("</p>" 7145..7149) }
token: Text { text: StrSpan("\n" 7149..7150) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7151..7152), span: StrSpan("<p" 7150..7152) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7153..7158), value: StrSpan("testo_dialogo" 7160..7173), span: StrSpan("class=\"testo_dialogo\"" 7153..7174) }
token: ElementEnd { end: Open, span: StrSpan(">" 7174..7175) }
token: Text { text: StrSpan("Uccide ridendo. Lo accompagnano i tori e le tigri. La sua vita √® una festa e gli piaci." 7175..7263) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7265..7266)), span: StrSpan("</p>" 7263..7267) }
token: Text { text: StrSpan("\n\n" 7267..7269) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7270..7271), span: StrSpan("<p" 7269..7271) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7272..7277), value: StrSpan("testo_personaggio testo_maiuscoletto" 7279..7315), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7272..7316) }
token: ElementEnd { end: Open, span: StrSpan(">" 7316..7317) }
token: Text { text: StrSpan("Ariadne." 7317..7325) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7327..7328)), span: StrSpan("</p>" 7325..7329) }
token: Text { text: StrSpan("\n" 7329..7330) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7331..7332), span: StrSpan("<p" 7330..7332) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7333..7338), value: StrSpan("testo_dialogo" 7340..7353), span: StrSpan("class=\"testo_dialogo\"" 7333..7354) }
token: ElementEnd { end: Open, span: StrSpan(">" 7354..7355) }
token: Text { text: StrSpan("Ma come mi ha vista?" 7355..7375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7377..7378)), span: StrSpan("</p>" 7375..7379) }
token: Text { text: StrSpan("\n\n" 7379..7381) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7382..7383), span: StrSpan("<p" 7381..7383) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7384..7389), value: StrSpan("testo_personaggio testo_maiuscoletto" 7391..7427), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7384..7428) }
token: ElementEnd { end: Open, span: StrSpan(">" 7428..7429) }
token: Text { text: StrSpan("Leucotea." 7429..7438) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7440..7441)), span: StrSpan("</p>" 7438..7442) }
token: Text { text: StrSpan("\n" 7442..7443) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7444..7445), span: StrSpan("<p" 7443..7445) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7446..7451), value: StrSpan("testo_dialogo" 7453..7466), span: StrSpan("class=\"testo_dialogo\"" 7446..7467) }
token: ElementEnd { end: Open, span: StrSpan(">" 7467..7468) }
token: Text { text: StrSpan("Chi pu√≤ dirlo. Tu sei mai stata in un vigneto in costa a un colle lungo il mare, nell‚Äôora lenta che la terra d√† il suo odore? Un odore rasposo e tenace, tra di fico e di pino? Quando l‚Äôuva matura, e l‚Äôaria pesa di mosto? O hai mai guardato un melograno, frutto e fiore? Qui regna Dioniso, e nel fresco dell‚Äôedera, nei pineti e nelle aie." 7468..7815) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7817..7818)), span: StrSpan("</p>" 7815..7819) }
token: Text { text: StrSpan("\n\n" 7819..7821) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7822..7823), span: StrSpan("<p" 7821..7823) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7824..7829), value: StrSpan("testo_personaggio testo_maiuscoletto" 7831..7867), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7824..7868) }
token: ElementEnd { end: Open, span: StrSpan(">" 7868..7869) }
token: Text { text: StrSpan("Ariadne." 7869..7877) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7879..7880)), span: StrSpan("</p>" 7877..7881) }
token: Text { text: StrSpan("\n" 7881..7882) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7883..7884), span: StrSpan("<p" 7882..7884) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7885..7890), value: StrSpan("testo_dialogo" 7892..7905), span: StrSpan("class=\"testo_dialogo\"" 7885..7906) }
token: ElementEnd { end: Open, span: StrSpan(">" 7906..7907) }
token: Text { text: StrSpan("Non c‚Äô√® un luogo solitario abbastanza che gli d√®i non ci vedano?" 7907..7975) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7977..7978)), span: StrSpan("</p>" 7975..7979) }
token: Text { text: StrSpan("\n\n" 7979..7981) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7982..7983), span: StrSpan("<p" 7981..7983) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7984..7989), value: StrSpan("testo_personaggio testo_maiuscoletto" 7991..8027), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7984..8028) }
token: ElementEnd { end: Open, span: StrSpan(">" 8028..8029) }
token: Text { text: StrSpan("Leucotea." 8029..8038) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8040..8041)), span: StrSpan("</p>" 8038..8042) }
token: Text { text: StrSpan("\n" 8042..8043) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8044..8045), span: StrSpan("<p" 8043..8045) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8046..8051), value: StrSpan("testo_dialogo" 8053..8066), span: StrSpan("class=\"testo_dialogo\"" 8046..8067) }
token: ElementEnd { end: Open, span: StrSpan(">" 8067..8068) }
token: Text { text: StrSpan("Cara mia, ma gli d√®i sono il luogo, sono la solitudine, sono il tempo che passa. Verr√† Dioniso, e ti parr√† di esser rapita da un gran vento, come quei turbini che passano sulle aie e nei vigneti." 8068..8266) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8268..8269)), span: StrSpan("</p>" 8266..8270) }
token: Text { text: StrSpan("\n\n" 8270..8272) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8273..8274), span: StrSpan("<p" 8272..8274) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8275..8280), value: StrSpan("testo_personaggio testo_maiuscoletto" 8282..8318), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8275..8319) }
token: ElementEnd { end: Open, span: StrSpan(">" 8319..8320) }
token: Text { text: StrSpan("Ariadne." 8320..8328) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8330..8331)), span: StrSpan("</p>" 8328..8332) }
token: Text { text: StrSpan("\n" 8332..8333) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8334..8335), span: StrSpan("<p" 8333..8335) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8336..8341), value: StrSpan("testo_dialogo" 8343..8356), span: StrSpan("class=\"testo_dialogo\"" 8336..8357) }
token: ElementEnd { end: Open, span: StrSpan(">" 8357..8358) }
token: Text { text: StrSpan("Quando verr√†?" 8358..8372) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8374..8375)), span: StrSpan("</p>" 8372..8376) }
token: Text { text: StrSpan("\n\n" 8376..8378) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8379..8380), span: StrSpan("<p" 8378..8380) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8381..8386), value: StrSpan("testo_personaggio testo_maiuscoletto" 8388..8424), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8381..8425) }
token: ElementEnd { end: Open, span: StrSpan(">" 8425..8426) }
token: Text { text: StrSpan("Leucotea." 8426..8435) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8437..8438)), span: StrSpan("</p>" 8435..8439) }
token: Text { text: StrSpan("\n" 8439..8440) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8441..8442), span: StrSpan("<p" 8440..8442) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8443..8448), value: StrSpan("testo_dialogo" 8450..8463), span: StrSpan("class=\"testo_dialogo\"" 8443..8464) }
token: ElementEnd { end: Open, span: StrSpan(">" 8464..8465) }
token: Text { text: StrSpan("Cara, io lo annuncio. Per questo la nave √® fuggita." 8465..8517) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8519..8520)), span: StrSpan("</p>" 8517..8521) }
token: Text { text: StrSpan("\n\n" 8521..8523) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8524..8525), span: StrSpan("<p" 8523..8525) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8526..8531), value: StrSpan("testo_personaggio testo_maiuscoletto" 8533..8569), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8526..8570) }
token: ElementEnd { end: Open, span: StrSpan(">" 8570..8571) }
token: Text { text: StrSpan("Ariadne." 8571..8579) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8581..8582)), span: StrSpan("</p>" 8579..8583) }
token: Text { text: StrSpan("\n" 8583..8584) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8585..8586), span: StrSpan("<p" 8584..8586) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8587..8592), value: StrSpan("testo_dialogo" 8594..8607), span: StrSpan("class=\"testo_dialogo\"" 8587..8608) }
token: ElementEnd { end: Open, span: StrSpan(">" 8608..8609) }
token: Text { text: StrSpan("E a te chi l‚Äôha detto?" 8609..8633) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8635..8636)), span: StrSpan("</p>" 8633..8637) }
token: Text { text: StrSpan("\n\n" 8637..8639) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8640..8641), span: StrSpan("<p" 8639..8641) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8642..8647), value: StrSpan("testo_personaggio testo_maiuscoletto" 8649..8685), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8642..8686) }
token: ElementEnd { end: Open, span: StrSpan(">" 8686..8687) }
token: Text { text: StrSpan("Leucotea." 8687..8696) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8698..8699)), span: StrSpan("</p>" 8696..8700) }
token: Text { text: StrSpan("\n" 8700..8701) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8702..8703), span: StrSpan("<p" 8701..8703) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8704..8709), value: StrSpan("testo_dialogo" 8711..8724), span: StrSpan("class=\"testo_dialogo\"" 8704..8725) }
token: ElementEnd { end: Open, span: StrSpan(">" 8725..8726) }
token: Text { text: StrSpan("Sono di Tebe, Ariadne. Sono sorella di sua madre." 8726..8775) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8777..8778)), span: StrSpan("</p>" 8775..8779) }
token: Text { text: StrSpan("\n\n" 8779..8781) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8782..8783), span: StrSpan("<p" 8781..8783) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8784..8789), value: StrSpan("testo_personaggio testo_maiuscoletto" 8791..8827), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8784..8828) }
token: ElementEnd { end: Open, span: StrSpan(">" 8828..8829) }
token: Text { text: StrSpan("Ariadne." 8829..8837) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8839..8840)), span: StrSpan("</p>" 8837..8841) }
token: Text { text: StrSpan("\n" 8841..8842) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8843..8844), span: StrSpan("<p" 8842..8844) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8845..8850), value: StrSpan("testo_dialogo" 8852..8865), span: StrSpan("class=\"testo_dialogo\"" 8845..8866) }
token: ElementEnd { end: Open, span: StrSpan(">" 8866..8867) }
token: Text { text: StrSpan("Nella mia patria si racconta che sull‚ÄôIda nascevano d√®i. Nessun mortale √® mai salito oltre gli ultimi boschi. Noi temiamo anche l‚Äôombra che cade dal monte. Come posso accettare le cose che dici?" 8867..9067) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9069..9070)), span: StrSpan("</p>" 9067..9071) }
token: Text { text: StrSpan("\n\n" 9071..9073) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9074..9075), span: StrSpan("<p" 9073..9075) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9076..9081), value: StrSpan("testo_personaggio testo_maiuscoletto" 9083..9119), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9076..9120) }
token: ElementEnd { end: Open, span: StrSpan(">" 9120..9121) }
token: Text { text: StrSpan("Leucotea." 9121..9130) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9132..9133)), span: StrSpan("</p>" 9130..9134) }
token: Text { text: StrSpan("\n" 9134..9135) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9136..9137), span: StrSpan("<p" 9135..9137) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9138..9143), value: StrSpan("testo_dialogo" 9145..9158), span: StrSpan("class=\"testo_dialogo\"" 9138..9159) }
token: ElementEnd { end: Open, span: StrSpan(">" 9159..9160) }
token: Text { text: StrSpan("Tu hai molto osato, piccola. Non era per te come un dio anche colui dai ricci viola?" 9160..9244) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9246..9247)), span: StrSpan("</p>" 9244..9248) }
token: Text { text: StrSpan("\n\n" 9248..9250) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9251..9252), span: StrSpan("<p" 9250..9252) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9253..9258), value: StrSpan("testo_personaggio testo_maiuscoletto" 9260..9296), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9253..9297) }
token: ElementEnd { end: Open, span: StrSpan(">" 9297..9298) }
token: Text { text: StrSpan("Ariadne." 9298..9306) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9308..9309)), span: StrSpan("</p>" 9306..9310) }
token: Text { text: StrSpan("\n" 9310..9311) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9312..9313), span: StrSpan("<p" 9311..9313) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9314..9319), value: StrSpan("testo_dialogo" 9321..9334), span: StrSpan("class=\"testo_dialogo\"" 9314..9335) }
token: ElementEnd { end: Open, span: StrSpan(">" 9335..9336) }
token: Text { text: StrSpan("Gli ho salvato la vita, a questo dio. Che ne ho avuto?" 9336..9390) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9392..9393)), span: StrSpan("</p>" 9390..9394) }
token: Text { text: StrSpan("\n\n" 9394..9396) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9397..9398), span: StrSpan("<p" 9396..9398) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9399..9404), value: StrSpan("testo_personaggio testo_maiuscoletto" 9406..9442), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9399..9443) }
token: ElementEnd { end: Open, span: StrSpan(">" 9443..9444) }
token: Text { text: StrSpan("Leucotea." 9444..9453) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9455..9456)), span: StrSpan("</p>" 9453..9457) }
token: Text { text: StrSpan("\n" 9457..9458) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9459..9460), span: StrSpan("<p" 9458..9460) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9461..9466), value: StrSpan("testo_dialogo" 9468..9481), span: StrSpan("class=\"testo_dialogo\"" 9461..9482) }
token: ElementEnd { end: Open, span: StrSpan(">" 9482..9483) }
token: Text { text: StrSpan("Molte cose. Hai tremato e sofferto. Hai pensato a morire. Hai saputo che cosa √® un risveglio. Ora sei sola e aspetti un dio." 9483..9608) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9610..9611)), span: StrSpan("</p>" 9608..9612) }
token: Text { text: StrSpan("\n\n" 9612..9614) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9615..9616), span: StrSpan("<p" 9614..9616) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9617..9622), value: StrSpan("testo_personaggio testo_maiuscoletto" 9624..9660), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9617..9661) }
token: ElementEnd { end: Open, span: StrSpan(">" 9661..9662) }
token: Text { text: StrSpan("Ariadne." 9662..9670) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9672..9673)), span: StrSpan("</p>" 9670..9674) }
token: Text { text: StrSpan("\n" 9674..9675) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9676..9677), span: StrSpan("<p" 9675..9677) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9678..9683), value: StrSpan("testo_dialogo" 9685..9698), span: StrSpan("class=\"testo_dialogo\"" 9678..9699) }
token: ElementEnd { end: Open, span: StrSpan(">" 9699..9700) }
token: Text { text: StrSpan("E lui com‚Äô√®? molto crudele?" 9700..9730) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9732..9733)), span: StrSpan("</p>" 9730..9734) }
token: Text { text: StrSpan("\n\n" 9734..9736) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9737..9738), span: StrSpan("<p" 9736..9738) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9739..9744), value: StrSpan("testo_personaggio testo_maiuscoletto" 9746..9782), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9739..9783) }
token: ElementEnd { end: Open, span: StrSpan(">" 9783..9784) }
token: Text { text: StrSpan("Leucotea." 9784..9793) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9795..9796)), span: StrSpan("</p>" 9793..9797) }
token: Text { text: StrSpan("\n" 9797..9798) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9799..9800), span: StrSpan("<p" 9798..9800) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9801..9806), value: StrSpan("testo_dialogo" 9808..9821), span: StrSpan("class=\"testo_dialogo\"" 9801..9822) }
token: ElementEnd { end: Open, span: StrSpan(">" 9822..9823) }
token: Text { text: StrSpan("Tutti gli d√®i sono crudeli. Che vuol dire? Ogni cosa divina √® crudele. Distrugge l‚Äôessere caduco che resiste. Per svegliarti pi√∫ forte, devi cedere al sonno. Nessun dio sa rimpiangere nulla." 9823..10018) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10020..10021)), span: StrSpan("</p>" 10018..10022) }
token: Text { text: StrSpan("\n\n" 10022..10024) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10025..10026), span: StrSpan("<p" 10024..10026) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10027..10032), value: StrSpan("testo_personaggio testo_maiuscoletto" 10034..10070), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10027..10071) }
token: ElementEnd { end: Open, span: StrSpan(">" 10071..10072) }
token: Text { text: StrSpan("Ariadne." 10072..10080) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10082..10083)), span: StrSpan("</p>" 10080..10084) }
token: Text { text: StrSpan("\n" 10084..10085) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10086..10087), span: StrSpan("<p" 10085..10087) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10088..10093), value: StrSpan("testo_dialogo" 10095..10108), span: StrSpan("class=\"testo_dialogo\"" 10088..10109) }
token: ElementEnd { end: Open, span: StrSpan(">" 10109..10110) }
token: Text { text: StrSpan("Il dio tebano‚Ä¶ questo tuo‚Ä¶ hai detto che uccide ridendo?" 10110..10170) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10172..10173)), span: StrSpan("</p>" 10170..10174) }
token: Text { text: StrSpan("\n\n" 10174..10176) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10177..10178), span: StrSpan("<p" 10176..10178) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10179..10184), value: StrSpan("testo_personaggio testo_maiuscoletto" 10186..10222), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10179..10223) }
token: ElementEnd { end: Open, span: StrSpan(">" 10223..10224) }
token: Text { text: StrSpan("Leucotea." 10224..10233) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10235..10236)), span: StrSpan("</p>" 10233..10237) }
token: Text { text: StrSpan("\n" 10237..10238) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10239..10240), span: StrSpan("<p" 10238..10240) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10241..10246), value: StrSpan("testo_dialogo" 10248..10261), span: StrSpan("class=\"testo_dialogo\"" 10241..10262) }
token: ElementEnd { end: Open, span: StrSpan(">" 10262..10263) }
token: Text { text: StrSpan("Chi gli resiste. Chi gli resiste s‚Äôannienta. Ma non √® pi√∫ spietato degli altri. Sorridere √® come il respiro per lui." 10263..10384) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10386..10387)), span: StrSpan("</p>" 10384..10388) }
token: Text { text: StrSpan("\n\n" 10388..10390) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10391..10392), span: StrSpan("<p" 10390..10392) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10393..10398), value: StrSpan("testo_personaggio testo_maiuscoletto" 10400..10436), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10393..10437) }
token: ElementEnd { end: Open, span: StrSpan(">" 10437..10438) }
token: Text { text: StrSpan("Ariadne." 10438..10446) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10448..10449)), span: StrSpan("</p>" 10446..10450) }
token: Text { text: StrSpan("\n" 10450..10451) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10452..10453), span: StrSpan("<p" 10451..10453) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10454..10459), value: StrSpan("testo_dialogo" 10461..10474), span: StrSpan("class=\"testo_dialogo\"" 10454..10475) }
token: ElementEnd { end: Open, span: StrSpan(">" 10475..10476) }
token: Text { text: StrSpan("Non √® diverso da un mortale." 10476..10505) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10507..10508)), span: StrSpan("</p>" 10505..10509) }
token: Text { text: StrSpan("\n\n" 10509..10511) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10512..10513), span: StrSpan("<p" 10511..10513) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10514..10519), value: StrSpan("testo_personaggio testo_maiuscoletto" 10521..10557), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10514..10558) }
token: ElementEnd { end: Open, span: StrSpan(">" 10558..10559) }
token: Text { text: StrSpan("Leucotea." 10559..10568) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10570..10571)), span: StrSpan("</p>" 10568..10572) }
token: Text { text: StrSpan("\n" 10572..10573) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10574..10575), span: StrSpan("<p" 10573..10575) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10576..10581), value: StrSpan("testo_dialogo" 10583..10596), span: StrSpan("class=\"testo_dialogo\"" 10576..10597) }
token: ElementEnd { end: Open, span: StrSpan(">" 10597..10598) }
token: Text { text: StrSpan("Anche questo √® un risveglio, bambina. Sar√† come amare un luogo, un corso d‚Äôacqua, un‚Äôora del giorno. Nessun uomo val tanto. Gli d√®i durano finch√© durano le cose che li fanno. Fin che le capre salteranno tra i pini e i vigneti, ti piacer√† e gli piacerai." 10598..10860) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10862..10863)), span: StrSpan("</p>" 10860..10864) }
token: Text { text: StrSpan("\n\n" 10864..10866) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10867..10868), span: StrSpan("<p" 10866..10868) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10869..10874), value: StrSpan("testo_personaggio testo_maiuscoletto" 10876..10912), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10869..10913) }
token: ElementEnd { end: Open, span: StrSpan(">" 10913..10914) }
token: Text { text: StrSpan("Ariadne." 10914..10922) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10924..10925)), span: StrSpan("</p>" 10922..10926) }
token: Text { text: StrSpan("\n" 10926..10927) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10928..10929), span: StrSpan("<p" 10927..10929) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10930..10935), value: StrSpan("testo_dialogo" 10937..10950), span: StrSpan("class=\"testo_dialogo\"" 10930..10951) }
token: ElementEnd { end: Open, span: StrSpan(">" 10951..10952) }
token: Text { text: StrSpan("Morir√≤ come tutte le capre." 10952..10980) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10982..10983)), span: StrSpan("</p>" 10980..10984) }
token: Text { text: StrSpan("\n\n" 10984..10986) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10987..10988), span: StrSpan("<p" 10986..10988) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10989..10994), value: StrSpan("testo_personaggio testo_maiuscoletto" 10996..11032), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10989..11033) }
token: ElementEnd { end: Open, span: StrSpan(">" 11033..11034) }
token: Text { text: StrSpan("Leucotea." 11034..11043) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11045..11046)), span: StrSpan("</p>" 11043..11047) }
token: Text { text: StrSpan("\n" 11047..11048) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11049..11050), span: StrSpan("<p" 11048..11050) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11051..11056), value: StrSpan("testo_dialogo" 11058..11071), span: StrSpan("class=\"testo_dialogo\"" 11051..11072) }
token: ElementEnd { end: Open, span: StrSpan(">" 11072..11073) }
token: Text { text: StrSpan("Sulle vigne, di notte, ci sono anche stelle. √à un dio notturno che ti aspetta. Non temere." 11073..11164) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11166..11167)), span: StrSpan("</p>" 11164..11168) }
token: Text { text: StrSpan("\n" 11168..11169) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 11171..11175)), span: StrSpan("</body>" 11169..11176) }
token: Text { text: StrSpan("\n" 11176..11177) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 11179..11183)), span: StrSpan("</html>" 11177..11184) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Gli uomini" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Di Cratos e Bia ‚Äì il Potere e la forza ‚Äì dice " 360..410) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("cite" 411..415), span: StrSpan("<cite" 410..415) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 416..421), value: StrSpan("testo_tondo" 423..434), span: StrSpan("class=\"testo_tondo\"" 416..435) }
token: ElementEnd { end: Open, span: StrSpan(">" 435..436) }
token: Text { text: StrSpan("Esiodo" 436..442) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("cite" 444..448)), span: StrSpan("</cite>" 442..449) }
token: Text { text: StrSpan(" che ¬´" 449..456) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 457..458), span: StrSpan("<q" 456..458) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 459..464), value: StrSpan("testo_no_virgolette" 466..485), span: StrSpan("class=\"testo_no_virgolette\"" 459..486) }
token: ElementEnd { end: Open, span: StrSpan(">" 486..487) }
token: Text { text: StrSpan("la casa non √® lontana da Zeus" 487..517) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 519..520)), span: StrSpan("</q>" 517..521) }
token: Text { text: StrSpan("¬ª, in premio dell‚Äôaiuto che gli diedero nella lotta contro i Titani. Tutti sanno della fuga di Zeus e dei suoi molti casi." 521..646) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 648..649)), span: StrSpan("</p>" 646..650) }
token: Text { text: StrSpan("\n\n" 650..652) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 653..654), span: StrSpan("<p" 652..654) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 655..660), value: StrSpan("testo_indicazioni_scena" 662..685), span: StrSpan("class=\"testo_indicazioni_scena\"" 655..686) }
token: ElementEnd { end: Open, span: StrSpan(">" 686..687) }
token: Text { text: StrSpan("(parlano Cratos e Bia)" 687..709) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 711..712)), span: StrSpan("</p>" 709..713) }
token: Text { text: StrSpan("\n\n\n" 713..716) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 717..718), span: StrSpan("<p" 716..718) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 719..724), value: StrSpan("testo_personaggio testo_maiuscoletto" 726..762), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 719..763) }
token: ElementEnd { end: Open, span: StrSpan(">" 763..764) }
token: Text { text: StrSpan("Cratos." 764..771) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 773..774)), span: StrSpan("</p>" 771..775) }
token: Text { text: StrSpan("\n" 775..776) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 777..778), span: StrSpan("<p" 776..778) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 779..784), value: StrSpan("testo_dialogo" 786..799), span: StrSpan("class=\"testo_dialogo\"" 779..800) }
token: ElementEnd { end: Open, span: StrSpan(">" 800..801) }
token: Text { text: StrSpan("Se n‚Äô√® andato e cammina tra gli uomini. Prende la strada delle valli, e si sofferma tra le vigne o in riva al mare. Qualche volta si spinge fino alle porte di una citt√†. Nessuno direbbe che √® Padre e Signore. Mi chiedo a volte cosa vuole, cosa cerca. Dopo che tanto si √® lottato per dargli il mondo ‚Äì le campagne, le vette e le nubi ‚Äì nelle mani. Potrebbe sedere quass√∫ indisturbato. Nossignore. Cammina." 801..1216) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1218..1219)), span: StrSpan("</p>" 1216..1220) }
token: Text { text: StrSpan("\n\n" 1220..1222) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1223..1224), span: StrSpan("<p" 1222..1224) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1225..1230), value: StrSpan("testo_personaggio testo_maiuscoletto" 1232..1268), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1225..1269) }
token: ElementEnd { end: Open, span: StrSpan(">" 1269..1270) }
token: Text { text: StrSpan("Bia." 1270..1274) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1276..1277)), span: StrSpan("</p>" 1274..1278) }
token: Text { text: StrSpan("\n" 1278..1279) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1280..1281), span: StrSpan("<p" 1279..1281) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1282..1287), value: StrSpan("testo_dialogo" 1289..1302), span: StrSpan("class=\"testo_dialogo\"" 1282..1303) }
token: ElementEnd { end: Open, span: StrSpan(">" 1303..1304) }
token: Text { text: StrSpan("Che c‚Äô√® di strano? Chi √® signore si scapriccia." 1304..1355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1357..1358)), span: StrSpan("</p>" 1355..1359) }
token: Text { text: StrSpan("\n\n" 1359..1361) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1362..1363), span: StrSpan("<p" 1361..1363) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1364..1369), value: StrSpan("testo_personaggio testo_maiuscoletto" 1371..1407), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1364..1408) }
token: ElementEnd { end: Open, span: StrSpan(">" 1408..1409) }
token: Text { text: StrSpan("Cratos." 1409..1416) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1418..1419)), span: StrSpan("</p>" 1416..1420) }
token: Text { text: StrSpan("\n" 1420..1421) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1422..1423), span: StrSpan("<p" 1421..1423) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1424..1429), value: StrSpan("testo_dialogo" 1431..1444), span: StrSpan("class=\"testo_dialogo\"" 1424..1445) }
token: ElementEnd { end: Open, span: StrSpan(">" 1445..1446) }
token: Text { text: StrSpan("Lontano dal monte e da noi, lo capisci? E deve a noialtri, servi suoi, se √® signore. S‚Äôaccontenti che il mondo lo teme e lo prega. Che gli fanno quei piccoli uomini?" 1446..1614) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1616..1617)), span: StrSpan("</p>" 1614..1618) }
token: Text { text: StrSpan("\n\n" 1618..1620) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1621..1622), span: StrSpan("<p" 1620..1622) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1623..1628), value: StrSpan("testo_personaggio testo_maiuscoletto" 1630..1666), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1623..1667) }
token: ElementEnd { end: Open, span: StrSpan(">" 1667..1668) }
token: Text { text: StrSpan("Bia." 1668..1672) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1674..1675)), span: StrSpan("</p>" 1672..1676) }
token: Text { text: StrSpan("\n" 1676..1677) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1678..1679), span: StrSpan("<p" 1677..1679) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1680..1685), value: StrSpan("testo_dialogo" 1687..1700), span: StrSpan("class=\"testo_dialogo\"" 1680..1701) }
token: ElementEnd { end: Open, span: StrSpan(">" 1701..1702) }
token: Text { text: StrSpan("Sono parte del mondo anche loro, mio caro." 1702..1744) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1746..1747)), span: StrSpan("</p>" 1744..1748) }
token: Text { text: StrSpan("\n\n" 1748..1750) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1751..1752), span: StrSpan("<p" 1750..1752) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1753..1758), value: StrSpan("testo_personaggio testo_maiuscoletto" 1760..1796), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1753..1797) }
token: ElementEnd { end: Open, span: StrSpan(">" 1797..1798) }
token: Text { text: StrSpan("Cratos." 1798..1805) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1807..1808)), span: StrSpan("</p>" 1805..1809) }
token: Text { text: StrSpan("\n" 1809..1810) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1811..1812), span: StrSpan("<p" 1810..1812) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1813..1818), value: StrSpan("testo_dialogo" 1820..1833), span: StrSpan("class=\"testo_dialogo\"" 1813..1834) }
token: ElementEnd { end: Open, span: StrSpan(">" 1834..1835) }
token: Text { text: StrSpan("Non so, qualcosa non √® pi√∫ com‚Äôera prima. Nostra madre lo disse: ¬´" 1835..1906) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 1907..1908), span: StrSpan("<q" 1906..1908) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1909..1914), value: StrSpan("testo_no_virgolette" 1916..1935), span: StrSpan("class=\"testo_no_virgolette\"" 1909..1936) }
token: ElementEnd { end: Open, span: StrSpan(">" 1936..1937) }
token: Text { text: StrSpan("Verr√† come la bufera, e le stagioni cambieranno" 1937..1985) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 1987..1988)), span: StrSpan("</q>" 1985..1989) }
token: Text { text: StrSpan("¬ª. Questo figlio del Monte che comanda col cenno, non √® pi√∫ come i vecchi signori ‚Äì la Notte, la Terra, il vecchio Cielo o il Caos. Si direbbe che il mondo √® diviso. Un tempo le cose accadevano. Di ogni cosa veniva la fine, ed era un tutto che viveva. Adesso invece c‚Äô√® una legge e c‚Äô√® una mente. Lui s‚Äô√® fatto immortale e con lui noi suoi servi. Anche i piccoli uomini pensano a noi; sanno che devono morire e ci contemplano. E fin qui li capisco, √® per questo che abbiamo combattuto i Titani. Ma che lui, il celeste che sopra il Monte ci promise questi doni, lasci le vette e se ne vada a scapricciarsi ogni momento e farsi uomo tra gli uomini, a me non piace. E a te, sorella?" 1989..2684) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2686..2687)), span: StrSpan("</p>" 2684..2688) }
token: Text { text: StrSpan("\n\n" 2688..2690) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2691..2692), span: StrSpan("<p" 2690..2692) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2693..2698), value: StrSpan("testo_personaggio testo_maiuscoletto" 2700..2736), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2693..2737) }
token: ElementEnd { end: Open, span: StrSpan(">" 2737..2738) }
token: Text { text: StrSpan("Bia." 2738..2742) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2744..2745)), span: StrSpan("</p>" 2742..2746) }
token: Text { text: StrSpan("\n" 2746..2747) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2748..2749), span: StrSpan("<p" 2747..2749) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2750..2755), value: StrSpan("testo_dialogo" 2757..2770), span: StrSpan("class=\"testo_dialogo\"" 2750..2771) }
token: ElementEnd { end: Open, span: StrSpan(">" 2771..2772) }
token: Text { text: StrSpan("Non sarebbe signore se la legge che ha fatto non potesse interromperla. Ma l‚Äôinterrompe poi davvero?" 2772..2874) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2876..2877)), span: StrSpan("</p>" 2874..2878) }
token: Text { text: StrSpan("\n\n" 2878..2880) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2881..2882), span: StrSpan("<p" 2880..2882) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2883..2888), value: StrSpan("testo_personaggio testo_maiuscoletto" 2890..2926), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2883..2927) }
token: ElementEnd { end: Open, span: StrSpan(">" 2927..2928) }
token: Text { text: StrSpan("Cratos." 2928..2935) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2937..2938)), span: StrSpan("</p>" 2935..2939) }
token: Text { text: StrSpan("\n" 2939..2940) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2941..2942), span: StrSpan("<p" 2940..2942) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2943..2948), value: StrSpan("testo_dialogo" 2950..2963), span: StrSpan("class=\"testo_dialogo\"" 2943..2964) }
token: ElementEnd { end: Open, span: StrSpan(">" 2964..2965) }
token: Text { text: StrSpan("Non lo capisco, questo √® il fatto. Quando noi ci buttammo sui monti, lui sorrideva come avesse gi√† vinto. Combatteva con cenni e con brevi parole. Non disse mai di esser sdegnato; il suo nemico era gi√† a terra e lui ancora sorrideva. Schiacci√≤ cos√≠ Titani e uomini. Allora mi piacque; non ebbe piet√†. E sorrise cos√≠ un‚Äôaltra volta: quando pens√≤ di dare agli uomini la donna, la Pandora, per punirli del furto del fuoco. Com‚Äô√® possibile che adesso si compiaccia di vigne e citt√†?" 2965..3457) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3459..3460)), span: StrSpan("</p>" 3457..3461) }
token: Text { text: StrSpan("\n\n" 3461..3463) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3464..3465), span: StrSpan("<p" 3463..3465) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3466..3471), value: StrSpan("testo_personaggio testo_maiuscoletto" 3473..3509), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3466..3510) }
token: ElementEnd { end: Open, span: StrSpan(">" 3510..3511) }
token: Text { text: StrSpan("Bia." 3511..3515) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3517..3518)), span: StrSpan("</p>" 3515..3519) }
token: Text { text: StrSpan("\n" 3519..3520) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3521..3522), span: StrSpan("<p" 3520..3522) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3523..3528), value: StrSpan("testo_dialogo" 3530..3543), span: StrSpan("class=\"testo_dialogo\"" 3523..3544) }
token: ElementEnd { end: Open, span: StrSpan(">" 3544..3545) }
token: Text { text: StrSpan("Forse la donna, la Pandora, non √® solo un malanno. Perch√© non vuoi che si compiaccia di costei, se fu un suo dono?" 3545..3661) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3663..3664)), span: StrSpan("</p>" 3661..3665) }
token: Text { text: StrSpan("\n\n" 3665..3667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3668..3669), span: StrSpan("<p" 3667..3669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3670..3675), value: StrSpan("testo_personaggio testo_maiuscoletto" 3677..3713), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3670..3714) }
token: ElementEnd { end: Open, span: StrSpan(">" 3714..3715) }
token: Text { text: StrSpan("Cratos." 3715..3722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3724..3725)), span: StrSpan("</p>" 3722..3726) }
token: Text { text: StrSpan("\n" 3726..3727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3728..3729), span: StrSpan("<p" 3727..3729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3730..3735), value: StrSpan("testo_dialogo" 3737..3750), span: StrSpan("class=\"testo_dialogo\"" 3730..3751) }
token: ElementEnd { end: Open, span: StrSpan(">" 3751..3752) }
token: Text { text: StrSpan("Ma tu sai cosa sono gli uomini? Miserabili cose che dovranno morire, pi√∫ miserabili dei vermi o delle foglie dell‚Äôaltr‚Äôanno che son morti ignorandolo. Loro invece lo sanno e lo dicono, e non smettono mai d‚Äôinvocarci, di volerci strappare un favore o uno sguardo, di accenderci fuochi, proprio quei fuochi che han rubato dentro il cavo della canna. E con le donne, con le offerte, coi canti e le belle parole, hanno ottenuto che noialtri, gli immortali, che qualcuno di noi discendesse tra loro, li guardasse benigno, ne avesse figlioli. Capisci il calcolo, l‚Äôastuzia miserabile e sfrontata? Ti persuadi perch√© mi ci scaldo?" 3752..4385) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4387..4388)), span: StrSpan("</p>" 4385..4389) }
token: Text { text: StrSpan("\n\n" 4389..4391) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4392..4393), span: StrSpan("<p" 4391..4393) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4394..4399), value: StrSpan("testo_personaggio testo_maiuscoletto" 4401..4437), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4394..4438) }
token: ElementEnd { end: Open, span: StrSpan(">" 4438..4439) }
token: Text { text: StrSpan("Bia." 4439..4443) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4445..4446)), span: StrSpan("</p>" 4443..4447) }
token: Text { text: StrSpan("\n" 4447..4448) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4449..4450), span: StrSpan("<p" 4448..4450) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4451..4456), value: StrSpan("testo_dialogo" 4458..4471), span: StrSpan("class=\"testo_dialogo\"" 4451..4472) }
token: ElementEnd { end: Open, span: StrSpan(">" 4472..4473) }
token: Text { text: StrSpan("Lo disse la madre, e lo dici tu stesso, che il mondo √® mutato. Non da oggi il Signore dei monti discende tra gli uomini. Dimentichi forse che visse nei tempi fuggiasco su un‚Äôisola del mare, e l√† mor√≠ e venne sepolto, come allora toccava agli d√®i?" 4473..4725) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4727..4728)), span: StrSpan("</p>" 4725..4729) }
token: Text { text: StrSpan("\n\n" 4729..4731) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4732..4733), span: StrSpan("<p" 4731..4733) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4734..4739), value: StrSpan("testo_personaggio testo_maiuscoletto" 4741..4777), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4734..4778) }
token: ElementEnd { end: Open, span: StrSpan(">" 4778..4779) }
token: Text { text: StrSpan("Cratos." 4779..4786) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4788..4789)), span: StrSpan("</p>" 4786..4790) }
token: Text { text: StrSpan("\n" 4790..4791) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4792..4793), span: StrSpan("<p" 4791..4793) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4794..4799), value: StrSpan("testo_dialogo" 4801..4814), span: StrSpan("class=\"testo_dialogo\"" 4794..4815) }
token: ElementEnd { end: Open, span: StrSpan(">" 4815..4816) }
token: Text { text: StrSpan("Queste cose si sanno." 4816..4837) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4839..4840)), span: StrSpan("</p>" 4837..4841) }
token: Text { text: StrSpan("\n\n" 4841..4843) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4844..4845), span: StrSpan("<p" 4843..4845) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4846..4851), value: StrSpan("testo_personaggio testo_maiuscoletto" 4853..4889), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4846..4890) }
token: ElementEnd { end: Open, span: StrSpan(">" 4890..4891) }
token: Text { text: StrSpan("Bia." 4891..4895) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4897..4898)), span: StrSpan("</p>" 4895..4899) }
token: Text { text: StrSpan("\n" 4899..4900) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4901..4902), span: StrSpan("<p" 4900..4902) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4903..4908), value: StrSpan("testo_dialogo" 4910..4923), span: StrSpan("class=\"testo_dialogo\"" 4903..4924) }
token: ElementEnd { end: Open, span: StrSpan(">" 4924..4925) }
token: Text { text: StrSpan("Ma non ne segue che il suo cenno sia scaduto. Sono invece scaduti i signori del Caos, quelli che un tempo hanno regnato senza legge. Prima l‚Äôuomo la belva e anche il sasso era dio. Tutto accadeva senza nome e senza legge. Ci voleva la fuga del dio, la grossa empiet√† del suo confino tra gli uomini quando ancora era bimbo e poppava alla capra, e poi la crescita sul monte tra le selve, le parole degli uomini e le leggi dei popoli, e il dolore la morte e il rimpianto, per fare del figlio di Crono il buon Giudice, la Mente immortale e inquieta. Tu credi di averlo aiutato a schiacciare i Titani? Se l‚Äôhai detto tu stesso: combatteva come avesse gi√† vinto. Il bambino rinato divenne signore vivendo tra gli uomini." 4925..5645) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5647..5648)), span: StrSpan("</p>" 5645..5649) }
token: Text { text: StrSpan("\n\n" 5649..5651) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5652..5653), span: StrSpan("<p" 5651..5653) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5654..5659), value: StrSpan("testo_personaggio testo_maiuscoletto" 5661..5697), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5654..5698) }
token: ElementEnd { end: Open, span: StrSpan(">" 5698..5699) }
token: Text { text: StrSpan("Cratos." 5699..5706) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5708..5709)), span: StrSpan("</p>" 5706..5710) }
token: Text { text: StrSpan("\n" 5710..5711) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5712..5713), span: StrSpan("<p" 5711..5713) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5714..5719), value: StrSpan("testo_dialogo" 5721..5734), span: StrSpan("class=\"testo_dialogo\"" 5714..5735) }
token: ElementEnd { end: Open, span: StrSpan(">" 5735..5736) }
token: Text { text: StrSpan("E sia pure. La legge valeva la pena. Ma perch√© insiste a ritornarci ora che √® il re di tutti noi?" 5736..5835) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5837..5838)), span: StrSpan("</p>" 5835..5839) }
token: Text { text: StrSpan("\n\n" 5839..5841) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5842..5843), span: StrSpan("<p" 5841..5843) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5844..5849), value: StrSpan("testo_personaggio testo_maiuscoletto" 5851..5887), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5844..5888) }
token: ElementEnd { end: Open, span: StrSpan(">" 5888..5889) }
token: Text { text: StrSpan("Bia." 5889..5893) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5895..5896)), span: StrSpan("</p>" 5893..5897) }
token: Text { text: StrSpan("\n" 5897..5898) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5899..5900), span: StrSpan("<p" 5898..5900) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5901..5906), value: StrSpan("testo_dialogo" 5908..5921), span: StrSpan("class=\"testo_dialogo\"" 5901..5922) }
token: ElementEnd { end: Open, span: StrSpan(">" 5922..5923) }
token: Text { text: StrSpan("Fratello fratello, vuoi capirla che il mondo, se pure non √® pi√∫ divino, proprio per questo √® sempre nuovo e sempre ricco, per chi ci discende dal Monte? La parola dell‚Äôuomo, che sa di patire e si affanna e possiede la terra, rivela a chi l‚Äôascolta meraviglie. Gli d√®i giovani, venuti sui signori del Caos, tutti camminano la terra fra gli uomini. E se pure qualcuno conserva l‚Äôamore dei luoghi montani, delle grotte, dei cieli selvaggi, questo fanno perch√© adesso gli uomini sono giunti anche l√† e la loro voce ama violare quei silenzi." 5923..6471) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6473..6474)), span: StrSpan("</p>" 6471..6475) }
token: Text { text: StrSpan("\n\n" 6475..6477) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6478..6479), span: StrSpan("<p" 6477..6479) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6480..6485), value: StrSpan("testo_personaggio testo_maiuscoletto" 6487..6523), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6480..6524) }
token: ElementEnd { end: Open, span: StrSpan(">" 6524..6525) }
token: Text { text: StrSpan("Cratos." 6525..6532) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6534..6535)), span: StrSpan("</p>" 6532..6536) }
token: Text { text: StrSpan("\n" 6536..6537) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6538..6539), span: StrSpan("<p" 6537..6539) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6540..6545), value: StrSpan("testo_dialogo" 6547..6560), span: StrSpan("class=\"testo_dialogo\"" 6540..6561) }
token: ElementEnd { end: Open, span: StrSpan(">" 6561..6562) }
token: Text { text: StrSpan("Passeggiasse soltanto, il figlio di Crono. Ascoltasse e punisse, secondo la legge. Ma com‚Äô√® che s‚Äôinduce a godere e lasciarsi godere, com‚Äô√® che ruba donne e figli a quei mortali?" 6562..6748) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6750..6751)), span: StrSpan("</p>" 6748..6752) }
token: Text { text: StrSpan("\n\n" 6752..6754) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6755..6756), span: StrSpan("<p" 6754..6756) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6757..6762), value: StrSpan("testo_personaggio testo_maiuscoletto" 6764..6800), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6757..6801) }
token: ElementEnd { end: Open, span: StrSpan(">" 6801..6802) }
token: Text { text: StrSpan("Bia." 6802..6806) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6808..6809)), span: StrSpan("</p>" 6806..6810) }
token: Text { text: StrSpan("\n" 6810..6811) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6812..6813), span: StrSpan("<p" 6811..6813) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6814..6819), value: StrSpan("testo_dialogo" 6821..6834), span: StrSpan("class=\"testo_dialogo\"" 6814..6835) }
token: ElementEnd { end: Open, span: StrSpan(">" 6835..6836) }
token: Text { text: StrSpan("Se tu ne avessi conosciuti, capiresti. Sono poveri vermi ma tutto fra loro √® imprevisto e scoperta. Si conosce la bestia, si conosce l‚Äôiddio, ma nessuno, nemmeno noialtri, sappiamo il fondo di quei cuori. C‚Äô√® persino, tra loro, chi osa mettersi contro il destino. Soltanto vivendo con loro e per loro si gusta il sapore del mondo." 6836..7172) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7174..7175)), span: StrSpan("</p>" 7172..7176) }
token: Text { text: StrSpan("\n\n" 7176..7178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7179..7180), span: StrSpan("<p" 7178..7180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7181..7186), value: StrSpan("testo_personaggio testo_maiuscoletto" 7188..7224), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7181..7225) }
token: ElementEnd { end: Open, span: StrSpan(">" 7225..7226) }
token: Text { text: StrSpan("Cratos." 7226..7233) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7235..7236)), span: StrSpan("</p>" 7233..7237) }
token: Text { text: StrSpan("\n" 7237..7238) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7239..7240), span: StrSpan("<p" 7238..7240) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7241..7246), value: StrSpan("testo_dialogo" 7248..7261), span: StrSpan("class=\"testo_dialogo\"" 7241..7262) }
token: ElementEnd { end: Open, span: StrSpan(">" 7262..7263) }
token: Text { text: StrSpan("O delle donne, delle figlie di Pandora, quelle bestie?" 7263..7317) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7319..7320)), span: StrSpan("</p>" 7317..7321) }
token: Text { text: StrSpan("\n\n" 7321..7323) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7324..7325), span: StrSpan("<p" 7323..7325) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7326..7331), value: StrSpan("testo_personaggio testo_maiuscoletto" 7333..7369), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7326..7370) }
token: ElementEnd { end: Open, span: StrSpan(">" 7370..7371) }
token: Text { text: StrSpan("Bia." 7371..7375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7377..7378)), span: StrSpan("</p>" 7375..7379) }
token: Text { text: StrSpan("\n" 7379..7380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7381..7382), span: StrSpan("<p" 7380..7382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7383..7388), value: StrSpan("testo_dialogo" 7390..7403), span: StrSpan("class=\"testo_dialogo\"" 7383..7404) }
token: ElementEnd { end: Open, span: StrSpan(">" 7404..7405) }
token: Text { text: StrSpan("Donne o bestie, √® lo stesso. Cosa credi di dire? Sono il frutto pi√∫ ricco della vita mortale." 7405..7500) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7502..7503)), span: StrSpan("</p>" 7500..7504) }
token: Text { text: StrSpan("\n\n" 7504..7506) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7507..7508), span: StrSpan("<p" 7506..7508) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7509..7514), value: StrSpan("testo_personaggio testo_maiuscoletto" 7516..7552), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7509..7553) }
token: ElementEnd { end: Open, span: StrSpan(">" 7553..7554) }
token: Text { text: StrSpan("Cratos." 7554..7561) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7563..7564)), span: StrSpan("</p>" 7561..7565) }
token: Text { text: StrSpan("\n" 7565..7566) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7567..7568), span: StrSpan("<p" 7566..7568) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7569..7574), value: StrSpan("testo_dialogo" 7576..7589), span: StrSpan("class=\"testo_dialogo\"" 7569..7590) }
token: ElementEnd { end: Open, span: StrSpan(">" 7590..7591) }
token: Text { text: StrSpan("Ma Zeus le accosta come bestia o come dio?" 7591..7633) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7635..7636)), span: StrSpan("</p>" 7633..7637) }
token: Text { text: StrSpan("\n\n" 7637..7639) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7640..7641), span: StrSpan("<p" 7639..7641) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7642..7647), value: StrSpan("testo_personaggio testo_maiuscoletto" 7649..7685), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7642..7686) }
token: ElementEnd { end: Open, span: StrSpan(">" 7686..7687) }
token: Text { text: StrSpan("Bia." 7687..7691) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7693..7694)), span: StrSpan("</p>" 7691..7695) }
token: Text { text: StrSpan("\n" 7695..7696) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7697..7698), span: StrSpan("<p" 7696..7698) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7699..7704), value: StrSpan("testo_dialogo" 7706..7719), span: StrSpan("class=\"testo_dialogo\"" 7699..7720) }
token: ElementEnd { end: Open, span: StrSpan(">" 7720..7721) }
token: Text { text: StrSpan("Sciocco, le accosta come uomo. √à tutto qui." 7721..7765) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7767..7768)), span: StrSpan("</p>" 7765..7769) }
token: Text { text: StrSpan("\n" 7769..7770) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 7772..7776)), span: StrSpan("</body>" 7770..7777) }
token: Text { text: StrSpan("\n" 7777..7778) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 7780..7784)), span: StrSpan("</html>" 7778..7785) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Il mistero" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Che i misteri eleusini presentassero agli iniziati un divino modello dell‚Äôimmortalit√† nelle figure di Dioniso e Demetra (e Core e Plutone) piace a tutti sentirlo. Quel che piace di meno √® sentir ricordare che Demetra √® la spiga ‚Äì il pane ‚Äì e Dioniso l‚Äôuva ‚Äì il vino. ¬´" 360..642) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 643..644), span: StrSpan("<q" 642..644) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 645..650), value: StrSpan("testo_no_virgolette" 652..671), span: StrSpan("class=\"testo_no_virgolette\"" 645..672) }
token: ElementEnd { end: Open, span: StrSpan(">" 672..673) }
token: Text { text: StrSpan("Prendete e mangiate‚Ä¶" 673..695) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 697..698)), span: StrSpan("</q>" 695..699) }
token: Text { text: StrSpan("¬ª" 699..701) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 703..704)), span: StrSpan("</p>" 701..705) }
token: Text { text: StrSpan("\n\n" 705..707) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 708..709), span: StrSpan("<p" 707..709) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 710..715), value: StrSpan("testo_indicazioni_scena" 717..740), span: StrSpan("class=\"testo_indicazioni_scena\"" 710..741) }
token: ElementEnd { end: Open, span: StrSpan(">" 741..742) }
token: Text { text: StrSpan("(parlano Dioniso e Demetra)" 742..769) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 771..772)), span: StrSpan("</p>" 769..773) }
token: Text { text: StrSpan("\n\n\n" 773..776) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 777..778), span: StrSpan("<p" 776..778) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 779..784), value: StrSpan("testo_personaggio testo_maiuscoletto" 786..822), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 779..823) }
token: ElementEnd { end: Open, span: StrSpan(">" 823..824) }
token: Text { text: StrSpan("Dioniso." 824..832) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 834..835)), span: StrSpan("</p>" 832..836) }
token: Text { text: StrSpan("\n" 836..837) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 838..839), span: StrSpan("<p" 837..839) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 840..845), value: StrSpan("testo_dialogo" 847..860), span: StrSpan("class=\"testo_dialogo\"" 840..861) }
token: ElementEnd { end: Open, span: StrSpan(">" 861..862) }
token: Text { text: StrSpan("Questi mortali sono proprio divertenti. Noi sappiamo le cose e loro le fanno. Senza di loro mi chiedo che cosa sarebbero i giorni. Che cosa saremmo noi Olimpici. Ci chiamano con le loro vocette, e ci d√†nno dei nomi." 862..1078) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1080..1081)), span: StrSpan("</p>" 1078..1082) }
token: Text { text: StrSpan("\n\n" 1082..1084) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1085..1086), span: StrSpan("<p" 1084..1086) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1087..1092), value: StrSpan("testo_personaggio testo_maiuscoletto" 1094..1130), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1087..1131) }
token: ElementEnd { end: Open, span: StrSpan(">" 1131..1132) }
token: Text { text: StrSpan("Demetra." 1132..1140) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1142..1143)), span: StrSpan("</p>" 1140..1144) }
token: Text { text: StrSpan("\n" 1144..1145) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1146..1147), span: StrSpan("<p" 1145..1147) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1148..1153), value: StrSpan("testo_dialogo" 1155..1168), span: StrSpan("class=\"testo_dialogo\"" 1148..1169) }
token: ElementEnd { end: Open, span: StrSpan(">" 1169..1170) }
token: Text { text: StrSpan("Io fui prima di loro, e ti so dire che si stava soli. La terra era selva, serpenti, tartarughe. Eravamo la terra, l‚Äôaria, l‚Äôacqua. Che si poteva fare? Fu allora che prendemmo l‚Äôabitudine di essere eterni." 1170..1380) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1382..1383)), span: StrSpan("</p>" 1380..1384) }
token: Text { text: StrSpan("\n\n" 1384..1386) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1387..1388), span: StrSpan("<p" 1386..1388) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1389..1394), value: StrSpan("testo_personaggio testo_maiuscoletto" 1396..1432), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1389..1433) }
token: ElementEnd { end: Open, span: StrSpan(">" 1433..1434) }
token: Text { text: StrSpan("Dioniso." 1434..1442) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1444..1445)), span: StrSpan("</p>" 1442..1446) }
token: Text { text: StrSpan("\n" 1446..1447) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1448..1449), span: StrSpan("<p" 1447..1449) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1450..1455), value: StrSpan("testo_dialogo" 1457..1470), span: StrSpan("class=\"testo_dialogo\"" 1450..1471) }
token: ElementEnd { end: Open, span: StrSpan(">" 1471..1472) }
token: Text { text: StrSpan("Questo con gli uomini non succede." 1472..1506) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1508..1509)), span: StrSpan("</p>" 1506..1510) }
token: Text { text: StrSpan("\n\n" 1510..1512) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1513..1514), span: StrSpan("<p" 1512..1514) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1515..1520), value: StrSpan("testo_personaggio testo_maiuscoletto" 1522..1558), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1515..1559) }
token: ElementEnd { end: Open, span: StrSpan(">" 1559..1560) }
token: Text { text: StrSpan("Demetra." 1560..1568) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1570..1571)), span: StrSpan("</p>" 1568..1572) }
token: Text { text: StrSpan("\n" 1572..1573) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1574..1575), span: StrSpan("<p" 1573..1575) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1576..1581), value: StrSpan("testo_dialogo" 1583..1596), span: StrSpan("class=\"testo_dialogo\"" 1576..1597) }
token: ElementEnd { end: Open, span: StrSpan(">" 1597..1598) }
token: Text { text: StrSpan("√à vero. Tutto quello che toccano diventa tempo. Diventa azione. Attesa e speranza. Anche il loro morire √® qualcosa." 1598..1715) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1717..1718)), span: StrSpan("</p>" 1715..1719) }
token: Text { text: StrSpan("\n\n" 1719..1721) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1722..1723), span: StrSpan("<p" 1721..1723) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1724..1729), value: StrSpan("testo_personaggio testo_maiuscoletto" 1731..1767), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1724..1768) }
token: ElementEnd { end: Open, span: StrSpan(">" 1768..1769) }
token: Text { text: StrSpan("Dioniso." 1769..1777) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1779..1780)), span: StrSpan("</p>" 1777..1781) }
token: Text { text: StrSpan("\n" 1781..1782) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1783..1784), span: StrSpan("<p" 1782..1784) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1785..1790), value: StrSpan("testo_dialogo" 1792..1805), span: StrSpan("class=\"testo_dialogo\"" 1785..1806) }
token: ElementEnd { end: Open, span: StrSpan(">" 1806..1807) }
token: Text { text: StrSpan("Hanno un modo di nominare se stessi e le cose e noialtri che arricchisce la vita. Come i vigneti che han saputo piantare su queste colline. Quando ho portato il tralcio a Eleusi io non credevo che di brutti pendii sassosi avrebbero fatto un cos√≠ dolce paese. Cos√≠ √® del grano, cos√≠ dei giardini. Dappertutto dove spendono fatiche e parole nasce un ritmo, un senso, un riposo." 1807..2186) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2188..2189)), span: StrSpan("</p>" 2186..2190) }
token: Text { text: StrSpan("\n\n" 2190..2192) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2193..2194), span: StrSpan("<p" 2192..2194) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2195..2200), value: StrSpan("testo_personaggio testo_maiuscoletto" 2202..2238), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2195..2239) }
token: ElementEnd { end: Open, span: StrSpan(">" 2239..2240) }
token: Text { text: StrSpan("Demetra." 2240..2248) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2250..2251)), span: StrSpan("</p>" 2248..2252) }
token: Text { text: StrSpan("\n" 2252..2253) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2254..2255), span: StrSpan("<p" 2253..2255) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2256..2261), value: StrSpan("testo_dialogo" 2263..2276), span: StrSpan("class=\"testo_dialogo\"" 2256..2277) }
token: ElementEnd { end: Open, span: StrSpan(">" 2277..2278) }
token: Text { text: StrSpan("E le storie che sanno raccontare di noi? Mi chiedo alle volte se io sono davvero la Gaia, la Rea, la C√≠bele, la Madre Grande, che mi dicono. Sanno darci dei nomi che ci rivelano a noi stessi, Iacco, e ci strappano alla greve eternit√† del destino per colorirci nei giorni e nei paesi dove siamo." 2278..2574) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2576..2577)), span: StrSpan("</p>" 2574..2578) }
token: Text { text: StrSpan("\n\n" 2578..2580) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2581..2582), span: StrSpan("<p" 2580..2582) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2583..2588), value: StrSpan("testo_personaggio testo_maiuscoletto" 2590..2626), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2583..2627) }
token: ElementEnd { end: Open, span: StrSpan(">" 2627..2628) }
token: Text { text: StrSpan("Dioniso." 2628..2636) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2638..2639)), span: StrSpan("</p>" 2636..2640) }
token: Text { text: StrSpan("\n" 2640..2641) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2642..2643), span: StrSpan("<p" 2641..2643) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2644..2649), value: StrSpan("testo_dialogo" 2651..2664), span: StrSpan("class=\"testo_dialogo\"" 2644..2665) }
token: ElementEnd { end: Open, span: StrSpan(">" 2665..2666) }
token: Text { text: StrSpan("Per noi tu sei sempre De√≤." 2666..2693) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2695..2696)), span: StrSpan("</p>" 2693..2697) }
token: Text { text: StrSpan("\n\n" 2697..2699) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2700..2701), span: StrSpan("<p" 2699..2701) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2702..2707), value: StrSpan("testo_personaggio testo_maiuscoletto" 2709..2745), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2702..2746) }
token: ElementEnd { end: Open, span: StrSpan(">" 2746..2747) }
token: Text { text: StrSpan("Demetra." 2747..2755) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2757..2758)), span: StrSpan("</p>" 2755..2759) }
token: Text { text: StrSpan("\n" 2759..2760) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2761..2762), span: StrSpan("<p" 2760..2762) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2763..2768), value: StrSpan("testo_dialogo" 2770..2783), span: StrSpan("class=\"testo_dialogo\"" 2763..2784) }
token: ElementEnd { end: Open, span: StrSpan(">" 2784..2785) }
token: Text { text: StrSpan("Chi direbbe che nella loro miseria hanno tanta ricchezza? Per loro io sono un monte selvoso e feroce, sono nuvola e grotta, sono signora dei leoni, delle biade e dei tori, delle rocche murate, la culla e la tomba, la madre di Core. Tutto devo a loro." 2785..3035) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3037..3038)), span: StrSpan("</p>" 3035..3039) }
token: Text { text: StrSpan("\n\n" 3039..3041) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3042..3043), span: StrSpan("<p" 3041..3043) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3044..3049), value: StrSpan("testo_personaggio testo_maiuscoletto" 3051..3087), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3044..3088) }
token: ElementEnd { end: Open, span: StrSpan(">" 3088..3089) }
token: Text { text: StrSpan("Dioniso." 3089..3097) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3099..3100)), span: StrSpan("</p>" 3097..3101) }
token: Text { text: StrSpan("\n" 3101..3102) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3103..3104), span: StrSpan("<p" 3102..3104) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3105..3110), value: StrSpan("testo_dialogo" 3112..3125), span: StrSpan("class=\"testo_dialogo\"" 3105..3126) }
token: ElementEnd { end: Open, span: StrSpan(">" 3126..3127) }
token: Text { text: StrSpan("Anche di me parlano sempre." 3127..3154) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3156..3157)), span: StrSpan("</p>" 3154..3158) }
token: Text { text: StrSpan("\n\n" 3158..3160) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3161..3162), span: StrSpan("<p" 3160..3162) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3163..3168), value: StrSpan("testo_personaggio testo_maiuscoletto" 3170..3206), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3163..3207) }
token: ElementEnd { end: Open, span: StrSpan(">" 3207..3208) }
token: Text { text: StrSpan("Demetra." 3208..3216) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3218..3219)), span: StrSpan("</p>" 3216..3220) }
token: Text { text: StrSpan("\n" 3220..3221) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3222..3223), span: StrSpan("<p" 3221..3223) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3224..3229), value: StrSpan("testo_dialogo" 3231..3244), span: StrSpan("class=\"testo_dialogo\"" 3224..3245) }
token: ElementEnd { end: Open, span: StrSpan(">" 3245..3246) }
token: Text { text: StrSpan("E non dovremmo, Iacco, aiutarli di pi√∫, compensarli in qualche modo, essere accanto a loro nella breve giornata che godono?" 3246..3370) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3372..3373)), span: StrSpan("</p>" 3370..3374) }
token: Text { text: StrSpan("\n\n" 3374..3376) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3377..3378), span: StrSpan("<p" 3376..3378) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3379..3384), value: StrSpan("testo_personaggio testo_maiuscoletto" 3386..3422), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3379..3423) }
token: ElementEnd { end: Open, span: StrSpan(">" 3423..3424) }
token: Text { text: StrSpan("Dioniso." 3424..3432) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3434..3435)), span: StrSpan("</p>" 3432..3436) }
token: Text { text: StrSpan("\n" 3436..3437) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3438..3439), span: StrSpan("<p" 3437..3439) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3440..3445), value: StrSpan("testo_dialogo" 3447..3460), span: StrSpan("class=\"testo_dialogo\"" 3440..3461) }
token: ElementEnd { end: Open, span: StrSpan(">" 3461..3462) }
token: Text { text: StrSpan("Tu gli hai dato le biade, io la vite, De√≤. Lasciali fare. C‚Äô√® bisogno d‚Äôaltro?" 3462..3546) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3548..3549)), span: StrSpan("</p>" 3546..3550) }
token: Text { text: StrSpan("\n\n" 3550..3552) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3553..3554), span: StrSpan("<p" 3552..3554) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3555..3560), value: StrSpan("testo_personaggio testo_maiuscoletto" 3562..3598), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3555..3599) }
token: ElementEnd { end: Open, span: StrSpan(">" 3599..3600) }
token: Text { text: StrSpan("Demetra." 3600..3608) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3610..3611)), span: StrSpan("</p>" 3608..3612) }
token: Text { text: StrSpan("\n" 3612..3613) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3614..3615), span: StrSpan("<p" 3613..3615) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3616..3621), value: StrSpan("testo_dialogo" 3623..3636), span: StrSpan("class=\"testo_dialogo\"" 3616..3637) }
token: ElementEnd { end: Open, span: StrSpan(">" 3637..3638) }
token: Text { text: StrSpan("Io non so come, ma quel che ci esce dalle mani √® sempre ambiguo. √à una scure a due tagli. Il mio Tritt√≤lemo per poco non si √® fatto scannare dall‚Äôospite scita cui recava il frumento. E anche tu, sento, ne fai scorrere di sangue innocente." 3638..3882) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3884..3885)), span: StrSpan("</p>" 3882..3886) }
token: Text { text: StrSpan("\n\n" 3886..3888) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3889..3890), span: StrSpan("<p" 3888..3890) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3891..3896), value: StrSpan("testo_personaggio testo_maiuscoletto" 3898..3934), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3891..3935) }
token: ElementEnd { end: Open, span: StrSpan(">" 3935..3936) }
token: Text { text: StrSpan("Dioniso." 3936..3944) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3946..3947)), span: StrSpan("</p>" 3944..3948) }
token: Text { text: StrSpan("\n" 3948..3949) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3950..3951), span: StrSpan("<p" 3949..3951) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3952..3957), value: StrSpan("testo_dialogo" 3959..3972), span: StrSpan("class=\"testo_dialogo\"" 3952..3973) }
token: ElementEnd { end: Open, span: StrSpan(">" 3973..3974) }
token: Text { text: StrSpan("Non sarebbero uomini, se non fossero tristi. La loro vita deve pur morire. Tutta la loro ricchezza √® la morte, che li costringe a industriarsi, a ricordare e prevedere. E poi non credere, De√≤, che il loro sangue valga pi√∫ del frumento o del vino con cui lo nutriamo. Il sangue √® vile, sporco, meschino." 3974..4280) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4282..4283)), span: StrSpan("</p>" 4280..4284) }
token: Text { text: StrSpan("\n\n" 4284..4286) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4287..4288), span: StrSpan("<p" 4286..4288) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4289..4294), value: StrSpan("testo_personaggio testo_maiuscoletto" 4296..4332), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4289..4333) }
token: ElementEnd { end: Open, span: StrSpan(">" 4333..4334) }
token: Text { text: StrSpan("Demetra." 4334..4342) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4344..4345)), span: StrSpan("</p>" 4342..4346) }
token: Text { text: StrSpan("\n" 4346..4347) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4348..4349), span: StrSpan("<p" 4347..4349) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4350..4355), value: StrSpan("testo_dialogo" 4357..4370), span: StrSpan("class=\"testo_dialogo\"" 4350..4371) }
token: ElementEnd { end: Open, span: StrSpan(">" 4371..4372) }
token: Text { text: StrSpan("Tu sei giovane, Iacco, e non sai che √® nel sangue che ci hanno trovato. Tu corri il mondo irrequieto, e la morte √® per te come vino che esalta. Ma non pensi che tutto i mortali han sofferto quel che raccontano di noi. Quante madri mortali han perduto la Core e non l‚Äôhanno riavuta mai pi√∫. Oggi ancora l‚Äôomaggio pi√∫ ricco che san farci √® versare del sangue." 4372..4738) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4740..4741)), span: StrSpan("</p>" 4738..4742) }
token: Text { text: StrSpan("\n\n" 4742..4744) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4745..4746), span: StrSpan("<p" 4744..4746) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4747..4752), value: StrSpan("testo_personaggio testo_maiuscoletto" 4754..4790), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4747..4791) }
token: ElementEnd { end: Open, span: StrSpan(">" 4791..4792) }
token: Text { text: StrSpan("Dioniso." 4792..4800) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4802..4803)), span: StrSpan("</p>" 4800..4804) }
token: Text { text: StrSpan("\n" 4804..4805) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4806..4807), span: StrSpan("<p" 4805..4807) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4808..4813), value: StrSpan("testo_dialogo" 4815..4828), span: StrSpan("class=\"testo_dialogo\"" 4808..4829) }
token: ElementEnd { end: Open, span: StrSpan(">" 4829..4830) }
token: Text { text: StrSpan("Ma √® un omaggio, De√≤? Tu sai meglio di me che uccidendo la vittima credevano un tempo di uccidere noi." 4830..4934) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4936..4937)), span: StrSpan("</p>" 4934..4938) }
token: Text { text: StrSpan("\n\n" 4938..4940) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4941..4942), span: StrSpan("<p" 4940..4942) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4943..4948), value: StrSpan("testo_personaggio testo_maiuscoletto" 4950..4986), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4943..4987) }
token: ElementEnd { end: Open, span: StrSpan(">" 4987..4988) }
token: Text { text: StrSpan("Demetra." 4988..4996) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4998..4999)), span: StrSpan("</p>" 4996..5000) }
token: Text { text: StrSpan("\n" 5000..5001) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5002..5003), span: StrSpan("<p" 5001..5003) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5004..5009), value: StrSpan("testo_dialogo" 5011..5024), span: StrSpan("class=\"testo_dialogo\"" 5004..5025) }
token: ElementEnd { end: Open, span: StrSpan(">" 5025..5026) }
token: Text { text: StrSpan("E puoi fargliene un torto? Per questo ti dico che ci hanno trovati nel sangue. Se per loro la morte √® la fine e il principio, dovevano ucciderci per vederci rinascere. Sono molto infelici, Iacco." 5026..5222) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5224..5225)), span: StrSpan("</p>" 5222..5226) }
token: Text { text: StrSpan("\n\n" 5226..5228) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5229..5230), span: StrSpan("<p" 5228..5230) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5231..5236), value: StrSpan("testo_personaggio testo_maiuscoletto" 5238..5274), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5231..5275) }
token: ElementEnd { end: Open, span: StrSpan(">" 5275..5276) }
token: Text { text: StrSpan("Dioniso." 5276..5284) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5286..5287)), span: StrSpan("</p>" 5284..5288) }
token: Text { text: StrSpan("\n" 5288..5289) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5290..5291), span: StrSpan("<p" 5289..5291) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5292..5297), value: StrSpan("testo_dialogo" 5299..5312), span: StrSpan("class=\"testo_dialogo\"" 5292..5313) }
token: ElementEnd { end: Open, span: StrSpan(">" 5313..5314) }
token: Text { text: StrSpan("Tu credi? A me paiono balordi. O forse no. Visto che tanto son mortali, d√†nno un senso alla vita uccidendosi. Loro le storie devon viverle e morirle. Prendi il fatto d‚ÄôIcario‚Ä¶" 5314..5494) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5496..5497)), span: StrSpan("</p>" 5494..5498) }
token: Text { text: StrSpan("\n\n" 5498..5500) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5501..5502), span: StrSpan("<p" 5500..5502) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5503..5508), value: StrSpan("testo_personaggio testo_maiuscoletto" 5510..5546), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5503..5547) }
token: ElementEnd { end: Open, span: StrSpan(">" 5547..5548) }
token: Text { text: StrSpan("Demetra." 5548..5556) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5558..5559)), span: StrSpan("</p>" 5556..5560) }
token: Text { text: StrSpan("\n" 5560..5561) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5562..5563), span: StrSpan("<p" 5561..5563) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5564..5569), value: StrSpan("testo_dialogo" 5571..5584), span: StrSpan("class=\"testo_dialogo\"" 5564..5585) }
token: ElementEnd { end: Open, span: StrSpan(">" 5585..5586) }
token: Text { text: StrSpan("Quella povera Er√≠gone‚Ä¶" 5586..5611) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5613..5614)), span: StrSpan("</p>" 5611..5615) }
token: Text { text: StrSpan("\n\n" 5615..5617) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5618..5619), span: StrSpan("<p" 5617..5619) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5620..5625), value: StrSpan("testo_personaggio testo_maiuscoletto" 5627..5663), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5620..5664) }
token: ElementEnd { end: Open, span: StrSpan(">" 5664..5665) }
token: Text { text: StrSpan("Dioniso." 5665..5673) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5675..5676)), span: StrSpan("</p>" 5673..5677) }
token: Text { text: StrSpan("\n" 5677..5678) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5679..5680), span: StrSpan("<p" 5678..5680) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5681..5686), value: StrSpan("testo_dialogo" 5688..5701), span: StrSpan("class=\"testo_dialogo\"" 5681..5702) }
token: ElementEnd { end: Open, span: StrSpan(">" 5702..5703) }
token: Text { text: StrSpan("S√≠, ma Icario si √® fatto ammazzare perch√© l‚Äôha voluto. Forse ha pensato che il suo sangue fosse vino. Vendemmiava, pigiava e svinava come un folle. Era la prima volta che su un‚Äôaia vedevano schiumare del mosto. Ne hanno spruzzato le siepi, i muri, le vanghe. Anche Er√≠gone c‚Äôimmerse le mani. Poi perch√© questo vecchio balordo va nei campi, dai pastori, a farli bere? Questi, ubriachi, avvelenati, inferociti, l‚Äôhanno sbranato sulla siepe come un capro e poi l‚Äôhanno sepolto perch√© fosse altro vino. Lui lo sapeva e l‚Äôha voluto. Doveva stupirsi la figlia, che aveva gustato quel vino? Lo sapeva anche lei. Che altro poteva, per finire questa storia, che impiccarsi nel sole come un grappolo d‚Äôuva? Non c‚Äô√® niente di triste. I mortali raccontano le storie col sangue." 5703..6491) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6493..6494)), span: StrSpan("</p>" 6491..6495) }
token: Text { text: StrSpan("\n\n" 6495..6497) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6498..6499), span: StrSpan("<p" 6497..6499) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6500..6505), value: StrSpan("testo_personaggio testo_maiuscoletto" 6507..6543), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6500..6544) }
token: ElementEnd { end: Open, span: StrSpan(">" 6544..6545) }
token: Text { text: StrSpan("Demetra." 6545..6553) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6555..6556)), span: StrSpan("</p>" 6553..6557) }
token: Text { text: StrSpan("\n" 6557..6558) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6559..6560), span: StrSpan("<p" 6558..6560) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6561..6566), value: StrSpan("testo_dialogo" 6568..6581), span: StrSpan("class=\"testo_dialogo\"" 6561..6582) }
token: ElementEnd { end: Open, span: StrSpan(">" 6582..6583) }
token: Text { text: StrSpan("E ti pare che questo sia degno di noi? Ti sei pur chiesto che cosa saremmo senza di loro, sai che un giorno potranno stancarsi di noi d√®i. Vedi dunque che il sangue, questo sangue meschino, t‚Äôimporta." 6583..6786) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6788..6789)), span: StrSpan("</p>" 6786..6790) }
token: Text { text: StrSpan("\n\n" 6790..6792) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6793..6794), span: StrSpan("<p" 6792..6794) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6795..6800), value: StrSpan("testo_personaggio testo_maiuscoletto" 6802..6838), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6795..6839) }
token: ElementEnd { end: Open, span: StrSpan(">" 6839..6840) }
token: Text { text: StrSpan("Dioniso." 6840..6848) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6850..6851)), span: StrSpan("</p>" 6848..6852) }
token: Text { text: StrSpan("\n" 6852..6853) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6854..6855), span: StrSpan("<p" 6853..6855) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6856..6861), value: StrSpan("testo_dialogo" 6863..6876), span: StrSpan("class=\"testo_dialogo\"" 6856..6877) }
token: ElementEnd { end: Open, span: StrSpan(">" 6877..6878) }
token: Text { text: StrSpan("Ma che vuoi che gli diamo? Qualunque cosa ne faranno sempre sangue." 6878..6945) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6947..6948)), span: StrSpan("</p>" 6945..6949) }
token: Text { text: StrSpan("\n\n" 6949..6951) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6952..6953), span: StrSpan("<p" 6951..6953) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6954..6959), value: StrSpan("testo_personaggio testo_maiuscoletto" 6961..6997), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6954..6998) }
token: ElementEnd { end: Open, span: StrSpan(">" 6998..6999) }
token: Text { text: StrSpan("Demetra." 6999..7007) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7009..7010)), span: StrSpan("</p>" 7007..7011) }
token: Text { text: StrSpan("\n" 7011..7012) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7013..7014), span: StrSpan("<p" 7012..7014) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7015..7020), value: StrSpan("testo_dialogo" 7022..7035), span: StrSpan("class=\"testo_dialogo\"" 7015..7036) }
token: ElementEnd { end: Open, span: StrSpan(">" 7036..7037) }
token: Text { text: StrSpan("C‚Äô√® un solo modo, e tu lo sai." 7037..7070) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7072..7073)), span: StrSpan("</p>" 7070..7074) }
token: Text { text: StrSpan("\n\n" 7074..7076) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7077..7078), span: StrSpan("<p" 7076..7078) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7079..7084), value: StrSpan("testo_personaggio testo_maiuscoletto" 7086..7122), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7079..7123) }
token: ElementEnd { end: Open, span: StrSpan(">" 7123..7124) }
token: Text { text: StrSpan("Dioniso." 7124..7132) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7134..7135)), span: StrSpan("</p>" 7132..7136) }
token: Text { text: StrSpan("\n" 7136..7137) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7138..7139), span: StrSpan("<p" 7137..7139) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7140..7145), value: StrSpan("testo_dialogo" 7147..7160), span: StrSpan("class=\"testo_dialogo\"" 7140..7161) }
token: ElementEnd { end: Open, span: StrSpan(">" 7161..7162) }
token: Text { text: StrSpan("Di‚Äô." 7162..7168) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7170..7171)), span: StrSpan("</p>" 7168..7172) }
token: Text { text: StrSpan("\n\n" 7172..7174) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7175..7176), span: StrSpan("<p" 7174..7176) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7177..7182), value: StrSpan("testo_personaggio testo_maiuscoletto" 7184..7220), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7177..7221) }
token: ElementEnd { end: Open, span: StrSpan(">" 7221..7222) }
token: Text { text: StrSpan("Demetra." 7222..7230) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7232..7233)), span: StrSpan("</p>" 7230..7234) }
token: Text { text: StrSpan("\n" 7234..7235) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7236..7237), span: StrSpan("<p" 7235..7237) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7238..7243), value: StrSpan("testo_dialogo" 7245..7258), span: StrSpan("class=\"testo_dialogo\"" 7238..7259) }
token: ElementEnd { end: Open, span: StrSpan(">" 7259..7260) }
token: Text { text: StrSpan("Dare un senso a quel loro morire." 7260..7293) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7295..7296)), span: StrSpan("</p>" 7293..7297) }
token: Text { text: StrSpan("\n\n" 7297..7299) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7300..7301), span: StrSpan("<p" 7299..7301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7302..7307), value: StrSpan("testo_personaggio testo_maiuscoletto" 7309..7345), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7302..7346) }
token: ElementEnd { end: Open, span: StrSpan(">" 7346..7347) }
token: Text { text: StrSpan("Dioniso." 7347..7355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7357..7358)), span: StrSpan("</p>" 7355..7359) }
token: Text { text: StrSpan("\n" 7359..7360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7361..7362), span: StrSpan("<p" 7360..7362) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7363..7368), value: StrSpan("testo_dialogo" 7370..7383), span: StrSpan("class=\"testo_dialogo\"" 7363..7384) }
token: ElementEnd { end: Open, span: StrSpan(">" 7384..7385) }
token: Text { text: StrSpan("Come dici?" 7385..7395) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7397..7398)), span: StrSpan("</p>" 7395..7399) }
token: Text { text: StrSpan("\n\n" 7399..7401) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7402..7403), span: StrSpan("<p" 7401..7403) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7404..7409), value: StrSpan("testo_personaggio testo_maiuscoletto" 7411..7447), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7404..7448) }
token: ElementEnd { end: Open, span: StrSpan(">" 7448..7449) }
token: Text { text: StrSpan("Demetra." 7449..7457) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7459..7460)), span: StrSpan("</p>" 7457..7461) }
token: Text { text: StrSpan("\n" 7461..7462) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7463..7464), span: StrSpan("<p" 7462..7464) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7465..7470), value: StrSpan("testo_dialogo" 7472..7485), span: StrSpan("class=\"testo_dialogo\"" 7465..7486) }
token: ElementEnd { end: Open, span: StrSpan(">" 7486..7487) }
token: Text { text: StrSpan("Insegnargli la vita beata." 7487..7513) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7515..7516)), span: StrSpan("</p>" 7513..7517) }
token: Text { text: StrSpan("\n\n" 7517..7519) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7520..7521), span: StrSpan("<p" 7519..7521) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7522..7527), value: StrSpan("testo_personaggio testo_maiuscoletto" 7529..7565), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7522..7566) }
token: ElementEnd { end: Open, span: StrSpan(">" 7566..7567) }
token: Text { text: StrSpan("Dioniso." 7567..7575) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7577..7578)), span: StrSpan("</p>" 7575..7579) }
token: Text { text: StrSpan("\n" 7579..7580) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7581..7582), span: StrSpan("<p" 7580..7582) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7583..7588), value: StrSpan("testo_dialogo" 7590..7603), span: StrSpan("class=\"testo_dialogo\"" 7583..7604) }
token: ElementEnd { end: Open, span: StrSpan(">" 7604..7605) }
token: Text { text: StrSpan("Ma √® un tentare il destino, De√≤. Sono mortali." 7605..7653) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7655..7656)), span: StrSpan("</p>" 7653..7657) }
token: Text { text: StrSpan("\n\n" 7657..7659) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7660..7661), span: StrSpan("<p" 7659..7661) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7662..7667), value: StrSpan("testo_personaggio testo_maiuscoletto" 7669..7705), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7662..7706) }
token: ElementEnd { end: Open, span: StrSpan(">" 7706..7707) }
token: Text { text: StrSpan("Demetra." 7707..7715) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7717..7718)), span: StrSpan("</p>" 7715..7719) }
token: Text { text: StrSpan("\n" 7719..7720) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7721..7722), span: StrSpan("<p" 7720..7722) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7723..7728), value: StrSpan("testo_dialogo" 7730..7743), span: StrSpan("class=\"testo_dialogo\"" 7723..7744) }
token: ElementEnd { end: Open, span: StrSpan(">" 7744..7745) }
token: Text { text: StrSpan("Sta‚Äô a sentire. Verr√† il giorno che ci penseranno da soli. E lo faranno senza noi, con un racconto. Parleranno di uomini che hanno vinto la morte. Gi√† qualcuno di loro l‚Äôhan messo nel cielo, qualcuno scende nell‚Äôinferno ogni sei mesi. Uno di loro ha combattuto con la Morte e le ha strappato una creatura‚Ä¶ Capiscimi, Iacco. Faranno da soli. E allora noi ritorneremo quel che fummo: aria, acqua e terra." 7745..8157) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8159..8160)), span: StrSpan("</p>" 8157..8161) }
token: Text { text: StrSpan("\n\n" 8161..8163) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8164..8165), span: StrSpan("<p" 8163..8165) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8166..8171), value: StrSpan("testo_personaggio testo_maiuscoletto" 8173..8209), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8166..8210) }
token: ElementEnd { end: Open, span: StrSpan(">" 8210..8211) }
token: Text { text: StrSpan("Dioniso." 8211..8219) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8221..8222)), span: StrSpan("</p>" 8219..8223) }
token: Text { text: StrSpan("\n" 8223..8224) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8225..8226), span: StrSpan("<p" 8224..8226) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8227..8232), value: StrSpan("testo_dialogo" 8234..8247), span: StrSpan("class=\"testo_dialogo\"" 8227..8248) }
token: ElementEnd { end: Open, span: StrSpan(">" 8248..8249) }
token: Text { text: StrSpan("Non vivranno pi√∫ a lungo, per questo." 8249..8287) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8289..8290)), span: StrSpan("</p>" 8287..8291) }
token: Text { text: StrSpan("\n\n" 8291..8293) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8294..8295), span: StrSpan("<p" 8293..8295) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8296..8301), value: StrSpan("testo_personaggio testo_maiuscoletto" 8303..8339), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8296..8340) }
token: ElementEnd { end: Open, span: StrSpan(">" 8340..8341) }
token: Text { text: StrSpan("Demetra." 8341..8349) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8351..8352)), span: StrSpan("</p>" 8349..8353) }
token: Text { text: StrSpan("\n" 8353..8354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8355..8356), span: StrSpan("<p" 8354..8356) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8357..8362), value: StrSpan("testo_dialogo" 8364..8377), span: StrSpan("class=\"testo_dialogo\"" 8357..8378) }
token: ElementEnd { end: Open, span: StrSpan(">" 8378..8379) }
token: Text { text: StrSpan("Sciocco ragazzo, cosa credi? Ma morire avr√† un senso. Moriranno per rinascere anche loro, e non avranno pi√∫ bisogno di noialtri." 8379..8509) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8511..8512)), span: StrSpan("</p>" 8509..8513) }
token: Text { text: StrSpan("\n\n" 8513..8515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8516..8517), span: StrSpan("<p" 8515..8517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8518..8523), value: StrSpan("testo_personaggio testo_maiuscoletto" 8525..8561), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8518..8562) }
token: ElementEnd { end: Open, span: StrSpan(">" 8562..8563) }
token: Text { text: StrSpan("Dioniso." 8563..8571) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8573..8574)), span: StrSpan("</p>" 8571..8575) }
token: Text { text: StrSpan("\n" 8575..8576) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8577..8578), span: StrSpan("<p" 8576..8578) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8579..8584), value: StrSpan("testo_dialogo" 8586..8599), span: StrSpan("class=\"testo_dialogo\"" 8579..8600) }
token: ElementEnd { end: Open, span: StrSpan(">" 8600..8601) }
token: Text { text: StrSpan("Che vuoi fare, De√≤?" 8601..8621) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8623..8624)), span: StrSpan("</p>" 8621..8625) }
token: Text { text: StrSpan("\n\n" 8625..8627) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8628..8629), span: StrSpan("<p" 8627..8629) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8630..8635), value: StrSpan("testo_personaggio testo_maiuscoletto" 8637..8673), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8630..8674) }
token: ElementEnd { end: Open, span: StrSpan(">" 8674..8675) }
token: Text { text: StrSpan("Demetra." 8675..8683) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8685..8686)), span: StrSpan("</p>" 8683..8687) }
token: Text { text: StrSpan("\n" 8687..8688) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8689..8690), span: StrSpan("<p" 8688..8690) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8691..8696), value: StrSpan("testo_dialogo" 8698..8711), span: StrSpan("class=\"testo_dialogo\"" 8691..8712) }
token: ElementEnd { end: Open, span: StrSpan(">" 8712..8713) }
token: Text { text: StrSpan("Insegnargli che ci possono eguagliare di l√† dal dolore e dalla morte. Ma dirglielo noi. Come il grano e la vite discendono all‚ÄôAde per nascere, cos√≠ insegnargli che la morte anche per loro √® nuova vita. Dargli questo racconto. Condurli per questo racconto. Insegnargli un destino che s‚Äôintrecci col nostro." 8713..9026) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9028..9029)), span: StrSpan("</p>" 9026..9030) }
token: Text { text: StrSpan("\n\n" 9030..9032) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9033..9034), span: StrSpan("<p" 9032..9034) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9035..9040), value: StrSpan("testo_personaggio testo_maiuscoletto" 9042..9078), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9035..9079) }
token: ElementEnd { end: Open, span: StrSpan(">" 9079..9080) }
token: Text { text: StrSpan("Dioniso." 9080..9088) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9090..9091)), span: StrSpan("</p>" 9088..9092) }
token: Text { text: StrSpan("\n" 9092..9093) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9094..9095), span: StrSpan("<p" 9093..9095) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9096..9101), value: StrSpan("testo_dialogo" 9103..9116), span: StrSpan("class=\"testo_dialogo\"" 9096..9117) }
token: ElementEnd { end: Open, span: StrSpan(">" 9117..9118) }
token: Text { text: StrSpan("Moriranno lo stesso." 9118..9138) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9140..9141)), span: StrSpan("</p>" 9138..9142) }
token: Text { text: StrSpan("\n\n" 9142..9144) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9145..9146), span: StrSpan("<p" 9144..9146) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9147..9152), value: StrSpan("testo_personaggio testo_maiuscoletto" 9154..9190), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9147..9191) }
token: ElementEnd { end: Open, span: StrSpan(">" 9191..9192) }
token: Text { text: StrSpan("Demetra." 9192..9200) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9202..9203)), span: StrSpan("</p>" 9200..9204) }
token: Text { text: StrSpan("\n" 9204..9205) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9206..9207), span: StrSpan("<p" 9205..9207) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9208..9213), value: StrSpan("testo_dialogo" 9215..9228), span: StrSpan("class=\"testo_dialogo\"" 9208..9229) }
token: ElementEnd { end: Open, span: StrSpan(">" 9229..9230) }
token: Text { text: StrSpan("Moriranno e avran vinta la morte. Vedranno qualcosa oltre il sangue, vedranno noi due. Non temeranno pi√∫ la morte e non avranno pi√∫ bisogno di placarla versando altro sangue." 9230..9406) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9408..9409)), span: StrSpan("</p>" 9406..9410) }
token: Text { text: StrSpan("\n\n" 9410..9412) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9413..9414), span: StrSpan("<p" 9412..9414) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9415..9420), value: StrSpan("testo_personaggio testo_maiuscoletto" 9422..9458), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9415..9459) }
token: ElementEnd { end: Open, span: StrSpan(">" 9459..9460) }
token: Text { text: StrSpan("Dioniso." 9460..9468) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9470..9471)), span: StrSpan("</p>" 9468..9472) }
token: Text { text: StrSpan("\n" 9472..9473) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9474..9475), span: StrSpan("<p" 9473..9475) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9476..9481), value: StrSpan("testo_dialogo" 9483..9496), span: StrSpan("class=\"testo_dialogo\"" 9476..9497) }
token: ElementEnd { end: Open, span: StrSpan(">" 9497..9498) }
token: Text { text: StrSpan("Si pu√≤ farlo, De√≤, si pu√≤ farlo. Sar√† il racconto della vita eterna. Quasi li invidio. Non sapranno il destino e saranno immortali. Ma non sperare che si stagni il sangue." 9498..9673) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9675..9676)), span: StrSpan("</p>" 9673..9677) }
token: Text { text: StrSpan("\n\n" 9677..9679) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9680..9681), span: StrSpan("<p" 9679..9681) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9682..9687), value: StrSpan("testo_personaggio testo_maiuscoletto" 9689..9725), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9682..9726) }
token: ElementEnd { end: Open, span: StrSpan(">" 9726..9727) }
token: Text { text: StrSpan("Demetra." 9727..9735) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9737..9738)), span: StrSpan("</p>" 9735..9739) }
token: Text { text: StrSpan("\n" 9739..9740) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9741..9742), span: StrSpan("<p" 9740..9742) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9743..9748), value: StrSpan("testo_dialogo" 9750..9763), span: StrSpan("class=\"testo_dialogo\"" 9743..9764) }
token: ElementEnd { end: Open, span: StrSpan(">" 9764..9765) }
token: Text { text: StrSpan("Penseranno soltanto all‚Äôeterno. Se mai, c‚Äô√® il pericolo che trascurino queste ricche campagne." 9765..9864) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9866..9867)), span: StrSpan("</p>" 9864..9868) }
token: Text { text: StrSpan("\n\n" 9868..9870) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9871..9872), span: StrSpan("<p" 9870..9872) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9873..9878), value: StrSpan("testo_personaggio testo_maiuscoletto" 9880..9916), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9873..9917) }
token: ElementEnd { end: Open, span: StrSpan(">" 9917..9918) }
token: Text { text: StrSpan("Dioniso." 9918..9926) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9928..9929)), span: StrSpan("</p>" 9926..9930) }
token: Text { text: StrSpan("\n" 9930..9931) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9932..9933), span: StrSpan("<p" 9931..9933) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9934..9939), value: StrSpan("testo_dialogo" 9941..9954), span: StrSpan("class=\"testo_dialogo\"" 9934..9955) }
token: ElementEnd { end: Open, span: StrSpan(">" 9955..9956) }
token: Text { text: StrSpan("Intanto. Ma una volta che il grano e la vigna avranno il senso della vita eterna, sai che cosa gli uomini vedranno nel pane e nel vino? Carne e sangue, come adesso, come sempre. E carne e sangue gronderanno, non pi√∫ per placare la morte, ma per raggiungere l‚Äôeterno che li aspetta." 9956..10240) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10242..10243)), span: StrSpan("</p>" 10240..10244) }
token: Text { text: StrSpan("\n\n" 10244..10246) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10247..10248), span: StrSpan("<p" 10246..10248) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10249..10254), value: StrSpan("testo_personaggio testo_maiuscoletto" 10256..10292), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10249..10293) }
token: ElementEnd { end: Open, span: StrSpan(">" 10293..10294) }
token: Text { text: StrSpan("Demetra." 10294..10302) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10304..10305)), span: StrSpan("</p>" 10302..10306) }
token: Text { text: StrSpan("\n" 10306..10307) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10308..10309), span: StrSpan("<p" 10307..10309) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10310..10315), value: StrSpan("testo_dialogo" 10317..10330), span: StrSpan("class=\"testo_dialogo\"" 10310..10331) }
token: ElementEnd { end: Open, span: StrSpan(">" 10331..10332) }
token: Text { text: StrSpan("Si direbbe che vedi il futuro. Come puoi dirlo?" 10332..10379) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10381..10382)), span: StrSpan("</p>" 10379..10383) }
token: Text { text: StrSpan("\n\n" 10383..10385) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10386..10387), span: StrSpan("<p" 10385..10387) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10388..10393), value: StrSpan("testo_personaggio testo_maiuscoletto" 10395..10431), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10388..10432) }
token: ElementEnd { end: Open, span: StrSpan(">" 10432..10433) }
token: Text { text: StrSpan("Dioniso." 10433..10441) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10443..10444)), span: StrSpan("</p>" 10441..10445) }
token: Text { text: StrSpan("\n" 10445..10446) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10447..10448), span: StrSpan("<p" 10446..10448) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10449..10454), value: StrSpan("testo_dialogo" 10456..10469), span: StrSpan("class=\"testo_dialogo\"" 10449..10470) }
token: ElementEnd { end: Open, span: StrSpan(">" 10470..10471) }
token: Text { text: StrSpan("Basta avere veduto il passato, De√≤. Credi a me. Ma ti approvo. Sar√† sempre un racconto." 10471..10560) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10562..10563)), span: StrSpan("</p>" 10560..10564) }
token: Text { text: StrSpan("\n" 10564..10565) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 10567..10571)), span: StrSpan("</body>" 10565..10572) }
token: Text { text: StrSpan("\n" 10572..10573) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 10575..10579)), span: StrSpan("</html>" 10573..10580) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Il diluvio" 340..350) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 352..354)), span: StrSpan("</h1>" 350..355) }
token: Text { text: StrSpan("\n\n" 355..357) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 358..359), span: StrSpan("<p" 357..359) }
token: ElementEnd { end: Open, span: StrSpan(">" 359..360) }
token: Text { text: StrSpan("Anche il diluvio greco fu il castigo di un genere umano che aveva perso il rispetto per gli d√®i. Si sa che la terra venne poi ripopolata lanciando certi sassi." 360..520) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 522..523)), span: StrSpan("</p>" 520..524) }
token: Text { text: StrSpan("\n\n" 524..526) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 527..528), span: StrSpan("<p" 526..528) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 529..534), value: StrSpan("testo_indicazioni_scena" 536..559), span: StrSpan("class=\"testo_indicazioni_scena\"" 529..560) }
token: ElementEnd { end: Open, span: StrSpan(">" 560..561) }
token: Text { text: StrSpan("(parlano un satiro e un‚Äôamadriade)" 561..597) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 599..600)), span: StrSpan("</p>" 597..601) }
token: Text { text: StrSpan("\n\n\n" 601..604) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 605..606), span: StrSpan("<p" 604..606) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 607..612), value: StrSpan("testo_personaggio testo_maiuscoletto" 614..650), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 607..651) }
token: ElementEnd { end: Open, span: StrSpan(">" 651..652) }
token: Text { text: StrSpan("Amadriade." 652..662) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 664..665)), span: StrSpan("</p>" 662..666) }
token: Text { text: StrSpan("\n" 666..667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 668..669), span: StrSpan("<p" 667..669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 670..675), value: StrSpan("testo_dialogo" 677..690), span: StrSpan("class=\"testo_dialogo\"" 670..691) }
token: ElementEnd { end: Open, span: StrSpan(">" 691..692) }
token: Text { text: StrSpan("Mi domando cosa dicono di quest‚Äôacqua i mortali." 692..742) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 744..745)), span: StrSpan("</p>" 742..746) }
token: Text { text: StrSpan("\n\n" 746..748) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 749..750), span: StrSpan("<p" 748..750) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 751..756), value: StrSpan("testo_personaggio testo_maiuscoletto" 758..794), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 751..795) }
token: ElementEnd { end: Open, span: StrSpan(">" 795..796) }
token: Text { text: StrSpan("Satiro." 796..803) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 805..806)), span: StrSpan("</p>" 803..807) }
token: Text { text: StrSpan("\n" 807..808) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 809..810), span: StrSpan("<p" 808..810) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 811..816), value: StrSpan("testo_dialogo" 818..831), span: StrSpan("class=\"testo_dialogo\"" 811..832) }
token: ElementEnd { end: Open, span: StrSpan(">" 832..833) }
token: Text { text: StrSpan("Che ne sanno? La prendono. Qualcuno ci spera magari un migliore raccolto." 833..906) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 908..909)), span: StrSpan("</p>" 906..910) }
token: Text { text: StrSpan("\n\n" 910..912) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 913..914), span: StrSpan("<p" 912..914) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 915..920), value: StrSpan("testo_personaggio testo_maiuscoletto" 922..958), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 915..959) }
token: ElementEnd { end: Open, span: StrSpan(">" 959..960) }
token: Text { text: StrSpan("Amadriade." 960..970) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 972..973)), span: StrSpan("</p>" 970..974) }
token: Text { text: StrSpan("\n" 974..975) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 976..977), span: StrSpan("<p" 975..977) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 978..983), value: StrSpan("testo_dialogo" 985..998), span: StrSpan("class=\"testo_dialogo\"" 978..999) }
token: ElementEnd { end: Open, span: StrSpan(">" 999..1000) }
token: Text { text: StrSpan("A quest‚Äôora la piena dei fiumi ha cominciato a sradicare le piante. Ormai piove sull‚Äôacqua dappertutto." 1000..1107) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1109..1110)), span: StrSpan("</p>" 1107..1111) }
token: Text { text: StrSpan("\n\n" 1111..1113) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1114..1115), span: StrSpan("<p" 1113..1115) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1116..1121), value: StrSpan("testo_personaggio testo_maiuscoletto" 1123..1159), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1116..1160) }
token: ElementEnd { end: Open, span: StrSpan(">" 1160..1161) }
token: Text { text: StrSpan("Satiro." 1161..1168) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1170..1171)), span: StrSpan("</p>" 1168..1172) }
token: Text { text: StrSpan("\n" 1172..1173) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1174..1175), span: StrSpan("<p" 1173..1175) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1176..1181), value: StrSpan("testo_dialogo" 1183..1196), span: StrSpan("class=\"testo_dialogo\"" 1176..1197) }
token: ElementEnd { end: Open, span: StrSpan(">" 1197..1198) }
token: Text { text: StrSpan("Stanno tappati nelle grotte e nei tuguri sui monti. Ascoltano piovere. Pensano a quelli delle valli che combattono l‚Äôacqua, e s‚Äôilludono." 1198..1339) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1341..1342)), span: StrSpan("</p>" 1339..1343) }
token: Text { text: StrSpan("\n\n" 1343..1345) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1346..1347), span: StrSpan("<p" 1345..1347) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1348..1353), value: StrSpan("testo_personaggio testo_maiuscoletto" 1355..1391), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1348..1392) }
token: ElementEnd { end: Open, span: StrSpan(">" 1392..1393) }
token: Text { text: StrSpan("Amadriade." 1393..1403) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1405..1406)), span: StrSpan("</p>" 1403..1407) }
token: Text { text: StrSpan("\n" 1407..1408) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1409..1410), span: StrSpan("<p" 1408..1410) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1411..1416), value: StrSpan("testo_dialogo" 1418..1431), span: StrSpan("class=\"testo_dialogo\"" 1411..1432) }
token: ElementEnd { end: Open, span: StrSpan(">" 1432..1433) }
token: Text { text: StrSpan("Fin che dura la notte s‚Äôilludono. Ma domani, nella luce paurosa, quando vedranno un solo mare fino al cielo, e le montagne impiccolite, non rientreranno nelle grotte. Guarderanno. Si butteranno un sacco in testa e guarderanno." 1433..1661) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1663..1664)), span: StrSpan("</p>" 1661..1665) }
token: Text { text: StrSpan("\n\n" 1665..1667) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1668..1669), span: StrSpan("<p" 1667..1669) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1670..1675), value: StrSpan("testo_personaggio testo_maiuscoletto" 1677..1713), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1670..1714) }
token: ElementEnd { end: Open, span: StrSpan(">" 1714..1715) }
token: Text { text: StrSpan("Satiro." 1715..1722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1724..1725)), span: StrSpan("</p>" 1722..1726) }
token: Text { text: StrSpan("\n" 1726..1727) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1728..1729), span: StrSpan("<p" 1727..1729) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1730..1735), value: StrSpan("testo_dialogo" 1737..1750), span: StrSpan("class=\"testo_dialogo\"" 1730..1751) }
token: ElementEnd { end: Open, span: StrSpan(">" 1751..1752) }
token: Text { text: StrSpan("Li confondi con le bestie selvatiche. Nessun mortale sa capire che muore e guardare la morte. Bisogna che corra, che pensi, che dica. Che parli a quelli che rimangono." 1752..1919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1921..1922)), span: StrSpan("</p>" 1919..1923) }
token: Text { text: StrSpan("\n\n" 1923..1925) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1926..1927), span: StrSpan("<p" 1925..1927) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1928..1933), value: StrSpan("testo_personaggio testo_maiuscoletto" 1935..1971), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1928..1972) }
token: ElementEnd { end: Open, span: StrSpan(">" 1972..1973) }
token: Text { text: StrSpan("Amadriade." 1973..1983) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1985..1986)), span: StrSpan("</p>" 1983..1987) }
token: Text { text: StrSpan("\n" 1987..1988) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1989..1990), span: StrSpan("<p" 1988..1990) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1991..1996), value: StrSpan("testo_dialogo" 1998..2011), span: StrSpan("class=\"testo_dialogo\"" 1991..2012) }
token: ElementEnd { end: Open, span: StrSpan(">" 2012..2013) }
token: Text { text: StrSpan("Ma stavolta nessuno rimane. Come faranno dunque?" 2013..2061) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2063..2064)), span: StrSpan("</p>" 2061..2065) }
token: Text { text: StrSpan("\n\n" 2065..2067) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2068..2069), span: StrSpan("<p" 2067..2069) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2070..2075), value: StrSpan("testo_personaggio testo_maiuscoletto" 2077..2113), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2070..2114) }
token: ElementEnd { end: Open, span: StrSpan(">" 2114..2115) }
token: Text { text: StrSpan("Satiro." 2115..2122) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2124..2125)), span: StrSpan("</p>" 2122..2126) }
token: Text { text: StrSpan("\n" 2126..2127) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2128..2129), span: StrSpan("<p" 2127..2129) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2130..2135), value: StrSpan("testo_dialogo" 2137..2150), span: StrSpan("class=\"testo_dialogo\"" 2130..2151) }
token: ElementEnd { end: Open, span: StrSpan(">" 2151..2152) }
token: Text { text: StrSpan("Qui li voglio. Quando sapranno di esser tutti condannati, tutti quanti, si daranno a far festa, vedrai. Magari verranno a cercare noialtri." 2152..2291) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2293..2294)), span: StrSpan("</p>" 2291..2295) }
token: Text { text: StrSpan("\n\n" 2295..2297) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2298..2299), span: StrSpan("<p" 2297..2299) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2300..2305), value: StrSpan("testo_personaggio testo_maiuscoletto" 2307..2343), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2300..2344) }
token: ElementEnd { end: Open, span: StrSpan(">" 2344..2345) }
token: Text { text: StrSpan("Amadriade." 2345..2355) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2357..2358)), span: StrSpan("</p>" 2355..2359) }
token: Text { text: StrSpan("\n" 2359..2360) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2361..2362), span: StrSpan("<p" 2360..2362) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2363..2368), value: StrSpan("testo_dialogo" 2370..2383), span: StrSpan("class=\"testo_dialogo\"" 2363..2384) }
token: ElementEnd { end: Open, span: StrSpan(">" 2384..2385) }
token: Text { text: StrSpan("O noi, che c‚Äôentriamo?" 2385..2409) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2411..2412)), span: StrSpan("</p>" 2409..2413) }
token: Text { text: StrSpan("\n\n" 2413..2415) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2416..2417), span: StrSpan("<p" 2415..2417) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2418..2423), value: StrSpan("testo_personaggio testo_maiuscoletto" 2425..2461), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2418..2462) }
token: ElementEnd { end: Open, span: StrSpan(">" 2462..2463) }
token: Text { text: StrSpan("Satiro." 2463..2470) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2472..2473)), span: StrSpan("</p>" 2470..2474) }
token: Text { text: StrSpan("\n" 2474..2475) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2476..2477), span: StrSpan("<p" 2475..2477) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2478..2483), value: StrSpan("testo_dialogo" 2485..2498), span: StrSpan("class=\"testo_dialogo\"" 2478..2499) }
token: ElementEnd { end: Open, span: StrSpan(">" 2499..2500) }
token: Text { text: StrSpan("C‚Äôentriamo s√≠. Siamo la festa, siamo vita per loro. Cercheranno la vita con noi fino all‚Äôultimo." 2500..2601) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2603..2604)), span: StrSpan("</p>" 2601..2605) }
token: Text { text: StrSpan("\n\n" 2605..2607) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2608..2609), span: StrSpan("<p" 2607..2609) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2610..2615), value: StrSpan("testo_personaggio testo_maiuscoletto" 2617..2653), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2610..2654) }
token: ElementEnd { end: Open, span: StrSpan(">" 2654..2655) }
token: Text { text: StrSpan("Amadriade." 2655..2665) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2667..2668)), span: StrSpan("</p>" 2665..2669) }
token: Text { text: StrSpan("\n" 2669..2670) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2671..2672), span: StrSpan("<p" 2670..2672) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2673..2678), value: StrSpan("testo_dialogo" 2680..2693), span: StrSpan("class=\"testo_dialogo\"" 2673..2694) }
token: ElementEnd { end: Open, span: StrSpan(">" 2694..2695) }
token: Text { text: StrSpan("Non capisco che vita possiamo dar loro. Non sappiamo nemmeno morire. Tutto quanto sappiamo √® guardare. Guardare e sapere. Ma tu dici che loro non guardano e non sanno rassegnarsi. Che altro possono chiederci?" 2695..2904) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2906..2907)), span: StrSpan("</p>" 2904..2908) }
token: Text { text: StrSpan("\n\n" 2908..2910) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2911..2912), span: StrSpan("<p" 2910..2912) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2913..2918), value: StrSpan("testo_personaggio testo_maiuscoletto" 2920..2956), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2913..2957) }
token: ElementEnd { end: Open, span: StrSpan(">" 2957..2958) }
token: Text { text: StrSpan("Satiro." 2958..2965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2967..2968)), span: StrSpan("</p>" 2965..2969) }
token: Text { text: StrSpan("\n" 2969..2970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2971..2972), span: StrSpan("<p" 2970..2972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2973..2978), value: StrSpan("testo_dialogo" 2980..2993), span: StrSpan("class=\"testo_dialogo\"" 2973..2994) }
token: ElementEnd { end: Open, span: StrSpan(">" 2994..2995) }
token: Text { text: StrSpan("Tante cose, capretta. Per loro noi siamo come bestie selvatiche. Le bestie nascono e muoiono come le foglie. Noi c‚Äôintravvedono sparire fra i rami e allora credono di noi non so che divino ‚Äì che quando fuggiamo a nasconderci siamo la vita che perdura nel bosco ‚Äì una vita come la loro ma perenne, pi√∫ ricca. Cercheranno noi, ti dico. Sar√† l‚Äôultima speranza che avranno." 2995..3374) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3376..3377)), span: StrSpan("</p>" 3374..3378) }
token: Text { text: StrSpan("\n\n" 3378..3380) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3381..3382), span: StrSpan("<p" 3380..3382) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3383..3388), value: StrSpan("testo_personaggio testo_maiuscoletto" 3390..3426), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3383..3427) }
token: ElementEnd { end: Open, span: StrSpan(">" 3427..3428) }
token: Text { text: StrSpan("Amadriade." 3428..3438) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3440..3441)), span: StrSpan("</p>" 3438..3442) }
token: Text { text: StrSpan("\n" 3442..3443) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3444..3445), span: StrSpan("<p" 3443..3445) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3446..3451), value: StrSpan("testo_dialogo" 3453..3466), span: StrSpan("class=\"testo_dialogo\"" 3446..3467) }
token: ElementEnd { end: Open, span: StrSpan(">" 3467..3468) }
token: Text { text: StrSpan("Con quest‚Äôacqua? E che cosa faranno?" 3468..3506) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3508..3509)), span: StrSpan("</p>" 3506..3510) }
token: Text { text: StrSpan("\n\n" 3510..3512) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3513..3514), span: StrSpan("<p" 3512..3514) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3515..3520), value: StrSpan("testo_personaggio testo_maiuscoletto" 3522..3558), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3515..3559) }
token: ElementEnd { end: Open, span: StrSpan(">" 3559..3560) }
token: Text { text: StrSpan("Satiro." 3560..3567) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3569..3570)), span: StrSpan("</p>" 3567..3571) }
token: Text { text: StrSpan("\n" 3571..3572) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3573..3574), span: StrSpan("<p" 3572..3574) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3575..3580), value: StrSpan("testo_dialogo" 3582..3595), span: StrSpan("class=\"testo_dialogo\"" 3575..3596) }
token: ElementEnd { end: Open, span: StrSpan(">" 3596..3597) }
token: Text { text: StrSpan("Non lo sai che cos‚Äô√® una speranza? Crederanno che un bosco dove siamo anche noi non potr√† andar sommerso. Si diranno che tutti proprio tutti gli uomini non potranno sparire, altrimenti che senso ha esser nati e averci conosciuto? Sapranno che i grandi, gli Olimpici, li vogliono morti, ma che noi come loro come le piccole bestie, siamo insomma la vita la terra la cosa vera che conta. Le loro stagioni si riducono a feste, e noi siamo le feste." 3597..4046) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4048..4049)), span: StrSpan("</p>" 4046..4050) }
token: Text { text: StrSpan("\n\n" 4050..4052) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4053..4054), span: StrSpan("<p" 4052..4054) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4055..4060), value: StrSpan("testo_personaggio testo_maiuscoletto" 4062..4098), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4055..4099) }
token: ElementEnd { end: Open, span: StrSpan(">" 4099..4100) }
token: Text { text: StrSpan("Amadriade." 4100..4110) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4112..4113)), span: StrSpan("</p>" 4110..4114) }
token: Text { text: StrSpan("\n" 4114..4115) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4116..4117), span: StrSpan("<p" 4115..4117) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4118..4123), value: StrSpan("testo_dialogo" 4125..4138), span: StrSpan("class=\"testo_dialogo\"" 4118..4139) }
token: ElementEnd { end: Open, span: StrSpan(">" 4139..4140) }
token: Text { text: StrSpan("√à comodo. A loro la speranza, a noi il destino. Ma √® sciocco." 4140..4203) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4205..4206)), span: StrSpan("</p>" 4203..4207) }
token: Text { text: StrSpan("\n\n" 4207..4209) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4210..4211), span: StrSpan("<p" 4209..4211) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4212..4217), value: StrSpan("testo_personaggio testo_maiuscoletto" 4219..4255), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4212..4256) }
token: ElementEnd { end: Open, span: StrSpan(">" 4256..4257) }
token: Text { text: StrSpan("Satiro." 4257..4264) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4266..4267)), span: StrSpan("</p>" 4264..4268) }
token: Text { text: StrSpan("\n" 4268..4269) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4270..4271), span: StrSpan("<p" 4269..4271) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4272..4277), value: StrSpan("testo_dialogo" 4279..4292), span: StrSpan("class=\"testo_dialogo\"" 4272..4293) }
token: ElementEnd { end: Open, span: StrSpan(">" 4293..4294) }
token: Text { text: StrSpan("Non tanto. Qualchecosa salveranno." 4294..4328) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4330..4331)), span: StrSpan("</p>" 4328..4332) }
token: Text { text: StrSpan("\n\n" 4332..4334) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4335..4336), span: StrSpan("<p" 4334..4336) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4337..4342), value: StrSpan("testo_personaggio testo_maiuscoletto" 4344..4380), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4337..4381) }
token: ElementEnd { end: Open, span: StrSpan(">" 4381..4382) }
token: Text { text: StrSpan("Amadriade." 4382..4392) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4394..4395)), span: StrSpan("</p>" 4392..4396) }
token: Text { text: StrSpan("\n" 4396..4397) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4398..4399), span: StrSpan("<p" 4397..4399) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4400..4405), value: StrSpan("testo_dialogo" 4407..4420), span: StrSpan("class=\"testo_dialogo\"" 4400..4421) }
token: ElementEnd { end: Open, span: StrSpan(">" 4421..4422) }
token: Text { text: StrSpan("S√≠ ma chi ha provocato gli d√®i grandi? Chi ha fatto tutto quel disordine, che anche il sole si velava la faccia? Tocca a loro, mi pare. Gli sta bene." 4422..4573) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4575..4576)), span: StrSpan("</p>" 4573..4577) }
token: Text { text: StrSpan("\n\n" 4577..4579) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4580..4581), span: StrSpan("<p" 4579..4581) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4582..4587), value: StrSpan("testo_personaggio testo_maiuscoletto" 4589..4625), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4582..4626) }
token: ElementEnd { end: Open, span: StrSpan(">" 4626..4627) }
token: Text { text: StrSpan("Satiro." 4627..4634) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4636..4637)), span: StrSpan("</p>" 4634..4638) }
token: Text { text: StrSpan("\n" 4638..4639) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4640..4641), span: StrSpan("<p" 4639..4641) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4642..4647), value: StrSpan("testo_dialogo" 4649..4662), span: StrSpan("class=\"testo_dialogo\"" 4642..4663) }
token: ElementEnd { end: Open, span: StrSpan(">" 4663..4664) }
token: Text { text: StrSpan("Su, capretta, credi proprio a queste cose? Non pensi che, se avessero veramente violata la vita, sarebbe bastata la vita a punirli, senza bisogno che l‚ÄôOlimpo ci si mettesse col diluvio? Se qualcuno ha violato qualcosa, credi a me, non sono loro." 4664..4912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4914..4915)), span: StrSpan("</p>" 4912..4916) }
token: Text { text: StrSpan("\n\n" 4916..4918) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4919..4920), span: StrSpan("<p" 4918..4920) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4921..4926), value: StrSpan("testo_personaggio testo_maiuscoletto" 4928..4964), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4921..4965) }
token: ElementEnd { end: Open, span: StrSpan(">" 4965..4966) }
token: Text { text: StrSpan("Amadriade." 4966..4976) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4978..4979)), span: StrSpan("</p>" 4976..4980) }
token: Text { text: StrSpan("\n" 4980..4981) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4982..4983), span: StrSpan("<p" 4981..4983) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4984..4989), value: StrSpan("testo_dialogo" 4991..5004), span: StrSpan("class=\"testo_dialogo\"" 4984..5005) }
token: ElementEnd { end: Open, span: StrSpan(">" 5005..5006) }
token: Text { text: StrSpan("Intanto gli tocca morire. Come staranno domani quando sapranno quel che accade?" 5006..5085) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5087..5088)), span: StrSpan("</p>" 5085..5089) }
token: Text { text: StrSpan("\n\n" 5089..5091) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5092..5093), span: StrSpan("<p" 5091..5093) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5094..5099), value: StrSpan("testo_personaggio testo_maiuscoletto" 5101..5137), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5094..5138) }
token: ElementEnd { end: Open, span: StrSpan(">" 5138..5139) }
token: Text { text: StrSpan("Satiro." 5139..5146) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5148..5149)), span: StrSpan("</p>" 5146..5150) }
token: Text { text: StrSpan("\n" 5150..5151) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5152..5153), span: StrSpan("<p" 5151..5153) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5154..5159), value: StrSpan("testo_dialogo" 5161..5174), span: StrSpan("class=\"testo_dialogo\"" 5154..5175) }
token: ElementEnd { end: Open, span: StrSpan(">" 5175..5176) }
token: Text { text: StrSpan("Senti il torrente, piccolina. Domani saremo sott‚Äôacqua anche noi. Ne vedrai delle brutte, tu che ami guardare. Meno male che non possiamo morire." 5176..5323) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5325..5326)), span: StrSpan("</p>" 5323..5327) }
token: Text { text: StrSpan("\n\n" 5327..5329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5330..5331), span: StrSpan("<p" 5329..5331) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5332..5337), value: StrSpan("testo_personaggio testo_maiuscoletto" 5339..5375), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5332..5376) }
token: ElementEnd { end: Open, span: StrSpan(">" 5376..5377) }
token: Text { text: StrSpan("Amadriade." 5377..5387) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5389..5390)), span: StrSpan("</p>" 5387..5391) }
token: Text { text: StrSpan("\n" 5391..5392) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5393..5394), span: StrSpan("<p" 5392..5394) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5395..5400), value: StrSpan("testo_dialogo" 5402..5415), span: StrSpan("class=\"testo_dialogo\"" 5395..5416) }
token: ElementEnd { end: Open, span: StrSpan(">" 5416..5417) }
token: Text { text: StrSpan("Alle volte, non so. Mi chiedo che cosa sarebbe morire. Quest‚Äô√® l‚Äôunica cosa che davvero ci manca. Sappiamo tutto e non sappiamo questa semplice cosa. Vorrei provare, e poi svegliarmi, si capisce." 5417..5617) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5619..5620)), span: StrSpan("</p>" 5617..5621) }
token: Text { text: StrSpan("\n\n" 5621..5623) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5624..5625), span: StrSpan("<p" 5623..5625) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5626..5631), value: StrSpan("testo_personaggio testo_maiuscoletto" 5633..5669), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5626..5670) }
token: ElementEnd { end: Open, span: StrSpan(">" 5670..5671) }
token: Text { text: StrSpan("Satiro." 5671..5678) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5680..5681)), span: StrSpan("</p>" 5678..5682) }
token: Text { text: StrSpan("\n" 5682..5683) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5684..5685), span: StrSpan("<p" 5683..5685) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5686..5691), value: StrSpan("testo_dialogo" 5693..5706), span: StrSpan("class=\"testo_dialogo\"" 5686..5707) }
token: ElementEnd { end: Open, span: StrSpan(">" 5707..5708) }
token: Text { text: StrSpan("Sentila. Ma morire √® proprio questo ‚Äì non pi√∫ sapere che sei morta. Ed √® questo il diluvio: morire in tanti che non resti pi√∫ nessuno a saperlo. Cos√≠ succede che verranno a cercare noialtri e ci diranno di salvarli e vorranno esser simili a noi, alle piante, alle pietre ‚Äì alle cose insensibili che sono mero destino. In esse si salveranno. Ritirandosi l‚Äôacqua, riemergeranno pietre e tronchi, come prima. E i mortali non chiedono che questo come prima." 5708..6172) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6174..6175)), span: StrSpan("</p>" 6172..6176) }
token: Text { text: StrSpan("\n\n" 6176..6178) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6179..6180), span: StrSpan("<p" 6178..6180) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6181..6186), value: StrSpan("testo_personaggio testo_maiuscoletto" 6188..6224), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6181..6225) }
token: ElementEnd { end: Open, span: StrSpan(">" 6225..6226) }
token: Text { text: StrSpan("Amadriade." 6226..6236) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6238..6239)), span: StrSpan("</p>" 6236..6240) }
token: Text { text: StrSpan("\n" 6240..6241) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6242..6243), span: StrSpan("<p" 6241..6243) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6244..6249), value: StrSpan("testo_dialogo" 6251..6264), span: StrSpan("class=\"testo_dialogo\"" 6244..6265) }
token: ElementEnd { end: Open, span: StrSpan(">" 6265..6266) }
token: Text { text: StrSpan("Strana gente. Loro trattano il destino e l‚Äôavvenire, come fosse un passato." 6266..6343) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6345..6346)), span: StrSpan("</p>" 6343..6347) }
token: Text { text: StrSpan("\n\n" 6347..6349) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6350..6351), span: StrSpan("<p" 6349..6351) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6352..6357), value: StrSpan("testo_personaggio testo_maiuscoletto" 6359..6395), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6352..6396) }
token: ElementEnd { end: Open, span: StrSpan(">" 6396..6397) }
token: Text { text: StrSpan("Satiro." 6397..6404) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6406..6407)), span: StrSpan("</p>" 6404..6408) }
token: Text { text: StrSpan("\n" 6408..6409) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6410..6411), span: StrSpan("<p" 6409..6411) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6412..6417), value: StrSpan("testo_dialogo" 6419..6432), span: StrSpan("class=\"testo_dialogo\"" 6412..6433) }
token: ElementEnd { end: Open, span: StrSpan(">" 6433..6434) }
token: Text { text: StrSpan("Questo vuol dire, la speranza. Dare un nome di ricordo al destino." 6434..6500) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6502..6503)), span: StrSpan("</p>" 6500..6504) }
token: Text { text: StrSpan("\n\n" 6504..6506) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6507..6508), span: StrSpan("<p" 6506..6508) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6509..6514), value: StrSpan("testo_personaggio testo_maiuscoletto" 6516..6552), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6509..6553) }
token: ElementEnd { end: Open, span: StrSpan(">" 6553..6554) }
token: Text { text: StrSpan("Amadriade." 6554..6564) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6566..6567)), span: StrSpan("</p>" 6564..6568) }
token: Text { text: StrSpan("\n" 6568..6569) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6570..6571), span: StrSpan("<p" 6569..6571) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6572..6577), value: StrSpan("testo_dialogo" 6579..6592), span: StrSpan("class=\"testo_dialogo\"" 6572..6593) }
token: ElementEnd { end: Open, span: StrSpan(">" 6593..6594) }
token: Text { text: StrSpan("E tu credi che davvero si faranno tronchi e pietre?" 6594..6645) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6647..6648)), span: StrSpan("</p>" 6645..6649) }
token: Text { text: StrSpan("\n\n" 6649..6651) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6652..6653), span: StrSpan("<p" 6651..6653) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6654..6659), value: StrSpan("testo_personaggio testo_maiuscoletto" 6661..6697), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6654..6698) }
token: ElementEnd { end: Open, span: StrSpan(">" 6698..6699) }
token: Text { text: StrSpan("Satiro." 6699..6706) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6708..6709)), span: StrSpan("</p>" 6706..6710) }
token: Text { text: StrSpan("\n" 6710..6711) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6712..6713), span: StrSpan("<p" 6711..6713) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6714..6719), value: StrSpan("testo_dialogo" 6721..6734), span: StrSpan("class=\"testo_dialogo\"" 6714..6735) }
token: ElementEnd { end: Open, span: StrSpan(">" 6735..6736) }
token: Text { text: StrSpan("Sanno favoleggiare, i mortali. Vivranno nell‚Äôavvenire secondo che il terrore di stanotte e di domani li avr√† fatti fantasticare. Saran bestie selvatiche e rocce e piante. Saranno d√®i. Oseranno uccidere gli d√®i per vederli rinascere. Si daranno un passato per sfuggire alla morte. Non ci sono che queste due cose ‚Äì la speranza o il destino." 6736..7082) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7084..7085)), span: StrSpan("</p>" 7082..7086) }
token: Text { text: StrSpan("\n\n" 7086..7088) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7089..7090), span: StrSpan("<p" 7088..7090) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7091..7096), value: StrSpan("testo_personaggio testo_maiuscoletto" 7098..7134), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7091..7135) }
token: ElementEnd { end: Open, span: StrSpan(">" 7135..7136) }
token: Text { text: StrSpan("Amadriade." 7136..7146) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7148..7149)), span: StrSpan("</p>" 7146..7150) }
token: Text { text: StrSpan("\n" 7150..7151) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7152..7153), span: StrSpan("<p" 7151..7153) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7154..7159), value: StrSpan("testo_dialogo" 7161..7174), span: StrSpan("class=\"testo_dialogo\"" 7154..7175) }
token: ElementEnd { end: Open, span: StrSpan(">" 7175..7176) }
token: Text { text: StrSpan("Quand‚Äô√® cos√≠, non so compiangerli. Dev‚Äôessere bello farsi da s√© in questo modo a capriccio." 7176..7274) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7276..7277)), span: StrSpan("</p>" 7274..7278) }
token: Text { text: StrSpan("\n\n" 7278..7280) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7281..7282), span: StrSpan("<p" 7280..7282) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7283..7288), value: StrSpan("testo_personaggio testo_maiuscoletto" 7290..7326), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7283..7327) }
token: ElementEnd { end: Open, span: StrSpan(">" 7327..7328) }
token: Text { text: StrSpan("Satiro." 7328..7335) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7337..7338)), span: StrSpan("</p>" 7335..7339) }
token: Text { text: StrSpan("\n" 7339..7340) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7341..7342), span: StrSpan("<p" 7340..7342) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7343..7348), value: StrSpan("testo_dialogo" 7350..7363), span: StrSpan("class=\"testo_dialogo\"" 7343..7364) }
token: ElementEnd { end: Open, span: StrSpan(">" 7364..7365) }
token: Text { text: StrSpan("√à bello s√≠. Ma non credere che lo sappiano di fare a capriccio. Le salvezze pi√∫ straordinarie le trovano alla cieca, quando gi√† sono ghermiti e schiacciati dal destino. Non han tempo a godersi il capriccio. Sanno soltanto di pagare di persona. Questo s√≠." 7365..7624) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7626..7627)), span: StrSpan("</p>" 7624..7628) }
token: Text { text: StrSpan("\n\n" 7628..7630) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7631..7632), span: StrSpan("<p" 7630..7632) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7633..7638), value: StrSpan("testo_personaggio testo_maiuscoletto" 7640..7676), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7633..7677) }
token: ElementEnd { end: Open, span: StrSpan(">" 7677..7678) }
token: Text { text: StrSpan("Amadriade." 7678..7688) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7690..7691)), span: StrSpan("</p>" 7688..7692) }
token: Text { text: StrSpan("\n" 7692..7693) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7694..7695), span: StrSpan("<p" 7693..7695) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7696..7701), value: StrSpan("testo_dialogo" 7703..7716), span: StrSpan("class=\"testo_dialogo\"" 7696..7717) }
token: ElementEnd { end: Open, span: StrSpan(">" 7717..7718) }
token: Text { text: StrSpan("Almeno questo diluvio servisse a insegnargli cos‚Äô√® il gioco e la festa. Il capriccio che a noi immortali viene imposto dal destino e lo sappiamo ‚Äì perch√© non imparano a viverlo come un attimo eterno nella loro miseria? Perch√© non capiscono che proprio la loro labilit√† li fa preziosi?" 7718..8010) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8012..8013)), span: StrSpan("</p>" 8010..8014) }
token: Text { text: StrSpan("\n\n" 8014..8016) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8017..8018), span: StrSpan("<p" 8016..8018) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8019..8024), value: StrSpan("testo_personaggio testo_maiuscoletto" 8026..8062), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8019..8063) }
token: ElementEnd { end: Open, span: StrSpan(">" 8063..8064) }
token: Text { text: StrSpan("Satiro." 8064..8071) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8073..8074)), span: StrSpan("</p>" 8071..8075) }
token: Text { text: StrSpan("\n" 8075..8076) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8077..8078), span: StrSpan("<p" 8076..8078) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8079..8084), value: StrSpan("testo_dialogo" 8086..8099), span: StrSpan("class=\"testo_dialogo\"" 8079..8100) }
token: ElementEnd { end: Open, span: StrSpan(">" 8100..8101) }
token: Text { text: StrSpan("Tutto non si pu√≤ avere, piccola. Noi che sappiamo, non abbiamo preferenze. E loro che vivono istanti imprevisti, unici, non ne conoscono il valore. Vorrebbero la nostra eternit√†. Questo √® il mondo." 8101..8301) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8303..8304)), span: StrSpan("</p>" 8301..8305) }
token: Text { text: StrSpan("\n\n" 8305..8307) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8308..8309), span: StrSpan("<p" 8307..8309) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8310..8315), value: StrSpan("testo_personaggio testo_maiuscoletto" 8317..8353), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8310..8354) }
token: ElementEnd { end: Open, span: StrSpan(">" 8354..8355) }
token: Text { text: StrSpan("Amadriade." 8355..8365) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8367..8368)), span: StrSpan("</p>" 8365..8369) }
token: Text { text: StrSpan("\n" 8369..8370) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8371..8372), span: StrSpan("<p" 8370..8372) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8373..8378), value: StrSpan("testo_dialogo" 8380..8393), span: StrSpan("class=\"testo_dialogo\"" 8373..8394) }
token: ElementEnd { end: Open, span: StrSpan(">" 8394..8395) }
token: Text { text: StrSpan("Domani sapranno qualcosa, anche loro. E i sassi e le terre che un giorno torneranno alla luce non vivranno di speranza soltanto o di angoscia. Vedrai che il mondo nuovo avr√† qualcosa di divino nei suoi pi√∫ labili mortali." 8395..8618) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8620..8621)), span: StrSpan("</p>" 8618..8622) }
token: Text { text: StrSpan("\n\n" 8622..8624) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8625..8626), span: StrSpan("<p" 8624..8626) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8627..8632), value: StrSpan("testo_personaggio testo_maiuscoletto" 8634..8670), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8627..8671) }
token: ElementEnd { end: Open, span: StrSpan(">" 8671..8672) }
token: Text { text: StrSpan("Satiro." 8672..8679) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8681..8682)), span: StrSpan("</p>" 8679..8683) }
token: Text { text: StrSpan("\n" 8683..8684) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8685..8686), span: StrSpan("<p" 8684..8686) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8687..8692), value: StrSpan("testo_dialogo" 8694..8707), span: StrSpan("class=\"testo_dialogo\"" 8687..8708) }
token: ElementEnd { end: Open, span: StrSpan(">" 8708..8709) }
token: Text { text: StrSpan("Dio volesse, capretta. Piacerebbe anche a me." 8709..8754) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8756..8757)), span: StrSpan("</p>" 8754..8758) }
token: Text { text: StrSpan("\n" 8758..8759) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 8761..8765)), span: StrSpan("</body>" 8759..8766) }
token: Text { text: StrSpan("\n" 8766..8767) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 8769..8773)), span: StrSpan("</html>" 8767..8774) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Le muse" 340..347) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 349..351)), span: StrSpan("</h1>" 347..352) }
token: Text { text: StrSpan("\n\n" 352..354) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 355..356), span: StrSpan("<p" 354..356) }
token: ElementEnd { end: Open, span: StrSpan(">" 356..357) }
token: Text { text: StrSpan("Immenso tema. Chi scrive sa bene di avere osato non poco avvistando un solo nume nelle nove, o tre per tre, o soltanto tre, o anche due, Muse e C√†riti. Ma √® convinto di questa come di molte altre cose. In questo mondo che trattiamo, le madri sono sovente le figlie ‚Äì e viceversa. Si potrebbe anche dimostrarlo. √à necessario? Preferiamo invitare chi legge, a godersi il fatto che secondo i Greci le feste della fantasia e della memoria furono quasi sempre situate su monti, anzi su colline, rinnovate via via che questo popolo scendeva nella penisola." 357..912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 914..915)), span: StrSpan("</p>" 912..916) }
token: Text { text: StrSpan("\n\n" 916..918) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 919..920), span: StrSpan("<p" 918..920) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 921..926), value: StrSpan("testo_indicazioni_scena" 928..951), span: StrSpan("class=\"testo_indicazioni_scena\"" 921..952) }
token: ElementEnd { end: Open, span: StrSpan(">" 952..953) }
token: Text { text: StrSpan("(parlano Mnem√≤sine e Esiodo)" 953..982) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 984..985)), span: StrSpan("</p>" 982..986) }
token: Text { text: StrSpan("\n\n\n" 986..989) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 990..991), span: StrSpan("<p" 989..991) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 992..997), value: StrSpan("testo_personaggio testo_maiuscoletto" 999..1035), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 992..1036) }
token: ElementEnd { end: Open, span: StrSpan(">" 1036..1037) }
token: Text { text: StrSpan("Mnem√≤sine." 1037..1048) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1050..1051)), span: StrSpan("</p>" 1048..1052) }
token: Text { text: StrSpan("\n" 1052..1053) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1054..1055), span: StrSpan("<p" 1053..1055) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1056..1061), value: StrSpan("testo_dialogo" 1063..1076), span: StrSpan("class=\"testo_dialogo\"" 1056..1077) }
token: ElementEnd { end: Open, span: StrSpan(">" 1077..1078) }
token: Text { text: StrSpan("In conclusione, tu non sei contento." 1078..1114) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1116..1117)), span: StrSpan("</p>" 1114..1118) }
token: Text { text: StrSpan("\n\n" 1118..1120) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1121..1122), span: StrSpan("<p" 1120..1122) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1123..1128), value: StrSpan("testo_personaggio testo_maiuscoletto" 1130..1166), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1123..1167) }
token: ElementEnd { end: Open, span: StrSpan(">" 1167..1168) }
token: Text { text: StrSpan("Esiodo." 1168..1175) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1177..1178)), span: StrSpan("</p>" 1175..1179) }
token: Text { text: StrSpan("\n" 1179..1180) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1181..1182), span: StrSpan("<p" 1180..1182) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1183..1188), value: StrSpan("testo_dialogo" 1190..1203), span: StrSpan("class=\"testo_dialogo\"" 1183..1204) }
token: ElementEnd { end: Open, span: StrSpan(">" 1204..1205) }
token: Text { text: StrSpan("Ti dico che, se penso a una cosa passata, alle stagioni gi√† concluse, mi pare di esserlo stato. Ma nei giorni √® diverso. Provo un fastidio delle cose e dei lavori come lo sente l‚Äôubriaco. Allora smetto e salgo qui sulla montagna. Ma ecco che a ripensarci mi par di nuovo di esser stato contento." 1205..1504) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1506..1507)), span: StrSpan("</p>" 1504..1508) }
token: Text { text: StrSpan("\n\n" 1508..1510) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1511..1512), span: StrSpan("<p" 1510..1512) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1513..1518), value: StrSpan("testo_personaggio testo_maiuscoletto" 1520..1556), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1513..1557) }
token: ElementEnd { end: Open, span: StrSpan(">" 1557..1558) }
token: Text { text: StrSpan("Mnem√≤sine." 1558..1569) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1571..1572)), span: StrSpan("</p>" 1569..1573) }
token: Text { text: StrSpan("\n" 1573..1574) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1575..1576), span: StrSpan("<p" 1574..1576) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1577..1582), value: StrSpan("testo_dialogo" 1584..1597), span: StrSpan("class=\"testo_dialogo\"" 1577..1598) }
token: ElementEnd { end: Open, span: StrSpan(">" 1598..1599) }
token: Text { text: StrSpan("Cos√≠ sar√† sempre." 1599..1618) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1620..1621)), span: StrSpan("</p>" 1618..1622) }
token: Text { text: StrSpan("\n\n" 1622..1624) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1625..1626), span: StrSpan("<p" 1624..1626) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1627..1632), value: StrSpan("testo_personaggio testo_maiuscoletto" 1634..1670), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1627..1671) }
token: ElementEnd { end: Open, span: StrSpan(">" 1671..1672) }
token: Text { text: StrSpan("Esiodo." 1672..1679) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1681..1682)), span: StrSpan("</p>" 1679..1683) }
token: Text { text: StrSpan("\n" 1683..1684) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1685..1686), span: StrSpan("<p" 1684..1686) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1687..1692), value: StrSpan("testo_dialogo" 1694..1707), span: StrSpan("class=\"testo_dialogo\"" 1687..1708) }
token: ElementEnd { end: Open, span: StrSpan(">" 1708..1709) }
token: Text { text: StrSpan("Tu che sai tutti i nomi, qual √® il nome di questo mio stato?" 1709..1770) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1772..1773)), span: StrSpan("</p>" 1770..1774) }
token: Text { text: StrSpan("\n\n" 1774..1776) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1777..1778), span: StrSpan("<p" 1776..1778) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1779..1784), value: StrSpan("testo_personaggio testo_maiuscoletto" 1786..1822), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1779..1823) }
token: ElementEnd { end: Open, span: StrSpan(">" 1823..1824) }
token: Text { text: StrSpan("Mnem√≤sine." 1824..1835) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1837..1838)), span: StrSpan("</p>" 1835..1839) }
token: Text { text: StrSpan("\n" 1839..1840) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1841..1842), span: StrSpan("<p" 1840..1842) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1843..1848), value: StrSpan("testo_dialogo" 1850..1863), span: StrSpan("class=\"testo_dialogo\"" 1843..1864) }
token: ElementEnd { end: Open, span: StrSpan(">" 1864..1865) }
token: Text { text: StrSpan("Puoi chiamarlo col mio, o col tuo nome." 1865..1904) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1906..1907)), span: StrSpan("</p>" 1904..1908) }
token: Text { text: StrSpan("\n\n" 1908..1910) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1911..1912), span: StrSpan("<p" 1910..1912) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1913..1918), value: StrSpan("testo_personaggio testo_maiuscoletto" 1920..1956), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 1913..1957) }
token: ElementEnd { end: Open, span: StrSpan(">" 1957..1958) }
token: Text { text: StrSpan("Esiodo." 1958..1965) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1967..1968)), span: StrSpan("</p>" 1965..1969) }
token: Text { text: StrSpan("\n" 1969..1970) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1971..1972), span: StrSpan("<p" 1970..1972) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 1973..1978), value: StrSpan("testo_dialogo" 1980..1993), span: StrSpan("class=\"testo_dialogo\"" 1973..1994) }
token: ElementEnd { end: Open, span: StrSpan(">" 1994..1995) }
token: Text { text: StrSpan("Il mio nome di uomo, Melete, non √® nulla. Ma tu come vuoi essere chiamata? Ogni volta √® diversa la parola che t‚Äôinvoca. Tu sei come una madre il cui nome si perde negli anni. Nelle case e sui viottoli donde si scorge la montagna, si parla molto di te. Si dice che un tempo tu stavi sui monti pi√∫ impervi, dove son nevi, alberi neri e mostri, nella Tracia o in Tessaglia, e ti chiamavano la Musa. Altri dice Calli√≤pe o Cli√≤. Qual √® il nome vero?" 1995..2447) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2449..2450)), span: StrSpan("</p>" 2447..2451) }
token: Text { text: StrSpan("\n\n" 2451..2453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2454..2455), span: StrSpan("<p" 2453..2455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2456..2461), value: StrSpan("testo_personaggio testo_maiuscoletto" 2463..2499), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2456..2500) }
token: ElementEnd { end: Open, span: StrSpan(">" 2500..2501) }
token: Text { text: StrSpan("Mnem√≤sine." 2501..2512) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2514..2515)), span: StrSpan("</p>" 2512..2516) }
token: Text { text: StrSpan("\n" 2516..2517) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2518..2519), span: StrSpan("<p" 2517..2519) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2520..2525), value: StrSpan("testo_dialogo" 2527..2540), span: StrSpan("class=\"testo_dialogo\"" 2520..2541) }
token: ElementEnd { end: Open, span: StrSpan(">" 2541..2542) }
token: Text { text: StrSpan("Vengo infatti di l√†. E ho molti nomi. Altri ne avr√≤ quando sar√≤ discesa ancora‚Ä¶ Aglaia, Egem√≤ne, Faenna, secondo il capriccio dei luoghi." 2542..2685) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2687..2688)), span: StrSpan("</p>" 2685..2689) }
token: Text { text: StrSpan("\n\n" 2689..2691) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2692..2693), span: StrSpan("<p" 2691..2693) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2694..2699), value: StrSpan("testo_personaggio testo_maiuscoletto" 2701..2737), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2694..2738) }
token: ElementEnd { end: Open, span: StrSpan(">" 2738..2739) }
token: Text { text: StrSpan("Esiodo." 2739..2746) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2748..2749)), span: StrSpan("</p>" 2746..2750) }
token: Text { text: StrSpan("\n" 2750..2751) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2752..2753), span: StrSpan("<p" 2751..2753) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2754..2759), value: StrSpan("testo_dialogo" 2761..2774), span: StrSpan("class=\"testo_dialogo\"" 2754..2775) }
token: ElementEnd { end: Open, span: StrSpan(">" 2775..2776) }
token: Text { text: StrSpan("Anche te il fastidio caccia per il mondo? Non sei dunque una dea?" 2776..2841) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2843..2844)), span: StrSpan("</p>" 2841..2845) }
token: Text { text: StrSpan("\n\n" 2845..2847) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2848..2849), span: StrSpan("<p" 2847..2849) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2850..2855), value: StrSpan("testo_personaggio testo_maiuscoletto" 2857..2893), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 2850..2894) }
token: ElementEnd { end: Open, span: StrSpan(">" 2894..2895) }
token: Text { text: StrSpan("Mnem√≤sine." 2895..2906) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2908..2909)), span: StrSpan("</p>" 2906..2910) }
token: Text { text: StrSpan("\n" 2910..2911) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2912..2913), span: StrSpan("<p" 2911..2913) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2914..2919), value: StrSpan("testo_dialogo" 2921..2934), span: StrSpan("class=\"testo_dialogo\"" 2914..2935) }
token: ElementEnd { end: Open, span: StrSpan(">" 2935..2936) }
token: Text { text: StrSpan("N√© fastidio n√© dea, mio caro. Oggi mi piace questo monte, l‚ÄôElicona, forse perch√© tu lo frequenti. Amo stare dove sono gli uomini, ma un poco in disparte. Io non cerco nessuno, e discorro con chi sa parlare." 2936..3148) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3150..3151)), span: StrSpan("</p>" 3148..3152) }
token: Text { text: StrSpan("\n\n" 3152..3154) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3155..3156), span: StrSpan("<p" 3154..3156) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3157..3162), value: StrSpan("testo_personaggio testo_maiuscoletto" 3164..3200), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3157..3201) }
token: ElementEnd { end: Open, span: StrSpan(">" 3201..3202) }
token: Text { text: StrSpan("Esiodo." 3202..3209) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3211..3212)), span: StrSpan("</p>" 3209..3213) }
token: Text { text: StrSpan("\n" 3213..3214) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3215..3216), span: StrSpan("<p" 3214..3216) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3217..3222), value: StrSpan("testo_dialogo" 3224..3237), span: StrSpan("class=\"testo_dialogo\"" 3217..3238) }
token: ElementEnd { end: Open, span: StrSpan(">" 3238..3239) }
token: Text { text: StrSpan("O Melete, io non so parlare. E mi par di sapere qualcosa soltanto con te. Nella tua voce e nei tuoi nomi c‚Äô√® il passato, ogni stagione che ricordo." 3239..3389) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3391..3392)), span: StrSpan("</p>" 3389..3393) }
token: Text { text: StrSpan("\n\n" 3393..3395) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3396..3397), span: StrSpan("<p" 3395..3397) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3398..3403), value: StrSpan("testo_personaggio testo_maiuscoletto" 3405..3441), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3398..3442) }
token: ElementEnd { end: Open, span: StrSpan(">" 3442..3443) }
token: Text { text: StrSpan("Mnem√≤sine." 3443..3454) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3456..3457)), span: StrSpan("</p>" 3454..3458) }
token: Text { text: StrSpan("\n" 3458..3459) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3460..3461), span: StrSpan("<p" 3459..3461) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3462..3467), value: StrSpan("testo_dialogo" 3469..3482), span: StrSpan("class=\"testo_dialogo\"" 3462..3483) }
token: ElementEnd { end: Open, span: StrSpan(">" 3483..3484) }
token: Text { text: StrSpan("In Tessaglia il mio nome era Mneme." 3484..3519) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3521..3522)), span: StrSpan("</p>" 3519..3523) }
token: Text { text: StrSpan("\n\n" 3523..3525) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3526..3527), span: StrSpan("<p" 3525..3527) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3528..3533), value: StrSpan("testo_personaggio testo_maiuscoletto" 3535..3571), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3528..3572) }
token: ElementEnd { end: Open, span: StrSpan(">" 3572..3573) }
token: Text { text: StrSpan("Esiodo." 3573..3580) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3582..3583)), span: StrSpan("</p>" 3580..3584) }
token: Text { text: StrSpan("\n" 3584..3585) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3586..3587), span: StrSpan("<p" 3585..3587) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3588..3593), value: StrSpan("testo_dialogo" 3595..3608), span: StrSpan("class=\"testo_dialogo\"" 3588..3609) }
token: ElementEnd { end: Open, span: StrSpan(">" 3609..3610) }
token: Text { text: StrSpan("Qualcuno che parla di te ti dice vecchia come la tartaruga, decrepita e dura. Altri ti fanno ninfa acerba, come il boccio o la nuvola‚Ä¶" 3610..3746) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3748..3749)), span: StrSpan("</p>" 3746..3750) }
token: Text { text: StrSpan("\n\n" 3750..3752) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3753..3754), span: StrSpan("<p" 3752..3754) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3755..3760), value: StrSpan("testo_personaggio testo_maiuscoletto" 3762..3798), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3755..3799) }
token: ElementEnd { end: Open, span: StrSpan(">" 3799..3800) }
token: Text { text: StrSpan("Mnem√≤sine." 3800..3811) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3813..3814)), span: StrSpan("</p>" 3811..3815) }
token: Text { text: StrSpan("\n" 3815..3816) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3817..3818), span: StrSpan("<p" 3816..3818) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3819..3824), value: StrSpan("testo_dialogo" 3826..3839), span: StrSpan("class=\"testo_dialogo\"" 3819..3840) }
token: ElementEnd { end: Open, span: StrSpan(">" 3840..3841) }
token: Text { text: StrSpan("Tu che dici?" 3841..3853) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3855..3856)), span: StrSpan("</p>" 3853..3857) }
token: Text { text: StrSpan("\n\n" 3857..3859) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3860..3861), span: StrSpan("<p" 3859..3861) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3862..3867), value: StrSpan("testo_personaggio testo_maiuscoletto" 3869..3905), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 3862..3906) }
token: ElementEnd { end: Open, span: StrSpan(">" 3906..3907) }
token: Text { text: StrSpan("Esiodo." 3907..3914) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3916..3917)), span: StrSpan("</p>" 3914..3918) }
token: Text { text: StrSpan("\n" 3918..3919) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3920..3921), span: StrSpan("<p" 3919..3921) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3922..3927), value: StrSpan("testo_dialogo" 3929..3942), span: StrSpan("class=\"testo_dialogo\"" 3922..3943) }
token: ElementEnd { end: Open, span: StrSpan(">" 3943..3944) }
token: Text { text: StrSpan("Non so. Sei Calli√≤pe e sei Mneme. Hai la voce e lo sguardo immortali. Sei come un colle o un corso d‚Äôacqua, cui non si chiede se son giovani o vecchi, perch√© per loro non c‚Äô√® il tempo. Esistono. Non si sa altro." 3944..4162) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4164..4165)), span: StrSpan("</p>" 4162..4166) }
token: Text { text: StrSpan("\n\n" 4166..4168) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4169..4170), span: StrSpan("<p" 4168..4170) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4171..4176), value: StrSpan("testo_personaggio testo_maiuscoletto" 4178..4214), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4171..4215) }
token: ElementEnd { end: Open, span: StrSpan(">" 4215..4216) }
token: Text { text: StrSpan("Mnem√≤sine." 4216..4227) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4229..4230)), span: StrSpan("</p>" 4227..4231) }
token: Text { text: StrSpan("\n" 4231..4232) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4233..4234), span: StrSpan("<p" 4232..4234) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4235..4240), value: StrSpan("testo_dialogo" 4242..4255), span: StrSpan("class=\"testo_dialogo\"" 4235..4256) }
token: ElementEnd { end: Open, span: StrSpan(">" 4256..4257) }
token: Text { text: StrSpan("Ma anche tu, caro, esisti, e per te l‚Äôesistenza vuol dire fastidio e scontento. Come t‚Äôimmagini la vita di noialtri immortali?" 4257..4387) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4389..4390)), span: StrSpan("</p>" 4387..4391) }
token: Text { text: StrSpan("\n\n" 4391..4393) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4394..4395), span: StrSpan("<p" 4393..4395) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4396..4401), value: StrSpan("testo_personaggio testo_maiuscoletto" 4403..4439), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4396..4440) }
token: ElementEnd { end: Open, span: StrSpan(">" 4440..4441) }
token: Text { text: StrSpan("Esiodo." 4441..4448) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4450..4451)), span: StrSpan("</p>" 4448..4452) }
token: Text { text: StrSpan("\n" 4452..4453) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4454..4455), span: StrSpan("<p" 4453..4455) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4456..4461), value: StrSpan("testo_dialogo" 4463..4476), span: StrSpan("class=\"testo_dialogo\"" 4456..4477) }
token: ElementEnd { end: Open, span: StrSpan(">" 4477..4478) }
token: Text { text: StrSpan("Non me l‚Äôimmagino, Melete, la venero, come posso, con cuore puro." 4478..4545) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4547..4548)), span: StrSpan("</p>" 4545..4549) }
token: Text { text: StrSpan("\n\n" 4549..4551) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4552..4553), span: StrSpan("<p" 4551..4553) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4554..4559), value: StrSpan("testo_personaggio testo_maiuscoletto" 4561..4597), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4554..4598) }
token: ElementEnd { end: Open, span: StrSpan(">" 4598..4599) }
token: Text { text: StrSpan("Mnem√≤sine." 4599..4610) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4612..4613)), span: StrSpan("</p>" 4610..4614) }
token: Text { text: StrSpan("\n" 4614..4615) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4616..4617), span: StrSpan("<p" 4615..4617) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4618..4623), value: StrSpan("testo_dialogo" 4625..4638), span: StrSpan("class=\"testo_dialogo\"" 4618..4639) }
token: ElementEnd { end: Open, span: StrSpan(">" 4639..4640) }
token: Text { text: StrSpan("Continua, mi piaci." 4640..4659) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4661..4662)), span: StrSpan("</p>" 4659..4663) }
token: Text { text: StrSpan("\n\n" 4663..4665) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4666..4667), span: StrSpan("<p" 4665..4667) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4668..4673), value: StrSpan("testo_personaggio testo_maiuscoletto" 4675..4711), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4668..4712) }
token: ElementEnd { end: Open, span: StrSpan(">" 4712..4713) }
token: Text { text: StrSpan("Esiodo." 4713..4720) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4722..4723)), span: StrSpan("</p>" 4720..4724) }
token: Text { text: StrSpan("\n" 4724..4725) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4726..4727), span: StrSpan("<p" 4725..4727) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4728..4733), value: StrSpan("testo_dialogo" 4735..4748), span: StrSpan("class=\"testo_dialogo\"" 4728..4749) }
token: ElementEnd { end: Open, span: StrSpan(">" 4749..4750) }
token: Text { text: StrSpan("Ho detto tutto." 4750..4765) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4767..4768)), span: StrSpan("</p>" 4765..4769) }
token: Text { text: StrSpan("\n\n" 4769..4771) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4772..4773), span: StrSpan("<p" 4771..4773) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4774..4779), value: StrSpan("testo_personaggio testo_maiuscoletto" 4781..4817), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4774..4818) }
token: ElementEnd { end: Open, span: StrSpan(">" 4818..4819) }
token: Text { text: StrSpan("Mnem√≤sine." 4819..4830) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4832..4833)), span: StrSpan("</p>" 4830..4834) }
token: Text { text: StrSpan("\n" 4834..4835) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4836..4837), span: StrSpan("<p" 4835..4837) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4838..4843), value: StrSpan("testo_dialogo" 4845..4858), span: StrSpan("class=\"testo_dialogo\"" 4838..4859) }
token: ElementEnd { end: Open, span: StrSpan(">" 4859..4860) }
token: Text { text: StrSpan("Vi conosco, voi uomini, voi parlate a bocca stretta." 4860..4912) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4914..4915)), span: StrSpan("</p>" 4912..4916) }
token: Text { text: StrSpan("\n\n" 4916..4918) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4919..4920), span: StrSpan("<p" 4918..4920) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4921..4926), value: StrSpan("testo_personaggio testo_maiuscoletto" 4928..4964), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 4921..4965) }
token: ElementEnd { end: Open, span: StrSpan(">" 4965..4966) }
token: Text { text: StrSpan("Esiodo." 4966..4973) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4975..4976)), span: StrSpan("</p>" 4973..4977) }
token: Text { text: StrSpan("\n" 4977..4978) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4979..4980), span: StrSpan("<p" 4978..4980) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 4981..4986), value: StrSpan("testo_dialogo" 4988..5001), span: StrSpan("class=\"testo_dialogo\"" 4981..5002) }
token: ElementEnd { end: Open, span: StrSpan(">" 5002..5003) }
token: Text { text: StrSpan("Non possiamo far altro, davanti agli d√®i, che inchinarci." 5003..5061) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5063..5064)), span: StrSpan("</p>" 5061..5065) }
token: Text { text: StrSpan("\n\n" 5065..5067) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5068..5069), span: StrSpan("<p" 5067..5069) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5070..5075), value: StrSpan("testo_personaggio testo_maiuscoletto" 5077..5113), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5070..5114) }
token: ElementEnd { end: Open, span: StrSpan(">" 5114..5115) }
token: Text { text: StrSpan("Mnem√≤sine." 5115..5126) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5128..5129)), span: StrSpan("</p>" 5126..5130) }
token: Text { text: StrSpan("\n" 5130..5131) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5132..5133), span: StrSpan("<p" 5131..5133) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5134..5139), value: StrSpan("testo_dialogo" 5141..5154), span: StrSpan("class=\"testo_dialogo\"" 5134..5155) }
token: ElementEnd { end: Open, span: StrSpan(">" 5155..5156) }
token: Text { text: StrSpan("Lascia stare gli d√®i. Io esistevo che non c‚Äôerano d√®i. Puoi parlare, con me. Tutto mi dicono gli uomini. Adoraci pure se vuoi, ma dimmi come t‚Äôimmagini ch‚Äôio viva." 5156..5327) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5329..5330)), span: StrSpan("</p>" 5327..5331) }
token: Text { text: StrSpan("\n\n" 5331..5333) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5334..5335), span: StrSpan("<p" 5333..5335) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5336..5341), value: StrSpan("testo_personaggio testo_maiuscoletto" 5343..5379), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5336..5380) }
token: ElementEnd { end: Open, span: StrSpan(">" 5380..5381) }
token: Text { text: StrSpan("Esiodo." 5381..5388) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5390..5391)), span: StrSpan("</p>" 5388..5392) }
token: Text { text: StrSpan("\n" 5392..5393) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5394..5395), span: StrSpan("<p" 5393..5395) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5396..5401), value: StrSpan("testo_dialogo" 5403..5416), span: StrSpan("class=\"testo_dialogo\"" 5396..5417) }
token: ElementEnd { end: Open, span: StrSpan(">" 5417..5418) }
token: Text { text: StrSpan("Come posso saperlo? Nessuna dea mi ha degnato del suo letto." 5418..5478) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5480..5481)), span: StrSpan("</p>" 5478..5482) }
token: Text { text: StrSpan("\n\n" 5482..5484) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5485..5486), span: StrSpan("<p" 5484..5486) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5487..5492), value: StrSpan("testo_personaggio testo_maiuscoletto" 5494..5530), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5487..5531) }
token: ElementEnd { end: Open, span: StrSpan(">" 5531..5532) }
token: Text { text: StrSpan("Mnem√≤sine." 5532..5543) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5545..5546)), span: StrSpan("</p>" 5543..5547) }
token: Text { text: StrSpan("\n" 5547..5548) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5549..5550), span: StrSpan("<p" 5548..5550) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5551..5556), value: StrSpan("testo_dialogo" 5558..5571), span: StrSpan("class=\"testo_dialogo\"" 5551..5572) }
token: ElementEnd { end: Open, span: StrSpan(">" 5572..5573) }
token: Text { text: StrSpan("Sciocco, il mondo ha stagioni, e quel tempo √® finito." 5573..5627) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5629..5630)), span: StrSpan("</p>" 5627..5631) }
token: Text { text: StrSpan("\n\n" 5631..5633) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5634..5635), span: StrSpan("<p" 5633..5635) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5636..5641), value: StrSpan("testo_personaggio testo_maiuscoletto" 5643..5679), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5636..5680) }
token: ElementEnd { end: Open, span: StrSpan(">" 5680..5681) }
token: Text { text: StrSpan("Esiodo." 5681..5688) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5690..5691)), span: StrSpan("</p>" 5688..5692) }
token: Text { text: StrSpan("\n" 5692..5693) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5694..5695), span: StrSpan("<p" 5693..5695) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5696..5701), value: StrSpan("testo_dialogo" 5703..5716), span: StrSpan("class=\"testo_dialogo\"" 5696..5717) }
token: ElementEnd { end: Open, span: StrSpan(">" 5717..5718) }
token: Text { text: StrSpan("Io conosco soltanto la campagna che ho lavorato." 5718..5766) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5768..5769)), span: StrSpan("</p>" 5766..5770) }
token: Text { text: StrSpan("\n\n" 5770..5772) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5773..5774), span: StrSpan("<p" 5772..5774) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5775..5780), value: StrSpan("testo_personaggio testo_maiuscoletto" 5782..5818), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 5775..5819) }
token: ElementEnd { end: Open, span: StrSpan(">" 5819..5820) }
token: Text { text: StrSpan("Mnem√≤sine." 5820..5831) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5833..5834)), span: StrSpan("</p>" 5831..5835) }
token: Text { text: StrSpan("\n" 5835..5836) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5837..5838), span: StrSpan("<p" 5836..5838) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 5839..5844), value: StrSpan("testo_dialogo" 5846..5859), span: StrSpan("class=\"testo_dialogo\"" 5839..5860) }
token: ElementEnd { end: Open, span: StrSpan(">" 5860..5861) }
token: Text { text: StrSpan("Sei superbo, pastore. Hai la superbia del mortale. Ma sar√† tuo destino sapere altre cose. Dimmi perch√© quando mi parli ti credi contento?" 5861..6000) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6002..6003)), span: StrSpan("</p>" 6000..6004) }
token: Text { text: StrSpan("\n\n" 6004..6006) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6007..6008), span: StrSpan("<p" 6006..6008) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6009..6014), value: StrSpan("testo_personaggio testo_maiuscoletto" 6016..6052), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6009..6053) }
token: ElementEnd { end: Open, span: StrSpan(">" 6053..6054) }
token: Text { text: StrSpan("Esiodo." 6054..6061) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6063..6064)), span: StrSpan("</p>" 6061..6065) }
token: Text { text: StrSpan("\n" 6065..6066) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6067..6068), span: StrSpan("<p" 6066..6068) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6069..6074), value: StrSpan("testo_dialogo" 6076..6089), span: StrSpan("class=\"testo_dialogo\"" 6069..6090) }
token: ElementEnd { end: Open, span: StrSpan(">" 6090..6091) }
token: Text { text: StrSpan("Qui posso risponderti. Le cose che tu dici non hanno in s√© quel fastidio di ci√≤ che avviene tutti i giorni. Tu d√†i nomi alle cose che le fanno diverse, inaudite, eppure care e familiari come una voce che da tempo taceva. O come il vedersi improvviso in uno specchio d‚Äôacqua, che ci fa dire ¬´" 6091..6388) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 6389..6390), span: StrSpan("<q" 6388..6390) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6391..6396), value: StrSpan("testo_no_virgolette" 6398..6417), span: StrSpan("class=\"testo_no_virgolette\"" 6391..6418) }
token: ElementEnd { end: Open, span: StrSpan(">" 6418..6419) }
token: Text { text: StrSpan("Chi √® quest‚Äôuomo?" 6419..6439) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 6441..6442)), span: StrSpan("</q>" 6439..6443) }
token: Text { text: StrSpan("¬ª" 6443..6445) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6447..6448)), span: StrSpan("</p>" 6445..6449) }
token: Text { text: StrSpan("\n\n" 6449..6451) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6452..6453), span: StrSpan("<p" 6451..6453) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6454..6459), value: StrSpan("testo_personaggio testo_maiuscoletto" 6461..6497), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6454..6498) }
token: ElementEnd { end: Open, span: StrSpan(">" 6498..6499) }
token: Text { text: StrSpan("Mnem√≤sine." 6499..6510) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6512..6513)), span: StrSpan("</p>" 6510..6514) }
token: Text { text: StrSpan("\n" 6514..6515) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6516..6517), span: StrSpan("<p" 6515..6517) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6518..6523), value: StrSpan("testo_dialogo" 6525..6538), span: StrSpan("class=\"testo_dialogo\"" 6518..6539) }
token: ElementEnd { end: Open, span: StrSpan(">" 6539..6540) }
token: Text { text: StrSpan("Mio caro, ti √® mai accaduto di vedere una pianta, un sasso, un gesto, e provare la stessa passione?" 6540..6640) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6642..6643)), span: StrSpan("</p>" 6640..6644) }
token: Text { text: StrSpan("\n\n" 6644..6646) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6647..6648), span: StrSpan("<p" 6646..6648) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6649..6654), value: StrSpan("testo_personaggio testo_maiuscoletto" 6656..6692), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6649..6693) }
token: ElementEnd { end: Open, span: StrSpan(">" 6693..6694) }
token: Text { text: StrSpan("Esiodo." 6694..6701) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6703..6704)), span: StrSpan("</p>" 6701..6705) }
token: Text { text: StrSpan("\n" 6705..6706) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6707..6708), span: StrSpan("<p" 6706..6708) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6709..6714), value: StrSpan("testo_dialogo" 6716..6729), span: StrSpan("class=\"testo_dialogo\"" 6709..6730) }
token: ElementEnd { end: Open, span: StrSpan(">" 6730..6731) }
token: Text { text: StrSpan("Mi √® accaduto." 6731..6746) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6748..6749)), span: StrSpan("</p>" 6746..6750) }
token: Text { text: StrSpan("\n\n" 6750..6752) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6753..6754), span: StrSpan("<p" 6752..6754) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6755..6760), value: StrSpan("testo_personaggio testo_maiuscoletto" 6762..6798), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6755..6799) }
token: ElementEnd { end: Open, span: StrSpan(">" 6799..6800) }
token: Text { text: StrSpan("Mnem√≤sine." 6800..6811) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6813..6814)), span: StrSpan("</p>" 6811..6815) }
token: Text { text: StrSpan("\n" 6815..6816) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6817..6818), span: StrSpan("<p" 6816..6818) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6819..6824), value: StrSpan("testo_dialogo" 6826..6839), span: StrSpan("class=\"testo_dialogo\"" 6819..6840) }
token: ElementEnd { end: Open, span: StrSpan(">" 6840..6841) }
token: Text { text: StrSpan("E hai trovato il perch√©?" 6841..6866) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6868..6869)), span: StrSpan("</p>" 6866..6870) }
token: Text { text: StrSpan("\n\n" 6870..6872) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6873..6874), span: StrSpan("<p" 6872..6874) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6875..6880), value: StrSpan("testo_personaggio testo_maiuscoletto" 6882..6918), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 6875..6919) }
token: ElementEnd { end: Open, span: StrSpan(">" 6919..6920) }
token: Text { text: StrSpan("Esiodo." 6920..6927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 6929..6930)), span: StrSpan("</p>" 6927..6931) }
token: Text { text: StrSpan("\n" 6931..6932) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 6933..6934), span: StrSpan("<p" 6932..6934) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 6935..6940), value: StrSpan("testo_dialogo" 6942..6955), span: StrSpan("class=\"testo_dialogo\"" 6935..6956) }
token: ElementEnd { end: Open, span: StrSpan(">" 6956..6957) }
token: Text { text: StrSpan("√à solo un attimo, Melete. Come posso fermarlo?" 6957..7004) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7006..7007)), span: StrSpan("</p>" 7004..7008) }
token: Text { text: StrSpan("\n\n" 7008..7010) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7011..7012), span: StrSpan("<p" 7010..7012) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7013..7018), value: StrSpan("testo_personaggio testo_maiuscoletto" 7020..7056), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7013..7057) }
token: ElementEnd { end: Open, span: StrSpan(">" 7057..7058) }
token: Text { text: StrSpan("Mnem√≤sine." 7058..7069) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7071..7072)), span: StrSpan("</p>" 7069..7073) }
token: Text { text: StrSpan("\n" 7073..7074) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7075..7076), span: StrSpan("<p" 7074..7076) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7077..7082), value: StrSpan("testo_dialogo" 7084..7097), span: StrSpan("class=\"testo_dialogo\"" 7077..7098) }
token: ElementEnd { end: Open, span: StrSpan(">" 7098..7099) }
token: Text { text: StrSpan("Non ti sei chiesto perch√© un attimo, simile a tanti del passato, debba farti d‚Äôun tratto felice, felice come un dio? Tu guardavi l‚Äôulivo, l‚Äôulivo sul viottolo che hai percorso ogni giorno per anni, e viene il giorno che il fastidio ti lascia, e tu carezzi il vecchio tronco con lo sguardo, quasi fosse un amico ritrovato e ti dicesse proprio la sola parola che il tuo cuore attendeva. Altre volte √® l‚Äôocchiata di un passante qualunque. Altre volte la pioggia che insiste da giorni. O lo strido strepitoso di un uccello. O una nube che diresti di aver gi√† veduto. Per un attimo il tempo si ferma, e la cosa banale te la senti nel cuore come se il prima e il dopo non esistessero pi√∫. Non ti sei chiesto il suo perch√©?" 7099..7828) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7830..7831)), span: StrSpan("</p>" 7828..7832) }
token: Text { text: StrSpan("\n\n" 7832..7834) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7835..7836), span: StrSpan("<p" 7834..7836) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7837..7842), value: StrSpan("testo_personaggio testo_maiuscoletto" 7844..7880), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 7837..7881) }
token: ElementEnd { end: Open, span: StrSpan(">" 7881..7882) }
token: Text { text: StrSpan("Esiodo." 7882..7889) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7891..7892)), span: StrSpan("</p>" 7889..7893) }
token: Text { text: StrSpan("\n" 7893..7894) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7895..7896), span: StrSpan("<p" 7894..7896) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 7897..7902), value: StrSpan("testo_dialogo" 7904..7917), span: StrSpan("class=\"testo_dialogo\"" 7897..7918) }
token: ElementEnd { end: Open, span: StrSpan(">" 7918..7919) }
token: Text { text: StrSpan("Tu stessa lo dici. Quell‚Äôattimo ha reso la cosa un ricordo, un modello." 7919..7992) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 7994..7995)), span: StrSpan("</p>" 7992..7996) }
token: Text { text: StrSpan("\n\n" 7996..7998) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 7999..8000), span: StrSpan("<p" 7998..8000) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8001..8006), value: StrSpan("testo_personaggio testo_maiuscoletto" 8008..8044), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8001..8045) }
token: ElementEnd { end: Open, span: StrSpan(">" 8045..8046) }
token: Text { text: StrSpan("Mnem√≤sine." 8046..8057) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8059..8060)), span: StrSpan("</p>" 8057..8061) }
token: Text { text: StrSpan("\n" 8061..8062) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8063..8064), span: StrSpan("<p" 8062..8064) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8065..8070), value: StrSpan("testo_dialogo" 8072..8085), span: StrSpan("class=\"testo_dialogo\"" 8065..8086) }
token: ElementEnd { end: Open, span: StrSpan(">" 8086..8087) }
token: Text { text: StrSpan("Non puoi pensarla un‚Äôesistenza tutta fatta di questi attimi?" 8087..8149) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8151..8152)), span: StrSpan("</p>" 8149..8153) }
token: Text { text: StrSpan("\n\n" 8153..8155) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8156..8157), span: StrSpan("<p" 8155..8157) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8158..8163), value: StrSpan("testo_personaggio testo_maiuscoletto" 8165..8201), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8158..8202) }
token: ElementEnd { end: Open, span: StrSpan(">" 8202..8203) }
token: Text { text: StrSpan("Esiodo." 8203..8210) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8212..8213)), span: StrSpan("</p>" 8210..8214) }
token: Text { text: StrSpan("\n" 8214..8215) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8216..8217), span: StrSpan("<p" 8215..8217) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8218..8223), value: StrSpan("testo_dialogo" 8225..8238), span: StrSpan("class=\"testo_dialogo\"" 8218..8239) }
token: ElementEnd { end: Open, span: StrSpan(">" 8239..8240) }
token: Text { text: StrSpan("Posso pensarla s√≠." 8240..8259) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8261..8262)), span: StrSpan("</p>" 8259..8263) }
token: Text { text: StrSpan("\n\n" 8263..8265) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8266..8267), span: StrSpan("<p" 8265..8267) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8268..8273), value: StrSpan("testo_personaggio testo_maiuscoletto" 8275..8311), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8268..8312) }
token: ElementEnd { end: Open, span: StrSpan(">" 8312..8313) }
token: Text { text: StrSpan("Mnem√≤sine." 8313..8324) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8326..8327)), span: StrSpan("</p>" 8324..8328) }
token: Text { text: StrSpan("\n" 8328..8329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8330..8331), span: StrSpan("<p" 8329..8331) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8332..8337), value: StrSpan("testo_dialogo" 8339..8352), span: StrSpan("class=\"testo_dialogo\"" 8332..8353) }
token: ElementEnd { end: Open, span: StrSpan(">" 8353..8354) }
token: Text { text: StrSpan("Dunque sai come vivo." 8354..8375) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8377..8378)), span: StrSpan("</p>" 8375..8379) }
token: Text { text: StrSpan("\n\n" 8379..8381) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8382..8383), span: StrSpan("<p" 8381..8383) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8384..8389), value: StrSpan("testo_personaggio testo_maiuscoletto" 8391..8427), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8384..8428) }
token: ElementEnd { end: Open, span: StrSpan(">" 8428..8429) }
token: Text { text: StrSpan("Esiodo." 8429..8436) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8438..8439)), span: StrSpan("</p>" 8436..8440) }
token: Text { text: StrSpan("\n" 8440..8441) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8442..8443), span: StrSpan("<p" 8441..8443) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8444..8449), value: StrSpan("testo_dialogo" 8451..8464), span: StrSpan("class=\"testo_dialogo\"" 8444..8465) }
token: ElementEnd { end: Open, span: StrSpan(">" 8465..8466) }
token: Text { text: StrSpan("Io ti credo, Melete, perch√© tutto tu porti negli occhi. E il nome di Euterpe che molti ti d√†nno non mi pu√≤ pi√∫ stupire. Ma gli istanti mortali non sono una vita. Se io volessi ripeterli perderebbero il fiore. Torna sempre il fastidio." 8466..8704) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8706..8707)), span: StrSpan("</p>" 8704..8708) }
token: Text { text: StrSpan("\n\n" 8708..8710) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8711..8712), span: StrSpan("<p" 8710..8712) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8713..8718), value: StrSpan("testo_personaggio testo_maiuscoletto" 8720..8756), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8713..8757) }
token: ElementEnd { end: Open, span: StrSpan(">" 8757..8758) }
token: Text { text: StrSpan("Mnem√≤sine." 8758..8769) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8771..8772)), span: StrSpan("</p>" 8769..8773) }
token: Text { text: StrSpan("\n" 8773..8774) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8775..8776), span: StrSpan("<p" 8774..8776) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8777..8782), value: StrSpan("testo_dialogo" 8784..8797), span: StrSpan("class=\"testo_dialogo\"" 8777..8798) }
token: ElementEnd { end: Open, span: StrSpan(">" 8798..8799) }
token: Text { text: StrSpan("Eppure hai detto che quell‚Äôattimo √® un ricordo. E cos‚Äôaltro √® il ricordo se non passione ripetuta? Capiscimi bene." 8799..8919) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8921..8922)), span: StrSpan("</p>" 8919..8923) }
token: Text { text: StrSpan("\n\n" 8923..8925) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8926..8927), span: StrSpan("<p" 8925..8927) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8928..8933), value: StrSpan("testo_personaggio testo_maiuscoletto" 8935..8971), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 8928..8972) }
token: ElementEnd { end: Open, span: StrSpan(">" 8972..8973) }
token: Text { text: StrSpan("Esiodo." 8973..8980) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 8982..8983)), span: StrSpan("</p>" 8980..8984) }
token: Text { text: StrSpan("\n" 8984..8985) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 8986..8987), span: StrSpan("<p" 8985..8987) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 8988..8993), value: StrSpan("testo_dialogo" 8995..9008), span: StrSpan("class=\"testo_dialogo\"" 8988..9009) }
token: ElementEnd { end: Open, span: StrSpan(">" 9009..9010) }
token: Text { text: StrSpan("Che vuoi dire?" 9010..9024) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9026..9027)), span: StrSpan("</p>" 9024..9028) }
token: Text { text: StrSpan("\n\n" 9028..9030) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9031..9032), span: StrSpan("<p" 9030..9032) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9033..9038), value: StrSpan("testo_personaggio testo_maiuscoletto" 9040..9076), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9033..9077) }
token: ElementEnd { end: Open, span: StrSpan(">" 9077..9078) }
token: Text { text: StrSpan("Mnem√≤sine." 9078..9089) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9091..9092)), span: StrSpan("</p>" 9089..9093) }
token: Text { text: StrSpan("\n" 9093..9094) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9095..9096), span: StrSpan("<p" 9094..9096) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9097..9102), value: StrSpan("testo_dialogo" 9104..9117), span: StrSpan("class=\"testo_dialogo\"" 9097..9118) }
token: ElementEnd { end: Open, span: StrSpan(">" 9118..9119) }
token: Text { text: StrSpan("Voglio dire che tu sai cos‚Äô√® vita immortale." 9119..9166) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9168..9169)), span: StrSpan("</p>" 9166..9170) }
token: Text { text: StrSpan("\n\n" 9170..9172) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9173..9174), span: StrSpan("<p" 9172..9174) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9175..9180), value: StrSpan("testo_personaggio testo_maiuscoletto" 9182..9218), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9175..9219) }
token: ElementEnd { end: Open, span: StrSpan(">" 9219..9220) }
token: Text { text: StrSpan("Esiodo." 9220..9227) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9229..9230)), span: StrSpan("</p>" 9227..9231) }
token: Text { text: StrSpan("\n" 9231..9232) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9233..9234), span: StrSpan("<p" 9232..9234) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9235..9240), value: StrSpan("testo_dialogo" 9242..9255), span: StrSpan("class=\"testo_dialogo\"" 9235..9256) }
token: ElementEnd { end: Open, span: StrSpan(">" 9256..9257) }
token: Text { text: StrSpan("Quando parlo con te mi √® difficile resisterti. Tu hai veduto le cose all‚Äôinizio. Tu sei l‚Äôulivo, l‚Äôocchiata e la nube. Dici un nome, e la cosa √® per sempre." 9257..9421) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9423..9424)), span: StrSpan("</p>" 9421..9425) }
token: Text { text: StrSpan("\n\n" 9425..9427) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9428..9429), span: StrSpan("<p" 9427..9429) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9430..9435), value: StrSpan("testo_personaggio testo_maiuscoletto" 9437..9473), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9430..9474) }
token: ElementEnd { end: Open, span: StrSpan(">" 9474..9475) }
token: Text { text: StrSpan("Mnem√≤sine." 9475..9486) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9488..9489)), span: StrSpan("</p>" 9486..9490) }
token: Text { text: StrSpan("\n" 9490..9491) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9492..9493), span: StrSpan("<p" 9491..9493) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9494..9499), value: StrSpan("testo_dialogo" 9501..9514), span: StrSpan("class=\"testo_dialogo\"" 9494..9515) }
token: ElementEnd { end: Open, span: StrSpan(">" 9515..9516) }
token: Text { text: StrSpan("Esiodo, ogni giorno io ti trovo quass√∫. Altri prima di te ne trovai su quei monti, sui fiumi brulli della Tracia e della Pieria. Tu mi piaci pi√∫ di loro. Tu sai che le cose immortali le avete a due passi." 9516..9722) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9724..9725)), span: StrSpan("</p>" 9722..9726) }
token: Text { text: StrSpan("\n\n" 9726..9728) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9729..9730), span: StrSpan("<p" 9728..9730) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9731..9736), value: StrSpan("testo_personaggio testo_maiuscoletto" 9738..9774), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9731..9775) }
token: ElementEnd { end: Open, span: StrSpan(">" 9775..9776) }
token: Text { text: StrSpan("Esiodo." 9776..9783) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9785..9786)), span: StrSpan("</p>" 9783..9787) }
token: Text { text: StrSpan("\n" 9787..9788) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9789..9790), span: StrSpan("<p" 9788..9790) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9791..9796), value: StrSpan("testo_dialogo" 9798..9811), span: StrSpan("class=\"testo_dialogo\"" 9791..9812) }
token: ElementEnd { end: Open, span: StrSpan(">" 9812..9813) }
token: Text { text: StrSpan("Non √® difficile saperlo. Toccarle, √® difficile." 9813..9862) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9864..9865)), span: StrSpan("</p>" 9862..9866) }
token: Text { text: StrSpan("\n\n" 9866..9868) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9869..9870), span: StrSpan("<p" 9868..9870) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9871..9876), value: StrSpan("testo_personaggio testo_maiuscoletto" 9878..9914), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 9871..9915) }
token: ElementEnd { end: Open, span: StrSpan(">" 9915..9916) }
token: Text { text: StrSpan("Mnem√≤sine." 9916..9927) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 9929..9930)), span: StrSpan("</p>" 9927..9931) }
token: Text { text: StrSpan("\n" 9931..9932) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 9933..9934), span: StrSpan("<p" 9932..9934) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 9935..9940), value: StrSpan("testo_dialogo" 9942..9955), span: StrSpan("class=\"testo_dialogo\"" 9935..9956) }
token: ElementEnd { end: Open, span: StrSpan(">" 9956..9957) }
token: Text { text: StrSpan("Bisogna vivere per loro, Esiodo. Questo vuol dire, il cuore puro." 9957..10022) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10024..10025)), span: StrSpan("</p>" 10022..10026) }
token: Text { text: StrSpan("\n\n" 10026..10028) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10029..10030), span: StrSpan("<p" 10028..10030) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10031..10036), value: StrSpan("testo_personaggio testo_maiuscoletto" 10038..10074), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10031..10075) }
token: ElementEnd { end: Open, span: StrSpan(">" 10075..10076) }
token: Text { text: StrSpan("Esiodo." 10076..10083) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10085..10086)), span: StrSpan("</p>" 10083..10087) }
token: Text { text: StrSpan("\n" 10087..10088) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10089..10090), span: StrSpan("<p" 10088..10090) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10091..10096), value: StrSpan("testo_dialogo" 10098..10111), span: StrSpan("class=\"testo_dialogo\"" 10091..10112) }
token: ElementEnd { end: Open, span: StrSpan(">" 10112..10113) }
token: Text { text: StrSpan("Ascoltandoti, certo. Ma la vita dell‚Äôuomo si svolge laggi√∫ tra le case, nei campi. Davanti al fuoco e in un letto. E ogni giorno che spunta ti mette davanti la stessa fatica e le stesse mancanze. √à un fastidio alla fine, Melete. C‚Äô√® una burrasca che rinnova le campagne ‚Äì n√© la morte n√© i grossi dolori scoraggiano. Ma la fatica interminabile, lo sforzo per star vivi d‚Äôora in ora, la notizia del male degli altri, del male meschino, fastidioso come mosche d‚Äôestate ‚Äì quest‚Äô√® il vivere che taglia le gambe, Melete." 10113..10647) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10649..10650)), span: StrSpan("</p>" 10647..10651) }
token: Text { text: StrSpan("\n\n" 10651..10653) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10654..10655), span: StrSpan("<p" 10653..10655) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10656..10661), value: StrSpan("testo_personaggio testo_maiuscoletto" 10663..10699), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10656..10700) }
token: ElementEnd { end: Open, span: StrSpan(">" 10700..10701) }
token: Text { text: StrSpan("Mnem√≤sine." 10701..10712) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10714..10715)), span: StrSpan("</p>" 10712..10716) }
token: Text { text: StrSpan("\n" 10716..10717) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10718..10719), span: StrSpan("<p" 10717..10719) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10720..10725), value: StrSpan("testo_dialogo" 10727..10740), span: StrSpan("class=\"testo_dialogo\"" 10720..10741) }
token: ElementEnd { end: Open, span: StrSpan(">" 10741..10742) }
token: Text { text: StrSpan("Io vengo da luoghi pi√∫ brulli, da burroni brumosi e inumani, dove pure si √® aperta la vita. Tra questi ulivi e sotto il cielo voi non sapete quella sorte. Mai sentito cos‚Äô√® la palude Boibeide?" 10742..10939) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 10941..10942)), span: StrSpan("</p>" 10939..10943) }
token: Text { text: StrSpan("\n\n" 10943..10945) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 10946..10947), span: StrSpan("<p" 10945..10947) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 10948..10953), value: StrSpan("testo_personaggio testo_maiuscoletto" 10955..10991), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 10948..10992) }
token: ElementEnd { end: Open, span: StrSpan(">" 10992..10993) }
token: Text { text: StrSpan("Esiodo." 10993..11000) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11002..11003)), span: StrSpan("</p>" 11000..11004) }
token: Text { text: StrSpan("\n" 11004..11005) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11006..11007), span: StrSpan("<p" 11005..11007) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11008..11013), value: StrSpan("testo_dialogo" 11015..11028), span: StrSpan("class=\"testo_dialogo\"" 11008..11029) }
token: ElementEnd { end: Open, span: StrSpan(">" 11029..11030) }
token: Text { text: StrSpan("No." 11030..11033) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11035..11036)), span: StrSpan("</p>" 11033..11037) }
token: Text { text: StrSpan("\n\n" 11037..11039) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11040..11041), span: StrSpan("<p" 11039..11041) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11042..11047), value: StrSpan("testo_personaggio testo_maiuscoletto" 11049..11085), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11042..11086) }
token: ElementEnd { end: Open, span: StrSpan(">" 11086..11087) }
token: Text { text: StrSpan("Mnem√≤sine." 11087..11098) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11100..11101)), span: StrSpan("</p>" 11098..11102) }
token: Text { text: StrSpan("\n" 11102..11103) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11104..11105), span: StrSpan("<p" 11103..11105) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11106..11111), value: StrSpan("testo_dialogo" 11113..11126), span: StrSpan("class=\"testo_dialogo\"" 11106..11127) }
token: ElementEnd { end: Open, span: StrSpan(">" 11127..11128) }
token: Text { text: StrSpan("Una landa nebbiosa di fango e di canne, com‚Äôera al principio dei tempi, in un silenzio gorgogliante. Gener√≤ mostri e d√®i di escremento e di sangue. Oggi ancora i T√©ssali ne parlano appena. Non la mutano n√© tempo n√© stagioni. Nessuna voce vi giunge." 11128..11383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11385..11386)), span: StrSpan("</p>" 11383..11387) }
token: Text { text: StrSpan("\n\n" 11387..11389) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11390..11391), span: StrSpan("<p" 11389..11391) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11392..11397), value: StrSpan("testo_personaggio testo_maiuscoletto" 11399..11435), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11392..11436) }
token: ElementEnd { end: Open, span: StrSpan(">" 11436..11437) }
token: Text { text: StrSpan("Esiodo." 11437..11444) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11446..11447)), span: StrSpan("</p>" 11444..11448) }
token: Text { text: StrSpan("\n" 11448..11449) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11450..11451), span: StrSpan("<p" 11449..11451) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11452..11457), value: StrSpan("testo_dialogo" 11459..11472), span: StrSpan("class=\"testo_dialogo\"" 11452..11473) }
token: ElementEnd { end: Open, span: StrSpan(">" 11473..11474) }
token: Text { text: StrSpan("Ma intanto ne parli, Melete, e le hai fatto una sorte divina. La tua voce l‚Äôha raggiunta. Ora √® un luogo terribile e sacro. Gli ulivi e il cielo d‚ÄôElicona non son tutta la vita." 11474..11656) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11658..11659)), span: StrSpan("</p>" 11656..11660) }
token: Text { text: StrSpan("\n\n" 11660..11662) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11663..11664), span: StrSpan("<p" 11662..11664) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11665..11670), value: StrSpan("testo_personaggio testo_maiuscoletto" 11672..11708), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 11665..11709) }
token: ElementEnd { end: Open, span: StrSpan(">" 11709..11710) }
token: Text { text: StrSpan("Mnem√≤sine." 11710..11721) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 11723..11724)), span: StrSpan("</p>" 11721..11725) }
token: Text { text: StrSpan("\n" 11725..11726) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 11727..11728), span: StrSpan("<p" 11726..11728) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 11729..11734), value: StrSpan("testo_dialogo" 11736..11749), span: StrSpan("class=\"testo_dialogo\"" 11729..11750) }
token: ElementEnd { end: Open, span: StrSpan(">" 11750..11751) }
token: Text { text: StrSpan("Ma nemmeno il fastidio, nemmeno il ritorno alle case. Non capisci che l‚Äôuomo, ogni uomo, nasce in questa palude di sangue? e che il sacro e il divino accompagnano anche voi, dentro il letto, sul campo, davanti alla fiamma? Ogni gesto che fate ripete un modello divino. Giorno e notte, non avete un istante, nemmeno il pi√∫ futile, che non sgorghi dal silenzio delle origini." 11751..12127) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12129..12130)), span: StrSpan("</p>" 12127..12131) }
token: Text { text: StrSpan("\n\n" 12131..12133) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12134..12135), span: StrSpan("<p" 12133..12135) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12136..12141), value: StrSpan("testo_personaggio testo_maiuscoletto" 12143..12179), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12136..12180) }
token: ElementEnd { end: Open, span: StrSpan(">" 12180..12181) }
token: Text { text: StrSpan("Esiodo." 12181..12188) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12190..12191)), span: StrSpan("</p>" 12188..12192) }
token: Text { text: StrSpan("\n" 12192..12193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12194..12195), span: StrSpan("<p" 12193..12195) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12196..12201), value: StrSpan("testo_dialogo" 12203..12216), span: StrSpan("class=\"testo_dialogo\"" 12196..12217) }
token: ElementEnd { end: Open, span: StrSpan(">" 12217..12218) }
token: Text { text: StrSpan("Tu parli, Melete, e non posso resisterti. Bastasse almeno venerarti." 12218..12286) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12288..12289)), span: StrSpan("</p>" 12286..12290) }
token: Text { text: StrSpan("\n\n" 12290..12292) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12293..12294), span: StrSpan("<p" 12292..12294) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12295..12300), value: StrSpan("testo_personaggio testo_maiuscoletto" 12302..12338), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12295..12339) }
token: ElementEnd { end: Open, span: StrSpan(">" 12339..12340) }
token: Text { text: StrSpan("Mnem√≤sine." 12340..12351) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12353..12354)), span: StrSpan("</p>" 12351..12355) }
token: Text { text: StrSpan("\n" 12355..12356) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12357..12358), span: StrSpan("<p" 12356..12358) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12359..12364), value: StrSpan("testo_dialogo" 12366..12379), span: StrSpan("class=\"testo_dialogo\"" 12359..12380) }
token: ElementEnd { end: Open, span: StrSpan(">" 12380..12381) }
token: Text { text: StrSpan("C‚Äô√® un altro modo, mio caro." 12381..12412) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12414..12415)), span: StrSpan("</p>" 12412..12416) }
token: Text { text: StrSpan("\n\n" 12416..12418) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12419..12420), span: StrSpan("<p" 12418..12420) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12421..12426), value: StrSpan("testo_personaggio testo_maiuscoletto" 12428..12464), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12421..12465) }
token: ElementEnd { end: Open, span: StrSpan(">" 12465..12466) }
token: Text { text: StrSpan("Esiodo." 12466..12473) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12475..12476)), span: StrSpan("</p>" 12473..12477) }
token: Text { text: StrSpan("\n" 12477..12478) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12479..12480), span: StrSpan("<p" 12478..12480) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12481..12486), value: StrSpan("testo_dialogo" 12488..12501), span: StrSpan("class=\"testo_dialogo\"" 12481..12502) }
token: ElementEnd { end: Open, span: StrSpan(">" 12502..12503) }
token: Text { text: StrSpan("E quale?" 12503..12511) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12513..12514)), span: StrSpan("</p>" 12511..12515) }
token: Text { text: StrSpan("\n\n" 12515..12517) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12518..12519), span: StrSpan("<p" 12517..12519) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12520..12525), value: StrSpan("testo_personaggio testo_maiuscoletto" 12527..12563), span: StrSpan("class=\"testo_personaggio testo_maiuscoletto\"" 12520..12564) }
token: ElementEnd { end: Open, span: StrSpan(">" 12564..12565) }
token: Text { text: StrSpan("Mnem√≤sine." 12565..12576) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12578..12579)), span: StrSpan("</p>" 12576..12580) }
token: Text { text: StrSpan("\n" 12580..12581) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 12582..12583), span: StrSpan("<p" 12581..12583) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 12584..12589), value: StrSpan("testo_dialogo" 12591..12604), span: StrSpan("class=\"testo_dialogo\"" 12584..12605) }
token: ElementEnd { end: Open, span: StrSpan(">" 12605..12606) }
token: Text { text: StrSpan("Prova a dire ai mortali queste cose che sai." 12606..12650) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 12652..12653)), span: StrSpan("</p>" 12650..12654) }
token: Text { text: StrSpan("\n" 12654..12655) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 12657..12661)), span: StrSpan("</body>" 12655..12662) }
token: Text { text: StrSpan("\n" 12662..12663) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 12665..12669)), span: StrSpan("</html>" 12663..12670) }
token: Declaration { version: StrSpan("1.0" 15..18), encoding: Some(StrSpan("utf-8" 30..35)), standalone: None, span: StrSpan("<?xml version=\"1.0\" encoding=\"utf-8\"?>" 0..38) }
token: EmptyDtd { name: StrSpan("html" 49..53), external_id: Some(Public(StrSpan("-//W3C//DTD XHTML 1.1//EN" 62..87), StrSpan("http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" 92..136))), span: StrSpan("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n  \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">" 39..138) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("html" 141..145), span: StrSpan("<html" 140..145) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("xmlns" 146..151), value: StrSpan("http://www.w3.org/1999/xhtml" 153..181), span: StrSpan("xmlns=\"http://www.w3.org/1999/xhtml\"" 146..182) }
token: ElementEnd { end: Open, span: StrSpan(">" 182..183) }
token: Text { text: StrSpan("\n" 183..184) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("head" 185..189), span: StrSpan("<head" 184..189) }
token: ElementEnd { end: Open, span: StrSpan(">" 189..190) }
token: Text { text: StrSpan("\n  " 190..193) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("title" 194..199), span: StrSpan("<title" 193..199) }
token: ElementEnd { end: Open, span: StrSpan(">" 199..200) }
token: Text { text: StrSpan("Dialoghi con Leuc√≤, di Cesare Pavese" 200..237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("title" 239..244)), span: StrSpan("</title>" 237..245) }
token: Text { text: StrSpan("\n  " 245..248) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("link" 249..253), span: StrSpan("<link" 248..253) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("href" 254..258), value: StrSpan("../Styles/Style0001.css" 260..283), span: StrSpan("href=\"../Styles/Style0001.css\"" 254..284) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("rel" 285..288), value: StrSpan("stylesheet" 290..300), span: StrSpan("rel=\"stylesheet\"" 285..301) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("type" 302..306), value: StrSpan("text/css" 308..316), span: StrSpan("type=\"text/css\"" 302..317) }
token: ElementEnd { end: Empty, span: StrSpan("/>" 317..319) }
token: Text { text: StrSpan("\n" 319..320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("head" 322..326)), span: StrSpan("</head>" 320..327) }
token: Text { text: StrSpan("\n\n" 327..329) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("body" 330..334), span: StrSpan("<body" 329..334) }
token: ElementEnd { end: Open, span: StrSpan(">" 334..335) }
token: Text { text: StrSpan("\n" 335..336) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("h1" 337..339), span: StrSpan("<h1" 336..339) }
token: ElementEnd { end: Open, span: StrSpan(">" 339..340) }
token: Text { text: StrSpan("Gli d√®i" 340..348) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("h1" 350..352)), span: StrSpan("</h1>" 348..353) }
token: Text { text: StrSpan("\n\n" 353..355) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("div" 356..359), span: StrSpan("<div" 355..359) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 360..365), value: StrSpan("testo_corsivo" 367..380), span: StrSpan("class=\"testo_corsivo\"" 360..381) }
token: ElementEnd { end: Open, span: StrSpan(">" 381..382) }
token: Text { text: StrSpan("\n" 382..383) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 384..385), span: StrSpan("<p" 383..385) }
token: ElementEnd { end: Open, span: StrSpan(">" 385..386) }
token: Text { text: StrSpan("‚Äî Il monte √® incolto, amico. Sull‚Äôerba rossa dell‚Äôultimo inverno ci son chiazze di neve. Sembra il mantello del centauro. Queste alture sono tutte cos√≠. Basta un nonnulla, e la campagna ritorna la stessa di quando queste cose accadevano." 386..631) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 633..634)), span: StrSpan("</p>" 631..635) }
token: Text { text: StrSpan("\n\n" 635..637) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 638..639), span: StrSpan("<p" 637..639) }
token: ElementEnd { end: Open, span: StrSpan(">" 639..640) }
token: Text { text: StrSpan("‚Äî Mi domando se √® vero che li hanno veduti." 640..686) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 688..689)), span: StrSpan("</p>" 686..690) }
token: Text { text: StrSpan("\n\n" 690..692) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 693..694), span: StrSpan("<p" 692..694) }
token: ElementEnd { end: Open, span: StrSpan(">" 694..695) }
token: Text { text: StrSpan("‚Äî Chi pu√≤ dirlo? Ma s√≠, li han veduti. Han raccontato i loro nomi e niente pi√∫ ‚Äì √® tutta qui la differenza tra le favole e il vero. ‚Äú" 695..838) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 839..840), span: StrSpan("<q" 838..840) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 841..846), value: StrSpan("testo_no_virgolette" 848..867), span: StrSpan("class=\"testo_no_virgolette\"" 841..868) }
token: ElementEnd { end: Open, span: StrSpan(">" 868..869) }
token: Text { text: StrSpan("Era il tale o il tal altro" 869..895) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 897..898)), span: StrSpan("</q>" 895..899) }
token: Text { text: StrSpan("‚Äù, ‚Äú" 899..907) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 908..909), span: StrSpan("<q" 907..909) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 910..915), value: StrSpan("testo_no_virgolette" 917..936), span: StrSpan("class=\"testo_no_virgolette\"" 910..937) }
token: ElementEnd { end: Open, span: StrSpan(">" 937..938) }
token: Text { text: StrSpan("Ha fatto questo, ha detto quello" 938..970) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 972..973)), span: StrSpan("</q>" 970..974) }
token: Text { text: StrSpan("‚Äù. Chi √® veritiero, si accontenta. Non sospetta nemmeno che potranno non credergli. I mentitori siamo noi che non abbiamo mai veduto queste cose, eppure sappiamo per filo e per segno di che mantello era il centauro o il colore dei grappoli d‚Äôuva sull‚Äôaia d‚ÄôIcario." 974..1247) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1249..1250)), span: StrSpan("</p>" 1247..1251) }
token: Text { text: StrSpan("\n\n" 1251..1253) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1254..1255), span: StrSpan("<p" 1253..1255) }
token: ElementEnd { end: Open, span: StrSpan(">" 1255..1256) }
token: Text { text: StrSpan("‚Äî Basta un colle, una vetta, una costa. Che fosse un luogo solitario e che i tuoi occhi risalendolo si fermassero in cielo. L‚Äôincredibile spicco delle cose nell‚Äôaria oggi ancora tocca il cuore. Io per me credo che un albero, un sasso profilati sul cielo, fossero d√®i fin dall‚Äôinizio." 1256..1548) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1550..1551)), span: StrSpan("</p>" 1548..1552) }
token: Text { text: StrSpan("\n\n" 1552..1554) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1555..1556), span: StrSpan("<p" 1554..1556) }
token: ElementEnd { end: Open, span: StrSpan(">" 1556..1557) }
token: Text { text: StrSpan("‚Äî Non sempre queste cose sono state sui monti." 1557..1605) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1607..1608)), span: StrSpan("</p>" 1605..1609) }
token: Text { text: StrSpan("\n\n" 1609..1611) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1612..1613), span: StrSpan("<p" 1611..1613) }
token: ElementEnd { end: Open, span: StrSpan(">" 1613..1614) }
token: Text { text: StrSpan("‚Äî Si capisce. Ci furono prima le voci della terra ‚Äì le fonti, le radici, le serpi. Se il demone congiunge la terra col cielo, deve uscire alla luce dal buio del suolo." 1614..1785) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 1787..1788)), span: StrSpan("</p>" 1785..1789) }
token: Text { text: StrSpan("\n\n" 1789..1791) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 1792..1793), span: StrSpan("<p" 1791..1793) }
token: ElementEnd { end: Open, span: StrSpan(">" 1793..1794) }
token: Text { text: StrSpan("‚Äî Non so. Quella gente sapeva troppe cose. Con un semplice nome raccontavano la nuvola, il bosco, i destini. Videro certo quello che noi sappiamo appena. Non avevano n√© tempo n√© gusto per perdersi in sogni. Videro cose tremende, incredibili, e nemmeno stupivano. Si sapeva cos‚Äôera. Se mentirono quelli, anche tu allora, quando dici ‚Äú" 1794..2135) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 2136..2137), span: StrSpan("<q" 2135..2137) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2138..2143), value: StrSpan("testo_no_virgolette" 2145..2164), span: StrSpan("class=\"testo_no_virgolette\"" 2138..2165) }
token: ElementEnd { end: Open, span: StrSpan(">" 2165..2166) }
token: Text { text: StrSpan("√® mattino" 2166..2176) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2178..2179)), span: StrSpan("</q>" 2176..2180) }
token: Text { text: StrSpan("‚Äù o ‚Äú" 2180..2189) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 2190..2191), span: StrSpan("<q" 2189..2191) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 2192..2197), value: StrSpan("testo_no_virgolette" 2199..2218), span: StrSpan("class=\"testo_no_virgolette\"" 2192..2219) }
token: ElementEnd { end: Open, span: StrSpan(">" 2219..2220) }
token: Text { text: StrSpan("vuol piovere" 2220..2232) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 2234..2235)), span: StrSpan("</q>" 2232..2236) }
token: Text { text: StrSpan("‚Äù, hai perduto la testa." 2236..2262) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2264..2265)), span: StrSpan("</p>" 2262..2266) }
token: Text { text: StrSpan("\n\n" 2266..2268) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2269..2270), span: StrSpan("<p" 2268..2270) }
token: ElementEnd { end: Open, span: StrSpan(">" 2270..2271) }
token: Text { text: StrSpan("‚Äî Dissero nomi, questo s√≠. Tanto che a volte mi domando se furono prima le cose o quei nomi." 2271..2366) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2368..2369)), span: StrSpan("</p>" 2366..2370) }
token: Text { text: StrSpan("\n\n" 2370..2372) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2373..2374), span: StrSpan("<p" 2372..2374) }
token: ElementEnd { end: Open, span: StrSpan(">" 2374..2375) }
token: Text { text: StrSpan("‚Äî Furono insieme, credi a me. E fu qui, in questi paesi incolti e soli. C‚Äô√® da stupirsi che venissero quass√∫? Che altro potevano cercarsi quella gente se non l‚Äôincontro con gli d√®i?" 2375..2565) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2567..2568)), span: StrSpan("</p>" 2565..2569) }
token: Text { text: StrSpan("\n\n" 2569..2571) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2572..2573), span: StrSpan("<p" 2571..2573) }
token: ElementEnd { end: Open, span: StrSpan(">" 2573..2574) }
token: Text { text: StrSpan("‚Äî Chi pu√≤ dire perch√© si fermarono qui? Ma in ogni luogo abbandonato resta un vuoto, un‚Äôattesa." 2574..2675) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2677..2678)), span: StrSpan("</p>" 2675..2679) }
token: Text { text: StrSpan("\n\n" 2679..2681) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2682..2683), span: StrSpan("<p" 2681..2683) }
token: ElementEnd { end: Open, span: StrSpan(">" 2683..2684) }
token: Text { text: StrSpan("‚Äî Nient‚Äôaltro √® possibile pensare quass√∫. Questi luoghi hanno nomi per sempre. Non rimane che l‚Äôerba sotto il cielo, eppure l‚Äôalito del vento d√† nel ricordo pi√∫ fragore di una bufera dentro il bosco. Non c‚Äô√® vuoto n√© attesa. Quel che √® stato, √® per sempre." 2684..2958) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 2960..2961)), span: StrSpan("</p>" 2958..2962) }
token: Text { text: StrSpan("\n\n" 2962..2964) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 2965..2966), span: StrSpan("<p" 2964..2966) }
token: ElementEnd { end: Open, span: StrSpan(">" 2966..2967) }
token: Text { text: StrSpan("‚Äî Ma son morti e sepolti. Adesso i luoghi sono come erano prima di loro. Voglio concederti che quello che hanno detto fosse vero. Che cos‚Äôaltro rimane? Ammetterai che sul sentiero non s‚Äôincontrano pi√∫ d√®i. Quando dico ‚Äú" 2967..3196) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3197..3198), span: StrSpan("<q" 3196..3198) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3199..3204), value: StrSpan("testo_no_virgolette" 3206..3225), span: StrSpan("class=\"testo_no_virgolette\"" 3199..3226) }
token: ElementEnd { end: Open, span: StrSpan(">" 3226..3227) }
token: Text { text: StrSpan("√® mattino" 3227..3237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3239..3240)), span: StrSpan("</q>" 3237..3241) }
token: Text { text: StrSpan("‚Äù o ‚Äú" 3241..3250) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3251..3252), span: StrSpan("<q" 3250..3252) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3253..3258), value: StrSpan("testo_no_virgolette" 3260..3279), span: StrSpan("class=\"testo_no_virgolette\"" 3253..3280) }
token: ElementEnd { end: Open, span: StrSpan(">" 3280..3281) }
token: Text { text: StrSpan("vuol piovere" 3281..3293) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3295..3296)), span: StrSpan("</q>" 3293..3297) }
token: Text { text: StrSpan("‚Äù, non parlo di loro." 3297..3320) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3322..3323)), span: StrSpan("</p>" 3320..3324) }
token: Text { text: StrSpan("\n\n" 3324..3326) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3327..3328), span: StrSpan("<p" 3326..3328) }
token: ElementEnd { end: Open, span: StrSpan(">" 3328..3329) }
token: Text { text: StrSpan("‚Äî Questa notte ne abbiamo parlato. Ieri parlavi dell‚Äôestate, e della voglia che ti senti di respirare l‚Äôaria tiepida la sera. Altre volte discorri dell‚Äôuomo, della gente che √® stata con te, dei tuoi gusti passati, d‚Äôincontri inattesi. Tutte cose che furono un tempo. Io, ti assicuro, ti ho ascoltato come riascolto dentro me quei nomi antichi. Quando racconti quel che sai, non ti rispondo ‚Äú" 3329..3733) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("q" 3734..3735), span: StrSpan("<q" 3733..3735) }
token: Attribute { prefix: StrSpan("" 0..0), local: StrSpan("class" 3736..3741), value: StrSpan("testo_no_virgolette" 3743..3762), span: StrSpan("class=\"testo_no_virgolette\"" 3736..3763) }
token: ElementEnd { end: Open, span: StrSpan(">" 3763..3764) }
token: Text { text: StrSpan("cosa resta?" 3764..3775) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("q" 3777..3778)), span: StrSpan("</q>" 3775..3779) }
token: Text { text: StrSpan("‚Äù o se furono prima le parole o le cose. Vivo con te e mi sento vivo." 3779..3850) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 3852..3853)), span: StrSpan("</p>" 3850..3854) }
token: Text { text: StrSpan("\n\n" 3854..3856) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 3857..3858), span: StrSpan("<p" 3856..3858) }
token: ElementEnd { end: Open, span: StrSpan(">" 3858..3859) }
token: Text { text: StrSpan("‚Äî Non √® facile vivere come se quello che accadeva in altri tempi fosse vero. Quando ieri ci ha preso la nebbia sugli incolti e qualche sasso rotol√≤ dalla collina ai nostri piedi, non pensammo alle cose divine n√© a un incontro incredibile ma soltanto alla notte e alle lepri fuggiasche. Chi siamo e a che cosa crediamo viene fuori davanti al disagio, nell‚Äôora arrischiata." 3859..4237) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4239..4240)), span: StrSpan("</p>" 4237..4241) }
token: Text { text: StrSpan("\n\n" 4241..4243) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4244..4245), span: StrSpan("<p" 4243..4245) }
token: ElementEnd { end: Open, span: StrSpan(">" 4245..4246) }
token: Text { text: StrSpan("‚Äî Di questa notte e delle lepri sar√† bello riparlare con gli amici quando saremo nelle case. Eppure di questa paura ci tocca sorridere, quando pensassimo all‚Äôangoscia della gente di un tempo cui tutto quello che toccava era mortale. Gente per cui l‚Äôaria era piena di spaventi notturni, di arcane minacce, di ricordi paurosi. Pensa soltanto alle intemperie o ai terremoti. E se questo disagio fu vero, com‚Äô√® indiscutibile, fu anche vero il coraggio, la speranza, la scoperta felice di poteri di promesse d‚Äôincontri. Io, per me, non mi stanco di sentirli parlare dei loro terrori notturni e delle cose in cui sperarono." 4246..4875) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4877..4878)), span: StrSpan("</p>" 4875..4879) }
token: Text { text: StrSpan("\n\n" 4879..4881) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 4882..4883), span: StrSpan("<p" 4881..4883) }
token: ElementEnd { end: Open, span: StrSpan(">" 4883..4884) }
token: Text { text: StrSpan("‚Äî E credi ai mostri, credi ai corpi imbestiati, ai sassi vivi, ai sorrisi divini, alle parole che annientavano?" 4884..4997) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 4999..5000)), span: StrSpan("</p>" 4997..5001) }
token: Text { text: StrSpan("\n\n" 5001..5003) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5004..5005), span: StrSpan("<p" 5003..5005) }
token: ElementEnd { end: Open, span: StrSpan(">" 5005..5006) }
token: Text { text: StrSpan("‚Äî Credo in ci√≤ che ogni uomo ha sperato e patito. Se un tempo salirono su queste alture di sassi o cercarono paludi mortali sotto il cielo, fu perch√© ci trovarono qualcosa che noi non sappiamo. Non era il pane n√© il piacere n√© la cara salute. Queste cose si sa dove stanno. Non qui. E noi che viviamo lontano lungo il mare o nei campi, l‚Äôaltra cosa l‚Äôabbiamo perduta." 5006..5383) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5385..5386)), span: StrSpan("</p>" 5383..5387) }
token: Text { text: StrSpan("\n\n" 5387..5389) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5390..5391), span: StrSpan("<p" 5389..5391) }
token: ElementEnd { end: Open, span: StrSpan(">" 5391..5392) }
token: Text { text: StrSpan("‚Äî Dilla dunque, la cosa." 5392..5418) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5420..5421)), span: StrSpan("</p>" 5418..5422) }
token: Text { text: StrSpan("\n\n" 5422..5424) }
token: ElementStart { prefix: StrSpan("" 0..0), local: StrSpan("p" 5425..5426), span: StrSpan("<p" 5424..5426) }
token: ElementEnd { end: Open, span: StrSpan(">" 5426..5427) }
token: Text { text: StrSpan("‚Äî Gi√† lo sai. Quei loro incontri." 5427..5463) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("p" 5465..5466)), span: StrSpan("</p>" 5463..5467) }
token: Text { text: StrSpan("\n" 5467..5468) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("div" 5470..5473)), span: StrSpan("</div>" 5468..5474) }
token: Text { text: StrSpan("\n" 5474..5475) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("body" 5477..5481)), span: StrSpan("</body>" 5475..5482) }
token: Text { text: StrSpan("\n" 5482..5483) }
token: ElementEnd { end: Close(StrSpan("" 0..0), StrSpan("html" 5485..5489)), span: StrSpan("</html>" 5483..5490) }
[2m2022-10-09T15:40:50.943000Z[0m [34mDEBUG[0m [2mdruid::window[0m[2m:[0m TextFieldToken(1) added
[2m2022-10-09T15:40:50.943764Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseUp(MouseEvent { pos: (482.80615234375, 184.92794799804688), window_pos: (482.80615234375, 184.92794799804688), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: Left, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.944140Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (483.728271484375, 184.92794799804688), window_pos: (483.728271484375, 184.92794799804688), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.944488Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (484.5908203125, 184.92794799804688), window_pos: (484.5908203125, 184.92794799804688), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.944880Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (485.5908203125, 184.92794799804688), window_pos: (485.5908203125, 184.92794799804688), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.945236Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (489.676025390625, 183.90667724609375), window_pos: (489.676025390625, 183.90667724609375), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.945555Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (500.864501953125, 182.50811767578125), window_pos: (500.864501953125, 182.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.945902Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (526.148193359375, 182.50811767578125), window_pos: (526.148193359375, 182.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.946236Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (556.148193359375, 182.50811767578125), window_pos: (556.148193359375, 182.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.946588Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (592.148193359375, 182.50811767578125), window_pos: (592.148193359375, 182.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.946907Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (632.148193359375, 184.50811767578125), window_pos: (632.148193359375, 184.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.947267Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (678.148193359375, 184.50811767578125), window_pos: (678.148193359375, 184.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.947608Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (726.148193359375, 184.50811767578125), window_pos: (726.148193359375, 184.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.947930Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (772.148193359375, 184.50811767578125), window_pos: (772.148193359375, 184.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
[2m2022-10-09T15:40:50.948345Z[0m [33m WARN[0m [1mevent[0m[2m:[0m [2mdruid::core[0m[2m:[0m WidgetId(1) received an event (MouseMove(MouseEvent { pos: (820.148193359375, 184.50811767578125), window_pos: (820.148193359375, 184.50811767578125), buttons: MouseButtons(00000), mods: Modifiers((empty)), count: 0, focus: false, button: None, wheel_delta: Vec2 { x: 0.0, y: 0.0 } })) without having been laid out. This likely indicates a missed call to set_origin.
